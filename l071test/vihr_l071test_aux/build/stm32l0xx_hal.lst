ARM GAS  /tmp/cciAJvt7.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	2
  19              		.weak	HAL_MspInit
  20              		.code	16
  21              		.thumb_func
  23              	HAL_MspInit:
  24              	.LFB36:
  25              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @file    stm32l0xx_hal.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @verbatim
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @endverbatim
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @attention
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
ARM GAS  /tmp/cciAJvt7.s 			page 2


  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #include "stm32l0xx_hal.h"
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup STM32L0xx_HAL_Driver
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief HAL module driver.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Constants
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup HAL_Version HAL Version
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @brief STM32L0xx HAL Driver version number
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  */
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB1   (0x0AU) /*!< [23:16] sub1 version */
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION         ((__STM32L0xx_HAL_VERSION_MAIN << 24U)\
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB1 << 16U)\
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB2 << 8U )\
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_RC))
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFFU)
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
ARM GAS  /tmp/cciAJvt7.s 			page 3


  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****               ##### Initialization and de-initialization functions #####
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    [..]  This section provides functions allowing to:
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Initialize the Flash interface, the NVIC allocation and initial clock
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           configuration. It initializes the source of time base also when timeout
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           is needed and the backup domain when enabled.
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) De-initialize common part of the HAL.
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           Tick interrupt priority.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              handled in milliseconds basis.
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             ISR process will be blocked.
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the Flash prefetch, Flash preread and Buffer cache,
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       the clock configuration
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Once done, time base tick start incrementing.
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure Buffer cache, Flash prefetch,  Flash preread */
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (BUFFER_CACHE_DISABLE != 0)
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_BUFFER_CACHE_DISABLE();
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* BUFFER_CACHE_DISABLE */
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREREAD_ENABLE != 0)
ARM GAS  /tmp/cciAJvt7.s 			page 4


 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_ERROR;
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Init the low level hardware */
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_MspInit();
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function de-initializes common part of the HAL and stops the source
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        of time base.
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is optional.
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_MspDeInit();
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Initializes the MSP.
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspInit(void)
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  26              		.loc 1 203 0
ARM GAS  /tmp/cciAJvt7.s 			page 5


  27              		.cfi_startproc
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  28              		.loc 1 207 0
  29              		@ sp needed
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE36:
  34 0002 C046     		.section	.text.HAL_MspDeInit,"ax",%progbits
  35              		.align	2
  36              		.weak	HAL_MspDeInit
  37              		.code	16
  38              		.thumb_func
  40              	HAL_MspDeInit:
  41              	.LFB37:
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  42              		.loc 1 214 0
  43              		.cfi_startproc
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  44              		.loc 1 218 0
  45              		@ sp needed
  46 0000 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE37:
  50 0002 C046     		.section	.text.HAL_DeInit,"ax",%progbits
  51              		.align	2
  52              		.global	HAL_DeInit
  53              		.code	16
  54              		.thumb_func
  56              	HAL_DeInit:
  57              	.LFB35:
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
  58              		.loc 1 177 0
  59              		.cfi_startproc
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 3, -8
  64              		.cfi_offset 14, -4
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  65              		.loc 1 179 0
  66 0002 084B     		ldr	r3, .L4
  67 0004 0121     		mov	r1, #1
  68 0006 4942     		neg	r1, r1
  69 0008 9962     		str	r1, [r3, #40]
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
ARM GAS  /tmp/cciAJvt7.s 			page 6


  70              		.loc 1 180 0
  71 000a 0022     		mov	r2, #0
  72 000c 9A62     		str	r2, [r3, #40]
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  73              		.loc 1 182 0
  74 000e 5962     		str	r1, [r3, #36]
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  75              		.loc 1 183 0
  76 0010 5A62     		str	r2, [r3, #36]
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  77              		.loc 1 185 0
  78 0012 1962     		str	r1, [r3, #32]
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  79              		.loc 1 186 0
  80 0014 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  81              		.loc 1 188 0
  82 0016 D961     		str	r1, [r3, #28]
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  83              		.loc 1 189 0
  84 0018 DA61     		str	r2, [r3, #28]
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  85              		.loc 1 192 0
  86 001a FFF7FEFF 		bl	HAL_MspDeInit
  87              	.LVL0:
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  88              		.loc 1 196 0
  89 001e 0020     		mov	r0, #0
  90              		@ sp needed
  91 0020 08BD     		pop	{r3, pc}
  92              	.L5:
  93 0022 C046     		.align	2
  94              	.L4:
  95 0024 00100240 		.word	1073876992
  96              		.cfi_endproc
  97              	.LFE35:
  99              		.global	__aeabi_uidiv
 100              		.section	.text.HAL_InitTick,"ax",%progbits
 101              		.align	2
 102              		.weak	HAL_InitTick
 103              		.code	16
 104              		.thumb_func
 106              	HAL_InitTick:
 107              	.LFB38:
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the source of the time base:
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Tick interrupt priority.
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
ARM GAS  /tmp/cciAJvt7.s 			page 7


 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementation  in user file.
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 108              		.loc 1 237 0
 109              		.cfi_startproc
 110              	.LVL1:
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116 0002 041C     		mov	r4, r0
 117              	.LVL2:
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 118              		.loc 1 241 0
 119 0004 094B     		ldr	r3, .L9
 120 0006 1868     		ldr	r0, [r3]
 121              	.LVL3:
 122 0008 FA21     		mov	r1, #250
 123 000a 8900     		lsl	r1, r1, #2
 124 000c FFF7FEFF 		bl	__aeabi_uidiv
 125              	.LVL4:
 126 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 127              	.LVL5:
 128 0014 0028     		cmp	r0, #0
 129 0016 06D1     		bne	.L8
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_ERROR;
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /*Configure the SysTick IRQ priority */
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 130              		.loc 1 248 0
 131 0018 0138     		sub	r0, r0, #1
 132 001a 211C     		mov	r1, r4
 133 001c 0022     		mov	r2, #0
 134 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 135              	.LVL6:
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 136              		.loc 1 238 0
 137 0022 0020     		mov	r0, #0
 138 0024 00E0     		b	.L7
 139              	.L8:
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 140              		.loc 1 243 0
 141 0026 0120     		mov	r0, #1
 142              	.L7:
 143              	.LVL7:
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
ARM GAS  /tmp/cciAJvt7.s 			page 8


 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 144              		.loc 1 253 0
 145              		@ sp needed
 146              	.LVL8:
 147 0028 10BD     		pop	{r4, pc}
 148              	.L10:
 149 002a C046     		.align	2
 150              	.L9:
 151 002c 00000000 		.word	SystemCoreClock
 152              		.cfi_endproc
 153              	.LFE38:
 155              		.section	.text.HAL_Init,"ax",%progbits
 156              		.align	2
 157              		.global	HAL_Init
 158              		.code	16
 159              		.thumb_func
 161              	HAL_Init:
 162              	.LFB34:
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 163              		.loc 1 139 0
 164              		.cfi_startproc
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 170              	.LVL9:
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 171              		.loc 1 148 0
 172 0002 084A     		ldr	r2, .L14
 173 0004 1168     		ldr	r1, [r2]
 174 0006 4023     		mov	r3, #64
 175 0008 0B43     		orr	r3, r1
 176 000a 1360     		str	r3, [r2]
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 177              		.loc 1 156 0
 178 000c 0020     		mov	r0, #0
 179 000e FFF7FEFF 		bl	HAL_InitTick
 180              	.LVL10:
 181 0012 0028     		cmp	r0, #0
 182 0014 03D1     		bne	.L13
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 183              		.loc 1 163 0
 184 0016 FFF7FEFF 		bl	HAL_MspInit
 185              	.LVL11:
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 186              		.loc 1 140 0
 187 001a 0020     		mov	r0, #0
 188 001c 00E0     		b	.L12
 189              	.L13:
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 190              		.loc 1 158 0
 191 001e 0120     		mov	r0, #1
 192              	.L12:
 193              	.LVL12:
ARM GAS  /tmp/cciAJvt7.s 			page 9


 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 194              		.loc 1 168 0
 195              		@ sp needed
 196 0020 08BD     		pop	{r3, pc}
 197              	.L15:
 198 0022 C046     		.align	2
 199              	.L14:
 200 0024 00200240 		.word	1073881088
 201              		.cfi_endproc
 202              	.LFE34:
 204              		.section	.text.HAL_IncTick,"ax",%progbits
 205              		.align	2
 206              		.weak	HAL_IncTick
 207              		.code	16
 208              		.thumb_func
 210              	HAL_IncTick:
 211              	.LFB39:
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Control functions
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Control functions #####
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a tick value in millisecond
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Suspend the time base source interrupt
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Resume the time base source interrupt
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the HAL API driver version
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device identifier
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device revision identifier
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        used as application time base.
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       in SysTick ISR.
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      implementations in user file.
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_IncTick(void)
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 212              		.loc 1 289 0
 213              		.cfi_startproc
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uwTick++;
 214              		.loc 1 290 0
ARM GAS  /tmp/cciAJvt7.s 			page 10


 215 0000 024A     		ldr	r2, .L17
 216 0002 1368     		ldr	r3, [r2]
 217 0004 0133     		add	r3, r3, #1
 218 0006 1360     		str	r3, [r2]
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 219              		.loc 1 291 0
 220              		@ sp needed
 221 0008 7047     		bx	lr
 222              	.L18:
 223 000a C046     		.align	2
 224              	.L17:
 225 000c 00000000 		.word	uwTick
 226              		.cfi_endproc
 227              	.LFE39:
 229              		.section	.text.HAL_GetTick,"ax",%progbits
 230              		.align	2
 231              		.weak	HAL_GetTick
 232              		.code	16
 233              		.thumb_func
 235              	HAL_GetTick:
 236              	.LFB40:
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick value
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 237              		.loc 1 300 0
 238              		.cfi_startproc
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTick;
 239              		.loc 1 301 0
 240 0000 014B     		ldr	r3, .L20
 241 0002 1868     		ldr	r0, [r3]
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 242              		.loc 1 302 0
 243              		@ sp needed
 244 0004 7047     		bx	lr
 245              	.L21:
 246 0006 C046     		.align	2
 247              	.L20:
 248 0008 00000000 		.word	uwTick
 249              		.cfi_endproc
 250              	.LFE40:
 252              		.section	.text.HAL_Delay,"ax",%progbits
 253              		.align	2
 254              		.weak	HAL_Delay
 255              		.code	16
 256              		.thumb_func
 258              	HAL_Delay:
 259              	.LFB41:
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        on variable incremented.
ARM GAS  /tmp/cciAJvt7.s 			page 11


 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is incremented.
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 260              		.loc 1 316 0
 261              		.cfi_startproc
 262              	.LVL13:
 263 0000 38B5     		push	{r3, r4, r5, lr}
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 16
 266              		.cfi_offset 3, -16
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 14, -4
 270 0002 041C     		mov	r4, r0
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 271              		.loc 1 317 0
 272 0004 FFF7FEFF 		bl	HAL_GetTick
 273              	.LVL14:
 274 0008 051C     		mov	r5, r0
 275              	.LVL15:
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t wait = Delay;
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Add a period to guaranty minimum wait */
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 276              		.loc 1 321 0
 277 000a 631C     		add	r3, r4, #1
 278 000c 00D0     		beq	.L24
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     wait++;
 279              		.loc 1 323 0
 280 000e 0134     		add	r4, r4, #1
 281              	.LVL16:
 282              	.L24:
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 283              		.loc 1 326 0 discriminator 1
 284 0010 FFF7FEFF 		bl	HAL_GetTick
 285              	.LVL17:
 286 0014 401B     		sub	r0, r0, r5
 287 0016 8442     		cmp	r4, r0
 288 0018 FAD8     		bhi	.L24
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 289              		.loc 1 329 0
 290              		@ sp needed
 291              	.LVL18:
 292              	.LVL19:
 293 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cciAJvt7.s 			page 12


 294              		.cfi_endproc
 295              	.LFE41:
 297              		.section	.text.HAL_SuspendTick,"ax",%progbits
 298              		.align	2
 299              		.weak	HAL_SuspendTick
 300              		.code	16
 301              		.thumb_func
 303              	HAL_SuspendTick:
 304              	.LFB42:
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Suspends the Tick increment.
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is suspended.
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_SuspendTick(void)
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 305              		.loc 1 342 0
 306              		.cfi_startproc
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Disable SysTick Interrupt */
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 307              		.loc 1 344 0
 308 0000 024A     		ldr	r2, .L26
 309 0002 1368     		ldr	r3, [r2]
 310 0004 0221     		mov	r1, #2
 311 0006 8B43     		bic	r3, r1
 312 0008 1360     		str	r3, [r2]
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 313              		.loc 1 345 0
 314              		@ sp needed
 315 000a 7047     		bx	lr
 316              	.L27:
 317              		.align	2
 318              	.L26:
 319 000c 10E000E0 		.word	-536813552
 320              		.cfi_endproc
 321              	.LFE42:
 323              		.section	.text.HAL_ResumeTick,"ax",%progbits
 324              		.align	2
 325              		.weak	HAL_ResumeTick
 326              		.code	16
 327              		.thumb_func
 329              	HAL_ResumeTick:
 330              	.LFB43:
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Resumes the Tick increment.
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is resumed.
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
ARM GAS  /tmp/cciAJvt7.s 			page 13


 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_ResumeTick(void)
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 331              		.loc 1 358 0
 332              		.cfi_startproc
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Enable SysTick Interrupt */
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 333              		.loc 1 360 0
 334 0000 024A     		ldr	r2, .L29
 335 0002 1168     		ldr	r1, [r2]
 336 0004 0223     		mov	r3, #2
 337 0006 0B43     		orr	r3, r1
 338 0008 1360     		str	r3, [r2]
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 339              		.loc 1 361 0
 340              		@ sp needed
 341 000a 7047     		bx	lr
 342              	.L30:
 343              		.align	2
 344              	.L29:
 345 000c 10E000E0 		.word	-536813552
 346              		.cfi_endproc
 347              	.LFE43:
 349              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 350              		.align	2
 351              		.global	HAL_GetHalVersion
 352              		.code	16
 353              		.thumb_func
 355              	HAL_GetHalVersion:
 356              	.LFB44:
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the HAL revision
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 357              		.loc 1 368 0
 358              		.cfi_startproc
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return __STM32L0xx_HAL_VERSION;
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 359              		.loc 1 370 0
 360 0000 0048     		ldr	r0, .L32
 361              		@ sp needed
 362 0002 7047     		bx	lr
 363              	.L33:
 364              		.align	2
 365              	.L32:
 366 0004 00020A01 		.word	17433088
 367              		.cfi_endproc
 368              	.LFE44:
 370              		.section	.text.HAL_GetREVID,"ax",%progbits
 371              		.align	2
 372              		.global	HAL_GetREVID
 373              		.code	16
ARM GAS  /tmp/cciAJvt7.s 			page 14


 374              		.thumb_func
 376              	HAL_GetREVID:
 377              	.LFB45:
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the device revision identifier.
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device revision identifier
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetREVID(void)
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 378              		.loc 1 377 0
 379              		.cfi_startproc
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 380              		.loc 1 378 0
 381 0000 014B     		ldr	r3, .L35
 382 0002 1868     		ldr	r0, [r3]
 383 0004 000C     		lsr	r0, r0, #16
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 384              		.loc 1 379 0
 385              		@ sp needed
 386 0006 7047     		bx	lr
 387              	.L36:
 388              		.align	2
 389              	.L35:
 390 0008 00580140 		.word	1073829888
 391              		.cfi_endproc
 392              	.LFE45:
 394              		.section	.text.HAL_GetDEVID,"ax",%progbits
 395              		.align	2
 396              		.global	HAL_GetDEVID
 397              		.code	16
 398              		.thumb_func
 400              	HAL_GetDEVID:
 401              	.LFB46:
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the device identifier.
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 402              		.loc 1 386 0
 403              		.cfi_startproc
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 404              		.loc 1 387 0
 405 0000 024B     		ldr	r3, .L38
 406 0002 1868     		ldr	r0, [r3]
 407 0004 0005     		lsl	r0, r0, #20
 408 0006 000D     		lsr	r0, r0, #20
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 409              		.loc 1 388 0
 410              		@ sp needed
 411 0008 7047     		bx	lr
 412              	.L39:
 413 000a C046     		.align	2
 414              	.L38:
 415 000c 00580140 		.word	1073829888
ARM GAS  /tmp/cciAJvt7.s 			page 15


 416              		.cfi_endproc
 417              	.LFE46:
 419              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 420              		.align	2
 421              		.global	HAL_GetUIDw0
 422              		.code	16
 423              		.thumb_func
 425              	HAL_GetUIDw0:
 426              	.LFB47:
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the first word of the unique device identifier (UID based on 96 bits)
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 427              		.loc 1 395 0
 428              		.cfi_startproc
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 429              		.loc 1 396 0
 430 0000 014B     		ldr	r3, .L41
 431 0002 1868     		ldr	r0, [r3]
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 432              		.loc 1 397 0
 433              		@ sp needed
 434 0004 7047     		bx	lr
 435              	.L42:
 436 0006 C046     		.align	2
 437              	.L41:
 438 0008 5000F81F 		.word	536346704
 439              		.cfi_endproc
 440              	.LFE47:
 442              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 443              		.align	2
 444              		.global	HAL_GetUIDw1
 445              		.code	16
 446              		.thumb_func
 448              	HAL_GetUIDw1:
 449              	.LFB48:
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the second word of the unique device identifier (UID based on 96 bits)
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 450              		.loc 1 404 0
 451              		.cfi_startproc
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x04U))));
 452              		.loc 1 405 0
 453 0000 014B     		ldr	r3, .L44
 454 0002 1868     		ldr	r0, [r3]
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 455              		.loc 1 406 0
 456              		@ sp needed
 457 0004 7047     		bx	lr
 458              	.L45:
ARM GAS  /tmp/cciAJvt7.s 			page 16


 459 0006 C046     		.align	2
 460              	.L44:
 461 0008 5400F81F 		.word	536346708
 462              		.cfi_endproc
 463              	.LFE48:
 465              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 466              		.align	2
 467              		.global	HAL_GetUIDw2
 468              		.code	16
 469              		.thumb_func
 471              	HAL_GetUIDw2:
 472              	.LFB49:
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the third word of the unique device identifier (UID based on 96 bits)
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 473              		.loc 1 413 0
 474              		.cfi_startproc
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x14U))));
 475              		.loc 1 414 0
 476 0000 014B     		ldr	r3, .L47
 477 0002 1868     		ldr	r0, [r3]
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 478              		.loc 1 415 0
 479              		@ sp needed
 480 0004 7047     		bx	lr
 481              	.L48:
 482 0006 C046     		.align	2
 483              	.L47:
 484 0008 6400F81F 		.word	536346724
 485              		.cfi_endproc
 486              	.LFE49:
 488              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 489              		.align	2
 490              		.global	HAL_DBGMCU_EnableDBGSleepMode
 491              		.code	16
 492              		.thumb_func
 494              	HAL_DBGMCU_EnableDBGSleepMode:
 495              	.LFB50:
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Debug functions
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Debug functions #####
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
ARM GAS  /tmp/cciAJvt7.s 			page 17


 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during SLEEP mode
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 496              		.loc 1 442 0
 497              		.cfi_startproc
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 498              		.loc 1 443 0
 499 0000 024A     		ldr	r2, .L50
 500 0002 5168     		ldr	r1, [r2, #4]
 501 0004 0123     		mov	r3, #1
 502 0006 0B43     		orr	r3, r1
 503 0008 5360     		str	r3, [r2, #4]
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 504              		.loc 1 444 0
 505              		@ sp needed
 506 000a 7047     		bx	lr
 507              	.L51:
 508              		.align	2
 509              	.L50:
 510 000c 00580140 		.word	1073829888
 511              		.cfi_endproc
 512              	.LFE50:
 514              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 515              		.align	2
 516              		.global	HAL_DBGMCU_DisableDBGSleepMode
 517              		.code	16
 518              		.thumb_func
 520              	HAL_DBGMCU_DisableDBGSleepMode:
 521              	.LFB51:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during SLEEP mode
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 522              		.loc 1 451 0
 523              		.cfi_startproc
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 524              		.loc 1 452 0
 525 0000 024A     		ldr	r2, .L53
 526 0002 5368     		ldr	r3, [r2, #4]
 527 0004 0121     		mov	r1, #1
 528 0006 8B43     		bic	r3, r1
 529 0008 5360     		str	r3, [r2, #4]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 530              		.loc 1 453 0
 531              		@ sp needed
ARM GAS  /tmp/cciAJvt7.s 			page 18


 532 000a 7047     		bx	lr
 533              	.L54:
 534              		.align	2
 535              	.L53:
 536 000c 00580140 		.word	1073829888
 537              		.cfi_endproc
 538              	.LFE51:
 540              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 541              		.align	2
 542              		.global	HAL_DBGMCU_EnableDBGStopMode
 543              		.code	16
 544              		.thumb_func
 546              	HAL_DBGMCU_EnableDBGStopMode:
 547              	.LFB52:
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STOP mode
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 548              		.loc 1 460 0
 549              		.cfi_startproc
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 550              		.loc 1 461 0
 551 0000 024A     		ldr	r2, .L56
 552 0002 5168     		ldr	r1, [r2, #4]
 553 0004 0223     		mov	r3, #2
 554 0006 0B43     		orr	r3, r1
 555 0008 5360     		str	r3, [r2, #4]
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 556              		.loc 1 462 0
 557              		@ sp needed
 558 000a 7047     		bx	lr
 559              	.L57:
 560              		.align	2
 561              	.L56:
 562 000c 00580140 		.word	1073829888
 563              		.cfi_endproc
 564              	.LFE52:
 566              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 567              		.align	2
 568              		.global	HAL_DBGMCU_DisableDBGStopMode
 569              		.code	16
 570              		.thumb_func
 572              	HAL_DBGMCU_DisableDBGStopMode:
 573              	.LFB53:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STOP mode
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 574              		.loc 1 469 0
 575              		.cfi_startproc
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
ARM GAS  /tmp/cciAJvt7.s 			page 19


 576              		.loc 1 470 0
 577 0000 024A     		ldr	r2, .L59
 578 0002 5368     		ldr	r3, [r2, #4]
 579 0004 0221     		mov	r1, #2
 580 0006 8B43     		bic	r3, r1
 581 0008 5360     		str	r3, [r2, #4]
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 582              		.loc 1 471 0
 583              		@ sp needed
 584 000a 7047     		bx	lr
 585              	.L60:
 586              		.align	2
 587              	.L59:
 588 000c 00580140 		.word	1073829888
 589              		.cfi_endproc
 590              	.LFE53:
 592              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 593              		.align	2
 594              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 595              		.code	16
 596              		.thumb_func
 598              	HAL_DBGMCU_EnableDBGStandbyMode:
 599              	.LFB54:
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STANDBY mode
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 600              		.loc 1 478 0
 601              		.cfi_startproc
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 602              		.loc 1 479 0
 603 0000 024A     		ldr	r2, .L62
 604 0002 5168     		ldr	r1, [r2, #4]
 605 0004 0423     		mov	r3, #4
 606 0006 0B43     		orr	r3, r1
 607 0008 5360     		str	r3, [r2, #4]
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 608              		.loc 1 480 0
 609              		@ sp needed
 610 000a 7047     		bx	lr
 611              	.L63:
 612              		.align	2
 613              	.L62:
 614 000c 00580140 		.word	1073829888
 615              		.cfi_endproc
 616              	.LFE54:
 618              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 619              		.align	2
 620              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 621              		.code	16
 622              		.thumb_func
 624              	HAL_DBGMCU_DisableDBGStandbyMode:
 625              	.LFB55:
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
ARM GAS  /tmp/cciAJvt7.s 			page 20


 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STANDBY mode
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 626              		.loc 1 487 0
 627              		.cfi_startproc
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 628              		.loc 1 488 0
 629 0000 024A     		ldr	r2, .L65
 630 0002 5368     		ldr	r3, [r2, #4]
 631 0004 0421     		mov	r1, #4
 632 0006 8B43     		bic	r3, r1
 633 0008 5360     		str	r3, [r2, #4]
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 634              		.loc 1 489 0
 635              		@ sp needed
 636 000a 7047     		bx	lr
 637              	.L66:
 638              		.align	2
 639              	.L65:
 640 000c 00580140 		.word	1073829888
 641              		.cfi_endproc
 642              	.LFE55:
 644              		.section	.text.HAL_DBGMCU_DBG_EnableLowPowerConfig,"ax",%progbits
 645              		.align	2
 646              		.global	HAL_DBGMCU_DBG_EnableLowPowerConfig
 647              		.code	16
 648              		.thumb_func
 650              	HAL_DBGMCU_DBG_EnableLowPowerConfig:
 651              	.LFB56:
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enable low power mode behavior when the MCU is in Debug mode.
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_EnableLowPowerConfig(uint32_t Periph)
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 652              		.loc 1 501 0
 653              		.cfi_startproc
 654              	.LVL20:
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   DBGMCU->CR |= Periph;
 655              		.loc 1 505 0
 656 0000 024B     		ldr	r3, .L68
 657 0002 5A68     		ldr	r2, [r3, #4]
 658 0004 1043     		orr	r0, r2
 659              	.LVL21:
 660 0006 5860     		str	r0, [r3, #4]
ARM GAS  /tmp/cciAJvt7.s 			page 21


 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 661              		.loc 1 507 0
 662              		@ sp needed
 663 0008 7047     		bx	lr
 664              	.L69:
 665 000a C046     		.align	2
 666              	.L68:
 667 000c 00580140 		.word	1073829888
 668              		.cfi_endproc
 669              	.LFE56:
 671              		.section	.text.HAL_DBGMCU_DBG_DisableLowPowerConfig,"ax",%progbits
 672              		.align	2
 673              		.global	HAL_DBGMCU_DBG_DisableLowPowerConfig
 674              		.code	16
 675              		.thumb_func
 677              	HAL_DBGMCU_DBG_DisableLowPowerConfig:
 678              	.LFB57:
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disable low power mode behavior when the MCU is in Debug mode.
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_DisableLowPowerConfig(uint32_t Periph)
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 679              		.loc 1 518 0
 680              		.cfi_startproc
 681              	.LVL22:
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     DBGMCU->CR &= ~Periph;
 682              		.loc 1 522 0
 683 0000 024A     		ldr	r2, .L71
 684 0002 5368     		ldr	r3, [r2, #4]
 685 0004 8343     		bic	r3, r0
 686 0006 5360     		str	r3, [r2, #4]
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 687              		.loc 1 524 0
 688              		@ sp needed
 689 0008 7047     		bx	lr
 690              	.L72:
 691 000a C046     		.align	2
 692              	.L71:
 693 000c 00580140 		.word	1073829888
 694              		.cfi_endproc
 695              	.LFE57:
 697              		.section	.text.HAL_SYSCFG_GetBootMode,"ax",%progbits
 698              		.align	2
 699              		.global	HAL_SYSCFG_GetBootMode
 700              		.code	16
 701              		.thumb_func
ARM GAS  /tmp/cciAJvt7.s 			page 22


 703              	HAL_SYSCFG_GetBootMode:
 704              	.LFB58:
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL SYSCFG configuration functions
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Return the boot mode
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Select the output of internal reference voltage (VREFINT)
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Lock/Unlock the SYSCFG VREF register values
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the boot mode as configured by user.
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval The boot mode as configured by user. The returned value can be one
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *         of the following values:
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000000 : Boot is configured in Main Flash memory
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000100 : Boot is configured in System Flash memory
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000300 : Boot is configured in Embedded SRAM memory
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t  HAL_SYSCFG_GetBootMode(void)
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 705              		.loc 1 555 0
 706              		.cfi_startproc
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return (SYSCFG->CFGR1 & SYSCFG_CFGR1_BOOT_MODE);
 707              		.loc 1 556 0
 708 0000 024B     		ldr	r3, .L74
 709 0002 1868     		ldr	r0, [r3]
 710 0004 C023     		mov	r3, #192
 711 0006 9B00     		lsl	r3, r3, #2
 712 0008 1840     		and	r0, r3
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 713              		.loc 1 557 0
 714              		@ sp needed
 715 000a 7047     		bx	lr
 716              	.L75:
 717              		.align	2
 718              	.L74:
 719 000c 00000140 		.word	1073807360
 720              		.cfi_endproc
 721              	.LFE58:
 723              		.section	.text.HAL_SYSCFG_VREFINT_OutputSelect,"ax",%progbits
 724              		.align	2
 725              		.global	HAL_SYSCFG_VREFINT_OutputSelect
 726              		.code	16
 727              		.thumb_func
ARM GAS  /tmp/cciAJvt7.s 			page 23


 729              	HAL_SYSCFG_VREFINT_OutputSelect:
 730              	.LFB59:
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Selects the output of internal reference voltage (VREFINT).
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The VREFINT output can be routed to(PB0) or
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        (PB1) or both.
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param SYSCFG_Vrefint_OUTPUT: new state of the Vrefint output.
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        This parameter can be one of the following values:
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_NONE
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB1
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0_PB1
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_VREFINT_OutputSelect(uint32_t SYSCFG_Vrefint_OUTPUT)
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 731              		.loc 1 572 0
 732              		.cfi_startproc
 733              	.LVL23:
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_SYSCFG_VREFINT_OUT_SELECT(SYSCFG_Vrefint_OUTPUT));
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Set the output Vrefint pin */
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 &= ~(SYSCFG_CFGR3_VREF_OUT);
 734              		.loc 1 577 0
 735 0000 044B     		ldr	r3, .L77
 736 0002 1A6A     		ldr	r2, [r3, #32]
 737 0004 3021     		mov	r1, #48
 738 0006 8A43     		bic	r2, r1
 739 0008 1A62     		str	r2, [r3, #32]
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 |= (uint32_t)(SYSCFG_Vrefint_OUTPUT);
 740              		.loc 1 578 0
 741 000a 1A6A     		ldr	r2, [r3, #32]
 742 000c 1043     		orr	r0, r2
 743              	.LVL24:
 744 000e 1862     		str	r0, [r3, #32]
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 745              		.loc 1 579 0
 746              		@ sp needed
 747 0010 7047     		bx	lr
 748              	.L78:
 749 0012 C046     		.align	2
 750              	.L77:
 751 0014 00000140 		.word	1073807360
 752              		.cfi_endproc
 753              	.LFE59:
 755              		.section	.text.HAL_SYSCFG_Enable_Lock_VREFINT,"ax",%progbits
 756              		.align	2
 757              		.global	HAL_SYSCFG_Enable_Lock_VREFINT
 758              		.code	16
 759              		.thumb_func
 761              	HAL_SYSCFG_Enable_Lock_VREFINT:
 762              	.LFB60:
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Lock the SYSCFG VREF register values
ARM GAS  /tmp/cciAJvt7.s 			page 24


 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Enable_Lock_VREFINT(void)
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 763              		.loc 1 586 0
 764              		.cfi_startproc
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Enable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 765              		.loc 1 588 0
 766 0000 034A     		ldr	r2, .L80
 767 0002 136A     		ldr	r3, [r2, #32]
 768 0004 8021     		mov	r1, #128
 769 0006 0906     		lsl	r1, r1, #24
 770 0008 0B43     		orr	r3, r1
 771 000a 1362     		str	r3, [r2, #32]
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 772              		.loc 1 589 0
 773              		@ sp needed
 774 000c 7047     		bx	lr
 775              	.L81:
 776 000e C046     		.align	2
 777              	.L80:
 778 0010 00000140 		.word	1073807360
 779              		.cfi_endproc
 780              	.LFE60:
 782              		.section	.text.HAL_SYSCFG_Disable_Lock_VREFINT,"ax",%progbits
 783              		.align	2
 784              		.global	HAL_SYSCFG_Disable_Lock_VREFINT
 785              		.code	16
 786              		.thumb_func
 788              	HAL_SYSCFG_Disable_Lock_VREFINT:
 789              	.LFB61:
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Unlock the overall SYSCFG VREF register values
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Disable_Lock_VREFINT(void)
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 790              		.loc 1 596 0
 791              		.cfi_startproc
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Disable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 792              		.loc 1 598 0
 793 0000 024A     		ldr	r2, .L83
 794 0002 136A     		ldr	r3, [r2, #32]
 795 0004 5B00     		lsl	r3, r3, #1
 796 0006 5B08     		lsr	r3, r3, #1
 797 0008 1362     		str	r3, [r2, #32]
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 798              		.loc 1 599 0
 799              		@ sp needed
 800 000a 7047     		bx	lr
 801              	.L84:
 802              		.align	2
 803              	.L83:
 804 000c 00000140 		.word	1073807360
ARM GAS  /tmp/cciAJvt7.s 			page 25


 805              		.cfi_endproc
 806              	.LFE61:
 808              		.comm	uwTick,4,4
 809              		.text
 810              	.Letext0:
 811              		.file 2 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 812              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 813              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 814              		.file 5 "Drivers/CMSIS/Include/core_cm0plus.h"
 815              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 816              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 817              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  /tmp/cciAJvt7.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal.c
     /tmp/cciAJvt7.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cciAJvt7.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cciAJvt7.s:35     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cciAJvt7.s:40     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cciAJvt7.s:51     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cciAJvt7.s:56     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cciAJvt7.s:95     .text.HAL_DeInit:0000000000000024 $d
     /tmp/cciAJvt7.s:101    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cciAJvt7.s:106    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cciAJvt7.s:151    .text.HAL_InitTick:000000000000002c $d
     /tmp/cciAJvt7.s:156    .text.HAL_Init:0000000000000000 $t
     /tmp/cciAJvt7.s:161    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cciAJvt7.s:200    .text.HAL_Init:0000000000000024 $d
     /tmp/cciAJvt7.s:205    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cciAJvt7.s:210    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cciAJvt7.s:225    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/cciAJvt7.s:230    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cciAJvt7.s:235    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cciAJvt7.s:248    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cciAJvt7.s:253    .text.HAL_Delay:0000000000000000 $t
     /tmp/cciAJvt7.s:258    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cciAJvt7.s:298    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cciAJvt7.s:303    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cciAJvt7.s:319    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cciAJvt7.s:324    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cciAJvt7.s:329    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cciAJvt7.s:345    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cciAJvt7.s:350    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cciAJvt7.s:355    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cciAJvt7.s:366    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cciAJvt7.s:371    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cciAJvt7.s:376    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cciAJvt7.s:390    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cciAJvt7.s:395    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cciAJvt7.s:400    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cciAJvt7.s:415    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cciAJvt7.s:420    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cciAJvt7.s:425    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cciAJvt7.s:438    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cciAJvt7.s:443    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cciAJvt7.s:448    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cciAJvt7.s:461    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cciAJvt7.s:466    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cciAJvt7.s:471    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cciAJvt7.s:484    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/cciAJvt7.s:489    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cciAJvt7.s:494    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cciAJvt7.s:510    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cciAJvt7.s:515    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cciAJvt7.s:520    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cciAJvt7.s:536    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cciAJvt7.s:541    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cciAJvt7.s:546    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cciAJvt7.s:562    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
ARM GAS  /tmp/cciAJvt7.s 			page 27


     /tmp/cciAJvt7.s:567    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cciAJvt7.s:572    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cciAJvt7.s:588    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cciAJvt7.s:593    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cciAJvt7.s:598    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cciAJvt7.s:614    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cciAJvt7.s:619    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cciAJvt7.s:624    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cciAJvt7.s:640    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cciAJvt7.s:645    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000000000000 $t
     /tmp/cciAJvt7.s:650    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000000000000 HAL_DBGMCU_DBG_EnableLowPowerConfig
     /tmp/cciAJvt7.s:667    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:000000000000000c $d
     /tmp/cciAJvt7.s:672    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000000000000 $t
     /tmp/cciAJvt7.s:677    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000000000000 HAL_DBGMCU_DBG_DisableLowPowerConfig
     /tmp/cciAJvt7.s:693    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:000000000000000c $d
     /tmp/cciAJvt7.s:698    .text.HAL_SYSCFG_GetBootMode:0000000000000000 $t
     /tmp/cciAJvt7.s:703    .text.HAL_SYSCFG_GetBootMode:0000000000000000 HAL_SYSCFG_GetBootMode
     /tmp/cciAJvt7.s:719    .text.HAL_SYSCFG_GetBootMode:000000000000000c $d
     /tmp/cciAJvt7.s:724    .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000000 $t
     /tmp/cciAJvt7.s:729    .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000000 HAL_SYSCFG_VREFINT_OutputSelect
     /tmp/cciAJvt7.s:751    .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000014 $d
     /tmp/cciAJvt7.s:756    .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000000 $t
     /tmp/cciAJvt7.s:761    .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000000 HAL_SYSCFG_Enable_Lock_VREFINT
     /tmp/cciAJvt7.s:778    .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000010 $d
     /tmp/cciAJvt7.s:783    .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000000000000 $t
     /tmp/cciAJvt7.s:788    .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000000000000 HAL_SYSCFG_Disable_Lock_VREFINT
     /tmp/cciAJvt7.s:804    .text.HAL_SYSCFG_Disable_Lock_VREFINT:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
