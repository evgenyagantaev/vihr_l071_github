ARM GAS  /tmp/ccJfp1dB.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	UART_EndTxTransfer:
  23              	.LFB77:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @file    stm32l0xx_hal_uart.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   [..]
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 inside the transmit and receive processes.
ARM GAS  /tmp/ccJfp1dB.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     ==================================
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
ARM GAS  /tmp/ccJfp1dB.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @attention
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccJfp1dB.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #include "stm32l0xx_hal.h"
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup STM32L0xx_HAL_Driver
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccJfp1dB.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** ===============================================================================
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in asynchronous mode.
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Baud Rate
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Word Length
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Stop Bit
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Hardware flow control
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Over Sampling Method
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) data logical level inversion
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX and TX pins swap
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX overrun detection disabling
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA disabling on RX error
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) MSB first on communication line
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) auto Baud rate detection
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     are available in reference manual).
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
ARM GAS  /tmp/ccJfp1dB.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   following table.
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Table 1. UART frame format.
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
ARM GAS  /tmp/ccJfp1dB.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART instance */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccJfp1dB.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  /tmp/ccJfp1dB.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart             UART handle.
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the LIN UART instance */
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  /tmp/ccJfp1dB.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart        UART handle.
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccJfp1dB.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the wake up method parameter */
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
ARM GAS  /tmp/ccJfp1dB.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DeInit the low level hardware */
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DeInit the low level hardware */
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlock */
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccJfp1dB.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart uart handle
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (pCallback == NULL)
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
ARM GAS  /tmp/ccJfp1dB.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process locked */
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
ARM GAS  /tmp/ccJfp1dB.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Return error status */
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     status =  HAL_ERROR;
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Release Lock */
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return status;
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart uart handle
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
ARM GAS  /tmp/ccJfp1dB.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process locked */
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
ARM GAS  /tmp/ccJfp1dB.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Return error status */
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     status =  HAL_ERROR;
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Release Lock */
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return status;
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
ARM GAS  /tmp/ccJfp1dB.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### IO operation functions #####
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and Half duplex data transfers.
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) There are two mode of transfer:
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            after finishing transfer.
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            using DMA mode.
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Blocking mode API's are :
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive()
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort()
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
ARM GAS  /tmp/ccJfp1dB.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         Errors are handled as follows :
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart   UART handle.
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *pdata16bits;
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
ARM GAS  /tmp/ccJfp1dB.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = NULL;
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = pData;
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = NULL;
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (pdata8bits == NULL)
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccJfp1dB.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart   UART handle.
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *pdata16bits;
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask;
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/ccJfp1dB.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = NULL;
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = pData;
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = NULL;
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* as long as data have to be received */
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (pdata8bits == NULL)
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount--;
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccJfp1dB.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR       = NULL;
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR       = NULL;
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
ARM GAS  /tmp/ccJfp1dB.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccJfp1dB.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA error callback */
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA abort callback */
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Set error code to DMA */
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_ERROR;
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in the UART CR3 register */
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         the parity bit (MSB position).
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccJfp1dB.s 			page 27


1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA error callback */
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA abort callback */
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the DMA channel */
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Set error code to DMA */
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 28


1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_ERROR;
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in the UART CR3 register */
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 29


1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 30


1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
ARM GAS  /tmp/ccJfp1dB.s 			page 31


1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccJfp1dB.s 			page 32


1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccJfp1dB.s 			page 33


1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  /tmp/ccJfp1dB.s 			page 34


1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      before any call to DMA Abort functions */
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 35


1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0U;
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccJfp1dB.s 			page 36


1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1U;
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0U;
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (abortcplt == 1U)
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear ISR function pointers */
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR = NULL;
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset errorCode */
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Discard the received data */
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
ARM GAS  /tmp/ccJfp1dB.s 			page 37


2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = NULL;
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 38


2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
ARM GAS  /tmp/ccJfp1dB.s 			page 39


2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Discard the received data */
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccJfp1dB.s 			page 40


2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t errorflags;
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t errorcode;
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If no error occurs */
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == 0U)
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxISR(huart);
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If some errors occur */
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((errorflags != 0U)
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
ARM GAS  /tmp/ccJfp1dB.s 			page 41


2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->RxISR(huart);
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          consider error as blocking */
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Abort DMA RX */
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           else
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Call user error callback */
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /*Call registered error callback*/
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             huart->ErrorCallback(huart);
ARM GAS  /tmp/ccJfp1dB.s 			page 42


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Call user error callback */
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /*Call registered error callback*/
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error is notified to user through user error callback */
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /*Call registered error callback*/
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   } /* End if some error occurs */
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
ARM GAS  /tmp/ccJfp1dB.s 			page 43


2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR(huart);
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccJfp1dB.s 			page 44


2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART error callback.
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccJfp1dB.s 			page 45


2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief   UART control functions
2516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
2517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
2518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
2521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccJfp1dB.s 			page 46


2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 47


2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status.
2618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Transmit break characters.
2642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Send break characters */
2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
ARM GAS  /tmp/ccJfp1dB.s 			page 48


2657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides functions allowing to :
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle state.
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle error code
2681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Return the UART handle state.
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL state
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1, temp2;
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp1 = huart->gState;
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval UART Error Code
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccJfp1dB.s 			page 49


2714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval none
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Init the UART Callback settings */
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg;
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t brrtemp;
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccJfp1dB.s 			page 50


2771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * to huart->Init.StopBits value */
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure
2794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check LPUART instance */
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Retrieve frequency clock */
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           lpuart_ker_ck_pres = (uint32_t)(HSI_VALUE >> 2U);
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
ARM GAS  /tmp/ccJfp1dB.s 			page 51


2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* if proper clock source reported */
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(lpuart_ker_ck_pres, huart->Init.BaudRate));
2853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ret = HAL_ERROR;
2862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
2864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
2865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
2881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
ARM GAS  /tmp/ccJfp1dB.s 			page 52


2885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       ret = HAL_ERROR;
2909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRate));
2925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccJfp1dB.s 			page 53


2942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       ret = HAL_ERROR;
2951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear ISR function pointers */
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxISR = NULL;
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
2958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return ret;
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure data inversion */
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccJfp1dB.s 			page 54


2999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
3040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
3044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
ARM GAS  /tmp/ccJfp1dB.s 			page 55


3056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
3059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
3070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART State */
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart     UART handle.
3086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Tickstart Tick start value
3089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
3091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check for the Timeout */
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
3102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/ccJfp1dB.s 			page 56


3113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
3114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
3123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  25              		.loc 1 3126 0
  26              		.cfi_startproc
  27              	.LVL0:
3127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  28              		.loc 1 3128 0
  29 0000 0268     		ldr	r2, [r0]
  30 0002 1368     		ldr	r3, [r2]
  31 0004 C021     		mov	r1, #192
  32 0006 8B43     		bic	r3, r1
  33 0008 1360     		str	r3, [r2]
3129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  34              		.loc 1 3131 0
  35 000a 2023     		mov	r3, #32
  36 000c 4367     		str	r3, [r0, #116]
3132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  37              		.loc 1 3132 0
  38              		@ sp needed
  39 000e 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE77:
  43              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  44              		.align	2
  45              		.code	16
  46              		.thumb_func
  48              	UART_EndRxTransfer:
  49              	.LFB78:
3133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
3138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  50              		.loc 1 3141 0
  51              		.cfi_startproc
  52              	.LVL1:
3142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccJfp1dB.s 			page 57


  53              		.loc 1 3143 0
  54 0000 0268     		ldr	r2, [r0]
  55 0002 1168     		ldr	r1, [r2]
  56 0004 064B     		ldr	r3, .L3
  57 0006 0B40     		and	r3, r1
  58 0008 1360     		str	r3, [r2]
3144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  59              		.loc 1 3144 0
  60 000a 0268     		ldr	r2, [r0]
  61 000c 9368     		ldr	r3, [r2, #8]
  62 000e 0121     		mov	r1, #1
  63 0010 8B43     		bic	r3, r1
  64 0012 9360     		str	r3, [r2, #8]
3145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  65              		.loc 1 3147 0
  66 0014 2023     		mov	r3, #32
  67 0016 8367     		str	r3, [r0, #120]
3148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxISR = NULL;
  68              		.loc 1 3150 0
  69 0018 0023     		mov	r3, #0
  70 001a 0366     		str	r3, [r0, #96]
3151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  71              		.loc 1 3151 0
  72              		@ sp needed
  73 001c 7047     		bx	lr
  74              	.L4:
  75 001e C046     		.align	2
  76              	.L3:
  77 0020 DFFEFFFF 		.word	-289
  78              		.cfi_endproc
  79              	.LFE78:
  81              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  86              	UART_TxISR_8BIT:
  87              	.LFB89:
3152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 58


3168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Circular mode */
3176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
ARM GAS  /tmp/ccJfp1dB.s 			page 59


3225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/ccJfp1dB.s 			page 60


3282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered error callback*/
3291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered error callback*/
3312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
ARM GAS  /tmp/ccJfp1dB.s 			page 61


3339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
3388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
ARM GAS  /tmp/ccJfp1dB.s 			page 62


3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/ccJfp1dB.s 			page 63


3453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  88              		.loc 1 3488 0
  89              		.cfi_startproc
  90              	.LVL2:
3489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  91              		.loc 1 3490 0
  92 0000 436F     		ldr	r3, [r0, #116]
  93 0002 212B     		cmp	r3, #33
  94 0004 1BD1     		bne	.L5
3491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
  95              		.loc 1 3492 0
  96 0006 3133     		add	r3, r3, #49
  97 0008 C35A     		ldrh	r3, [r0, r3]
  98 000a 9BB2     		uxth	r3, r3
  99 000c 002B     		cmp	r3, #0
 100 000e 0AD1     		bne	.L7
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 101              		.loc 1 3495 0
ARM GAS  /tmp/ccJfp1dB.s 			page 64


 102 0010 0268     		ldr	r2, [r0]
 103 0012 1368     		ldr	r3, [r2]
 104 0014 8021     		mov	r1, #128
 105 0016 8B43     		bic	r3, r1
 106 0018 1360     		str	r3, [r2]
3496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 107              		.loc 1 3498 0
 108 001a 0268     		ldr	r2, [r0]
 109 001c 1168     		ldr	r1, [r2]
 110 001e 4023     		mov	r3, #64
 111 0020 0B43     		orr	r3, r1
 112 0022 1360     		str	r3, [r2]
 113 0024 0BE0     		b	.L5
 114              	.L7:
3499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
3501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 115              		.loc 1 3502 0
 116 0026 0368     		ldr	r3, [r0]
 117 0028 C26C     		ldr	r2, [r0, #76]
 118 002a 1278     		ldrb	r2, [r2]
 119 002c 9A62     		str	r2, [r3, #40]
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 120              		.loc 1 3503 0
 121 002e C36C     		ldr	r3, [r0, #76]
 122 0030 0133     		add	r3, r3, #1
 123 0032 C364     		str	r3, [r0, #76]
3504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 124              		.loc 1 3504 0
 125 0034 5222     		mov	r2, #82
 126 0036 835A     		ldrh	r3, [r0, r2]
 127 0038 013B     		sub	r3, r3, #1
 128 003a 9BB2     		uxth	r3, r3
 129 003c 8352     		strh	r3, [r0, r2]
 130              	.L5:
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 131              		.loc 1 3507 0
 132              		@ sp needed
 133 003e 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE89:
 137              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 138              		.align	2
 139              		.code	16
 140              		.thumb_func
 142              	UART_TxISR_16BIT:
 143              	.LFB90:
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
ARM GAS  /tmp/ccJfp1dB.s 			page 65


3513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 144              		.loc 1 3517 0
 145              		.cfi_startproc
 146              	.LVL3:
3518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *tmp;
3519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 147              		.loc 1 3521 0
 148 0000 436F     		ldr	r3, [r0, #116]
 149 0002 212B     		cmp	r3, #33
 150 0004 1DD1     		bne	.L8
3522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 151              		.loc 1 3523 0
 152 0006 3133     		add	r3, r3, #49
 153 0008 C35A     		ldrh	r3, [r0, r3]
 154 000a 9BB2     		uxth	r3, r3
 155 000c 002B     		cmp	r3, #0
 156 000e 0AD1     		bne	.L10
3524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 157              		.loc 1 3526 0
 158 0010 0268     		ldr	r2, [r0]
 159 0012 1368     		ldr	r3, [r2]
 160 0014 8021     		mov	r1, #128
 161 0016 8B43     		bic	r3, r1
 162 0018 1360     		str	r3, [r2]
3527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 163              		.loc 1 3529 0
 164 001a 0268     		ldr	r2, [r0]
 165 001c 1168     		ldr	r1, [r2]
 166 001e 4023     		mov	r3, #64
 167 0020 0B43     		orr	r3, r1
 168 0022 1360     		str	r3, [r2]
 169 0024 0DE0     		b	.L8
 170              	.L10:
 171              	.LVL4:
3530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 172              		.loc 1 3534 0
 173 0026 0268     		ldr	r2, [r0]
 174 0028 C36C     		ldr	r3, [r0, #76]
 175 002a 1B88     		ldrh	r3, [r3]
 176 002c DB05     		lsl	r3, r3, #23
 177 002e DB0D     		lsr	r3, r3, #23
 178 0030 9362     		str	r3, [r2, #40]
ARM GAS  /tmp/ccJfp1dB.s 			page 66


 179              	.LVL5:
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 180              		.loc 1 3535 0
 181 0032 C36C     		ldr	r3, [r0, #76]
 182 0034 0233     		add	r3, r3, #2
 183 0036 C364     		str	r3, [r0, #76]
3536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 184              		.loc 1 3536 0
 185 0038 5222     		mov	r2, #82
 186 003a 835A     		ldrh	r3, [r0, r2]
 187 003c 013B     		sub	r3, r3, #1
 188 003e 9BB2     		uxth	r3, r3
 189 0040 8352     		strh	r3, [r0, r2]
 190              	.L8:
3537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 191              		.loc 1 3539 0
 192              		@ sp needed
 193 0042 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE90:
 197              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 198              		.align	2
 199              		.weak	HAL_UART_MspInit
 200              		.code	16
 201              		.thumb_func
 203              	HAL_UART_MspInit:
 204              	.LFB39:
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 205              		.loc 1 665 0
 206              		.cfi_startproc
 207              	.LVL6:
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 208              		.loc 1 672 0
 209              		@ sp needed
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE39:
 214 0002 C046     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 215              		.align	2
 216              		.weak	HAL_UART_MspDeInit
 217              		.code	16
 218              		.thumb_func
 220              	HAL_UART_MspDeInit:
 221              	.LFB40:
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 222              		.loc 1 680 0
 223              		.cfi_startproc
 224              	.LVL7:
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 225              		.loc 1 687 0
 226              		@ sp needed
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE40:
 231 0002 C046     		.section	.text.HAL_UART_DeInit,"ax",%progbits
ARM GAS  /tmp/ccJfp1dB.s 			page 67


 232              		.align	2
 233              		.global	HAL_UART_DeInit
 234              		.code	16
 235              		.thumb_func
 237              	HAL_UART_DeInit:
 238              	.LFB38:
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 239              		.loc 1 618 0
 240              		.cfi_startproc
 241              	.LVL8:
 242 0000 38B5     		push	{r3, r4, r5, lr}
 243              	.LCFI0:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 3, -16
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 14, -4
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 249              		.loc 1 620 0
 250 0002 0028     		cmp	r0, #0
 251 0004 17D0     		beq	.L15
 252 0006 041C     		mov	r4, r0
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 253              		.loc 1 628 0
 254 0008 2423     		mov	r3, #36
 255 000a 4367     		str	r3, [r0, #116]
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 256              		.loc 1 631 0
 257 000c 0268     		ldr	r2, [r0]
 258 000e 1368     		ldr	r3, [r2]
 259 0010 0121     		mov	r1, #1
 260 0012 8B43     		bic	r3, r1
 261 0014 1360     		str	r3, [r2]
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 262              		.loc 1 633 0
 263 0016 0368     		ldr	r3, [r0]
 264 0018 0025     		mov	r5, #0
 265 001a 1D60     		str	r5, [r3]
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 266              		.loc 1 634 0
 267 001c 0368     		ldr	r3, [r0]
 268 001e 5D60     		str	r5, [r3, #4]
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 269              		.loc 1 635 0
 270 0020 0368     		ldr	r3, [r0]
 271 0022 9D60     		str	r5, [r3, #8]
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 272              		.loc 1 646 0
 273 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 274              	.LVL9:
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 275              		.loc 1 649 0
 276 0028 E567     		str	r5, [r4, #124]
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 277              		.loc 1 650 0
 278 002a 6567     		str	r5, [r4, #116]
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 68


 279              		.loc 1 651 0
 280 002c A567     		str	r5, [r4, #120]
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 281              		.loc 1 654 0
 282 002e 7023     		mov	r3, #112
 283 0030 E554     		strb	r5, [r4, r3]
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 284              		.loc 1 656 0
 285 0032 0020     		mov	r0, #0
 286 0034 00E0     		b	.L14
 287              	.LVL10:
 288              	.L15:
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 289              		.loc 1 622 0
 290 0036 0120     		mov	r0, #1
 291              	.LVL11:
 292              	.L14:
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 293              		.loc 1 657 0
 294              		@ sp needed
 295 0038 38BD     		pop	{r3, r4, r5, pc}
 296              		.cfi_endproc
 297              	.LFE38:
 299 003a C046     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 300              		.align	2
 301              		.global	HAL_UART_Transmit_IT
 302              		.code	16
 303              		.thumb_func
 305              	HAL_UART_Transmit_IT:
 306              	.LFB43:
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 307              		.loc 1 1234 0
 308              		.cfi_startproc
 309              	.LVL12:
 310 0000 30B5     		push	{r4, r5, lr}
 311              	.LCFI1:
 312              		.cfi_def_cfa_offset 12
 313              		.cfi_offset 4, -12
 314              		.cfi_offset 5, -8
 315              		.cfi_offset 14, -4
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 316              		.loc 1 1236 0
 317 0002 436F     		ldr	r3, [r0, #116]
 318 0004 202B     		cmp	r3, #32
 319 0006 34D1     		bne	.L21
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 320              		.loc 1 1238 0
 321 0008 0029     		cmp	r1, #0
 322 000a 34D0     		beq	.L22
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 323              		.loc 1 1238 0 is_stmt 0 discriminator 1
 324 000c 002A     		cmp	r2, #0
 325 000e 34D0     		beq	.L23
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 326              		.loc 1 1246 0 is_stmt 1
 327 0010 8368     		ldr	r3, [r0, #8]
 328 0012 8024     		mov	r4, #128
ARM GAS  /tmp/ccJfp1dB.s 			page 69


 329 0014 6401     		lsl	r4, r4, #5
 330 0016 A342     		cmp	r3, r4
 331 0018 04D1     		bne	.L18
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 332              		.loc 1 1246 0 is_stmt 0 discriminator 1
 333 001a 0469     		ldr	r4, [r0, #16]
 334 001c 002C     		cmp	r4, #0
 335 001e 01D1     		bne	.L18
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 336              		.loc 1 1248 0 is_stmt 1
 337 0020 CC07     		lsl	r4, r1, #31
 338 0022 2CD4     		bmi	.L24
 339              	.L18:
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 340              		.loc 1 1255 0
 341 0024 7024     		mov	r4, #112
 342 0026 045D     		ldrb	r4, [r0, r4]
 343 0028 012C     		cmp	r4, #1
 344 002a 2AD0     		beq	.L25
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 345              		.loc 1 1255 0 is_stmt 0 discriminator 2
 346 002c 0125     		mov	r5, #1
 347 002e 7024     		mov	r4, #112
 348 0030 0555     		strb	r5, [r0, r4]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 349              		.loc 1 1257 0 is_stmt 1 discriminator 2
 350 0032 C164     		str	r1, [r0, #76]
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 351              		.loc 1 1258 0 discriminator 2
 352 0034 5021     		mov	r1, #80
 353              	.LVL13:
 354 0036 4252     		strh	r2, [r0, r1]
 355              	.LVL14:
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR       = NULL;
 356              		.loc 1 1259 0 discriminator 2
 357 0038 0231     		add	r1, r1, #2
 358 003a 4252     		strh	r2, [r0, r1]
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 359              		.loc 1 1260 0 discriminator 2
 360 003c 0022     		mov	r2, #0
 361              	.LVL15:
 362 003e 4266     		str	r2, [r0, #100]
 363              	.LVL16:
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 364              		.loc 1 1262 0 discriminator 2
 365 0040 C267     		str	r2, [r0, #124]
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 366              		.loc 1 1263 0 discriminator 2
 367 0042 2132     		add	r2, r2, #33
 368 0044 4267     		str	r2, [r0, #116]
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 369              		.loc 1 1266 0 discriminator 2
 370 0046 8022     		mov	r2, #128
 371 0048 5201     		lsl	r2, r2, #5
 372 004a 9342     		cmp	r3, r2
 373 004c 05D1     		bne	.L19
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 70


 374              		.loc 1 1266 0 is_stmt 0 discriminator 1
 375 004e 0369     		ldr	r3, [r0, #16]
 376 0050 002B     		cmp	r3, #0
 377 0052 02D1     		bne	.L19
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 378              		.loc 1 1268 0 is_stmt 1
 379 0054 0C4B     		ldr	r3, .L26
 380 0056 4366     		str	r3, [r0, #100]
 381 0058 01E0     		b	.L20
 382              	.L19:
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 383              		.loc 1 1272 0
 384 005a 0C4B     		ldr	r3, .L26+4
 385 005c 4366     		str	r3, [r0, #100]
 386              	.L20:
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 387              		.loc 1 1276 0
 388 005e 0022     		mov	r2, #0
 389 0060 7023     		mov	r3, #112
 390 0062 C254     		strb	r2, [r0, r3]
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 391              		.loc 1 1279 0
 392 0064 0268     		ldr	r2, [r0]
 393 0066 1168     		ldr	r1, [r2]
 394 0068 1033     		add	r3, r3, #16
 395 006a 0B43     		orr	r3, r1
 396 006c 1360     		str	r3, [r2]
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 397              		.loc 1 1281 0
 398 006e 0020     		mov	r0, #0
 399              	.LVL17:
 400 0070 08E0     		b	.L17
 401              	.LVL18:
 402              	.L21:
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 403              		.loc 1 1285 0
 404 0072 0220     		mov	r0, #2
 405              	.LVL19:
 406 0074 06E0     		b	.L17
 407              	.LVL20:
 408              	.L22:
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 409              		.loc 1 1240 0
 410 0076 0120     		mov	r0, #1
 411              	.LVL21:
 412 0078 04E0     		b	.L17
 413              	.LVL22:
 414              	.L23:
 415 007a 0120     		mov	r0, #1
 416              	.LVL23:
 417 007c 02E0     		b	.L17
 418              	.LVL24:
 419              	.L24:
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 420              		.loc 1 1250 0
 421 007e 0120     		mov	r0, #1
 422              	.LVL25:
ARM GAS  /tmp/ccJfp1dB.s 			page 71


 423 0080 00E0     		b	.L17
 424              	.LVL26:
 425              	.L25:
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 426              		.loc 1 1255 0
 427 0082 0220     		mov	r0, #2
 428              	.LVL27:
 429              	.L17:
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 430              		.loc 1 1287 0
 431              		@ sp needed
 432 0084 30BD     		pop	{r4, r5, pc}
 433              	.L27:
 434 0086 C046     		.align	2
 435              	.L26:
 436 0088 00000000 		.word	UART_TxISR_16BIT
 437 008c 00000000 		.word	UART_TxISR_8BIT
 438              		.cfi_endproc
 439              	.LFE43:
 441              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 442              		.align	2
 443              		.global	HAL_UART_Receive_IT
 444              		.code	16
 445              		.thumb_func
 447              	HAL_UART_Receive_IT:
 448              	.LFB44:
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 449              		.loc 1 1301 0
 450              		.cfi_startproc
 451              	.LVL28:
 452 0000 30B5     		push	{r4, r5, lr}
 453              	.LCFI2:
 454              		.cfi_def_cfa_offset 12
 455              		.cfi_offset 4, -12
 456              		.cfi_offset 5, -8
 457              		.cfi_offset 14, -4
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 458              		.loc 1 1303 0
 459 0002 836F     		ldr	r3, [r0, #120]
 460 0004 202B     		cmp	r3, #32
 461 0006 6AD1     		bne	.L40
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 462              		.loc 1 1305 0
 463 0008 0029     		cmp	r1, #0
 464 000a 6AD0     		beq	.L41
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 465              		.loc 1 1305 0 is_stmt 0 discriminator 1
 466 000c 002A     		cmp	r2, #0
 467 000e 6AD0     		beq	.L42
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 468              		.loc 1 1313 0 is_stmt 1
 469 0010 8368     		ldr	r3, [r0, #8]
 470 0012 8024     		mov	r4, #128
 471 0014 6401     		lsl	r4, r4, #5
 472 0016 A342     		cmp	r3, r4
 473 0018 04D1     		bne	.L30
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 72


 474              		.loc 1 1313 0 is_stmt 0 discriminator 1
 475 001a 0469     		ldr	r4, [r0, #16]
 476 001c 002C     		cmp	r4, #0
 477 001e 01D1     		bne	.L30
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 478              		.loc 1 1315 0 is_stmt 1
 479 0020 CC07     		lsl	r4, r1, #31
 480 0022 62D4     		bmi	.L43
 481              	.L30:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 482              		.loc 1 1322 0
 483 0024 7024     		mov	r4, #112
 484 0026 045D     		ldrb	r4, [r0, r4]
 485 0028 012C     		cmp	r4, #1
 486 002a 60D0     		beq	.L44
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 487              		.loc 1 1322 0 is_stmt 0 discriminator 2
 488 002c 0125     		mov	r5, #1
 489 002e 7024     		mov	r4, #112
 490 0030 0555     		strb	r5, [r0, r4]
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 491              		.loc 1 1324 0 is_stmt 1 discriminator 2
 492 0032 4165     		str	r1, [r0, #84]
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 493              		.loc 1 1325 0 discriminator 2
 494 0034 5821     		mov	r1, #88
 495              	.LVL29:
 496 0036 4252     		strh	r2, [r0, r1]
 497              	.LVL30:
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR       = NULL;
 498              		.loc 1 1326 0 discriminator 2
 499 0038 0231     		add	r1, r1, #2
 500 003a 4252     		strh	r2, [r0, r1]
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 501              		.loc 1 1327 0 discriminator 2
 502 003c 0022     		mov	r2, #0
 503              	.LVL31:
 504 003e 0266     		str	r2, [r0, #96]
 505              	.LVL32:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 506              		.loc 1 1330 0 discriminator 2
 507 0040 8022     		mov	r2, #128
 508 0042 5201     		lsl	r2, r2, #5
 509 0044 9342     		cmp	r3, r2
 510 0046 0AD1     		bne	.L31
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 511              		.loc 1 1330 0 is_stmt 0 discriminator 1
 512 0048 0369     		ldr	r3, [r0, #16]
 513 004a 002B     		cmp	r3, #0
 514 004c 03D1     		bne	.L32
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 515              		.loc 1 1330 0 discriminator 3
 516 004e 294A     		ldr	r2, .L45
 517 0050 5C33     		add	r3, r3, #92
 518 0052 C252     		strh	r2, [r0, r3]
 519 0054 22E0     		b	.L33
 520              	.L32:
ARM GAS  /tmp/ccJfp1dB.s 			page 73


1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 521              		.loc 1 1330 0 discriminator 4
 522 0056 FF22     		mov	r2, #255
 523 0058 5C23     		mov	r3, #92
 524 005a C252     		strh	r2, [r0, r3]
 525 005c 1EE0     		b	.L33
 526              	.L31:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 527              		.loc 1 1330 0 discriminator 2
 528 005e 002B     		cmp	r3, #0
 529 0060 0AD1     		bne	.L34
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 530              		.loc 1 1330 0 discriminator 5
 531 0062 0369     		ldr	r3, [r0, #16]
 532 0064 002B     		cmp	r3, #0
 533 0066 03D1     		bne	.L35
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 534              		.loc 1 1330 0 discriminator 7
 535 0068 FF22     		mov	r2, #255
 536 006a 5C33     		add	r3, r3, #92
 537 006c C252     		strh	r2, [r0, r3]
 538 006e 15E0     		b	.L33
 539              	.L35:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 540              		.loc 1 1330 0 discriminator 8
 541 0070 7F22     		mov	r2, #127
 542 0072 5C23     		mov	r3, #92
 543 0074 C252     		strh	r2, [r0, r3]
 544 0076 11E0     		b	.L33
 545              	.L34:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 546              		.loc 1 1330 0 discriminator 6
 547 0078 8022     		mov	r2, #128
 548 007a 5205     		lsl	r2, r2, #21
 549 007c 9342     		cmp	r3, r2
 550 007e 0AD1     		bne	.L36
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 551              		.loc 1 1330 0 discriminator 9
 552 0080 0369     		ldr	r3, [r0, #16]
 553 0082 002B     		cmp	r3, #0
 554 0084 03D1     		bne	.L37
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 555              		.loc 1 1330 0 discriminator 11
 556 0086 7F22     		mov	r2, #127
 557 0088 5C33     		add	r3, r3, #92
 558 008a C252     		strh	r2, [r0, r3]
 559 008c 06E0     		b	.L33
 560              	.L37:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 561              		.loc 1 1330 0 discriminator 12
 562 008e 3F22     		mov	r2, #63
 563 0090 5C23     		mov	r3, #92
 564 0092 C252     		strh	r2, [r0, r3]
 565 0094 02E0     		b	.L33
 566              	.L36:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 567              		.loc 1 1330 0 discriminator 10
ARM GAS  /tmp/ccJfp1dB.s 			page 74


 568 0096 0022     		mov	r2, #0
 569 0098 5C23     		mov	r3, #92
 570 009a C252     		strh	r2, [r0, r3]
 571              	.L33:
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 572              		.loc 1 1332 0 is_stmt 1
 573 009c 0023     		mov	r3, #0
 574 009e C367     		str	r3, [r0, #124]
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 575              		.loc 1 1333 0
 576 00a0 2233     		add	r3, r3, #34
 577 00a2 8367     		str	r3, [r0, #120]
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 578              		.loc 1 1336 0
 579 00a4 0268     		ldr	r2, [r0]
 580 00a6 9168     		ldr	r1, [r2, #8]
 581 00a8 213B     		sub	r3, r3, #33
 582 00aa 0B43     		orr	r3, r1
 583 00ac 9360     		str	r3, [r2, #8]
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 584              		.loc 1 1339 0
 585 00ae 8023     		mov	r3, #128
 586 00b0 5B01     		lsl	r3, r3, #5
 587 00b2 8268     		ldr	r2, [r0, #8]
 588 00b4 9A42     		cmp	r2, r3
 589 00b6 05D1     		bne	.L38
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 590              		.loc 1 1339 0 is_stmt 0 discriminator 1
 591 00b8 0369     		ldr	r3, [r0, #16]
 592 00ba 002B     		cmp	r3, #0
 593 00bc 02D1     		bne	.L38
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 594              		.loc 1 1341 0 is_stmt 1
 595 00be 0E4B     		ldr	r3, .L45+4
 596 00c0 0366     		str	r3, [r0, #96]
 597 00c2 01E0     		b	.L39
 598              	.L38:
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 599              		.loc 1 1345 0
 600 00c4 0D4B     		ldr	r3, .L45+8
 601 00c6 0366     		str	r3, [r0, #96]
 602              	.L39:
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 603              		.loc 1 1349 0
 604 00c8 0022     		mov	r2, #0
 605 00ca 7023     		mov	r3, #112
 606 00cc C254     		strb	r2, [r0, r3]
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 607              		.loc 1 1352 0
 608 00ce 0268     		ldr	r2, [r0]
 609 00d0 1368     		ldr	r3, [r2]
 610 00d2 9021     		mov	r1, #144
 611 00d4 4900     		lsl	r1, r1, #1
 612 00d6 0B43     		orr	r3, r1
 613 00d8 1360     		str	r3, [r2]
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 614              		.loc 1 1354 0
ARM GAS  /tmp/ccJfp1dB.s 			page 75


 615 00da 0020     		mov	r0, #0
 616              	.LVL33:
 617 00dc 08E0     		b	.L29
 618              	.LVL34:
 619              	.L40:
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 620              		.loc 1 1358 0
 621 00de 0220     		mov	r0, #2
 622              	.LVL35:
 623 00e0 06E0     		b	.L29
 624              	.LVL36:
 625              	.L41:
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 626              		.loc 1 1307 0
 627 00e2 0120     		mov	r0, #1
 628              	.LVL37:
 629 00e4 04E0     		b	.L29
 630              	.LVL38:
 631              	.L42:
 632 00e6 0120     		mov	r0, #1
 633              	.LVL39:
 634 00e8 02E0     		b	.L29
 635              	.LVL40:
 636              	.L43:
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 637              		.loc 1 1317 0
 638 00ea 0120     		mov	r0, #1
 639              	.LVL41:
 640 00ec 00E0     		b	.L29
 641              	.LVL42:
 642              	.L44:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 643              		.loc 1 1322 0
 644 00ee 0220     		mov	r0, #2
 645              	.LVL43:
 646              	.L29:
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 647              		.loc 1 1360 0
 648              		@ sp needed
 649 00f0 30BD     		pop	{r4, r5, pc}
 650              	.L46:
 651 00f2 C046     		.align	2
 652              	.L45:
 653 00f4 FF010000 		.word	511
 654 00f8 00000000 		.word	UART_RxISR_16BIT
 655 00fc 00000000 		.word	UART_RxISR_8BIT
 656              		.cfi_endproc
 657              	.LFE44:
 659              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 660              		.align	2
 661              		.global	HAL_UART_Transmit_DMA
 662              		.code	16
 663              		.thumb_func
 665              	HAL_UART_Transmit_DMA:
 666              	.LFB45:
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 667              		.loc 1 1374 0
ARM GAS  /tmp/ccJfp1dB.s 			page 76


 668              		.cfi_startproc
 669              	.LVL44:
 670 0000 10B5     		push	{r4, lr}
 671              	.LCFI3:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 4, -8
 674              		.cfi_offset 14, -4
 675 0002 041C     		mov	r4, r0
 676 0004 131C     		mov	r3, r2
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 677              		.loc 1 1376 0
 678 0006 426F     		ldr	r2, [r0, #116]
 679              	.LVL45:
 680 0008 202A     		cmp	r2, #32
 681 000a 49D1     		bne	.L51
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 682              		.loc 1 1378 0
 683 000c 0029     		cmp	r1, #0
 684 000e 49D0     		beq	.L52
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 685              		.loc 1 1378 0 is_stmt 0 discriminator 1
 686 0010 002B     		cmp	r3, #0
 687 0012 49D0     		beq	.L53
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 688              		.loc 1 1386 0 is_stmt 1
 689 0014 8022     		mov	r2, #128
 690 0016 5201     		lsl	r2, r2, #5
 691 0018 8068     		ldr	r0, [r0, #8]
 692              	.LVL46:
 693 001a 9042     		cmp	r0, r2
 694 001c 04D1     		bne	.L49
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 695              		.loc 1 1386 0 is_stmt 0 discriminator 1
 696 001e 2269     		ldr	r2, [r4, #16]
 697 0020 002A     		cmp	r2, #0
 698 0022 01D1     		bne	.L49
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 699              		.loc 1 1388 0 is_stmt 1
 700 0024 CA07     		lsl	r2, r1, #31
 701 0026 41D4     		bmi	.L54
 702              	.L49:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 703              		.loc 1 1395 0
 704 0028 7022     		mov	r2, #112
 705 002a A25C     		ldrb	r2, [r4, r2]
 706 002c 012A     		cmp	r2, #1
 707 002e 3FD0     		beq	.L55
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 708              		.loc 1 1395 0 is_stmt 0 discriminator 2
 709 0030 0120     		mov	r0, #1
 710 0032 7022     		mov	r2, #112
 711 0034 A054     		strb	r0, [r4, r2]
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 712              		.loc 1 1397 0 is_stmt 1 discriminator 2
 713 0036 E164     		str	r1, [r4, #76]
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 714              		.loc 1 1398 0 discriminator 2
ARM GAS  /tmp/ccJfp1dB.s 			page 77


 715 0038 203A     		sub	r2, r2, #32
 716 003a A352     		strh	r3, [r4, r2]
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 717              		.loc 1 1399 0 discriminator 2
 718 003c 0232     		add	r2, r2, #2
 719 003e A352     		strh	r3, [r4, r2]
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720              		.loc 1 1401 0 discriminator 2
 721 0040 0022     		mov	r2, #0
 722 0042 E267     		str	r2, [r4, #124]
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 723              		.loc 1 1402 0 discriminator 2
 724 0044 2132     		add	r2, r2, #33
 725 0046 6267     		str	r2, [r4, #116]
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 726              		.loc 1 1404 0 discriminator 2
 727 0048 A26E     		ldr	r2, [r4, #104]
 728 004a 002A     		cmp	r2, #0
 729 004c 1BD0     		beq	.L50
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 730              		.loc 1 1407 0
 731 004e 1949     		ldr	r1, .L56
 732              	.LVL47:
 733 0050 D162     		str	r1, [r2, #44]
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 734              		.loc 1 1410 0
 735 0052 A26E     		ldr	r2, [r4, #104]
 736 0054 1849     		ldr	r1, .L56+4
 737 0056 1163     		str	r1, [r2, #48]
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 738              		.loc 1 1413 0
 739 0058 A26E     		ldr	r2, [r4, #104]
 740 005a 1849     		ldr	r1, .L56+8
 741 005c 5163     		str	r1, [r2, #52]
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 742              		.loc 1 1416 0
 743 005e A26E     		ldr	r2, [r4, #104]
 744 0060 0021     		mov	r1, #0
 745 0062 9163     		str	r1, [r2, #56]
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 746              		.loc 1 1419 0
 747 0064 2268     		ldr	r2, [r4]
 748 0066 2832     		add	r2, r2, #40
 749 0068 A06E     		ldr	r0, [r4, #104]
 750 006a E16C     		ldr	r1, [r4, #76]
 751 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 752              	.LVL48:
 753 0070 0028     		cmp	r0, #0
 754 0072 08D0     		beq	.L50
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 755              		.loc 1 1422 0
 756 0074 1023     		mov	r3, #16
 757 0076 E367     		str	r3, [r4, #124]
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 758              		.loc 1 1425 0
 759 0078 0022     		mov	r2, #0
 760 007a 6033     		add	r3, r3, #96
ARM GAS  /tmp/ccJfp1dB.s 			page 78


 761 007c E254     		strb	r2, [r4, r3]
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 762              		.loc 1 1428 0
 763 007e 503B     		sub	r3, r3, #80
 764 0080 6367     		str	r3, [r4, #116]
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 765              		.loc 1 1430 0
 766 0082 0120     		mov	r0, #1
 767 0084 15E0     		b	.L48
 768              	.L50:
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 769              		.loc 1 1434 0
 770 0086 2368     		ldr	r3, [r4]
 771 0088 4022     		mov	r2, #64
 772 008a 1A62     		str	r2, [r3, #32]
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 773              		.loc 1 1437 0
 774 008c 0022     		mov	r2, #0
 775 008e 7023     		mov	r3, #112
 776 0090 E254     		strb	r2, [r4, r3]
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 777              		.loc 1 1441 0
 778 0092 2268     		ldr	r2, [r4]
 779 0094 9168     		ldr	r1, [r2, #8]
 780 0096 1033     		add	r3, r3, #16
 781 0098 0B43     		orr	r3, r1
 782 009a 9360     		str	r3, [r2, #8]
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 783              		.loc 1 1443 0
 784 009c 0020     		mov	r0, #0
 785 009e 08E0     		b	.L48
 786              	.LVL49:
 787              	.L51:
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 788              		.loc 1 1447 0
 789 00a0 0220     		mov	r0, #2
 790              	.LVL50:
 791 00a2 06E0     		b	.L48
 792              	.LVL51:
 793              	.L52:
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 794              		.loc 1 1380 0
 795 00a4 0120     		mov	r0, #1
 796              	.LVL52:
 797 00a6 04E0     		b	.L48
 798              	.LVL53:
 799              	.L53:
 800 00a8 0120     		mov	r0, #1
 801              	.LVL54:
 802 00aa 02E0     		b	.L48
 803              	.L54:
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 804              		.loc 1 1390 0
 805 00ac 0120     		mov	r0, #1
 806 00ae 00E0     		b	.L48
 807              	.L55:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 79


 808              		.loc 1 1395 0
 809 00b0 0220     		mov	r0, #2
 810              	.LVL55:
 811              	.L48:
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 812              		.loc 1 1449 0
 813              		@ sp needed
 814              	.LVL56:
 815 00b2 10BD     		pop	{r4, pc}
 816              	.L57:
 817              		.align	2
 818              	.L56:
 819 00b4 00000000 		.word	UART_DMATransmitCplt
 820 00b8 00000000 		.word	UART_DMATxHalfCplt
 821 00bc 00000000 		.word	UART_DMAError
 822              		.cfi_endproc
 823              	.LFE45:
 825              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 826              		.align	2
 827              		.global	HAL_UART_Receive_DMA
 828              		.code	16
 829              		.thumb_func
 831              	HAL_UART_Receive_DMA:
 832              	.LFB46:
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 833              		.loc 1 1465 0
 834              		.cfi_startproc
 835              	.LVL57:
 836 0000 10B5     		push	{r4, lr}
 837              	.LCFI4:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 841 0002 041C     		mov	r4, r0
 842 0004 131C     		mov	r3, r2
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 843              		.loc 1 1467 0
 844 0006 826F     		ldr	r2, [r0, #120]
 845              	.LVL58:
 846 0008 202A     		cmp	r2, #32
 847 000a 4FD1     		bne	.L62
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 848              		.loc 1 1469 0
 849 000c 0029     		cmp	r1, #0
 850 000e 4FD0     		beq	.L63
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 851              		.loc 1 1469 0 is_stmt 0 discriminator 1
 852 0010 002B     		cmp	r3, #0
 853 0012 4FD0     		beq	.L64
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 854              		.loc 1 1477 0 is_stmt 1
 855 0014 8022     		mov	r2, #128
 856 0016 5201     		lsl	r2, r2, #5
 857 0018 8068     		ldr	r0, [r0, #8]
 858              	.LVL59:
 859 001a 9042     		cmp	r0, r2
 860 001c 04D1     		bne	.L60
ARM GAS  /tmp/ccJfp1dB.s 			page 80


1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 861              		.loc 1 1477 0 is_stmt 0 discriminator 1
 862 001e 2269     		ldr	r2, [r4, #16]
 863 0020 002A     		cmp	r2, #0
 864 0022 01D1     		bne	.L60
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 865              		.loc 1 1479 0 is_stmt 1
 866 0024 CA07     		lsl	r2, r1, #31
 867 0026 47D4     		bmi	.L65
 868              	.L60:
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 869              		.loc 1 1486 0
 870 0028 7022     		mov	r2, #112
 871 002a A25C     		ldrb	r2, [r4, r2]
 872 002c 012A     		cmp	r2, #1
 873 002e 45D0     		beq	.L66
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 874              		.loc 1 1486 0 is_stmt 0 discriminator 2
 875 0030 0120     		mov	r0, #1
 876 0032 7022     		mov	r2, #112
 877 0034 A054     		strb	r0, [r4, r2]
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 878              		.loc 1 1488 0 is_stmt 1 discriminator 2
 879 0036 6165     		str	r1, [r4, #84]
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 880              		.loc 1 1489 0 discriminator 2
 881 0038 183A     		sub	r2, r2, #24
 882 003a A352     		strh	r3, [r4, r2]
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 883              		.loc 1 1491 0 discriminator 2
 884 003c 0022     		mov	r2, #0
 885 003e E267     		str	r2, [r4, #124]
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 886              		.loc 1 1492 0 discriminator 2
 887 0040 2232     		add	r2, r2, #34
 888 0042 A267     		str	r2, [r4, #120]
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 889              		.loc 1 1494 0 discriminator 2
 890 0044 E26E     		ldr	r2, [r4, #108]
 891 0046 002A     		cmp	r2, #0
 892 0048 1BD0     		beq	.L61
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 893              		.loc 1 1497 0
 894 004a 1D49     		ldr	r1, .L67
 895              	.LVL60:
 896 004c D162     		str	r1, [r2, #44]
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 897              		.loc 1 1500 0
 898 004e E26E     		ldr	r2, [r4, #108]
 899 0050 1C49     		ldr	r1, .L67+4
 900 0052 1163     		str	r1, [r2, #48]
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 901              		.loc 1 1503 0
 902 0054 E26E     		ldr	r2, [r4, #108]
 903 0056 1C49     		ldr	r1, .L67+8
 904 0058 5163     		str	r1, [r2, #52]
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 81


 905              		.loc 1 1506 0
 906 005a E26E     		ldr	r2, [r4, #108]
 907 005c 0021     		mov	r1, #0
 908 005e 9163     		str	r1, [r2, #56]
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 909              		.loc 1 1509 0
 910 0060 2168     		ldr	r1, [r4]
 911 0062 2431     		add	r1, r1, #36
 912 0064 E06E     		ldr	r0, [r4, #108]
 913 0066 626D     		ldr	r2, [r4, #84]
 914 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
 915              	.LVL61:
 916 006c 0028     		cmp	r0, #0
 917 006e 08D0     		beq	.L61
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 918              		.loc 1 1512 0
 919 0070 1023     		mov	r3, #16
 920 0072 E367     		str	r3, [r4, #124]
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 921              		.loc 1 1515 0
 922 0074 0022     		mov	r2, #0
 923 0076 6033     		add	r3, r3, #96
 924 0078 E254     		strb	r2, [r4, r3]
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 925              		.loc 1 1518 0
 926 007a 503B     		sub	r3, r3, #80
 927 007c 6367     		str	r3, [r4, #116]
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 928              		.loc 1 1520 0
 929 007e 0120     		mov	r0, #1
 930 0080 1DE0     		b	.L59
 931              	.L61:
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 932              		.loc 1 1524 0
 933 0082 0022     		mov	r2, #0
 934 0084 7023     		mov	r3, #112
 935 0086 E254     		strb	r2, [r4, r3]
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 936              		.loc 1 1527 0
 937 0088 2268     		ldr	r2, [r4]
 938 008a 1368     		ldr	r3, [r2]
 939 008c 8021     		mov	r1, #128
 940 008e 4900     		lsl	r1, r1, #1
 941 0090 0B43     		orr	r3, r1
 942 0092 1360     		str	r3, [r2]
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 943              		.loc 1 1530 0
 944 0094 2268     		ldr	r2, [r4]
 945 0096 9168     		ldr	r1, [r2, #8]
 946 0098 0123     		mov	r3, #1
 947 009a 0B43     		orr	r3, r1
 948 009c 9360     		str	r3, [r2, #8]
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 949              		.loc 1 1534 0
 950 009e 2268     		ldr	r2, [r4]
 951 00a0 9168     		ldr	r1, [r2, #8]
 952 00a2 4023     		mov	r3, #64
ARM GAS  /tmp/ccJfp1dB.s 			page 82


 953 00a4 0B43     		orr	r3, r1
 954 00a6 9360     		str	r3, [r2, #8]
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 955              		.loc 1 1536 0
 956 00a8 0020     		mov	r0, #0
 957 00aa 08E0     		b	.L59
 958              	.LVL62:
 959              	.L62:
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 960              		.loc 1 1540 0
 961 00ac 0220     		mov	r0, #2
 962              	.LVL63:
 963 00ae 06E0     		b	.L59
 964              	.LVL64:
 965              	.L63:
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 966              		.loc 1 1471 0
 967 00b0 0120     		mov	r0, #1
 968              	.LVL65:
 969 00b2 04E0     		b	.L59
 970              	.LVL66:
 971              	.L64:
 972 00b4 0120     		mov	r0, #1
 973              	.LVL67:
 974 00b6 02E0     		b	.L59
 975              	.L65:
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 976              		.loc 1 1481 0
 977 00b8 0120     		mov	r0, #1
 978 00ba 00E0     		b	.L59
 979              	.L66:
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 980              		.loc 1 1486 0
 981 00bc 0220     		mov	r0, #2
 982              	.LVL68:
 983              	.L59:
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 984              		.loc 1 1542 0
 985              		@ sp needed
 986              	.LVL69:
 987 00be 10BD     		pop	{r4, pc}
 988              	.L68:
 989              		.align	2
 990              	.L67:
 991 00c0 00000000 		.word	UART_DMAReceiveCplt
 992 00c4 00000000 		.word	UART_DMARxHalfCplt
 993 00c8 00000000 		.word	UART_DMAError
 994              		.cfi_endproc
 995              	.LFE46:
 997              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 998              		.align	2
 999              		.global	HAL_UART_DMAPause
 1000              		.code	16
 1001              		.thumb_func
 1003              	HAL_UART_DMAPause:
 1004              	.LFB47:
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
ARM GAS  /tmp/ccJfp1dB.s 			page 83


 1005              		.loc 1 1550 0
 1006              		.cfi_startproc
 1007              	.LVL70:
 1008 0000 10B5     		push	{r4, lr}
 1009              	.LCFI5:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 4, -8
 1012              		.cfi_offset 14, -4
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1013              		.loc 1 1551 0
 1014 0002 416F     		ldr	r1, [r0, #116]
 1015              	.LVL71:
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1016              		.loc 1 1552 0
 1017 0004 826F     		ldr	r2, [r0, #120]
 1018              	.LVL72:
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1019              		.loc 1 1555 0
 1020 0006 7023     		mov	r3, #112
 1021 0008 C35C     		ldrb	r3, [r0, r3]
 1022 000a 012B     		cmp	r3, #1
 1023 000c 25D0     		beq	.L73
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1024              		.loc 1 1555 0 is_stmt 0 discriminator 2
 1025 000e 0124     		mov	r4, #1
 1026 0010 7023     		mov	r3, #112
 1027 0012 C454     		strb	r4, [r0, r3]
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1028              		.loc 1 1557 0 is_stmt 1 discriminator 2
 1029 0014 0368     		ldr	r3, [r0]
 1030 0016 9C68     		ldr	r4, [r3, #8]
 1031 0018 2406     		lsl	r4, r4, #24
 1032 001a 05D5     		bpl	.L71
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1033              		.loc 1 1557 0 is_stmt 0 discriminator 1
 1034 001c 2129     		cmp	r1, #33
 1035 001e 03D1     		bne	.L71
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1036              		.loc 1 1561 0 is_stmt 1
 1037 0020 9968     		ldr	r1, [r3, #8]
 1038              	.LVL73:
 1039 0022 8024     		mov	r4, #128
 1040 0024 A143     		bic	r1, r4
 1041 0026 9960     		str	r1, [r3, #8]
 1042              	.L71:
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1043              		.loc 1 1563 0
 1044 0028 0368     		ldr	r3, [r0]
 1045 002a 9968     		ldr	r1, [r3, #8]
 1046 002c 4906     		lsl	r1, r1, #25
 1047 002e 0FD5     		bpl	.L72
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1048              		.loc 1 1563 0 is_stmt 0 discriminator 1
 1049 0030 222A     		cmp	r2, #34
 1050 0032 0DD1     		bne	.L72
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1051              		.loc 1 1567 0 is_stmt 1
ARM GAS  /tmp/ccJfp1dB.s 			page 84


 1052 0034 1968     		ldr	r1, [r3]
 1053 0036 0A4A     		ldr	r2, .L74
 1054              	.LVL74:
 1055 0038 0A40     		and	r2, r1
 1056 003a 1A60     		str	r2, [r3]
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1057              		.loc 1 1568 0
 1058 003c 0268     		ldr	r2, [r0]
 1059 003e 9368     		ldr	r3, [r2, #8]
 1060 0040 0121     		mov	r1, #1
 1061 0042 8B43     		bic	r3, r1
 1062 0044 9360     		str	r3, [r2, #8]
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1063              		.loc 1 1571 0
 1064 0046 0268     		ldr	r2, [r0]
 1065 0048 9368     		ldr	r3, [r2, #8]
 1066 004a 3F31     		add	r1, r1, #63
 1067 004c 8B43     		bic	r3, r1
 1068 004e 9360     		str	r3, [r2, #8]
 1069              	.L72:
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1070              		.loc 1 1575 0
 1071 0050 0022     		mov	r2, #0
 1072 0052 7023     		mov	r3, #112
 1073 0054 C254     		strb	r2, [r0, r3]
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1074              		.loc 1 1577 0
 1075 0056 0020     		mov	r0, #0
 1076              	.LVL75:
 1077 0058 00E0     		b	.L70
 1078              	.LVL76:
 1079              	.L73:
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1080              		.loc 1 1555 0
 1081 005a 0220     		mov	r0, #2
 1082              	.LVL77:
 1083              	.L70:
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1084              		.loc 1 1578 0
 1085              		@ sp needed
 1086 005c 10BD     		pop	{r4, pc}
 1087              	.L75:
 1088 005e C046     		.align	2
 1089              	.L74:
 1090 0060 FFFEFFFF 		.word	-257
 1091              		.cfi_endproc
 1092              	.LFE47:
 1094              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1095              		.align	2
 1096              		.global	HAL_UART_DMAResume
 1097              		.code	16
 1098              		.thumb_func
 1100              	HAL_UART_DMAResume:
 1101              	.LFB48:
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 1102              		.loc 1 1586 0
 1103              		.cfi_startproc
ARM GAS  /tmp/ccJfp1dB.s 			page 85


 1104              	.LVL78:
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1105              		.loc 1 1588 0
 1106 0000 7023     		mov	r3, #112
 1107 0002 C35C     		ldrb	r3, [r0, r3]
 1108 0004 012B     		cmp	r3, #1
 1109 0006 25D0     		beq	.L80
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1110              		.loc 1 1588 0 is_stmt 0 discriminator 2
 1111 0008 0122     		mov	r2, #1
 1112 000a 7023     		mov	r3, #112
 1113 000c C254     		strb	r2, [r0, r3]
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1114              		.loc 1 1590 0 is_stmt 1 discriminator 2
 1115 000e 436F     		ldr	r3, [r0, #116]
 1116 0010 212B     		cmp	r3, #33
 1117 0012 04D1     		bne	.L78
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1118              		.loc 1 1593 0
 1119 0014 0268     		ldr	r2, [r0]
 1120 0016 9168     		ldr	r1, [r2, #8]
 1121 0018 5F33     		add	r3, r3, #95
 1122 001a 0B43     		orr	r3, r1
 1123 001c 9360     		str	r3, [r2, #8]
 1124              	.L78:
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1125              		.loc 1 1595 0
 1126 001e 836F     		ldr	r3, [r0, #120]
 1127 0020 222B     		cmp	r3, #34
 1128 0022 12D1     		bne	.L79
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1129              		.loc 1 1598 0
 1130 0024 0368     		ldr	r3, [r0]
 1131 0026 0822     		mov	r2, #8
 1132 0028 1A62     		str	r2, [r3, #32]
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1133              		.loc 1 1601 0
 1134 002a 0268     		ldr	r2, [r0]
 1135 002c 1368     		ldr	r3, [r2]
 1136 002e 8021     		mov	r1, #128
 1137 0030 4900     		lsl	r1, r1, #1
 1138 0032 0B43     		orr	r3, r1
 1139 0034 1360     		str	r3, [r2]
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1140              		.loc 1 1602 0
 1141 0036 0268     		ldr	r2, [r0]
 1142 0038 9168     		ldr	r1, [r2, #8]
 1143 003a 0123     		mov	r3, #1
 1144 003c 0B43     		orr	r3, r1
 1145 003e 9360     		str	r3, [r2, #8]
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1146              		.loc 1 1605 0
 1147 0040 0268     		ldr	r2, [r0]
 1148 0042 9168     		ldr	r1, [r2, #8]
 1149 0044 4023     		mov	r3, #64
 1150 0046 0B43     		orr	r3, r1
 1151 0048 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccJfp1dB.s 			page 86


 1152              	.L79:
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1153              		.loc 1 1609 0
 1154 004a 0022     		mov	r2, #0
 1155 004c 7023     		mov	r3, #112
 1156 004e C254     		strb	r2, [r0, r3]
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1157              		.loc 1 1611 0
 1158 0050 0020     		mov	r0, #0
 1159              	.LVL79:
 1160 0052 00E0     		b	.L77
 1161              	.LVL80:
 1162              	.L80:
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1163              		.loc 1 1588 0
 1164 0054 0220     		mov	r0, #2
 1165              	.LVL81:
 1166              	.L77:
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1167              		.loc 1 1612 0
 1168              		@ sp needed
 1169 0056 7047     		bx	lr
 1170              		.cfi_endproc
 1171              	.LFE48:
 1173              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1174              		.align	2
 1175              		.global	HAL_UART_DMAStop
 1176              		.code	16
 1177              		.thumb_func
 1179              	HAL_UART_DMAStop:
 1180              	.LFB49:
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1181              		.loc 1 1620 0
 1182              		.cfi_startproc
 1183              	.LVL82:
 1184 0000 38B5     		push	{r3, r4, r5, lr}
 1185              	.LCFI6:
 1186              		.cfi_def_cfa_offset 16
 1187              		.cfi_offset 3, -16
 1188              		.cfi_offset 4, -12
 1189              		.cfi_offset 5, -8
 1190              		.cfi_offset 14, -4
 1191 0002 041C     		mov	r4, r0
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1192              		.loc 1 1628 0
 1193 0004 416F     		ldr	r1, [r0, #116]
 1194              	.LVL83:
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1195              		.loc 1 1629 0
 1196 0006 856F     		ldr	r5, [r0, #120]
 1197              	.LVL84:
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1198              		.loc 1 1632 0
 1199 0008 0368     		ldr	r3, [r0]
 1200 000a 9A68     		ldr	r2, [r3, #8]
 1201 000c 1206     		lsl	r2, r2, #24
 1202 000e 18D5     		bpl	.L82
ARM GAS  /tmp/ccJfp1dB.s 			page 87


1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1203              		.loc 1 1632 0 is_stmt 0 discriminator 1
 1204 0010 2129     		cmp	r1, #33
 1205 0012 16D1     		bne	.L82
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1206              		.loc 1 1635 0 is_stmt 1
 1207 0014 9A68     		ldr	r2, [r3, #8]
 1208 0016 5F31     		add	r1, r1, #95
 1209              	.LVL85:
 1210 0018 8A43     		bic	r2, r1
 1211 001a 9A60     		str	r2, [r3, #8]
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1212              		.loc 1 1638 0
 1213 001c 806E     		ldr	r0, [r0, #104]
 1214              	.LVL86:
 1215 001e 0028     		cmp	r0, #0
 1216 0020 0CD0     		beq	.L83
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1217              		.loc 1 1640 0
 1218 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 1219              	.LVL87:
 1220 0026 0028     		cmp	r0, #0
 1221 0028 08D0     		beq	.L83
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1222              		.loc 1 1642 0
 1223 002a A06E     		ldr	r0, [r4, #104]
 1224 002c FFF7FEFF 		bl	HAL_DMA_GetError
 1225              	.LVL88:
 1226 0030 2028     		cmp	r0, #32
 1227 0032 03D1     		bne	.L83
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1228              		.loc 1 1645 0
 1229 0034 1023     		mov	r3, #16
 1230 0036 E367     		str	r3, [r4, #124]
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1231              		.loc 1 1647 0
 1232 0038 1D38     		sub	r0, r0, #29
 1233 003a 24E0     		b	.L84
 1234              	.L83:
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1235              		.loc 1 1652 0
 1236 003c 201C     		mov	r0, r4
 1237 003e FFF7FEFF 		bl	UART_EndTxTransfer
 1238              	.LVL89:
 1239              	.L82:
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1240              		.loc 1 1656 0
 1241 0042 2368     		ldr	r3, [r4]
 1242 0044 9A68     		ldr	r2, [r3, #8]
 1243 0046 5206     		lsl	r2, r2, #25
 1244 0048 1AD5     		bpl	.L86
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1245              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1246 004a 222D     		cmp	r5, #34
 1247 004c 1AD1     		bne	.L87
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1248              		.loc 1 1659 0 is_stmt 1
ARM GAS  /tmp/ccJfp1dB.s 			page 88


 1249 004e 9A68     		ldr	r2, [r3, #8]
 1250 0050 4021     		mov	r1, #64
 1251 0052 8A43     		bic	r2, r1
 1252 0054 9A60     		str	r2, [r3, #8]
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1253              		.loc 1 1662 0
 1254 0056 E06E     		ldr	r0, [r4, #108]
 1255 0058 0028     		cmp	r0, #0
 1256 005a 0CD0     		beq	.L85
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1257              		.loc 1 1664 0
 1258 005c FFF7FEFF 		bl	HAL_DMA_Abort
 1259              	.LVL90:
 1260 0060 0028     		cmp	r0, #0
 1261 0062 08D0     		beq	.L85
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1262              		.loc 1 1666 0
 1263 0064 E06E     		ldr	r0, [r4, #108]
 1264 0066 FFF7FEFF 		bl	HAL_DMA_GetError
 1265              	.LVL91:
 1266 006a 2028     		cmp	r0, #32
 1267 006c 03D1     		bne	.L85
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1268              		.loc 1 1669 0
 1269 006e 1023     		mov	r3, #16
 1270 0070 E367     		str	r3, [r4, #124]
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1271              		.loc 1 1671 0
 1272 0072 1D38     		sub	r0, r0, #29
 1273 0074 07E0     		b	.L84
 1274              	.L85:
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1275              		.loc 1 1676 0
 1276 0076 201C     		mov	r0, r4
 1277 0078 FFF7FEFF 		bl	UART_EndRxTransfer
 1278              	.LVL92:
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1279              		.loc 1 1679 0
 1280 007c 0020     		mov	r0, #0
 1281 007e 02E0     		b	.L84
 1282              	.L86:
 1283 0080 0020     		mov	r0, #0
 1284 0082 00E0     		b	.L84
 1285              	.L87:
 1286 0084 0020     		mov	r0, #0
 1287              	.L84:
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1288              		.loc 1 1680 0
 1289              		@ sp needed
 1290              	.LVL93:
 1291              	.LVL94:
 1292 0086 38BD     		pop	{r3, r4, r5, pc}
 1293              		.cfi_endproc
 1294              	.LFE49:
 1296              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1297              		.align	2
 1298              		.global	HAL_UART_Abort
ARM GAS  /tmp/ccJfp1dB.s 			page 89


 1299              		.code	16
 1300              		.thumb_func
 1302              	HAL_UART_Abort:
 1303              	.LFB50:
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1304              		.loc 1 1695 0
 1305              		.cfi_startproc
 1306              	.LVL95:
 1307 0000 10B5     		push	{r4, lr}
 1308              	.LCFI7:
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 1312 0002 041C     		mov	r4, r0
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1313              		.loc 1 1697 0
 1314 0004 0268     		ldr	r2, [r0]
 1315 0006 1168     		ldr	r1, [r2]
 1316 0008 284B     		ldr	r3, .L92
 1317 000a 0B40     		and	r3, r1
 1318 000c 1360     		str	r3, [r2]
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1319              		.loc 1 1698 0
 1320 000e 0268     		ldr	r2, [r0]
 1321 0010 9368     		ldr	r3, [r2, #8]
 1322 0012 0121     		mov	r1, #1
 1323 0014 8B43     		bic	r3, r1
 1324 0016 9360     		str	r3, [r2, #8]
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1325              		.loc 1 1701 0
 1326 0018 0368     		ldr	r3, [r0]
 1327 001a 9A68     		ldr	r2, [r3, #8]
 1328 001c 1206     		lsl	r2, r2, #24
 1329 001e 16D5     		bpl	.L89
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1330              		.loc 1 1703 0
 1331 0020 9A68     		ldr	r2, [r3, #8]
 1332 0022 7F31     		add	r1, r1, #127
 1333 0024 8A43     		bic	r2, r1
 1334 0026 9A60     		str	r2, [r3, #8]
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1335              		.loc 1 1706 0
 1336 0028 836E     		ldr	r3, [r0, #104]
 1337 002a 002B     		cmp	r3, #0
 1338 002c 0FD0     		beq	.L89
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1339              		.loc 1 1710 0
 1340 002e 0022     		mov	r2, #0
 1341 0030 9A63     		str	r2, [r3, #56]
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1342              		.loc 1 1712 0
 1343 0032 806E     		ldr	r0, [r0, #104]
 1344              	.LVL96:
 1345 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1346              	.LVL97:
 1347 0038 0028     		cmp	r0, #0
 1348 003a 08D0     		beq	.L89
ARM GAS  /tmp/ccJfp1dB.s 			page 90


1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1349              		.loc 1 1714 0
 1350 003c A06E     		ldr	r0, [r4, #104]
 1351 003e FFF7FEFF 		bl	HAL_DMA_GetError
 1352              	.LVL98:
 1353 0042 2028     		cmp	r0, #32
 1354 0044 03D1     		bne	.L89
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1355              		.loc 1 1717 0
 1356 0046 1023     		mov	r3, #16
 1357 0048 E367     		str	r3, [r4, #124]
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1358              		.loc 1 1719 0
 1359 004a 1D38     		sub	r0, r0, #29
 1360 004c 2CE0     		b	.L90
 1361              	.L89:
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1362              		.loc 1 1726 0
 1363 004e 2368     		ldr	r3, [r4]
 1364 0050 9A68     		ldr	r2, [r3, #8]
 1365 0052 5206     		lsl	r2, r2, #25
 1366 0054 16D5     		bpl	.L91
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1367              		.loc 1 1728 0
 1368 0056 9A68     		ldr	r2, [r3, #8]
 1369 0058 4021     		mov	r1, #64
 1370 005a 8A43     		bic	r2, r1
 1371 005c 9A60     		str	r2, [r3, #8]
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1372              		.loc 1 1731 0
 1373 005e E36E     		ldr	r3, [r4, #108]
 1374 0060 002B     		cmp	r3, #0
 1375 0062 0FD0     		beq	.L91
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1376              		.loc 1 1735 0
 1377 0064 0022     		mov	r2, #0
 1378 0066 9A63     		str	r2, [r3, #56]
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1379              		.loc 1 1737 0
 1380 0068 E06E     		ldr	r0, [r4, #108]
 1381 006a FFF7FEFF 		bl	HAL_DMA_Abort
 1382              	.LVL99:
 1383 006e 0028     		cmp	r0, #0
 1384 0070 08D0     		beq	.L91
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1385              		.loc 1 1739 0
 1386 0072 E06E     		ldr	r0, [r4, #108]
 1387 0074 FFF7FEFF 		bl	HAL_DMA_GetError
 1388              	.LVL100:
 1389 0078 2028     		cmp	r0, #32
 1390 007a 03D1     		bne	.L91
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1391              		.loc 1 1742 0
 1392 007c 1023     		mov	r3, #16
 1393 007e E367     		str	r3, [r4, #124]
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1394              		.loc 1 1744 0
ARM GAS  /tmp/ccJfp1dB.s 			page 91


 1395 0080 1D38     		sub	r0, r0, #29
 1396 0082 11E0     		b	.L90
 1397              	.L91:
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1398              		.loc 1 1751 0
 1399 0084 0023     		mov	r3, #0
 1400 0086 5222     		mov	r2, #82
 1401 0088 A352     		strh	r3, [r4, r2]
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1402              		.loc 1 1752 0
 1403 008a 0832     		add	r2, r2, #8
 1404 008c A352     		strh	r3, [r4, r2]
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1405              		.loc 1 1755 0
 1406 008e 2268     		ldr	r2, [r4]
 1407 0090 0F21     		mov	r1, #15
 1408 0092 1162     		str	r1, [r2, #32]
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1409              		.loc 1 1759 0
 1410 0094 2168     		ldr	r1, [r4]
 1411 0096 8869     		ldr	r0, [r1, #24]
 1412 0098 0822     		mov	r2, #8
 1413 009a 0243     		orr	r2, r0
 1414 009c 8A61     		str	r2, [r1, #24]
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1415              		.loc 1 1762 0
 1416 009e 2022     		mov	r2, #32
 1417 00a0 6267     		str	r2, [r4, #116]
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1418              		.loc 1 1763 0
 1419 00a2 A267     		str	r2, [r4, #120]
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1420              		.loc 1 1766 0
 1421 00a4 E367     		str	r3, [r4, #124]
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1422              		.loc 1 1768 0
 1423 00a6 0020     		mov	r0, #0
 1424              	.L90:
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1425              		.loc 1 1769 0
 1426              		@ sp needed
 1427              	.LVL101:
 1428 00a8 10BD     		pop	{r4, pc}
 1429              	.L93:
 1430 00aa C046     		.align	2
 1431              	.L92:
 1432 00ac 1FFEFFFF 		.word	-481
 1433              		.cfi_endproc
 1434              	.LFE50:
 1436              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1437              		.align	2
 1438              		.global	HAL_UART_AbortTransmit
 1439              		.code	16
 1440              		.thumb_func
 1442              	HAL_UART_AbortTransmit:
 1443              	.LFB51:
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/ccJfp1dB.s 			page 92


 1444              		.loc 1 1784 0
 1445              		.cfi_startproc
 1446              	.LVL102:
 1447 0000 10B5     		push	{r4, lr}
 1448              	.LCFI8:
 1449              		.cfi_def_cfa_offset 8
 1450              		.cfi_offset 4, -8
 1451              		.cfi_offset 14, -4
 1452 0002 041C     		mov	r4, r0
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1453              		.loc 1 1786 0
 1454 0004 0268     		ldr	r2, [r0]
 1455 0006 1368     		ldr	r3, [r2]
 1456 0008 C021     		mov	r1, #192
 1457 000a 8B43     		bic	r3, r1
 1458 000c 1360     		str	r3, [r2]
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1459              		.loc 1 1789 0
 1460 000e 0368     		ldr	r3, [r0]
 1461 0010 9A68     		ldr	r2, [r3, #8]
 1462 0012 1206     		lsl	r2, r2, #24
 1463 0014 16D5     		bpl	.L95
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1464              		.loc 1 1791 0
 1465 0016 9A68     		ldr	r2, [r3, #8]
 1466 0018 4039     		sub	r1, r1, #64
 1467 001a 8A43     		bic	r2, r1
 1468 001c 9A60     		str	r2, [r3, #8]
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1469              		.loc 1 1794 0
 1470 001e 836E     		ldr	r3, [r0, #104]
 1471 0020 002B     		cmp	r3, #0
 1472 0022 0FD0     		beq	.L95
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1473              		.loc 1 1798 0
 1474 0024 0022     		mov	r2, #0
 1475 0026 9A63     		str	r2, [r3, #56]
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1476              		.loc 1 1800 0
 1477 0028 806E     		ldr	r0, [r0, #104]
 1478              	.LVL103:
 1479 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1480              	.LVL104:
 1481 002e 0028     		cmp	r0, #0
 1482 0030 08D0     		beq	.L95
1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1483              		.loc 1 1802 0
 1484 0032 A06E     		ldr	r0, [r4, #104]
 1485 0034 FFF7FEFF 		bl	HAL_DMA_GetError
 1486              	.LVL105:
 1487 0038 2028     		cmp	r0, #32
 1488 003a 03D1     		bne	.L95
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1489              		.loc 1 1805 0
 1490 003c 1023     		mov	r3, #16
 1491 003e E367     		str	r3, [r4, #124]
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
ARM GAS  /tmp/ccJfp1dB.s 			page 93


 1492              		.loc 1 1807 0
 1493 0040 1D38     		sub	r0, r0, #29
 1494 0042 05E0     		b	.L96
 1495              	.L95:
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1496              		.loc 1 1814 0
 1497 0044 0022     		mov	r2, #0
 1498 0046 5223     		mov	r3, #82
 1499 0048 E252     		strh	r2, [r4, r3]
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1500              		.loc 1 1818 0
 1501 004a 323B     		sub	r3, r3, #50
 1502 004c 6367     		str	r3, [r4, #116]
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1503              		.loc 1 1820 0
 1504 004e 0020     		mov	r0, #0
 1505              	.L96:
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1506              		.loc 1 1821 0
 1507              		@ sp needed
 1508              	.LVL106:
 1509 0050 10BD     		pop	{r4, pc}
 1510              		.cfi_endproc
 1511              	.LFE51:
 1513 0052 C046     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1514              		.align	2
 1515              		.global	HAL_UART_AbortReceive
 1516              		.code	16
 1517              		.thumb_func
 1519              	HAL_UART_AbortReceive:
 1520              	.LFB52:
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1521              		.loc 1 1836 0
 1522              		.cfi_startproc
 1523              	.LVL107:
 1524 0000 10B5     		push	{r4, lr}
 1525              	.LCFI9:
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 4, -8
 1528              		.cfi_offset 14, -4
 1529 0002 041C     		mov	r4, r0
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1530              		.loc 1 1838 0
 1531 0004 0268     		ldr	r2, [r0]
 1532 0006 1168     		ldr	r1, [r2]
 1533 0008 184B     		ldr	r3, .L100
 1534 000a 0B40     		and	r3, r1
 1535 000c 1360     		str	r3, [r2]
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1536              		.loc 1 1839 0
 1537 000e 0268     		ldr	r2, [r0]
 1538 0010 9368     		ldr	r3, [r2, #8]
 1539 0012 0121     		mov	r1, #1
 1540 0014 8B43     		bic	r3, r1
 1541 0016 9360     		str	r3, [r2, #8]
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1542              		.loc 1 1842 0
ARM GAS  /tmp/ccJfp1dB.s 			page 94


 1543 0018 0368     		ldr	r3, [r0]
 1544 001a 9A68     		ldr	r2, [r3, #8]
 1545 001c 5206     		lsl	r2, r2, #25
 1546 001e 16D5     		bpl	.L98
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1547              		.loc 1 1844 0
 1548 0020 9A68     		ldr	r2, [r3, #8]
 1549 0022 3F31     		add	r1, r1, #63
 1550 0024 8A43     		bic	r2, r1
 1551 0026 9A60     		str	r2, [r3, #8]
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1552              		.loc 1 1847 0
 1553 0028 C36E     		ldr	r3, [r0, #108]
 1554 002a 002B     		cmp	r3, #0
 1555 002c 0FD0     		beq	.L98
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1556              		.loc 1 1851 0
 1557 002e 0022     		mov	r2, #0
 1558 0030 9A63     		str	r2, [r3, #56]
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1559              		.loc 1 1853 0
 1560 0032 C06E     		ldr	r0, [r0, #108]
 1561              	.LVL108:
 1562 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1563              	.LVL109:
 1564 0038 0028     		cmp	r0, #0
 1565 003a 08D0     		beq	.L98
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1566              		.loc 1 1855 0
 1567 003c E06E     		ldr	r0, [r4, #108]
 1568 003e FFF7FEFF 		bl	HAL_DMA_GetError
 1569              	.LVL110:
 1570 0042 2028     		cmp	r0, #32
 1571 0044 03D1     		bne	.L98
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1572              		.loc 1 1858 0
 1573 0046 1023     		mov	r3, #16
 1574 0048 E367     		str	r3, [r4, #124]
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1575              		.loc 1 1860 0
 1576 004a 1D38     		sub	r0, r0, #29
 1577 004c 0DE0     		b	.L99
 1578              	.L98:
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1579              		.loc 1 1867 0
 1580 004e 0022     		mov	r2, #0
 1581 0050 5A23     		mov	r3, #90
 1582 0052 E252     		strh	r2, [r4, r3]
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1583              		.loc 1 1870 0
 1584 0054 2368     		ldr	r3, [r4]
 1585 0056 0F32     		add	r2, r2, #15
 1586 0058 1A62     		str	r2, [r3, #32]
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1587              		.loc 1 1873 0
 1588 005a 2268     		ldr	r2, [r4]
 1589 005c 9169     		ldr	r1, [r2, #24]
ARM GAS  /tmp/ccJfp1dB.s 			page 95


 1590 005e 0823     		mov	r3, #8
 1591 0060 0B43     		orr	r3, r1
 1592 0062 9361     		str	r3, [r2, #24]
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1593              		.loc 1 1876 0
 1594 0064 2023     		mov	r3, #32
 1595 0066 A367     		str	r3, [r4, #120]
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1596              		.loc 1 1878 0
 1597 0068 0020     		mov	r0, #0
 1598              	.L99:
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1599              		.loc 1 1879 0
 1600              		@ sp needed
 1601              	.LVL111:
 1602 006a 10BD     		pop	{r4, pc}
 1603              	.L101:
 1604              		.align	2
 1605              	.L100:
 1606 006c DFFEFFFF 		.word	-289
 1607              		.cfi_endproc
 1608              	.LFE52:
 1610              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1611              		.align	2
 1612              		.weak	HAL_UART_TxCpltCallback
 1613              		.code	16
 1614              		.thumb_func
 1616              	HAL_UART_TxCpltCallback:
 1617              	.LFB57:
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1618              		.loc 1 2396 0
 1619              		.cfi_startproc
 1620              	.LVL112:
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1621              		.loc 1 2403 0
 1622              		@ sp needed
 1623 0000 7047     		bx	lr
 1624              		.cfi_endproc
 1625              	.LFE57:
 1627 0002 C046     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1628              		.align	2
 1629              		.code	16
 1630              		.thumb_func
 1632              	UART_DMATransmitCplt:
 1633              	.LFB79:
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1634              		.loc 1 3160 0
 1635              		.cfi_startproc
 1636              	.LVL113:
 1637 0000 08B5     		push	{r3, lr}
 1638              	.LCFI10:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 3, -8
 1641              		.cfi_offset 14, -4
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1642              		.loc 1 3161 0
 1643 0002 836A     		ldr	r3, [r0, #40]
ARM GAS  /tmp/ccJfp1dB.s 			page 96


 1644              	.LVL114:
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1645              		.loc 1 3164 0
 1646 0004 0268     		ldr	r2, [r0]
 1647 0006 1268     		ldr	r2, [r2]
 1648 0008 9206     		lsl	r2, r2, #26
 1649 000a 0DD4     		bmi	.L104
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1650              		.loc 1 3166 0
 1651 000c 0021     		mov	r1, #0
 1652 000e 5222     		mov	r2, #82
 1653 0010 9952     		strh	r1, [r3, r2]
3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1654              		.loc 1 3170 0
 1655 0012 1968     		ldr	r1, [r3]
 1656 0014 8A68     		ldr	r2, [r1, #8]
 1657 0016 8020     		mov	r0, #128
 1658              	.LVL115:
 1659 0018 8243     		bic	r2, r0
 1660 001a 8A60     		str	r2, [r1, #8]
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1661              		.loc 1 3173 0
 1662 001c 1A68     		ldr	r2, [r3]
 1663 001e 1168     		ldr	r1, [r2]
 1664 0020 4023     		mov	r3, #64
 1665              	.LVL116:
 1666 0022 0B43     		orr	r3, r1
 1667 0024 1360     		str	r3, [r2]
 1668 0026 02E0     		b	.L103
 1669              	.LVL117:
 1670              	.L104:
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1671              		.loc 1 3183 0
 1672 0028 181C     		mov	r0, r3
 1673              	.LVL118:
 1674 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1675              	.LVL119:
 1676              	.L103:
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1677              		.loc 1 3186 0
 1678              		@ sp needed
 1679 002e 08BD     		pop	{r3, pc}
 1680              		.cfi_endproc
 1681              	.LFE79:
 1683              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1684              		.align	2
 1685              		.code	16
 1686              		.thumb_func
 1688              	UART_EndTransmit_IT:
 1689              	.LFB91:
3540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccJfp1dB.s 			page 97


3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1690              		.loc 1 3549 0
 1691              		.cfi_startproc
 1692              	.LVL120:
 1693 0000 08B5     		push	{r3, lr}
 1694              	.LCFI11:
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 3, -8
 1697              		.cfi_offset 14, -4
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1698              		.loc 1 3551 0
 1699 0002 0268     		ldr	r2, [r0]
 1700 0004 1368     		ldr	r3, [r2]
 1701 0006 4021     		mov	r1, #64
 1702 0008 8B43     		bic	r3, r1
 1703 000a 1360     		str	r3, [r2]
3552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1704              		.loc 1 3554 0
 1705 000c 2023     		mov	r3, #32
 1706 000e 4367     		str	r3, [r0, #116]
3555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
 1707              		.loc 1 3557 0
 1708 0010 0023     		mov	r3, #0
 1709 0012 4366     		str	r3, [r0, #100]
3558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1710              		.loc 1 3564 0
 1711 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1712              	.LVL121:
3565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1713              		.loc 1 3566 0
 1714              		@ sp needed
 1715 0018 08BD     		pop	{r3, pc}
 1716              		.cfi_endproc
 1717              	.LFE91:
 1719 001a C046     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1720              		.align	2
 1721              		.weak	HAL_UART_TxHalfCpltCallback
 1722              		.code	16
 1723              		.thumb_func
 1725              	HAL_UART_TxHalfCpltCallback:
 1726              	.LFB58:
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1727              		.loc 1 2411 0
ARM GAS  /tmp/ccJfp1dB.s 			page 98


 1728              		.cfi_startproc
 1729              	.LVL122:
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1730              		.loc 1 2418 0
 1731              		@ sp needed
 1732 0000 7047     		bx	lr
 1733              		.cfi_endproc
 1734              	.LFE58:
 1736 0002 C046     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1737              		.align	2
 1738              		.code	16
 1739              		.thumb_func
 1741              	UART_DMATxHalfCplt:
 1742              	.LFB80:
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1743              		.loc 1 3194 0
 1744              		.cfi_startproc
 1745              	.LVL123:
 1746 0000 08B5     		push	{r3, lr}
 1747              	.LCFI12:
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 3, -8
 1750              		.cfi_offset 14, -4
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1751              		.loc 1 3195 0
 1752 0002 806A     		ldr	r0, [r0, #40]
 1753              	.LVL124:
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1754              		.loc 1 3202 0
 1755 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1756              	.LVL125:
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1757              		.loc 1 3204 0
 1758              		@ sp needed
 1759 0008 08BD     		pop	{r3, pc}
 1760              		.cfi_endproc
 1761              	.LFE80:
 1763 000a C046     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1764              		.align	2
 1765              		.weak	HAL_UART_RxCpltCallback
 1766              		.code	16
 1767              		.thumb_func
 1769              	HAL_UART_RxCpltCallback:
 1770              	.LFB59:
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1771              		.loc 1 2426 0
 1772              		.cfi_startproc
 1773              	.LVL126:
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1774              		.loc 1 2433 0
 1775              		@ sp needed
 1776 0000 7047     		bx	lr
 1777              		.cfi_endproc
 1778              	.LFE59:
 1780 0002 C046     		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1781              		.align	2
 1782              		.code	16
ARM GAS  /tmp/ccJfp1dB.s 			page 99


 1783              		.thumb_func
 1785              	UART_RxISR_8BIT:
 1786              	.LFB92:
3567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1787              		.loc 1 3574 0
 1788              		.cfi_startproc
 1789              	.LVL127:
 1790 0000 08B5     		push	{r3, lr}
 1791              	.LCFI13:
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 3, -8
 1794              		.cfi_offset 14, -4
3575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1795              		.loc 1 3575 0
 1796 0002 5C23     		mov	r3, #92
 1797 0004 C25A     		ldrh	r2, [r0, r3]
 1798              	.LVL128:
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhdata;
3577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1799              		.loc 1 3579 0
 1800 0006 836F     		ldr	r3, [r0, #120]
 1801 0008 222B     		cmp	r3, #34
 1802 000a 21D1     		bne	.L111
3580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1803              		.loc 1 3581 0
 1804 000c 0368     		ldr	r3, [r0]
 1805 000e 5B6A     		ldr	r3, [r3, #36]
 1806              	.LVL129:
3582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1807              		.loc 1 3582 0
 1808 0010 1A40     		and	r2, r3
 1809              	.LVL130:
 1810 0012 436D     		ldr	r3, [r0, #84]
 1811              	.LVL131:
 1812 0014 1A70     		strb	r2, [r3]
 1813              	.LVL132:
3583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1814              		.loc 1 3583 0
 1815 0016 436D     		ldr	r3, [r0, #84]
 1816 0018 0133     		add	r3, r3, #1
 1817 001a 4365     		str	r3, [r0, #84]
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
 1818              		.loc 1 3584 0
 1819 001c 5A22     		mov	r2, #90
 1820 001e 835A     		ldrh	r3, [r0, r2]
 1821 0020 013B     		sub	r3, r3, #1
 1822 0022 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccJfp1dB.s 			page 100


 1823 0024 8352     		strh	r3, [r0, r2]
3585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1824              		.loc 1 3586 0
 1825 0026 835A     		ldrh	r3, [r0, r2]
 1826 0028 9BB2     		uxth	r3, r3
 1827 002a 002B     		cmp	r3, #0
 1828 002c 15D1     		bne	.L110
3587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1829              		.loc 1 3589 0
 1830 002e 0268     		ldr	r2, [r0]
 1831 0030 1168     		ldr	r1, [r2]
 1832 0032 0A4B     		ldr	r3, .L113
 1833 0034 0B40     		and	r3, r1
 1834 0036 1360     		str	r3, [r2]
3590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1835              		.loc 1 3592 0
 1836 0038 0268     		ldr	r2, [r0]
 1837 003a 9368     		ldr	r3, [r2, #8]
 1838 003c 0121     		mov	r1, #1
 1839 003e 8B43     		bic	r3, r1
 1840 0040 9360     		str	r3, [r2, #8]
3593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1841              		.loc 1 3595 0
 1842 0042 2023     		mov	r3, #32
 1843 0044 8367     		str	r3, [r0, #120]
3596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = NULL;
 1844              		.loc 1 3598 0
 1845 0046 0023     		mov	r3, #0
 1846 0048 0366     		str	r3, [r0, #96]
3599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1847              		.loc 1 3605 0
 1848 004a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1849              	.LVL133:
 1850 004e 04E0     		b	.L110
 1851              	.LVL134:
 1852              	.L111:
3606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
ARM GAS  /tmp/ccJfp1dB.s 			page 101


3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1853              		.loc 1 3612 0
 1854 0050 0268     		ldr	r2, [r0]
 1855              	.LVL135:
 1856 0052 9169     		ldr	r1, [r2, #24]
 1857 0054 0823     		mov	r3, #8
 1858 0056 0B43     		orr	r3, r1
 1859 0058 9361     		str	r3, [r2, #24]
 1860              	.LVL136:
 1861              	.L110:
3613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1862              		.loc 1 3614 0
 1863              		@ sp needed
 1864 005a 08BD     		pop	{r3, pc}
 1865              	.L114:
 1866              		.align	2
 1867              	.L113:
 1868 005c DFFEFFFF 		.word	-289
 1869              		.cfi_endproc
 1870              	.LFE92:
 1872              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1873              		.align	2
 1874              		.code	16
 1875              		.thumb_func
 1877              	UART_RxISR_16BIT:
 1878              	.LFB93:
3615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1879              		.loc 1 3624 0
 1880              		.cfi_startproc
 1881              	.LVL137:
 1882 0000 08B5     		push	{r3, lr}
 1883              	.LCFI14:
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 3, -8
 1886              		.cfi_offset 14, -4
3625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *tmp;
3626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1887              		.loc 1 3626 0
 1888 0002 5C23     		mov	r3, #92
 1889 0004 C25A     		ldrh	r2, [r0, r3]
 1890              	.LVL138:
3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhdata;
3628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1891              		.loc 1 3630 0
 1892 0006 836F     		ldr	r3, [r0, #120]
ARM GAS  /tmp/ccJfp1dB.s 			page 102


 1893 0008 222B     		cmp	r3, #34
 1894 000a 21D1     		bne	.L116
3631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1895              		.loc 1 3632 0
 1896 000c 0368     		ldr	r3, [r0]
 1897 000e 5B6A     		ldr	r3, [r3, #36]
 1898              	.LVL139:
3633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1899              		.loc 1 3634 0
 1900 0010 1A40     		and	r2, r3
 1901              	.LVL140:
 1902 0012 436D     		ldr	r3, [r0, #84]
 1903              	.LVL141:
 1904 0014 1A80     		strh	r2, [r3]
 1905              	.LVL142:
3635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 1906              		.loc 1 3635 0
 1907 0016 436D     		ldr	r3, [r0, #84]
 1908              	.LVL143:
 1909 0018 0233     		add	r3, r3, #2
 1910 001a 4365     		str	r3, [r0, #84]
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
 1911              		.loc 1 3636 0
 1912 001c 5A22     		mov	r2, #90
 1913 001e 835A     		ldrh	r3, [r0, r2]
 1914 0020 013B     		sub	r3, r3, #1
 1915 0022 9BB2     		uxth	r3, r3
 1916 0024 8352     		strh	r3, [r0, r2]
3637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1917              		.loc 1 3638 0
 1918 0026 835A     		ldrh	r3, [r0, r2]
 1919 0028 9BB2     		uxth	r3, r3
 1920 002a 002B     		cmp	r3, #0
 1921 002c 15D1     		bne	.L115
3639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1922              		.loc 1 3641 0
 1923 002e 0268     		ldr	r2, [r0]
 1924 0030 1168     		ldr	r1, [r2]
 1925 0032 0A4B     		ldr	r3, .L118
 1926 0034 0B40     		and	r3, r1
 1927 0036 1360     		str	r3, [r2]
3642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1928              		.loc 1 3644 0
 1929 0038 0268     		ldr	r2, [r0]
 1930 003a 9368     		ldr	r3, [r2, #8]
 1931 003c 0121     		mov	r1, #1
 1932 003e 8B43     		bic	r3, r1
 1933 0040 9360     		str	r3, [r2, #8]
3645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
ARM GAS  /tmp/ccJfp1dB.s 			page 103


3647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1934              		.loc 1 3647 0
 1935 0042 2023     		mov	r3, #32
 1936 0044 8367     		str	r3, [r0, #120]
3648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = NULL;
 1937              		.loc 1 3650 0
 1938 0046 0023     		mov	r3, #0
 1939 0048 0366     		str	r3, [r0, #96]
3651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1940              		.loc 1 3657 0
 1941 004a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1942              	.LVL144:
 1943 004e 04E0     		b	.L115
 1944              	.LVL145:
 1945              	.L116:
3658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1946              		.loc 1 3664 0
 1947 0050 0268     		ldr	r2, [r0]
 1948              	.LVL146:
 1949 0052 9169     		ldr	r1, [r2, #24]
 1950 0054 0823     		mov	r3, #8
 1951 0056 0B43     		orr	r3, r1
 1952 0058 9361     		str	r3, [r2, #24]
 1953              	.LVL147:
 1954              	.L115:
3665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1955              		.loc 1 3666 0
 1956              		@ sp needed
 1957 005a 08BD     		pop	{r3, pc}
 1958              	.L119:
 1959              		.align	2
 1960              	.L118:
 1961 005c DFFEFFFF 		.word	-289
 1962              		.cfi_endproc
 1963              	.LFE93:
 1965              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1966              		.align	2
 1967              		.code	16
 1968              		.thumb_func
 1970              	UART_DMAReceiveCplt:
 1971              	.LFB81:
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /tmp/ccJfp1dB.s 			page 104


 1972              		.loc 1 3212 0
 1973              		.cfi_startproc
 1974              	.LVL148:
 1975 0000 08B5     		push	{r3, lr}
 1976              	.LCFI15:
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 3, -8
 1979              		.cfi_offset 14, -4
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1980              		.loc 1 3213 0
 1981 0002 836A     		ldr	r3, [r0, #40]
 1982              	.LVL149:
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1983              		.loc 1 3216 0
 1984 0004 0268     		ldr	r2, [r0]
 1985 0006 1268     		ldr	r2, [r2]
 1986 0008 9206     		lsl	r2, r2, #26
 1987 000a 13D4     		bmi	.L121
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1988              		.loc 1 3218 0
 1989 000c 0021     		mov	r1, #0
 1990 000e 5A22     		mov	r2, #90
 1991 0010 9952     		strh	r1, [r3, r2]
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1992              		.loc 1 3221 0
 1993 0012 1968     		ldr	r1, [r3]
 1994 0014 0868     		ldr	r0, [r1]
 1995              	.LVL150:
 1996 0016 094A     		ldr	r2, .L122
 1997 0018 0240     		and	r2, r0
 1998 001a 0A60     		str	r2, [r1]
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1999              		.loc 1 3222 0
 2000 001c 1968     		ldr	r1, [r3]
 2001 001e 8A68     		ldr	r2, [r1, #8]
 2002 0020 0120     		mov	r0, #1
 2003 0022 8243     		bic	r2, r0
 2004 0024 8A60     		str	r2, [r1, #8]
3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2005              		.loc 1 3226 0
 2006 0026 1968     		ldr	r1, [r3]
 2007 0028 8A68     		ldr	r2, [r1, #8]
 2008 002a 3F30     		add	r0, r0, #63
 2009 002c 8243     		bic	r2, r0
 2010 002e 8A60     		str	r2, [r1, #8]
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2011              		.loc 1 3229 0
 2012 0030 2022     		mov	r2, #32
 2013 0032 9A67     		str	r2, [r3, #120]
 2014              	.L121:
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2015              		.loc 1 3237 0
 2016 0034 181C     		mov	r0, r3
 2017 0036 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2018              	.LVL151:
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2019              		.loc 1 3239 0
ARM GAS  /tmp/ccJfp1dB.s 			page 105


 2020              		@ sp needed
 2021 003a 08BD     		pop	{r3, pc}
 2022              	.L123:
 2023              		.align	2
 2024              	.L122:
 2025 003c FFFEFFFF 		.word	-257
 2026              		.cfi_endproc
 2027              	.LFE81:
 2029              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2030              		.align	2
 2031              		.weak	HAL_UART_RxHalfCpltCallback
 2032              		.code	16
 2033              		.thumb_func
 2035              	HAL_UART_RxHalfCpltCallback:
 2036              	.LFB60:
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2037              		.loc 1 2441 0
 2038              		.cfi_startproc
 2039              	.LVL152:
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2040              		.loc 1 2448 0
 2041              		@ sp needed
 2042 0000 7047     		bx	lr
 2043              		.cfi_endproc
 2044              	.LFE60:
 2046 0002 C046     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2047              		.align	2
 2048              		.code	16
 2049              		.thumb_func
 2051              	UART_DMARxHalfCplt:
 2052              	.LFB82:
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2053              		.loc 1 3247 0
 2054              		.cfi_startproc
 2055              	.LVL153:
 2056 0000 08B5     		push	{r3, lr}
 2057              	.LCFI16:
 2058              		.cfi_def_cfa_offset 8
 2059              		.cfi_offset 3, -8
 2060              		.cfi_offset 14, -4
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2061              		.loc 1 3248 0
 2062 0002 806A     		ldr	r0, [r0, #40]
 2063              	.LVL154:
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2064              		.loc 1 3255 0
 2065 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2066              	.LVL155:
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2067              		.loc 1 3257 0
 2068              		@ sp needed
 2069 0008 08BD     		pop	{r3, pc}
 2070              		.cfi_endproc
 2071              	.LFE82:
 2073 000a C046     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2074              		.align	2
 2075              		.weak	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccJfp1dB.s 			page 106


 2076              		.code	16
 2077              		.thumb_func
 2079              	HAL_UART_ErrorCallback:
 2080              	.LFB61:
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2081              		.loc 1 2456 0
 2082              		.cfi_startproc
 2083              	.LVL156:
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2084              		.loc 1 2463 0
 2085              		@ sp needed
 2086 0000 7047     		bx	lr
 2087              		.cfi_endproc
 2088              	.LFE61:
 2090 0002 C046     		.section	.text.UART_DMAError,"ax",%progbits
 2091              		.align	2
 2092              		.code	16
 2093              		.thumb_func
 2095              	UART_DMAError:
 2096              	.LFB83:
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2097              		.loc 1 3265 0
 2098              		.cfi_startproc
 2099              	.LVL157:
 2100 0000 38B5     		push	{r3, r4, r5, lr}
 2101              	.LCFI17:
 2102              		.cfi_def_cfa_offset 16
 2103              		.cfi_offset 3, -16
 2104              		.cfi_offset 4, -12
 2105              		.cfi_offset 5, -8
 2106              		.cfi_offset 14, -4
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2107              		.loc 1 3266 0
 2108 0002 846A     		ldr	r4, [r0, #40]
 2109              	.LVL158:
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2110              		.loc 1 3268 0
 2111 0004 626F     		ldr	r2, [r4, #116]
 2112              	.LVL159:
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2113              		.loc 1 3269 0
 2114 0006 A56F     		ldr	r5, [r4, #120]
 2115              	.LVL160:
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2116              		.loc 1 3272 0
 2117 0008 2368     		ldr	r3, [r4]
 2118 000a 9B68     		ldr	r3, [r3, #8]
 2119 000c 1B06     		lsl	r3, r3, #24
 2120 000e 07D5     		bpl	.L128
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2121              		.loc 1 3272 0 is_stmt 0 discriminator 1
 2122 0010 212A     		cmp	r2, #33
 2123 0012 05D1     		bne	.L128
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2124              		.loc 1 3275 0 is_stmt 1
 2125 0014 0022     		mov	r2, #0
 2126              	.LVL161:
ARM GAS  /tmp/ccJfp1dB.s 			page 107


 2127 0016 5223     		mov	r3, #82
 2128 0018 E252     		strh	r2, [r4, r3]
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2129              		.loc 1 3276 0
 2130 001a 201C     		mov	r0, r4
 2131              	.LVL162:
 2132 001c FFF7FEFF 		bl	UART_EndTxTransfer
 2133              	.LVL163:
 2134              	.L128:
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2135              		.loc 1 3280 0
 2136 0020 2368     		ldr	r3, [r4]
 2137 0022 9B68     		ldr	r3, [r3, #8]
 2138 0024 5B06     		lsl	r3, r3, #25
 2139 0026 07D5     		bpl	.L129
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2140              		.loc 1 3280 0 is_stmt 0 discriminator 1
 2141 0028 222D     		cmp	r5, #34
 2142 002a 05D1     		bne	.L129
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2143              		.loc 1 3283 0 is_stmt 1
 2144 002c 0022     		mov	r2, #0
 2145 002e 5A23     		mov	r3, #90
 2146 0030 E252     		strh	r2, [r4, r3]
3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2147              		.loc 1 3284 0
 2148 0032 201C     		mov	r0, r4
 2149 0034 FFF7FEFF 		bl	UART_EndRxTransfer
 2150              	.LVL164:
 2151              	.L129:
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2152              		.loc 1 3287 0
 2153 0038 E26F     		ldr	r2, [r4, #124]
 2154 003a 1023     		mov	r3, #16
 2155 003c 1343     		orr	r3, r2
 2156 003e E367     		str	r3, [r4, #124]
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2157              		.loc 1 3294 0
 2158 0040 201C     		mov	r0, r4
 2159 0042 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2160              	.LVL165:
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2161              		.loc 1 3296 0
 2162              		@ sp needed
 2163              	.LVL166:
 2164              	.LVL167:
 2165 0046 38BD     		pop	{r3, r4, r5, pc}
 2166              		.cfi_endproc
 2167              	.LFE83:
 2169              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2170              		.align	2
 2171              		.global	HAL_UART_IRQHandler
 2172              		.code	16
 2173              		.thumb_func
 2175              	HAL_UART_IRQHandler:
 2176              	.LFB56:
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
ARM GAS  /tmp/ccJfp1dB.s 			page 108


 2177              		.loc 1 2203 0
 2178              		.cfi_startproc
 2179              	.LVL168:
 2180 0000 70B5     		push	{r4, r5, r6, lr}
 2181              	.LCFI18:
 2182              		.cfi_def_cfa_offset 16
 2183              		.cfi_offset 4, -16
 2184              		.cfi_offset 5, -12
 2185              		.cfi_offset 6, -8
 2186              		.cfi_offset 14, -4
 2187 0002 041C     		mov	r4, r0
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2188              		.loc 1 2204 0
 2189 0004 0168     		ldr	r1, [r0]
 2190 0006 CB69     		ldr	r3, [r1, #28]
 2191              	.LVL169:
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2192              		.loc 1 2205 0
 2193 0008 0868     		ldr	r0, [r1]
 2194              	.LVL170:
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2195              		.loc 1 2206 0
 2196 000a 8D68     		ldr	r5, [r1, #8]
 2197              	.LVL171:
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == 0U)
 2198              		.loc 1 2212 0
 2199 000c 0F22     		mov	r2, #15
 2200 000e 1A40     		and	r2, r3
 2201              	.LVL172:
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2202              		.loc 1 2213 0
 2203 0010 0AD1     		bne	.L131
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2204              		.loc 1 2216 0
 2205 0012 9E06     		lsl	r6, r3, #26
 2206 0014 08D5     		bpl	.L131
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2207              		.loc 1 2217 0
 2208 0016 8606     		lsl	r6, r0, #26
 2209 0018 06D5     		bpl	.L131
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2210              		.loc 1 2219 0
 2211 001a 236E     		ldr	r3, [r4, #96]
 2212              	.LVL173:
 2213 001c 002B     		cmp	r3, #0
 2214 001e 00D1     		bne	.LCB1995
 2215 0020 8CE0     		b	.L130	@long jump
 2216              	.LCB1995:
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2217              		.loc 1 2221 0
 2218 0022 201C     		mov	r0, r4
 2219              	.LVL174:
 2220 0024 9847     		blx	r3
 2221              	.LVL175:
 2222 0026 89E0     		b	.L130
 2223              	.LVL176:
 2224              	.L131:
ARM GAS  /tmp/ccJfp1dB.s 			page 109


2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2225              		.loc 1 2228 0
 2226 0028 002A     		cmp	r2, #0
 2227 002a 6BD0     		beq	.L133
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2228              		.loc 1 2229 0
 2229 002c 0122     		mov	r2, #1
 2230              	.LVL177:
 2231 002e 2A40     		and	r2, r5
 2232 0030 03D1     		bne	.L134
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2233              		.loc 1 2230 0
 2234 0032 9026     		mov	r6, #144
 2235 0034 7600     		lsl	r6, r6, #1
 2236 0036 3042     		tst	r0, r6
 2237 0038 64D0     		beq	.L133
 2238              	.L134:
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2239              		.loc 1 2233 0
 2240 003a DD07     		lsl	r5, r3, #31
 2241 003c 06D5     		bpl	.L135
 2242              	.LVL178:
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2243              		.loc 1 2233 0 is_stmt 0 discriminator 1
 2244 003e C505     		lsl	r5, r0, #23
 2245 0040 04D5     		bpl	.L135
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2246              		.loc 1 2235 0 is_stmt 1
 2247 0042 0125     		mov	r5, #1
 2248 0044 0D62     		str	r5, [r1, #32]
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2249              		.loc 1 2237 0
 2250 0046 E16F     		ldr	r1, [r4, #124]
 2251 0048 0D43     		orr	r5, r1
 2252 004a E567     		str	r5, [r4, #124]
 2253              	.L135:
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2254              		.loc 1 2241 0
 2255 004c 9907     		lsl	r1, r3, #30
 2256 004e 08D5     		bpl	.L136
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2257              		.loc 1 2241 0 is_stmt 0 discriminator 1
 2258 0050 002A     		cmp	r2, #0
 2259 0052 06D0     		beq	.L136
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2260              		.loc 1 2243 0 is_stmt 1
 2261 0054 2168     		ldr	r1, [r4]
 2262 0056 0225     		mov	r5, #2
 2263 0058 0D62     		str	r5, [r1, #32]
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2264              		.loc 1 2245 0
 2265 005a E56F     		ldr	r5, [r4, #124]
 2266 005c 0421     		mov	r1, #4
 2267 005e 2943     		orr	r1, r5
 2268 0060 E167     		str	r1, [r4, #124]
 2269              	.L136:
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 110


 2270              		.loc 1 2249 0
 2271 0062 5907     		lsl	r1, r3, #29
 2272 0064 08D5     		bpl	.L137
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2273              		.loc 1 2249 0 is_stmt 0 discriminator 1
 2274 0066 002A     		cmp	r2, #0
 2275 0068 06D0     		beq	.L137
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2276              		.loc 1 2251 0 is_stmt 1
 2277 006a 2168     		ldr	r1, [r4]
 2278 006c 0425     		mov	r5, #4
 2279 006e 0D62     		str	r5, [r1, #32]
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2280              		.loc 1 2253 0
 2281 0070 E56F     		ldr	r5, [r4, #124]
 2282 0072 0221     		mov	r1, #2
 2283 0074 2943     		orr	r1, r5
 2284 0076 E167     		str	r1, [r4, #124]
 2285              	.L137:
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2286              		.loc 1 2257 0
 2287 0078 1907     		lsl	r1, r3, #28
 2288 007a 09D5     		bpl	.L138
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2289              		.loc 1 2258 0
 2290 007c 8106     		lsl	r1, r0, #26
 2291 007e 01D4     		bmi	.L139
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2292              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2293 0080 002A     		cmp	r2, #0
 2294 0082 05D0     		beq	.L138
 2295              	.L139:
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2296              		.loc 1 2261 0 is_stmt 1
 2297 0084 2168     		ldr	r1, [r4]
 2298 0086 0822     		mov	r2, #8
 2299 0088 0A62     		str	r2, [r1, #32]
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2300              		.loc 1 2263 0
 2301 008a E16F     		ldr	r1, [r4, #124]
 2302 008c 0A43     		orr	r2, r1
 2303 008e E267     		str	r2, [r4, #124]
 2304              	.L138:
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2305              		.loc 1 2267 0
 2306 0090 E26F     		ldr	r2, [r4, #124]
 2307 0092 002A     		cmp	r2, #0
 2308 0094 52D0     		beq	.L130
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2309              		.loc 1 2270 0
 2310 0096 9B06     		lsl	r3, r3, #26
 2311 0098 06D5     		bpl	.L140
 2312              	.LVL179:
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2313              		.loc 1 2271 0
 2314 009a 8306     		lsl	r3, r0, #26
 2315 009c 04D5     		bpl	.L140
ARM GAS  /tmp/ccJfp1dB.s 			page 111


2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 2316              		.loc 1 2273 0
 2317 009e 236E     		ldr	r3, [r4, #96]
 2318 00a0 002B     		cmp	r3, #0
 2319 00a2 01D0     		beq	.L140
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 2320              		.loc 1 2275 0
 2321 00a4 201C     		mov	r0, r4
 2322              	.LVL180:
 2323 00a6 9847     		blx	r3
 2324              	.LVL181:
 2325              	.L140:
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2326              		.loc 1 2281 0
 2327 00a8 E26F     		ldr	r2, [r4, #124]
 2328              	.LVL182:
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 2329              		.loc 1 2282 0
 2330 00aa 2368     		ldr	r3, [r4]
 2331 00ac 9B68     		ldr	r3, [r3, #8]
 2332 00ae 5B06     		lsl	r3, r3, #25
 2333 00b0 01D4     		bmi	.L141
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 2334              		.loc 1 2282 0 is_stmt 0 discriminator 1
 2335 00b2 1307     		lsl	r3, r2, #28
 2336 00b4 20D5     		bpl	.L142
 2337              	.L141:
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2338              		.loc 1 2288 0 is_stmt 1
 2339 00b6 201C     		mov	r0, r4
 2340 00b8 FFF7FEFF 		bl	UART_EndRxTransfer
 2341              	.LVL183:
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 2342              		.loc 1 2291 0
 2343 00bc 2368     		ldr	r3, [r4]
 2344 00be 9A68     		ldr	r2, [r3, #8]
 2345 00c0 5206     		lsl	r2, r2, #25
 2346 00c2 15D5     		bpl	.L143
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2347              		.loc 1 2293 0
 2348 00c4 9A68     		ldr	r2, [r3, #8]
 2349 00c6 4021     		mov	r1, #64
 2350 00c8 8A43     		bic	r2, r1
 2351 00ca 9A60     		str	r2, [r3, #8]
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
 2352              		.loc 1 2296 0
 2353 00cc E36E     		ldr	r3, [r4, #108]
 2354 00ce 002B     		cmp	r3, #0
 2355 00d0 0AD0     		beq	.L144
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2356              		.loc 1 2300 0
 2357 00d2 1B4A     		ldr	r2, .L147
 2358 00d4 9A63     		str	r2, [r3, #56]
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
 2359              		.loc 1 2303 0
 2360 00d6 E06E     		ldr	r0, [r4, #108]
 2361 00d8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccJfp1dB.s 			page 112


 2362              	.LVL184:
 2363 00dc 0028     		cmp	r0, #0
 2364 00de 2DD0     		beq	.L130
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
 2365              		.loc 1 2306 0
 2366 00e0 E06E     		ldr	r0, [r4, #108]
 2367 00e2 836B     		ldr	r3, [r0, #56]
 2368 00e4 9847     		blx	r3
 2369              	.LVL185:
 2370 00e6 29E0     		b	.L130
 2371              	.L144:
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2372              		.loc 1 2317 0
 2373 00e8 201C     		mov	r0, r4
 2374 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2375              	.LVL186:
 2376 00ee 25E0     		b	.L130
 2377              	.L143:
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2378              		.loc 1 2330 0
 2379 00f0 201C     		mov	r0, r4
 2380 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2381              	.LVL187:
 2382 00f6 21E0     		b	.L130
 2383              	.LVL188:
 2384              	.L142:
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2385              		.loc 1 2343 0
 2386 00f8 201C     		mov	r0, r4
 2387 00fa FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2388              	.LVL189:
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2389              		.loc 1 2345 0
 2390 00fe 0023     		mov	r3, #0
 2391 0100 E367     		str	r3, [r4, #124]
 2392 0102 1BE0     		b	.L130
 2393              	.LVL190:
 2394              	.L133:
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2395              		.loc 1 2353 0
 2396 0104 DA02     		lsl	r2, r3, #11
 2397 0106 08D5     		bpl	.L145
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2398              		.loc 1 2353 0 is_stmt 0 discriminator 1
 2399 0108 6A02     		lsl	r2, r5, #9
 2400 010a 06D5     		bpl	.L145
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2401              		.loc 1 2355 0 is_stmt 1
 2402 010c 8023     		mov	r3, #128
 2403              	.LVL191:
 2404 010e 5B03     		lsl	r3, r3, #13
 2405 0110 0B62     		str	r3, [r1, #32]
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2406              		.loc 1 2365 0
 2407 0112 201C     		mov	r0, r4
 2408              	.LVL192:
 2409 0114 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
ARM GAS  /tmp/ccJfp1dB.s 			page 113


 2410              	.LVL193:
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2411              		.loc 1 2367 0
 2412 0118 10E0     		b	.L130
 2413              	.LVL194:
 2414              	.L145:
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2415              		.loc 1 2371 0
 2416 011a 1A06     		lsl	r2, r3, #24
 2417 011c 07D5     		bpl	.L146
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2418              		.loc 1 2372 0
 2419 011e 0206     		lsl	r2, r0, #24
 2420 0120 05D5     		bpl	.L146
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2421              		.loc 1 2374 0
 2422 0122 636E     		ldr	r3, [r4, #100]
 2423              	.LVL195:
 2424 0124 002B     		cmp	r3, #0
 2425 0126 09D0     		beq	.L130
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2426              		.loc 1 2376 0
 2427 0128 201C     		mov	r0, r4
 2428              	.LVL196:
 2429 012a 9847     		blx	r3
 2430              	.LVL197:
 2431 012c 06E0     		b	.L130
 2432              	.LVL198:
 2433              	.L146:
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2434              		.loc 1 2382 0
 2435 012e 5B06     		lsl	r3, r3, #25
 2436 0130 04D5     		bpl	.L130
 2437              	.LVL199:
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2438              		.loc 1 2382 0 is_stmt 0 discriminator 1
 2439 0132 4306     		lsl	r3, r0, #25
 2440 0134 02D5     		bpl	.L130
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
 2441              		.loc 1 2384 0 is_stmt 1
 2442 0136 201C     		mov	r0, r4
 2443              	.LVL200:
 2444 0138 FFF7FEFF 		bl	UART_EndTransmit_IT
 2445              	.LVL201:
 2446              	.L130:
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2447              		.loc 1 2388 0
 2448              		@ sp needed
 2449              	.LVL202:
 2450 013c 70BD     		pop	{r4, r5, r6, pc}
 2451              	.L148:
 2452 013e C046     		.align	2
 2453              	.L147:
 2454 0140 00000000 		.word	UART_DMAAbortOnError
 2455              		.cfi_endproc
 2456              	.LFE56:
 2458              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
ARM GAS  /tmp/ccJfp1dB.s 			page 114


 2459              		.align	2
 2460              		.code	16
 2461              		.thumb_func
 2463              	UART_DMAAbortOnError:
 2464              	.LFB84:
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2465              		.loc 1 3305 0
 2466              		.cfi_startproc
 2467              	.LVL203:
 2468 0000 08B5     		push	{r3, lr}
 2469              	.LCFI19:
 2470              		.cfi_def_cfa_offset 8
 2471              		.cfi_offset 3, -8
 2472              		.cfi_offset 14, -4
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2473              		.loc 1 3306 0
 2474 0002 806A     		ldr	r0, [r0, #40]
 2475              	.LVL204:
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2476              		.loc 1 3307 0
 2477 0004 0023     		mov	r3, #0
 2478 0006 5A22     		mov	r2, #90
 2479 0008 8352     		strh	r3, [r0, r2]
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2480              		.loc 1 3308 0
 2481 000a 083A     		sub	r2, r2, #8
 2482 000c 8352     		strh	r3, [r0, r2]
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2483              		.loc 1 3315 0
 2484 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2485              	.LVL205:
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2486              		.loc 1 3317 0
 2487              		@ sp needed
 2488 0012 08BD     		pop	{r3, pc}
 2489              		.cfi_endproc
 2490              	.LFE84:
 2492              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2493              		.align	2
 2494              		.weak	HAL_UART_AbortCpltCallback
 2495              		.code	16
 2496              		.thumb_func
 2498              	HAL_UART_AbortCpltCallback:
 2499              	.LFB62:
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2500              		.loc 1 2471 0
 2501              		.cfi_startproc
 2502              	.LVL206:
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2503              		.loc 1 2478 0
 2504              		@ sp needed
 2505 0000 7047     		bx	lr
 2506              		.cfi_endproc
 2507              	.LFE62:
 2509 0002 C046     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2510              		.align	2
 2511              		.global	HAL_UART_Abort_IT
ARM GAS  /tmp/ccJfp1dB.s 			page 115


 2512              		.code	16
 2513              		.thumb_func
 2515              	HAL_UART_Abort_IT:
 2516              	.LFB53:
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2517              		.loc 1 1896 0
 2518              		.cfi_startproc
 2519              	.LVL207:
 2520 0000 10B5     		push	{r4, lr}
 2521              	.LCFI20:
 2522              		.cfi_def_cfa_offset 8
 2523              		.cfi_offset 4, -8
 2524              		.cfi_offset 14, -4
 2525 0002 041C     		mov	r4, r0
 2526              	.LVL208:
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2527              		.loc 1 1900 0
 2528 0004 0268     		ldr	r2, [r0]
 2529 0006 1168     		ldr	r1, [r2]
 2530 0008 334B     		ldr	r3, .L163
 2531 000a 0B40     		and	r3, r1
 2532 000c 1360     		str	r3, [r2]
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2533              		.loc 1 1901 0
 2534 000e 0268     		ldr	r2, [r0]
 2535 0010 9368     		ldr	r3, [r2, #8]
 2536 0012 0121     		mov	r1, #1
 2537 0014 8B43     		bic	r3, r1
 2538 0016 9360     		str	r3, [r2, #8]
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2539              		.loc 1 1906 0
 2540 0018 836E     		ldr	r3, [r0, #104]
 2541 001a 002B     		cmp	r3, #0
 2542 001c 08D0     		beq	.L152
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2543              		.loc 1 1910 0
 2544 001e 0268     		ldr	r2, [r0]
 2545 0020 9268     		ldr	r2, [r2, #8]
 2546 0022 1206     		lsl	r2, r2, #24
 2547 0024 02D5     		bpl	.L153
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2548              		.loc 1 1912 0
 2549 0026 2D4A     		ldr	r2, .L163+4
 2550 0028 9A63     		str	r2, [r3, #56]
 2551 002a 01E0     		b	.L152
 2552              	.L153:
1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2553              		.loc 1 1916 0
 2554 002c 0022     		mov	r2, #0
 2555 002e 9A63     		str	r2, [r3, #56]
 2556              	.L152:
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2557              		.loc 1 1920 0
 2558 0030 E36E     		ldr	r3, [r4, #108]
 2559 0032 002B     		cmp	r3, #0
 2560 0034 08D0     		beq	.L154
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 116


 2561              		.loc 1 1924 0
 2562 0036 2268     		ldr	r2, [r4]
 2563 0038 9268     		ldr	r2, [r2, #8]
 2564 003a 5206     		lsl	r2, r2, #25
 2565 003c 02D5     		bpl	.L155
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2566              		.loc 1 1926 0
 2567 003e 284A     		ldr	r2, .L163+8
 2568 0040 9A63     		str	r2, [r3, #56]
 2569 0042 01E0     		b	.L154
 2570              	.L155:
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2571              		.loc 1 1930 0
 2572 0044 0022     		mov	r2, #0
 2573 0046 9A63     		str	r2, [r3, #56]
 2574              	.L154:
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2575              		.loc 1 1935 0
 2576 0048 2368     		ldr	r3, [r4]
 2577 004a 9A68     		ldr	r2, [r3, #8]
 2578 004c 1206     		lsl	r2, r2, #24
 2579 004e 0FD5     		bpl	.L159
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2580              		.loc 1 1938 0
 2581 0050 9A68     		ldr	r2, [r3, #8]
 2582 0052 8021     		mov	r1, #128
 2583 0054 8A43     		bic	r2, r1
 2584 0056 9A60     		str	r2, [r3, #8]
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2585              		.loc 1 1941 0
 2586 0058 A06E     		ldr	r0, [r4, #104]
 2587              	.LVL209:
 2588 005a 0028     		cmp	r0, #0
 2589 005c 0AD0     		beq	.L160
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2590              		.loc 1 1947 0
 2591 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2592              	.LVL210:
 2593 0062 0028     		cmp	r0, #0
 2594 0064 08D0     		beq	.L161
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2595              		.loc 1 1949 0
 2596 0066 A36E     		ldr	r3, [r4, #104]
 2597 0068 0022     		mov	r2, #0
 2598 006a 9A63     		str	r2, [r3, #56]
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2599              		.loc 1 1897 0
 2600 006c 0132     		add	r2, r2, #1
 2601 006e 04E0     		b	.L156
 2602              	.LVL211:
 2603              	.L159:
 2604 0070 0122     		mov	r2, #1
 2605 0072 02E0     		b	.L156
 2606              	.LVL212:
 2607              	.L160:
 2608 0074 0122     		mov	r2, #1
 2609 0076 00E0     		b	.L156
ARM GAS  /tmp/ccJfp1dB.s 			page 117


 2610              	.L161:
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2611              		.loc 1 1953 0
 2612 0078 0022     		mov	r2, #0
 2613              	.L156:
 2614              	.LVL213:
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2615              		.loc 1 1959 0
 2616 007a 2368     		ldr	r3, [r4]
 2617 007c 9968     		ldr	r1, [r3, #8]
 2618 007e 4906     		lsl	r1, r1, #25
 2619 0080 10D5     		bpl	.L157
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2620              		.loc 1 1961 0
 2621 0082 9968     		ldr	r1, [r3, #8]
 2622 0084 4020     		mov	r0, #64
 2623 0086 8143     		bic	r1, r0
 2624 0088 9960     		str	r1, [r3, #8]
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2625              		.loc 1 1964 0
 2626 008a E06E     		ldr	r0, [r4, #108]
 2627 008c 0028     		cmp	r0, #0
 2628 008e 09D0     		beq	.L157
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2629              		.loc 1 1970 0
 2630 0090 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2631              	.LVL214:
 2632 0094 0028     		cmp	r0, #0
 2633 0096 04D0     		beq	.L162
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1U;
 2634              		.loc 1 1972 0
 2635 0098 E36E     		ldr	r3, [r4, #108]
 2636 009a 0022     		mov	r2, #0
 2637 009c 9A63     		str	r2, [r3, #56]
 2638              	.LVL215:
1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2639              		.loc 1 1973 0
 2640 009e 0132     		add	r2, r2, #1
 2641 00a0 00E0     		b	.L157
 2642              	.LVL216:
 2643              	.L162:
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2644              		.loc 1 1977 0
 2645 00a2 0022     		mov	r2, #0
 2646              	.L157:
 2647              	.LVL217:
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2648              		.loc 1 1983 0
 2649 00a4 012A     		cmp	r2, #1
 2650 00a6 15D1     		bne	.L158
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2651              		.loc 1 1986 0
 2652 00a8 0023     		mov	r3, #0
 2653 00aa 5132     		add	r2, r2, #81
 2654              	.LVL218:
 2655 00ac A352     		strh	r3, [r4, r2]
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccJfp1dB.s 			page 118


 2656              		.loc 1 1987 0
 2657 00ae 0832     		add	r2, r2, #8
 2658              	.LVL219:
 2659 00b0 A352     		strh	r3, [r4, r2]
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
 2660              		.loc 1 1990 0
 2661 00b2 2366     		str	r3, [r4, #96]
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2662              		.loc 1 1991 0
 2663 00b4 6366     		str	r3, [r4, #100]
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2664              		.loc 1 1994 0
 2665 00b6 E367     		str	r3, [r4, #124]
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2666              		.loc 1 1997 0
 2667 00b8 2368     		ldr	r3, [r4]
 2668 00ba 4B3A     		sub	r2, r2, #75
 2669              	.LVL220:
 2670 00bc 1A62     		str	r2, [r3, #32]
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2671              		.loc 1 2001 0
 2672 00be 2268     		ldr	r2, [r4]
 2673              	.LVL221:
 2674 00c0 9169     		ldr	r1, [r2, #24]
 2675 00c2 0823     		mov	r3, #8
 2676              	.LVL222:
 2677 00c4 0B43     		orr	r3, r1
 2678 00c6 9361     		str	r3, [r2, #24]
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2679              		.loc 1 2004 0
 2680 00c8 2023     		mov	r3, #32
 2681 00ca 6367     		str	r3, [r4, #116]
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2682              		.loc 1 2005 0
 2683 00cc A367     		str	r3, [r4, #120]
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2684              		.loc 1 2013 0
 2685 00ce 201C     		mov	r0, r4
 2686 00d0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2687              	.LVL223:
 2688              	.L158:
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2689              		.loc 1 2018 0
 2690 00d4 0020     		mov	r0, #0
 2691              		@ sp needed
 2692              	.LVL224:
 2693 00d6 10BD     		pop	{r4, pc}
 2694              	.L164:
 2695              		.align	2
 2696              	.L163:
 2697 00d8 1FFEFFFF 		.word	-481
 2698 00dc 00000000 		.word	UART_DMATxAbortCallback
 2699 00e0 00000000 		.word	UART_DMARxAbortCallback
 2700              		.cfi_endproc
 2701              	.LFE53:
 2703              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2704              		.align	2
ARM GAS  /tmp/ccJfp1dB.s 			page 119


 2705              		.code	16
 2706              		.thumb_func
 2708              	UART_DMARxAbortCallback:
 2709              	.LFB86:
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2710              		.loc 1 3377 0
 2711              		.cfi_startproc
 2712              	.LVL225:
 2713 0000 08B5     		push	{r3, lr}
 2714              	.LCFI21:
 2715              		.cfi_def_cfa_offset 8
 2716              		.cfi_offset 3, -8
 2717              		.cfi_offset 14, -4
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2718              		.loc 1 3378 0
 2719 0002 806A     		ldr	r0, [r0, #40]
 2720              	.LVL226:
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2721              		.loc 1 3380 0
 2722 0004 C36E     		ldr	r3, [r0, #108]
 2723 0006 0022     		mov	r2, #0
 2724 0008 9A63     		str	r2, [r3, #56]
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2725              		.loc 1 3383 0
 2726 000a 836E     		ldr	r3, [r0, #104]
 2727 000c 002B     		cmp	r3, #0
 2728 000e 02D0     		beq	.L166
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2729              		.loc 1 3385 0
 2730 0010 9B6B     		ldr	r3, [r3, #56]
 2731 0012 002B     		cmp	r3, #0
 2732 0014 12D1     		bne	.L165
 2733              	.L166:
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2734              		.loc 1 3392 0
 2735 0016 0023     		mov	r3, #0
 2736 0018 5222     		mov	r2, #82
 2737 001a 8352     		strh	r3, [r0, r2]
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2738              		.loc 1 3393 0
 2739 001c 0832     		add	r2, r2, #8
 2740 001e 8352     		strh	r3, [r0, r2]
3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2741              		.loc 1 3396 0
 2742 0020 C367     		str	r3, [r0, #124]
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2743              		.loc 1 3399 0
 2744 0022 0368     		ldr	r3, [r0]
 2745 0024 4B3A     		sub	r2, r2, #75
 2746 0026 1A62     		str	r2, [r3, #32]
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2747              		.loc 1 3402 0
 2748 0028 0268     		ldr	r2, [r0]
 2749 002a 9169     		ldr	r1, [r2, #24]
 2750 002c 0823     		mov	r3, #8
 2751 002e 0B43     		orr	r3, r1
 2752 0030 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/ccJfp1dB.s 			page 120


3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2753              		.loc 1 3405 0
 2754 0032 2023     		mov	r3, #32
 2755 0034 4367     		str	r3, [r0, #116]
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2756              		.loc 1 3406 0
 2757 0036 8367     		str	r3, [r0, #120]
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2758              		.loc 1 3414 0
 2759 0038 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2760              	.LVL227:
 2761              	.L165:
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2762              		.loc 1 3416 0
 2763              		@ sp needed
 2764 003c 08BD     		pop	{r3, pc}
 2765              		.cfi_endproc
 2766              	.LFE86:
 2768 003e C046     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2769              		.align	2
 2770              		.code	16
 2771              		.thumb_func
 2773              	UART_DMATxAbortCallback:
 2774              	.LFB85:
3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2775              		.loc 1 3328 0
 2776              		.cfi_startproc
 2777              	.LVL228:
 2778 0000 08B5     		push	{r3, lr}
 2779              	.LCFI22:
 2780              		.cfi_def_cfa_offset 8
 2781              		.cfi_offset 3, -8
 2782              		.cfi_offset 14, -4
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2783              		.loc 1 3329 0
 2784 0002 806A     		ldr	r0, [r0, #40]
 2785              	.LVL229:
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2786              		.loc 1 3331 0
 2787 0004 836E     		ldr	r3, [r0, #104]
 2788 0006 0022     		mov	r2, #0
 2789 0008 9A63     		str	r2, [r3, #56]
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2790              		.loc 1 3334 0
 2791 000a C36E     		ldr	r3, [r0, #108]
 2792 000c 002B     		cmp	r3, #0
 2793 000e 02D0     		beq	.L169
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2794              		.loc 1 3336 0
 2795 0010 9B6B     		ldr	r3, [r3, #56]
 2796 0012 002B     		cmp	r3, #0
 2797 0014 0DD1     		bne	.L168
 2798              	.L169:
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2799              		.loc 1 3343 0
 2800 0016 0023     		mov	r3, #0
 2801 0018 5222     		mov	r2, #82
ARM GAS  /tmp/ccJfp1dB.s 			page 121


 2802 001a 8352     		strh	r3, [r0, r2]
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2803              		.loc 1 3344 0
 2804 001c 0832     		add	r2, r2, #8
 2805 001e 8352     		strh	r3, [r0, r2]
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2806              		.loc 1 3347 0
 2807 0020 C367     		str	r3, [r0, #124]
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2808              		.loc 1 3350 0
 2809 0022 0368     		ldr	r3, [r0]
 2810 0024 4B3A     		sub	r2, r2, #75
 2811 0026 1A62     		str	r2, [r3, #32]
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2812              		.loc 1 3354 0
 2813 0028 2023     		mov	r3, #32
 2814 002a 4367     		str	r3, [r0, #116]
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2815              		.loc 1 3355 0
 2816 002c 8367     		str	r3, [r0, #120]
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2817              		.loc 1 3363 0
 2818 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2819              	.LVL230:
 2820              	.L168:
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2821              		.loc 1 3365 0
 2822              		@ sp needed
 2823 0032 08BD     		pop	{r3, pc}
 2824              		.cfi_endproc
 2825              	.LFE85:
 2827              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2828              		.align	2
 2829              		.weak	HAL_UART_AbortTransmitCpltCallback
 2830              		.code	16
 2831              		.thumb_func
 2833              	HAL_UART_AbortTransmitCpltCallback:
 2834              	.LFB63:
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2835              		.loc 1 2486 0
 2836              		.cfi_startproc
 2837              	.LVL231:
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2838              		.loc 1 2493 0
 2839              		@ sp needed
 2840 0000 7047     		bx	lr
 2841              		.cfi_endproc
 2842              	.LFE63:
 2844 0002 C046     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2845              		.align	2
 2846              		.global	HAL_UART_AbortTransmit_IT
 2847              		.code	16
 2848              		.thumb_func
 2850              	HAL_UART_AbortTransmit_IT:
 2851              	.LFB54:
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
 2852              		.loc 1 2035 0
ARM GAS  /tmp/ccJfp1dB.s 			page 122


 2853              		.cfi_startproc
 2854              	.LVL232:
 2855 0000 10B5     		push	{r4, lr}
 2856              	.LCFI23:
 2857              		.cfi_def_cfa_offset 8
 2858              		.cfi_offset 4, -8
 2859              		.cfi_offset 14, -4
 2860 0002 041C     		mov	r4, r0
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2861              		.loc 1 2037 0
 2862 0004 0268     		ldr	r2, [r0]
 2863 0006 1368     		ldr	r3, [r2]
 2864 0008 C021     		mov	r1, #192
 2865 000a 8B43     		bic	r3, r1
 2866 000c 1360     		str	r3, [r2]
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2867              		.loc 1 2040 0
 2868 000e 0368     		ldr	r3, [r0]
 2869 0010 9A68     		ldr	r2, [r3, #8]
 2870 0012 1206     		lsl	r2, r2, #24
 2871 0014 1AD5     		bpl	.L173
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2872              		.loc 1 2042 0
 2873 0016 9A68     		ldr	r2, [r3, #8]
 2874 0018 4039     		sub	r1, r1, #64
 2875 001a 8A43     		bic	r2, r1
 2876 001c 9A60     		str	r2, [r3, #8]
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2877              		.loc 1 2045 0
 2878 001e 836E     		ldr	r3, [r0, #104]
 2879 0020 002B     		cmp	r3, #0
 2880 0022 0AD0     		beq	.L174
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2881              		.loc 1 2049 0
 2882 0024 0E4A     		ldr	r2, .L176
 2883 0026 9A63     		str	r2, [r3, #56]
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2884              		.loc 1 2052 0
 2885 0028 806E     		ldr	r0, [r0, #104]
 2886              	.LVL233:
 2887 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2888              	.LVL234:
 2889 002e 0028     		cmp	r0, #0
 2890 0030 14D0     		beq	.L175
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2891              		.loc 1 2055 0
 2892 0032 A06E     		ldr	r0, [r4, #104]
 2893 0034 836B     		ldr	r3, [r0, #56]
 2894 0036 9847     		blx	r3
 2895              	.LVL235:
 2896 0038 10E0     		b	.L175
 2897              	.LVL236:
 2898              	.L174:
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2899              		.loc 1 2061 0
 2900 003a 0023     		mov	r3, #0
 2901 003c 5222     		mov	r2, #82
ARM GAS  /tmp/ccJfp1dB.s 			page 123


 2902 003e 8352     		strh	r3, [r0, r2]
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2903              		.loc 1 2064 0
 2904 0040 4366     		str	r3, [r0, #100]
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2905              		.loc 1 2067 0
 2906 0042 2033     		add	r3, r3, #32
 2907 0044 4367     		str	r3, [r0, #116]
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2908              		.loc 1 2075 0
 2909 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2910              	.LVL237:
 2911 004a 07E0     		b	.L175
 2912              	.LVL238:
 2913              	.L173:
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2914              		.loc 1 2082 0
 2915 004c 0023     		mov	r3, #0
 2916 004e 5222     		mov	r2, #82
 2917 0050 8352     		strh	r3, [r0, r2]
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2918              		.loc 1 2085 0
 2919 0052 4366     		str	r3, [r0, #100]
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2920              		.loc 1 2089 0
 2921 0054 2033     		add	r3, r3, #32
 2922 0056 4367     		str	r3, [r0, #116]
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2923              		.loc 1 2097 0
 2924 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2925              	.LVL239:
 2926              	.L175:
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2927              		.loc 1 2102 0
 2928 005c 0020     		mov	r0, #0
 2929              		@ sp needed
 2930              	.LVL240:
 2931 005e 10BD     		pop	{r4, pc}
 2932              	.L177:
 2933              		.align	2
 2934              	.L176:
 2935 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2936              		.cfi_endproc
 2937              	.LFE54:
 2939              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2940              		.align	2
 2941              		.code	16
 2942              		.thumb_func
 2944              	UART_DMATxOnlyAbortCallback:
 2945              	.LFB87:
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2946              		.loc 1 3428 0
 2947              		.cfi_startproc
 2948              	.LVL241:
 2949 0000 08B5     		push	{r3, lr}
 2950              	.LCFI24:
 2951              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccJfp1dB.s 			page 124


 2952              		.cfi_offset 3, -8
 2953              		.cfi_offset 14, -4
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2954              		.loc 1 3429 0
 2955 0002 806A     		ldr	r0, [r0, #40]
 2956              	.LVL242:
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2957              		.loc 1 3431 0
 2958 0004 0022     		mov	r2, #0
 2959 0006 5223     		mov	r3, #82
 2960 0008 C252     		strh	r2, [r0, r3]
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2961              		.loc 1 3435 0
 2962 000a 323B     		sub	r3, r3, #50
 2963 000c 4367     		str	r3, [r0, #116]
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2964              		.loc 1 3443 0
 2965 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2966              	.LVL243:
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2967              		.loc 1 3445 0
 2968              		@ sp needed
 2969 0012 08BD     		pop	{r3, pc}
 2970              		.cfi_endproc
 2971              	.LFE87:
 2973              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2974              		.align	2
 2975              		.weak	HAL_UART_AbortReceiveCpltCallback
 2976              		.code	16
 2977              		.thumb_func
 2979              	HAL_UART_AbortReceiveCpltCallback:
 2980              	.LFB64:
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2981              		.loc 1 2501 0
 2982              		.cfi_startproc
 2983              	.LVL244:
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2984              		.loc 1 2508 0
 2985              		@ sp needed
 2986 0000 7047     		bx	lr
 2987              		.cfi_endproc
 2988              	.LFE64:
 2990 0002 C046     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2991              		.align	2
 2992              		.global	HAL_UART_AbortReceive_IT
 2993              		.code	16
 2994              		.thumb_func
 2996              	HAL_UART_AbortReceive_IT:
 2997              	.LFB55:
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2998              		.loc 1 2119 0
 2999              		.cfi_startproc
 3000              	.LVL245:
 3001 0000 10B5     		push	{r4, lr}
 3002              	.LCFI25:
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 4, -8
ARM GAS  /tmp/ccJfp1dB.s 			page 125


 3005              		.cfi_offset 14, -4
 3006 0002 041C     		mov	r4, r0
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3007              		.loc 1 2121 0
 3008 0004 0268     		ldr	r2, [r0]
 3009 0006 1168     		ldr	r1, [r2]
 3010 0008 1D4B     		ldr	r3, .L184
 3011 000a 0B40     		and	r3, r1
 3012 000c 1360     		str	r3, [r2]
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3013              		.loc 1 2122 0
 3014 000e 0268     		ldr	r2, [r0]
 3015 0010 9368     		ldr	r3, [r2, #8]
 3016 0012 0121     		mov	r1, #1
 3017 0014 8B43     		bic	r3, r1
 3018 0016 9360     		str	r3, [r2, #8]
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3019              		.loc 1 2125 0
 3020 0018 0368     		ldr	r3, [r0]
 3021 001a 9A68     		ldr	r2, [r3, #8]
 3022 001c 5206     		lsl	r2, r2, #25
 3023 001e 22D5     		bpl	.L181
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3024              		.loc 1 2127 0
 3025 0020 9A68     		ldr	r2, [r3, #8]
 3026 0022 3F31     		add	r1, r1, #63
 3027 0024 8A43     		bic	r2, r1
 3028 0026 9A60     		str	r2, [r3, #8]
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3029              		.loc 1 2130 0
 3030 0028 C36E     		ldr	r3, [r0, #108]
 3031 002a 002B     		cmp	r3, #0
 3032 002c 0AD0     		beq	.L182
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3033              		.loc 1 2134 0
 3034 002e 154A     		ldr	r2, .L184+4
 3035 0030 9A63     		str	r2, [r3, #56]
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3036              		.loc 1 2137 0
 3037 0032 C06E     		ldr	r0, [r0, #108]
 3038              	.LVL246:
 3039 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3040              	.LVL247:
 3041 0038 0028     		cmp	r0, #0
 3042 003a 1ED0     		beq	.L183
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3043              		.loc 1 2140 0
 3044 003c E06E     		ldr	r0, [r4, #108]
 3045 003e 836B     		ldr	r3, [r0, #56]
 3046 0040 9847     		blx	r3
 3047              	.LVL248:
 3048 0042 1AE0     		b	.L183
 3049              	.LVL249:
 3050              	.L182:
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3051              		.loc 1 2146 0
 3052 0044 0023     		mov	r3, #0
ARM GAS  /tmp/ccJfp1dB.s 			page 126


 3053 0046 5A22     		mov	r2, #90
 3054 0048 8352     		strh	r3, [r0, r2]
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3055              		.loc 1 2149 0
 3056 004a 4365     		str	r3, [r0, #84]
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3057              		.loc 1 2152 0
 3058 004c 0368     		ldr	r3, [r0]
 3059 004e 4B3A     		sub	r2, r2, #75
 3060 0050 1A62     		str	r2, [r3, #32]
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3061              		.loc 1 2155 0
 3062 0052 0268     		ldr	r2, [r0]
 3063 0054 9169     		ldr	r1, [r2, #24]
 3064 0056 0823     		mov	r3, #8
 3065 0058 0B43     		orr	r3, r1
 3066 005a 9361     		str	r3, [r2, #24]
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3067              		.loc 1 2158 0
 3068 005c 2023     		mov	r3, #32
 3069 005e 8367     		str	r3, [r0, #120]
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3070              		.loc 1 2166 0
 3071 0060 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3072              	.LVL250:
 3073 0064 09E0     		b	.L183
 3074              	.LVL251:
 3075              	.L181:
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3076              		.loc 1 2173 0
 3077 0066 0022     		mov	r2, #0
 3078 0068 5A21     		mov	r1, #90
 3079 006a 4252     		strh	r2, [r0, r1]
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3080              		.loc 1 2176 0
 3081 006c 4265     		str	r2, [r0, #84]
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3082              		.loc 1 2179 0
 3083 006e 0F32     		add	r2, r2, #15
 3084 0070 1A62     		str	r2, [r3, #32]
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3085              		.loc 1 2182 0
 3086 0072 2023     		mov	r3, #32
 3087 0074 8367     		str	r3, [r0, #120]
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3088              		.loc 1 2190 0
 3089 0076 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3090              	.LVL252:
 3091              	.L183:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3092              		.loc 1 2195 0
 3093 007a 0020     		mov	r0, #0
 3094              		@ sp needed
 3095              	.LVL253:
 3096 007c 10BD     		pop	{r4, pc}
 3097              	.L185:
 3098 007e C046     		.align	2
ARM GAS  /tmp/ccJfp1dB.s 			page 127


 3099              	.L184:
 3100 0080 DFFEFFFF 		.word	-289
 3101 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 3102              		.cfi_endproc
 3103              	.LFE55:
 3105              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3106              		.align	2
 3107              		.code	16
 3108              		.thumb_func
 3110              	UART_DMARxOnlyAbortCallback:
 3111              	.LFB88:
3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3112              		.loc 1 3456 0
 3113              		.cfi_startproc
 3114              	.LVL254:
 3115 0000 08B5     		push	{r3, lr}
 3116              	.LCFI26:
 3117              		.cfi_def_cfa_offset 8
 3118              		.cfi_offset 3, -8
 3119              		.cfi_offset 14, -4
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3120              		.loc 1 3457 0
 3121 0002 806A     		ldr	r0, [r0, #40]
 3122              	.LVL255:
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3123              		.loc 1 3459 0
 3124 0004 0022     		mov	r2, #0
 3125 0006 5A23     		mov	r3, #90
 3126 0008 C252     		strh	r2, [r0, r3]
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3127              		.loc 1 3462 0
 3128 000a 0368     		ldr	r3, [r0]
 3129 000c 0F32     		add	r2, r2, #15
 3130 000e 1A62     		str	r2, [r3, #32]
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3131              		.loc 1 3465 0
 3132 0010 0268     		ldr	r2, [r0]
 3133 0012 9169     		ldr	r1, [r2, #24]
 3134 0014 0823     		mov	r3, #8
 3135 0016 0B43     		orr	r3, r1
 3136 0018 9361     		str	r3, [r2, #24]
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3137              		.loc 1 3468 0
 3138 001a 2023     		mov	r3, #32
 3139 001c 8367     		str	r3, [r0, #120]
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3140              		.loc 1 3476 0
 3141 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3142              	.LVL256:
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3143              		.loc 1 3478 0
 3144              		@ sp needed
 3145 0022 08BD     		pop	{r3, pc}
 3146              		.cfi_endproc
 3147              	.LFE88:
 3149              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3150              		.align	2
ARM GAS  /tmp/ccJfp1dB.s 			page 128


 3151              		.global	HAL_MultiProcessor_EnterMuteMode
 3152              		.code	16
 3153              		.thumb_func
 3155              	HAL_MultiProcessor_EnterMuteMode:
 3156              	.LFB67:
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3157              		.loc 1 2585 0
 3158              		.cfi_startproc
 3159              	.LVL257:
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3160              		.loc 1 2586 0
 3161 0000 0268     		ldr	r2, [r0]
 3162 0002 9169     		ldr	r1, [r2, #24]
 3163 0004 0423     		mov	r3, #4
 3164 0006 0B43     		orr	r3, r1
 3165 0008 9361     		str	r3, [r2, #24]
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3166              		.loc 1 2587 0
 3167              		@ sp needed
 3168 000a 7047     		bx	lr
 3169              		.cfi_endproc
 3170              	.LFE67:
 3172              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3173              		.align	2
 3174              		.global	HAL_HalfDuplex_EnableTransmitter
 3175              		.code	16
 3176              		.thumb_func
 3178              	HAL_HalfDuplex_EnableTransmitter:
 3179              	.LFB68:
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 3180              		.loc 1 2595 0
 3181              		.cfi_startproc
 3182              	.LVL258:
 3183 0000 10B5     		push	{r4, lr}
 3184              	.LCFI27:
 3185              		.cfi_def_cfa_offset 8
 3186              		.cfi_offset 4, -8
 3187              		.cfi_offset 14, -4
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3188              		.loc 1 2597 0
 3189 0002 7023     		mov	r3, #112
 3190 0004 C35C     		ldrb	r3, [r0, r3]
 3191 0006 012B     		cmp	r3, #1
 3192 0008 14D0     		beq	.L190
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3193              		.loc 1 2597 0 is_stmt 0 discriminator 2
 3194 000a 7022     		mov	r2, #112
 3195 000c 0123     		mov	r3, #1
 3196 000e 8354     		strb	r3, [r0, r2]
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3197              		.loc 1 2598 0 is_stmt 1 discriminator 2
 3198 0010 2333     		add	r3, r3, #35
 3199 0012 4367     		str	r3, [r0, #116]
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3200              		.loc 1 2601 0 discriminator 2
 3201 0014 0168     		ldr	r1, [r0]
 3202 0016 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccJfp1dB.s 			page 129


 3203 0018 0C24     		mov	r4, #12
 3204 001a A343     		bic	r3, r4
 3205 001c 0B60     		str	r3, [r1]
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3206              		.loc 1 2604 0 discriminator 2
 3207 001e 0168     		ldr	r1, [r0]
 3208 0020 0C68     		ldr	r4, [r1]
 3209 0022 0823     		mov	r3, #8
 3210 0024 2343     		orr	r3, r4
 3211 0026 0B60     		str	r3, [r1]
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3212              		.loc 1 2606 0 discriminator 2
 3213 0028 2023     		mov	r3, #32
 3214 002a 4367     		str	r3, [r0, #116]
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3215              		.loc 1 2609 0 discriminator 2
 3216 002c 0023     		mov	r3, #0
 3217 002e 8354     		strb	r3, [r0, r2]
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3218              		.loc 1 2611 0 discriminator 2
 3219 0030 0020     		mov	r0, #0
 3220              	.LVL259:
 3221 0032 00E0     		b	.L189
 3222              	.LVL260:
 3223              	.L190:
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3224              		.loc 1 2597 0
 3225 0034 0220     		mov	r0, #2
 3226              	.LVL261:
 3227              	.L189:
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3228              		.loc 1 2612 0
 3229              		@ sp needed
 3230 0036 10BD     		pop	{r4, pc}
 3231              		.cfi_endproc
 3232              	.LFE68:
 3234              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3235              		.align	2
 3236              		.global	HAL_HalfDuplex_EnableReceiver
 3237              		.code	16
 3238              		.thumb_func
 3240              	HAL_HalfDuplex_EnableReceiver:
 3241              	.LFB69:
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 3242              		.loc 1 2620 0
 3243              		.cfi_startproc
 3244              	.LVL262:
 3245 0000 10B5     		push	{r4, lr}
 3246              	.LCFI28:
 3247              		.cfi_def_cfa_offset 8
 3248              		.cfi_offset 4, -8
 3249              		.cfi_offset 14, -4
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3250              		.loc 1 2622 0
 3251 0002 7023     		mov	r3, #112
 3252 0004 C35C     		ldrb	r3, [r0, r3]
 3253 0006 012B     		cmp	r3, #1
ARM GAS  /tmp/ccJfp1dB.s 			page 130


 3254 0008 14D0     		beq	.L193
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3255              		.loc 1 2622 0 is_stmt 0 discriminator 2
 3256 000a 7022     		mov	r2, #112
 3257 000c 0123     		mov	r3, #1
 3258 000e 8354     		strb	r3, [r0, r2]
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3259              		.loc 1 2623 0 is_stmt 1 discriminator 2
 3260 0010 2333     		add	r3, r3, #35
 3261 0012 4367     		str	r3, [r0, #116]
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3262              		.loc 1 2626 0 discriminator 2
 3263 0014 0168     		ldr	r1, [r0]
 3264 0016 0B68     		ldr	r3, [r1]
 3265 0018 0C24     		mov	r4, #12
 3266 001a A343     		bic	r3, r4
 3267 001c 0B60     		str	r3, [r1]
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3268              		.loc 1 2629 0 discriminator 2
 3269 001e 0168     		ldr	r1, [r0]
 3270 0020 0C68     		ldr	r4, [r1]
 3271 0022 0423     		mov	r3, #4
 3272 0024 2343     		orr	r3, r4
 3273 0026 0B60     		str	r3, [r1]
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3274              		.loc 1 2631 0 discriminator 2
 3275 0028 2023     		mov	r3, #32
 3276 002a 4367     		str	r3, [r0, #116]
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3277              		.loc 1 2634 0 discriminator 2
 3278 002c 0023     		mov	r3, #0
 3279 002e 8354     		strb	r3, [r0, r2]
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3280              		.loc 1 2636 0 discriminator 2
 3281 0030 0020     		mov	r0, #0
 3282              	.LVL263:
 3283 0032 00E0     		b	.L192
 3284              	.LVL264:
 3285              	.L193:
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3286              		.loc 1 2622 0
 3287 0034 0220     		mov	r0, #2
 3288              	.LVL265:
 3289              	.L192:
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3290              		.loc 1 2637 0
 3291              		@ sp needed
 3292 0036 10BD     		pop	{r4, pc}
 3293              		.cfi_endproc
 3294              	.LFE69:
 3296              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3297              		.align	2
 3298              		.global	HAL_LIN_SendBreak
 3299              		.code	16
 3300              		.thumb_func
 3302              	HAL_LIN_SendBreak:
 3303              	.LFB70:
ARM GAS  /tmp/ccJfp1dB.s 			page 131


2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 3304              		.loc 1 2646 0
 3305              		.cfi_startproc
 3306              	.LVL266:
 3307 0000 10B5     		push	{r4, lr}
 3308              	.LCFI29:
 3309              		.cfi_def_cfa_offset 8
 3310              		.cfi_offset 4, -8
 3311              		.cfi_offset 14, -4
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3312              		.loc 1 2651 0
 3313 0002 7023     		mov	r3, #112
 3314 0004 C35C     		ldrb	r3, [r0, r3]
 3315 0006 012B     		cmp	r3, #1
 3316 0008 0FD0     		beq	.L196
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3317              		.loc 1 2651 0 is_stmt 0 discriminator 2
 3318 000a 7022     		mov	r2, #112
 3319 000c 0123     		mov	r3, #1
 3320 000e 8354     		strb	r3, [r0, r2]
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3321              		.loc 1 2653 0 is_stmt 1 discriminator 2
 3322 0010 2333     		add	r3, r3, #35
 3323 0012 4367     		str	r3, [r0, #116]
2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3324              		.loc 1 2656 0 discriminator 2
 3325 0014 0168     		ldr	r1, [r0]
 3326 0016 8C69     		ldr	r4, [r1, #24]
 3327 0018 223B     		sub	r3, r3, #34
 3328 001a 2343     		orr	r3, r4
 3329 001c 8B61     		str	r3, [r1, #24]
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3330              		.loc 1 2658 0 discriminator 2
 3331 001e 2023     		mov	r3, #32
 3332 0020 4367     		str	r3, [r0, #116]
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3333              		.loc 1 2661 0 discriminator 2
 3334 0022 0023     		mov	r3, #0
 3335 0024 8354     		strb	r3, [r0, r2]
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3336              		.loc 1 2663 0 discriminator 2
 3337 0026 0020     		mov	r0, #0
 3338              	.LVL267:
 3339 0028 00E0     		b	.L195
 3340              	.LVL268:
 3341              	.L196:
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3342              		.loc 1 2651 0
 3343 002a 0220     		mov	r0, #2
 3344              	.LVL269:
 3345              	.L195:
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3346              		.loc 1 2664 0
 3347              		@ sp needed
 3348 002c 10BD     		pop	{r4, pc}
 3349              		.cfi_endproc
 3350              	.LFE70:
ARM GAS  /tmp/ccJfp1dB.s 			page 132


 3352 002e C046     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3353              		.align	2
 3354              		.global	HAL_UART_GetState
 3355              		.code	16
 3356              		.thumb_func
 3358              	HAL_UART_GetState:
 3359              	.LFB71:
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1, temp2;
 3360              		.loc 1 2693 0
 3361              		.cfi_startproc
 3362              	.LVL270:
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
 3363              		.loc 1 2695 0
 3364 0000 426F     		ldr	r2, [r0, #116]
 3365              	.LVL271:
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3366              		.loc 1 2696 0
 3367 0002 836F     		ldr	r3, [r0, #120]
 3368              	.LVL272:
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3369              		.loc 1 2698 0
 3370 0004 1A43     		orr	r2, r3
 3371              	.LVL273:
 3372 0006 101C     		mov	r0, r2
 3373              	.LVL274:
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3374              		.loc 1 2699 0
 3375              		@ sp needed
 3376 0008 7047     		bx	lr
 3377              		.cfi_endproc
 3378              	.LFE71:
 3380 000a C046     		.section	.text.HAL_UART_GetError,"ax",%progbits
 3381              		.align	2
 3382              		.global	HAL_UART_GetError
 3383              		.code	16
 3384              		.thumb_func
 3386              	HAL_UART_GetError:
 3387              	.LFB72:
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
 3388              		.loc 1 2708 0
 3389              		.cfi_startproc
 3390              	.LVL275:
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3391              		.loc 1 2709 0
 3392 0000 C06F     		ldr	r0, [r0, #124]
 3393              	.LVL276:
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 3394              		.loc 1 2710 0
 3395              		@ sp needed
 3396 0002 7047     		bx	lr
 3397              		.cfi_endproc
 3398              	.LFE72:
 3400              		.global	__aeabi_uldivmod
 3401              		.global	__aeabi_uidiv
 3402              		.section	.text.UART_SetConfig,"ax",%progbits
 3403              		.align	2
 3404              		.global	UART_SetConfig
ARM GAS  /tmp/ccJfp1dB.s 			page 133


 3405              		.code	16
 3406              		.thumb_func
 3408              	UART_SetConfig:
 3409              	.LFB73:
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg;
 3410              		.loc 1 2751 0
 3411              		.cfi_startproc
 3412              	.LVL277:
 3413 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3414              	.LCFI30:
 3415              		.cfi_def_cfa_offset 24
 3416              		.cfi_offset 3, -24
 3417              		.cfi_offset 4, -20
 3418              		.cfi_offset 5, -16
 3419              		.cfi_offset 6, -12
 3420              		.cfi_offset 7, -8
 3421              		.cfi_offset 14, -4
 3422 0002 051C     		mov	r5, r0
 3423              	.LVL278:
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3424              		.loc 1 2784 0
 3425 0004 8368     		ldr	r3, [r0, #8]
 3426 0006 0269     		ldr	r2, [r0, #16]
 3427 0008 1343     		orr	r3, r2
 3428 000a 4269     		ldr	r2, [r0, #20]
 3429 000c 1343     		orr	r3, r2
 3430 000e C269     		ldr	r2, [r0, #28]
 3431 0010 1A43     		orr	r2, r3
 3432              	.LVL279:
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3433              		.loc 1 2785 0
 3434 0012 0168     		ldr	r1, [r0]
 3435 0014 0868     		ldr	r0, [r1]
 3436              	.LVL280:
 3437 0016 BF4B     		ldr	r3, .L259
 3438 0018 0340     		and	r3, r0
 3439 001a 1343     		orr	r3, r2
 3440 001c 0B60     		str	r3, [r1]
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3441              		.loc 1 2790 0
 3442 001e 2A68     		ldr	r2, [r5]
 3443              	.LVL281:
 3444 0020 5168     		ldr	r1, [r2, #4]
 3445 0022 BD4B     		ldr	r3, .L259+4
 3446 0024 0B40     		and	r3, r1
 3447 0026 E968     		ldr	r1, [r5, #12]
 3448 0028 0B43     		orr	r3, r1
 3449 002a 5360     		str	r3, [r2, #4]
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3450              		.loc 1 2798 0
 3451 002c AB69     		ldr	r3, [r5, #24]
 3452              	.LVL282:
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3453              		.loc 1 2800 0
 3454 002e 2A68     		ldr	r2, [r5]
 3455 0030 BA49     		ldr	r1, .L259+8
 3456 0032 8A42     		cmp	r2, r1
ARM GAS  /tmp/ccJfp1dB.s 			page 134


 3457 0034 01D0     		beq	.L200
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3458              		.loc 1 2802 0
 3459 0036 296A     		ldr	r1, [r5, #32]
 3460 0038 0B43     		orr	r3, r1
 3461              	.LVL283:
 3462              	.L200:
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3463              		.loc 1 2804 0
 3464 003a 9068     		ldr	r0, [r2, #8]
 3465 003c B849     		ldr	r1, .L259+12
 3466 003e 0140     		and	r1, r0
 3467 0040 0B43     		orr	r3, r1
 3468              	.LVL284:
 3469 0042 9360     		str	r3, [r2, #8]
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3470              		.loc 1 2808 0
 3471 0044 2B68     		ldr	r3, [r5]
 3472 0046 B74A     		ldr	r2, .L259+16
 3473 0048 9342     		cmp	r3, r2
 3474 004a 14D1     		bne	.L201
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3475              		.loc 1 2808 0 is_stmt 0 discriminator 1
 3476 004c B64A     		ldr	r2, .L259+20
 3477 004e D26C     		ldr	r2, [r2, #76]
 3478 0050 0321     		mov	r1, #3
 3479 0052 0A40     		and	r2, r1
 3480 0054 012A     		cmp	r2, #1
 3481 0056 08D0     		beq	.L203
 3482 0058 002A     		cmp	r2, #0
 3483 005a 04D0     		beq	.L204
 3484 005c 022A     		cmp	r2, #2
 3485 005e 4BD0     		beq	.L243
 3486 0060 032A     		cmp	r2, #3
 3487 0062 04D0     		beq	.L206
 3488 0064 05E0     		b	.L258
 3489              	.L204:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3490              		.loc 1 2808 0
 3491 0066 0122     		mov	r2, #1
 3492 0068 51E0     		b	.L205
 3493              	.L203:
 3494              	.LVL285:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3495              		.loc 1 2808 0 discriminator 5
 3496 006a 0422     		mov	r2, #4
 3497 006c 4FE0     		b	.L205
 3498              	.LVL286:
 3499              	.L206:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3500              		.loc 1 2808 0 discriminator 7
 3501 006e 0822     		mov	r2, #8
 3502 0070 4DE0     		b	.L205
 3503              	.LVL287:
 3504              	.L258:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3505              		.loc 1 2808 0 discriminator 3
ARM GAS  /tmp/ccJfp1dB.s 			page 135


 3506 0072 1022     		mov	r2, #16
 3507 0074 4BE0     		b	.L205
 3508              	.L201:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3509              		.loc 1 2808 0 discriminator 2
 3510 0076 AD4A     		ldr	r2, .L259+24
 3511 0078 9342     		cmp	r3, r2
 3512 007a 16D1     		bne	.L207
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3513              		.loc 1 2808 0 discriminator 8
 3514 007c AA4A     		ldr	r2, .L259+20
 3515 007e D26C     		ldr	r2, [r2, #76]
 3516 0080 0C21     		mov	r1, #12
 3517 0082 0A40     		and	r2, r1
 3518 0084 042A     		cmp	r2, #4
 3519 0086 0AD0     		beq	.L209
 3520 0088 02D8     		bhi	.L210
 3521 008a 002A     		cmp	r2, #0
 3522 008c 05D0     		beq	.L211
 3523 008e 0AE0     		b	.L208
 3524              	.L210:
 3525 0090 082A     		cmp	r2, #8
 3526 0092 33D0     		beq	.L244
 3527 0094 0C2A     		cmp	r2, #12
 3528 0096 04D0     		beq	.L212
 3529 0098 05E0     		b	.L208
 3530              	.L211:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3531              		.loc 1 2808 0
 3532 009a 0022     		mov	r2, #0
 3533 009c 37E0     		b	.L205
 3534              	.L209:
 3535              	.LVL288:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3536              		.loc 1 2808 0 discriminator 12
 3537 009e 0422     		mov	r2, #4
 3538 00a0 35E0     		b	.L205
 3539              	.LVL289:
 3540              	.L212:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3541              		.loc 1 2808 0 discriminator 14
 3542 00a2 0822     		mov	r2, #8
 3543 00a4 33E0     		b	.L205
 3544              	.LVL290:
 3545              	.L208:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3546              		.loc 1 2808 0 discriminator 10
 3547 00a6 1022     		mov	r2, #16
 3548 00a8 31E0     		b	.L205
 3549              	.L207:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3550              		.loc 1 2808 0 discriminator 9
 3551 00aa A14A     		ldr	r2, .L259+28
 3552 00ac 9342     		cmp	r3, r2
 3553 00ae 27D0     		beq	.L245
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3554              		.loc 1 2808 0 discriminator 16
ARM GAS  /tmp/ccJfp1dB.s 			page 136


 3555 00b0 A04A     		ldr	r2, .L259+32
 3556 00b2 9342     		cmp	r3, r2
 3557 00b4 26D0     		beq	.L246
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3558              		.loc 1 2808 0 discriminator 18
 3559 00b6 994A     		ldr	r2, .L259+8
 3560 00b8 9342     		cmp	r3, r2
 3561 00ba 25D1     		bne	.L247
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3562              		.loc 1 2808 0 discriminator 19
 3563 00bc 9A4A     		ldr	r2, .L259+20
 3564 00be D16C     		ldr	r1, [r2, #76]
 3565 00c0 C022     		mov	r2, #192
 3566 00c2 1201     		lsl	r2, r2, #4
 3567 00c4 0A40     		and	r2, r1
 3568 00c6 8021     		mov	r1, #128
 3569 00c8 C900     		lsl	r1, r1, #3
 3570 00ca 8A42     		cmp	r2, r1
 3571 00cc 0ED0     		beq	.L214
 3572 00ce 02D8     		bhi	.L215
 3573 00d0 002A     		cmp	r2, #0
 3574 00d2 09D0     		beq	.L216
 3575 00d4 0EE0     		b	.L213
 3576              	.L215:
 3577 00d6 8021     		mov	r1, #128
 3578 00d8 0901     		lsl	r1, r1, #4
 3579 00da 8A42     		cmp	r2, r1
 3580 00dc 16D0     		beq	.L248
 3581 00de C021     		mov	r1, #192
 3582 00e0 0901     		lsl	r1, r1, #4
 3583 00e2 8A42     		cmp	r2, r1
 3584 00e4 04D0     		beq	.L217
 3585 00e6 05E0     		b	.L213
 3586              	.L216:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3587              		.loc 1 2808 0
 3588 00e8 0022     		mov	r2, #0
 3589 00ea 10E0     		b	.L205
 3590              	.L214:
 3591              	.LVL291:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3592              		.loc 1 2808 0 discriminator 23
 3593 00ec 0422     		mov	r2, #4
 3594 00ee 0EE0     		b	.L205
 3595              	.LVL292:
 3596              	.L217:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3597              		.loc 1 2808 0 discriminator 25
 3598 00f0 0822     		mov	r2, #8
 3599 00f2 0CE0     		b	.L205
 3600              	.LVL293:
 3601              	.L213:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3602              		.loc 1 2808 0 discriminator 21
 3603 00f4 1022     		mov	r2, #16
 3604 00f6 0AE0     		b	.L205
 3605              	.L243:
ARM GAS  /tmp/ccJfp1dB.s 			page 137


2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3606              		.loc 1 2808 0
 3607 00f8 0222     		mov	r2, #2
 3608 00fa 08E0     		b	.L205
 3609              	.L244:
 3610 00fc 0222     		mov	r2, #2
 3611 00fe 06E0     		b	.L205
 3612              	.L245:
 3613 0100 0022     		mov	r2, #0
 3614 0102 04E0     		b	.L205
 3615              	.L246:
 3616 0104 0022     		mov	r2, #0
 3617 0106 02E0     		b	.L205
 3618              	.L247:
 3619 0108 1022     		mov	r2, #16
 3620 010a 00E0     		b	.L205
 3621              	.L248:
 3622 010c 0222     		mov	r2, #2
 3623              	.LVL294:
 3624              	.L205:
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3625              		.loc 1 2811 0 is_stmt 1
 3626 010e 8349     		ldr	r1, .L259+8
 3627 0110 8B42     		cmp	r3, r1
 3628 0112 40D1     		bne	.L218
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3629              		.loc 1 2814 0
 3630 0114 022A     		cmp	r2, #2
 3631 0116 0FD0     		beq	.L220
 3632 0118 02D8     		bhi	.L221
 3633 011a 002A     		cmp	r2, #0
 3634 011c 08D0     		beq	.L222
 3635 011e 16E0     		b	.L249
 3636              	.L221:
 3637 0120 042A     		cmp	r2, #4
 3638 0122 10D0     		beq	.L223
 3639 0124 082A     		cmp	r2, #8
 3640 0126 12D1     		bne	.L249
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3641              		.loc 1 2833 0
 3642 0128 8020     		mov	r0, #128
 3643 012a 0002     		lsl	r0, r0, #8
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3644              		.loc 1 2756 0
 3645 012c 0024     		mov	r4, #0
 3646 012e 13E0     		b	.L219
 3647              	.L222:
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3648              		.loc 1 2817 0
 3649 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3650              	.LVL295:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3651              		.loc 1 2756 0
 3652 0134 0024     		mov	r4, #0
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3653              		.loc 1 2818 0
 3654 0136 0FE0     		b	.L219
ARM GAS  /tmp/ccJfp1dB.s 			page 138


 3655              	.LVL296:
 3656              	.L220:
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3657              		.loc 1 2820 0
 3658 0138 7B4B     		ldr	r3, .L259+20
 3659 013a 1B68     		ldr	r3, [r3]
 3660 013c DB06     		lsl	r3, r3, #27
 3661 013e 09D5     		bpl	.L250
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3662              		.loc 1 2822 0
 3663 0140 7D48     		ldr	r0, .L259+36
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3664              		.loc 1 2756 0
 3665 0142 0024     		mov	r4, #0
 3666 0144 08E0     		b	.L219
 3667              	.L223:
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3668              		.loc 1 2830 0
 3669 0146 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3670              	.LVL297:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3671              		.loc 1 2756 0
 3672 014a 0024     		mov	r4, #0
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3673              		.loc 1 2831 0
 3674 014c 04E0     		b	.L219
 3675              	.LVL298:
 3676              	.L249:
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3677              		.loc 1 2757 0
 3678 014e 0020     		mov	r0, #0
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3679              		.loc 1 2837 0
 3680 0150 0124     		mov	r4, #1
 3681 0152 01E0     		b	.L219
 3682              	.L250:
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3683              		.loc 1 2826 0
 3684 0154 7948     		ldr	r0, .L259+40
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3685              		.loc 1 2756 0
 3686 0156 0024     		mov	r4, #0
 3687              	.LVL299:
 3688              	.L219:
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3689              		.loc 1 2842 0
 3690 0158 0028     		cmp	r0, #0
 3691 015a 00D1     		bne	.LCB3398
 3692 015c 11E1     		b	.L225	@long jump
 3693              	.LCB3398:
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3694              		.loc 1 2845 0
 3695 015e 6A68     		ldr	r2, [r5, #4]
 3696 0160 5300     		lsl	r3, r2, #1
 3697 0162 9B18     		add	r3, r3, r2
 3698 0164 8342     		cmp	r3, r0
 3699 0166 00D9     		bls	.LCB3403
ARM GAS  /tmp/ccJfp1dB.s 			page 139


 3700 0168 02E1     		b	.L251	@long jump
 3701              	.LCB3403:
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3702              		.loc 1 2846 0 discriminator 1
 3703 016a 1303     		lsl	r3, r2, #12
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3704              		.loc 1 2845 0 discriminator 1
 3705 016c 8342     		cmp	r3, r0
 3706 016e 00D2     		bcs	.LCB3406
 3707 0170 00E1     		b	.L252	@long jump
 3708              	.LCB3406:
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3709              		.loc 1 2852 0
 3710 0172 070E     		lsr	r7, r0, #24
 3711 0174 0602     		lsl	r6, r0, #8
 3712 0176 5008     		lsr	r0, r2, #1
 3713              	.LVL300:
 3714 0178 0021     		mov	r1, #0
 3715 017a 8019     		add	r0, r0, r6
 3716 017c 7941     		adc	r1, r1, r7
 3717 017e 0023     		mov	r3, #0
 3718 0180 FFF7FEFF 		bl	__aeabi_uldivmod
 3719              	.LVL301:
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3720              		.loc 1 2855 0
 3721 0184 6E4B     		ldr	r3, .L259+44
 3722 0186 C218     		add	r2, r0, r3
 3723 0188 6E4B     		ldr	r3, .L259+48
 3724 018a 9A42     		cmp	r2, r3
 3725 018c 00D9     		bls	.LCB3424
 3726 018e F3E0     		b	.L253	@long jump
 3727              	.LCB3424:
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3728              		.loc 1 2857 0
 3729 0190 2B68     		ldr	r3, [r5]
 3730 0192 D860     		str	r0, [r3, #12]
 3731 0194 F5E0     		b	.L225
 3732              	.LVL302:
 3733              	.L218:
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3734              		.loc 1 2867 0
 3735 0196 8023     		mov	r3, #128
 3736 0198 1B02     		lsl	r3, r3, #8
 3737 019a E969     		ldr	r1, [r5, #28]
 3738 019c 9942     		cmp	r1, r3
 3739 019e 66D1     		bne	.L226
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3740              		.loc 1 2869 0
 3741 01a0 082A     		cmp	r2, #8
 3742 01a2 53D8     		bhi	.L254
 3743 01a4 9200     		lsl	r2, r2, #2
 3744              	.LVL303:
 3745 01a6 684B     		ldr	r3, .L259+52
 3746 01a8 9B58     		ldr	r3, [r3, r2]
 3747 01aa 9F46     		mov	pc, r3
 3748              		.section	.rodata.UART_SetConfig,"a",%progbits
 3749              		.align	2
ARM GAS  /tmp/ccJfp1dB.s 			page 140


 3750              	.L229:
 3751 0000 AC010000 		.word	.L228
 3752 0004 C6010000 		.word	.L230
 3753 0008 E0010000 		.word	.L231
 3754 000c 4C020000 		.word	.L254
 3755 0010 18020000 		.word	.L232
 3756 0014 4C020000 		.word	.L254
 3757 0018 4C020000 		.word	.L254
 3758 001c 4C020000 		.word	.L254
 3759 0020 32020000 		.word	.L233
 3760              		.section	.text.UART_SetConfig
 3761              	.L228:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3762              		.loc 1 2872 0
 3763 01ac FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3764              	.LVL304:
 3765 01b0 4000     		lsl	r0, r0, #1
 3766 01b2 6B68     		ldr	r3, [r5, #4]
 3767 01b4 5B08     		lsr	r3, r3, #1
 3768 01b6 C018     		add	r0, r0, r3
 3769 01b8 6968     		ldr	r1, [r5, #4]
 3770 01ba FFF7FEFF 		bl	__aeabi_uidiv
 3771              	.LVL305:
 3772 01be 0004     		lsl	r0, r0, #16
 3773 01c0 000C     		lsr	r0, r0, #16
 3774              	.LVL306:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3775              		.loc 1 2756 0
 3776 01c2 0024     		mov	r4, #0
2873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 3777              		.loc 1 2873 0
 3778 01c4 44E0     		b	.L227
 3779              	.LVL307:
 3780              	.L230:
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3781              		.loc 1 2875 0
 3782 01c6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3783              	.LVL308:
 3784 01ca 4000     		lsl	r0, r0, #1
 3785 01cc 6B68     		ldr	r3, [r5, #4]
 3786 01ce 5B08     		lsr	r3, r3, #1
 3787 01d0 C018     		add	r0, r0, r3
 3788 01d2 6968     		ldr	r1, [r5, #4]
 3789 01d4 FFF7FEFF 		bl	__aeabi_uidiv
 3790              	.LVL309:
 3791 01d8 0004     		lsl	r0, r0, #16
 3792 01da 000C     		lsr	r0, r0, #16
 3793              	.LVL310:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3794              		.loc 1 2756 0
 3795 01dc 0024     		mov	r4, #0
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3796              		.loc 1 2876 0
 3797 01de 37E0     		b	.L227
 3798              	.LVL311:
 3799              	.L231:
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
ARM GAS  /tmp/ccJfp1dB.s 			page 141


 3800              		.loc 1 2878 0
 3801 01e0 514B     		ldr	r3, .L259+20
 3802 01e2 1B68     		ldr	r3, [r3]
 3803 01e4 DB06     		lsl	r3, r3, #27
 3804 01e6 0BD5     		bpl	.L234
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3805              		.loc 1 2880 0
 3806 01e8 6B68     		ldr	r3, [r5, #4]
 3807 01ea 5808     		lsr	r0, r3, #1
 3808 01ec 574B     		ldr	r3, .L259+56
 3809 01ee 9C46     		mov	ip, r3
 3810 01f0 6044     		add	r0, r0, ip
 3811 01f2 6968     		ldr	r1, [r5, #4]
 3812 01f4 FFF7FEFF 		bl	__aeabi_uidiv
 3813              	.LVL312:
 3814 01f8 0004     		lsl	r0, r0, #16
 3815 01fa 000C     		lsr	r0, r0, #16
 3816              	.LVL313:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3817              		.loc 1 2756 0
 3818 01fc 0024     		mov	r4, #0
 3819 01fe 27E0     		b	.L227
 3820              	.LVL314:
 3821              	.L234:
2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3822              		.loc 1 2884 0
 3823 0200 6B68     		ldr	r3, [r5, #4]
 3824 0202 5808     		lsr	r0, r3, #1
 3825 0204 524B     		ldr	r3, .L259+60
 3826 0206 9C46     		mov	ip, r3
 3827 0208 6044     		add	r0, r0, ip
 3828 020a 6968     		ldr	r1, [r5, #4]
 3829 020c FFF7FEFF 		bl	__aeabi_uidiv
 3830              	.LVL315:
 3831 0210 0004     		lsl	r0, r0, #16
 3832 0212 000C     		lsr	r0, r0, #16
 3833              	.LVL316:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3834              		.loc 1 2756 0
 3835 0214 0024     		mov	r4, #0
 3836 0216 1BE0     		b	.L227
 3837              	.LVL317:
 3838              	.L232:
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3839              		.loc 1 2888 0
 3840 0218 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3841              	.LVL318:
 3842 021c 4000     		lsl	r0, r0, #1
 3843 021e 6B68     		ldr	r3, [r5, #4]
 3844 0220 5B08     		lsr	r3, r3, #1
 3845 0222 C018     		add	r0, r0, r3
 3846 0224 6968     		ldr	r1, [r5, #4]
 3847 0226 FFF7FEFF 		bl	__aeabi_uidiv
 3848              	.LVL319:
 3849 022a 0004     		lsl	r0, r0, #16
 3850 022c 000C     		lsr	r0, r0, #16
 3851              	.LVL320:
ARM GAS  /tmp/ccJfp1dB.s 			page 142


2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3852              		.loc 1 2756 0
 3853 022e 0024     		mov	r4, #0
2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3854              		.loc 1 2889 0
 3855 0230 0EE0     		b	.L227
 3856              	.LVL321:
 3857              	.L233:
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3858              		.loc 1 2891 0
 3859 0232 6B68     		ldr	r3, [r5, #4]
 3860 0234 5808     		lsr	r0, r3, #1
 3861 0236 8023     		mov	r3, #128
 3862 0238 5B02     		lsl	r3, r3, #9
 3863 023a 9C46     		mov	ip, r3
 3864 023c 6044     		add	r0, r0, ip
 3865 023e 6968     		ldr	r1, [r5, #4]
 3866 0240 FFF7FEFF 		bl	__aeabi_uidiv
 3867              	.LVL322:
 3868 0244 0004     		lsl	r0, r0, #16
 3869 0246 000C     		lsr	r0, r0, #16
 3870              	.LVL323:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3871              		.loc 1 2756 0
 3872 0248 0024     		mov	r4, #0
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3873              		.loc 1 2892 0
 3874 024a 01E0     		b	.L227
 3875              	.LVL324:
 3876              	.L254:
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3877              		.loc 1 2895 0
 3878 024c 0124     		mov	r4, #1
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3879              		.loc 1 2755 0
 3880 024e 0020     		mov	r0, #0
 3881              	.LVL325:
 3882              	.L227:
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3883              		.loc 1 2900 0
 3884 0250 404A     		ldr	r2, .L259+64
 3885 0252 031C     		mov	r3, r0
 3886 0254 103B     		sub	r3, r3, #16
 3887 0256 9342     		cmp	r3, r2
 3888 0258 00D9     		bls	.LCB3591
 3889 025a 8FE0     		b	.L255	@long jump
 3890              	.LCB3591:
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3891              		.loc 1 2902 0
 3892 025c 0F22     		mov	r2, #15
 3893 025e 031C     		mov	r3, r0
 3894 0260 9343     		bic	r3, r2
 3895              	.LVL326:
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3896              		.loc 1 2903 0
 3897 0262 1040     		and	r0, r2
 3898              	.LVL327:
ARM GAS  /tmp/ccJfp1dB.s 			page 143


 3899 0264 4008     		lsr	r0, r0, #1
 3900 0266 1843     		orr	r0, r3
 3901              	.LVL328:
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 3902              		.loc 1 2904 0
 3903 0268 2B68     		ldr	r3, [r5]
 3904 026a D860     		str	r0, [r3, #12]
 3905 026c 89E0     		b	.L225
 3906              	.LVL329:
 3907              	.L226:
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3908              		.loc 1 2913 0
 3909 026e 082A     		cmp	r2, #8
 3910 0270 74D8     		bhi	.L256
 3911 0272 9200     		lsl	r2, r2, #2
 3912              	.LVL330:
 3913 0274 384B     		ldr	r3, .L259+68
 3914 0276 9B58     		ldr	r3, [r3, r2]
 3915 0278 9F46     		mov	pc, r3
 3916              		.section	.rodata.UART_SetConfig
 3917              		.align	2
 3918              	.L237:
 3919 0024 7A020000 		.word	.L236
 3920 0028 92020000 		.word	.L238
 3921 002c AA020000 		.word	.L239
 3922 0030 5C030000 		.word	.L256
 3923 0034 E2020000 		.word	.L240
 3924 0038 5C030000 		.word	.L256
 3925 003c 5C030000 		.word	.L256
 3926 0040 5C030000 		.word	.L256
 3927 0044 FA020000 		.word	.L241
 3928              		.section	.text.UART_SetConfig
 3929              	.L236:
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3930              		.loc 1 2916 0
 3931 027a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3932              	.LVL331:
 3933 027e 6B68     		ldr	r3, [r5, #4]
 3934 0280 5B08     		lsr	r3, r3, #1
 3935 0282 C018     		add	r0, r0, r3
 3936 0284 6968     		ldr	r1, [r5, #4]
 3937 0286 FFF7FEFF 		bl	__aeabi_uidiv
 3938              	.LVL332:
 3939 028a 0004     		lsl	r0, r0, #16
 3940 028c 000C     		lsr	r0, r0, #16
 3941              	.LVL333:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3942              		.loc 1 2756 0
 3943 028e 0024     		mov	r4, #0
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 3944              		.loc 1 2917 0
 3945 0290 66E0     		b	.L235
 3946              	.LVL334:
 3947              	.L238:
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3948              		.loc 1 2919 0
 3949 0292 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccJfp1dB.s 			page 144


 3950              	.LVL335:
 3951 0296 6B68     		ldr	r3, [r5, #4]
 3952 0298 5B08     		lsr	r3, r3, #1
 3953 029a C018     		add	r0, r0, r3
 3954 029c 6968     		ldr	r1, [r5, #4]
 3955 029e FFF7FEFF 		bl	__aeabi_uidiv
 3956              	.LVL336:
 3957 02a2 0004     		lsl	r0, r0, #16
 3958 02a4 000C     		lsr	r0, r0, #16
 3959              	.LVL337:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3960              		.loc 1 2756 0
 3961 02a6 0024     		mov	r4, #0
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3962              		.loc 1 2920 0
 3963 02a8 5AE0     		b	.L235
 3964              	.LVL338:
 3965              	.L239:
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3966              		.loc 1 2922 0
 3967 02aa 1F4B     		ldr	r3, .L259+20
 3968 02ac 1B68     		ldr	r3, [r3]
 3969 02ae DB06     		lsl	r3, r3, #27
 3970 02b0 0BD5     		bpl	.L242
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3971              		.loc 1 2924 0
 3972 02b2 6B68     		ldr	r3, [r5, #4]
 3973 02b4 5808     		lsr	r0, r3, #1
 3974 02b6 204B     		ldr	r3, .L259+36
 3975 02b8 9C46     		mov	ip, r3
 3976 02ba 6044     		add	r0, r0, ip
 3977 02bc 6968     		ldr	r1, [r5, #4]
 3978 02be FFF7FEFF 		bl	__aeabi_uidiv
 3979              	.LVL339:
 3980 02c2 0004     		lsl	r0, r0, #16
 3981 02c4 000C     		lsr	r0, r0, #16
 3982              	.LVL340:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3983              		.loc 1 2756 0
 3984 02c6 0024     		mov	r4, #0
 3985 02c8 4AE0     		b	.L235
 3986              	.LVL341:
 3987              	.L242:
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3988              		.loc 1 2928 0
 3989 02ca 6B68     		ldr	r3, [r5, #4]
 3990 02cc 5808     		lsr	r0, r3, #1
 3991 02ce 1B4B     		ldr	r3, .L259+40
 3992 02d0 9C46     		mov	ip, r3
 3993 02d2 6044     		add	r0, r0, ip
 3994 02d4 6968     		ldr	r1, [r5, #4]
 3995 02d6 FFF7FEFF 		bl	__aeabi_uidiv
 3996              	.LVL342:
 3997 02da 0004     		lsl	r0, r0, #16
 3998 02dc 000C     		lsr	r0, r0, #16
 3999              	.LVL343:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
ARM GAS  /tmp/ccJfp1dB.s 			page 145


 4000              		.loc 1 2756 0
 4001 02de 0024     		mov	r4, #0
 4002 02e0 3EE0     		b	.L235
 4003              	.LVL344:
 4004              	.L240:
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4005              		.loc 1 2932 0
 4006 02e2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4007              	.LVL345:
 4008 02e6 6B68     		ldr	r3, [r5, #4]
 4009 02e8 5B08     		lsr	r3, r3, #1
 4010 02ea C018     		add	r0, r0, r3
 4011 02ec 6968     		ldr	r1, [r5, #4]
 4012 02ee FFF7FEFF 		bl	__aeabi_uidiv
 4013              	.LVL346:
 4014 02f2 0004     		lsl	r0, r0, #16
 4015 02f4 000C     		lsr	r0, r0, #16
 4016              	.LVL347:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4017              		.loc 1 2756 0
 4018 02f6 0024     		mov	r4, #0
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4019              		.loc 1 2933 0
 4020 02f8 32E0     		b	.L235
 4021              	.LVL348:
 4022              	.L241:
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4023              		.loc 1 2935 0
 4024 02fa 6B68     		ldr	r3, [r5, #4]
 4025 02fc 5808     		lsr	r0, r3, #1
 4026 02fe 8023     		mov	r3, #128
 4027 0300 1B02     		lsl	r3, r3, #8
 4028 0302 9C46     		mov	ip, r3
 4029 0304 6044     		add	r0, r0, ip
 4030 0306 6968     		ldr	r1, [r5, #4]
 4031 0308 FFF7FEFF 		bl	__aeabi_uidiv
 4032              	.LVL349:
 4033 030c 0004     		lsl	r0, r0, #16
 4034 030e 000C     		lsr	r0, r0, #16
 4035              	.LVL350:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4036              		.loc 1 2756 0
 4037 0310 0024     		mov	r4, #0
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 4038              		.loc 1 2936 0
 4039 0312 25E0     		b	.L235
 4040              	.L260:
 4041              		.align	2
 4042              	.L259:
 4043 0314 F369FFEF 		.word	-268473869
 4044 0318 FFCFFFFF 		.word	-12289
 4045 031c 00480040 		.word	1073760256
 4046 0320 FFF4FFFF 		.word	-2817
 4047 0324 00380140 		.word	1073821696
 4048 0328 00100240 		.word	1073876992
 4049 032c 00440040 		.word	1073759232
 4050 0330 004C0040 		.word	1073761280
ARM GAS  /tmp/ccJfp1dB.s 			page 146


 4051 0334 00500040 		.word	1073762304
 4052 0338 00093D00 		.word	4000000
 4053 033c 0024F400 		.word	16000000
 4054 0340 00FDFFFF 		.word	-768
 4055 0344 FFFC0F00 		.word	1047807
 4056 0348 00000000 		.word	.L229
 4057 034c 00127A00 		.word	8000000
 4058 0350 0048E801 		.word	32000000
 4059 0354 EFFF0000 		.word	65519
 4060 0358 24000000 		.word	.L237
 4061              	.LVL351:
 4062              	.L256:
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4063              		.loc 1 2939 0
 4064 035c 0124     		mov	r4, #1
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4065              		.loc 1 2755 0
 4066 035e 0020     		mov	r0, #0
 4067              	.LVL352:
 4068              	.L235:
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4069              		.loc 1 2944 0
 4070 0360 0A4A     		ldr	r2, .L261
 4071 0362 031C     		mov	r3, r0
 4072 0364 103B     		sub	r3, r3, #16
 4073 0366 9342     		cmp	r3, r2
 4074 0368 0AD8     		bhi	.L257
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4075              		.loc 1 2946 0
 4076 036a 2B68     		ldr	r3, [r5]
 4077 036c D860     		str	r0, [r3, #12]
 4078 036e 08E0     		b	.L225
 4079              	.LVL353:
 4080              	.L251:
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4081              		.loc 1 2848 0
 4082 0370 0124     		mov	r4, #1
 4083              	.LVL354:
 4084 0372 06E0     		b	.L225
 4085              	.LVL355:
 4086              	.L252:
 4087 0374 0124     		mov	r4, #1
 4088              	.LVL356:
 4089 0376 04E0     		b	.L225
 4090              	.LVL357:
 4091              	.L253:
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4092              		.loc 1 2861 0
 4093 0378 0124     		mov	r4, #1
 4094              	.LVL358:
 4095 037a 02E0     		b	.L225
 4096              	.LVL359:
 4097              	.L255:
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4098              		.loc 1 2908 0
 4099 037c 0124     		mov	r4, #1
 4100              	.LVL360:
ARM GAS  /tmp/ccJfp1dB.s 			page 147


 4101 037e 00E0     		b	.L225
 4102              	.LVL361:
 4103              	.L257:
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4104              		.loc 1 2950 0
 4105 0380 0124     		mov	r4, #1
 4106              	.LVL362:
 4107              	.L225:
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
 4108              		.loc 1 2956 0
 4109 0382 0023     		mov	r3, #0
 4110 0384 2B66     		str	r3, [r5, #96]
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4111              		.loc 1 2957 0
 4112 0386 6B66     		str	r3, [r5, #100]
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4113              		.loc 1 2960 0
 4114 0388 201C     		mov	r0, r4
 4115              		@ sp needed
 4116              	.LVL363:
 4117              	.LVL364:
 4118 038a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4119              	.L262:
 4120              		.align	2
 4121              	.L261:
 4122 038c EFFF0000 		.word	65519
 4123              		.cfi_endproc
 4124              	.LFE73:
 4126              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4127              		.align	2
 4128              		.global	UART_AdvFeatureConfig
 4129              		.code	16
 4130              		.thumb_func
 4132              	UART_AdvFeatureConfig:
 4133              	.LFB74:
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4134              		.loc 1 2968 0
 4135              		.cfi_startproc
 4136              	.LVL365:
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4137              		.loc 1 2973 0
 4138 0000 436A     		ldr	r3, [r0, #36]
 4139 0002 DB07     		lsl	r3, r3, #31
 4140 0004 06D5     		bpl	.L264
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4141              		.loc 1 2976 0
 4142 0006 0268     		ldr	r2, [r0]
 4143 0008 5168     		ldr	r1, [r2, #4]
 4144 000a 2C4B     		ldr	r3, .L272
 4145 000c 0B40     		and	r3, r1
 4146 000e 816A     		ldr	r1, [r0, #40]
 4147 0010 0B43     		orr	r3, r1
 4148 0012 5360     		str	r3, [r2, #4]
 4149              	.L264:
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4150              		.loc 1 2980 0
 4151 0014 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/ccJfp1dB.s 			page 148


 4152 0016 9B07     		lsl	r3, r3, #30
 4153 0018 06D5     		bpl	.L265
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4154              		.loc 1 2983 0
 4155 001a 0268     		ldr	r2, [r0]
 4156 001c 5168     		ldr	r1, [r2, #4]
 4157 001e 284B     		ldr	r3, .L272+4
 4158 0020 0B40     		and	r3, r1
 4159 0022 C16A     		ldr	r1, [r0, #44]
 4160 0024 0B43     		orr	r3, r1
 4161 0026 5360     		str	r3, [r2, #4]
 4162              	.L265:
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4163              		.loc 1 2987 0
 4164 0028 436A     		ldr	r3, [r0, #36]
 4165 002a 5B07     		lsl	r3, r3, #29
 4166 002c 06D5     		bpl	.L266
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4167              		.loc 1 2990 0
 4168 002e 0268     		ldr	r2, [r0]
 4169 0030 5168     		ldr	r1, [r2, #4]
 4170 0032 244B     		ldr	r3, .L272+8
 4171 0034 0B40     		and	r3, r1
 4172 0036 016B     		ldr	r1, [r0, #48]
 4173 0038 0B43     		orr	r3, r1
 4174 003a 5360     		str	r3, [r2, #4]
 4175              	.L266:
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4176              		.loc 1 2994 0
 4177 003c 436A     		ldr	r3, [r0, #36]
 4178 003e 1B07     		lsl	r3, r3, #28
 4179 0040 06D5     		bpl	.L267
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4180              		.loc 1 2997 0
 4181 0042 0268     		ldr	r2, [r0]
 4182 0044 5168     		ldr	r1, [r2, #4]
 4183 0046 204B     		ldr	r3, .L272+12
 4184 0048 0B40     		and	r3, r1
 4185 004a 416B     		ldr	r1, [r0, #52]
 4186 004c 0B43     		orr	r3, r1
 4187 004e 5360     		str	r3, [r2, #4]
 4188              	.L267:
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4189              		.loc 1 3001 0
 4190 0050 436A     		ldr	r3, [r0, #36]
 4191 0052 DB06     		lsl	r3, r3, #27
 4192 0054 06D5     		bpl	.L268
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4193              		.loc 1 3004 0
 4194 0056 0268     		ldr	r2, [r0]
 4195 0058 9168     		ldr	r1, [r2, #8]
 4196 005a 1C4B     		ldr	r3, .L272+16
 4197 005c 0B40     		and	r3, r1
 4198 005e 816B     		ldr	r1, [r0, #56]
 4199 0060 0B43     		orr	r3, r1
 4200 0062 9360     		str	r3, [r2, #8]
 4201              	.L268:
ARM GAS  /tmp/ccJfp1dB.s 			page 149


3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4202              		.loc 1 3008 0
 4203 0064 436A     		ldr	r3, [r0, #36]
 4204 0066 9B06     		lsl	r3, r3, #26
 4205 0068 06D5     		bpl	.L269
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4206              		.loc 1 3011 0
 4207 006a 0268     		ldr	r2, [r0]
 4208 006c 9168     		ldr	r1, [r2, #8]
 4209 006e 184B     		ldr	r3, .L272+20
 4210 0070 0B40     		and	r3, r1
 4211 0072 C16B     		ldr	r1, [r0, #60]
 4212 0074 0B43     		orr	r3, r1
 4213 0076 9360     		str	r3, [r2, #8]
 4214              	.L269:
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4215              		.loc 1 3015 0
 4216 0078 436A     		ldr	r3, [r0, #36]
 4217 007a 5B06     		lsl	r3, r3, #25
 4218 007c 12D5     		bpl	.L270
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4219              		.loc 1 3019 0
 4220 007e 0268     		ldr	r2, [r0]
 4221 0080 5168     		ldr	r1, [r2, #4]
 4222 0082 144B     		ldr	r3, .L272+24
 4223 0084 0B40     		and	r3, r1
 4224 0086 016C     		ldr	r1, [r0, #64]
 4225 0088 0B43     		orr	r3, r1
 4226 008a 5360     		str	r3, [r2, #4]
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4227              		.loc 1 3021 0
 4228 008c 8023     		mov	r3, #128
 4229 008e 5B03     		lsl	r3, r3, #13
 4230 0090 026C     		ldr	r2, [r0, #64]
 4231 0092 9A42     		cmp	r2, r3
 4232 0094 06D1     		bne	.L270
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4233              		.loc 1 3024 0
 4234 0096 0268     		ldr	r2, [r0]
 4235 0098 5168     		ldr	r1, [r2, #4]
 4236 009a 0F4B     		ldr	r3, .L272+28
 4237 009c 0B40     		and	r3, r1
 4238 009e 416C     		ldr	r1, [r0, #68]
 4239 00a0 0B43     		orr	r3, r1
 4240 00a2 5360     		str	r3, [r2, #4]
 4241              	.L270:
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4242              		.loc 1 3029 0
 4243 00a4 436A     		ldr	r3, [r0, #36]
 4244 00a6 1B06     		lsl	r3, r3, #24
 4245 00a8 06D5     		bpl	.L263
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4246              		.loc 1 3032 0
 4247 00aa 0168     		ldr	r1, [r0]
 4248 00ac 4A68     		ldr	r2, [r1, #4]
 4249 00ae 0B4B     		ldr	r3, .L272+32
 4250 00b0 1340     		and	r3, r2
ARM GAS  /tmp/ccJfp1dB.s 			page 150


 4251 00b2 826C     		ldr	r2, [r0, #72]
 4252 00b4 1343     		orr	r3, r2
 4253 00b6 4B60     		str	r3, [r1, #4]
 4254              	.L263:
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4255              		.loc 1 3034 0
 4256              		@ sp needed
 4257 00b8 7047     		bx	lr
 4258              	.L273:
 4259 00ba C046     		.align	2
 4260              	.L272:
 4261 00bc FFFFFDFF 		.word	-131073
 4262 00c0 FFFFFEFF 		.word	-65537
 4263 00c4 FFFFFBFF 		.word	-262145
 4264 00c8 FF7FFFFF 		.word	-32769
 4265 00cc FFEFFFFF 		.word	-4097
 4266 00d0 FFDFFFFF 		.word	-8193
 4267 00d4 FFFFEFFF 		.word	-1048577
 4268 00d8 FFFF9FFF 		.word	-6291457
 4269 00dc FFFFF7FF 		.word	-524289
 4270              		.cfi_endproc
 4271              	.LFE74:
 4273              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4274              		.align	2
 4275              		.global	UART_WaitOnFlagUntilTimeout
 4276              		.code	16
 4277              		.thumb_func
 4279              	UART_WaitOnFlagUntilTimeout:
 4280              	.LFB76:
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
 4281              		.loc 1 3093 0
 4282              		.cfi_startproc
 4283              	.LVL366:
 4284 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4285              	.LCFI31:
 4286              		.cfi_def_cfa_offset 20
 4287              		.cfi_offset 4, -20
 4288              		.cfi_offset 5, -16
 4289              		.cfi_offset 6, -12
 4290              		.cfi_offset 7, -8
 4291              		.cfi_offset 14, -4
 4292 0002 4746     		mov	r7, r8
 4293 0004 80B4     		push	{r7}
 4294              	.LCFI32:
 4295              		.cfi_def_cfa_offset 24
 4296              		.cfi_offset 8, -24
 4297 0006 061C     		mov	r6, r0
 4298 0008 0C1C     		mov	r4, r1
 4299 000a 171C     		mov	r7, r2
 4300 000c 9846     		mov	r8, r3
 4301 000e 069D     		ldr	r5, [sp, #24]
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4302              		.loc 1 3095 0
 4303 0010 1BE0     		b	.L276
 4304              	.LVL367:
 4305              	.L279:
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccJfp1dB.s 			page 151


 4306              		.loc 1 3098 0
 4307 0012 6B1C     		add	r3, r5, #1
 4308 0014 19D0     		beq	.L276
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4309              		.loc 1 3100 0
 4310 0016 FFF7FEFF 		bl	HAL_GetTick
 4311              	.LVL368:
 4312 001a 4346     		mov	r3, r8
 4313 001c C01A     		sub	r0, r0, r3
 4314 001e A842     		cmp	r0, r5
 4315 0020 01D8     		bhi	.L277
 4316              	.LVL369:
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4317              		.loc 1 3100 0 is_stmt 0 discriminator 1
 4318 0022 002D     		cmp	r5, #0
 4319 0024 11D1     		bne	.L276
 4320              	.L277:
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4321              		.loc 1 3103 0 is_stmt 1
 4322 0026 3268     		ldr	r2, [r6]
 4323 0028 1168     		ldr	r1, [r2]
 4324 002a 0E4B     		ldr	r3, .L280
 4325              	.LVL370:
 4326 002c 0B40     		and	r3, r1
 4327 002e 1360     		str	r3, [r2]
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4328              		.loc 1 3104 0
 4329 0030 3268     		ldr	r2, [r6]
 4330 0032 9368     		ldr	r3, [r2, #8]
 4331 0034 0121     		mov	r1, #1
 4332 0036 8B43     		bic	r3, r1
 4333 0038 9360     		str	r3, [r2, #8]
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4334              		.loc 1 3106 0
 4335 003a 2023     		mov	r3, #32
 4336 003c 7367     		str	r3, [r6, #116]
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4337              		.loc 1 3107 0
 4338 003e B367     		str	r3, [r6, #120]
3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4339              		.loc 1 3110 0
 4340 0040 0022     		mov	r2, #0
 4341 0042 5033     		add	r3, r3, #80
 4342 0044 F254     		strb	r2, [r6, r3]
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4343              		.loc 1 3112 0
 4344 0046 0320     		mov	r0, #3
 4345 0048 08E0     		b	.L278
 4346              	.L276:
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4347              		.loc 1 3095 0
 4348 004a 3368     		ldr	r3, [r6]
 4349 004c DB69     		ldr	r3, [r3, #28]
 4350 004e 2340     		and	r3, r4
 4351 0050 1B1B     		sub	r3, r3, r4
 4352 0052 5A42     		neg	r2, r3
 4353 0054 5341     		adc	r3, r3, r2
ARM GAS  /tmp/ccJfp1dB.s 			page 152


 4354 0056 BB42     		cmp	r3, r7
 4355 0058 DBD0     		beq	.L279
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4356              		.loc 1 3116 0
 4357 005a 0020     		mov	r0, #0
 4358              	.L278:
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4359              		.loc 1 3117 0
 4360              		@ sp needed
 4361              	.LVL371:
 4362              	.LVL372:
 4363              	.LVL373:
 4364 005c 04BC     		pop	{r2}
 4365 005e 9046     		mov	r8, r2
 4366 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 4367              	.L281:
 4368 0062 C046     		.align	2
 4369              	.L280:
 4370 0064 5FFEFFFF 		.word	-417
 4371              		.cfi_endproc
 4372              	.LFE76:
 4374              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4375              		.align	2
 4376              		.global	HAL_UART_Transmit
 4377              		.code	16
 4378              		.thumb_func
 4380              	HAL_UART_Transmit:
 4381              	.LFB41:
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4382              		.loc 1 1036 0
 4383              		.cfi_startproc
 4384              	.LVL374:
 4385 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4386              	.LCFI33:
 4387              		.cfi_def_cfa_offset 20
 4388              		.cfi_offset 4, -20
 4389              		.cfi_offset 5, -16
 4390              		.cfi_offset 6, -12
 4391              		.cfi_offset 7, -8
 4392              		.cfi_offset 14, -4
 4393 0002 85B0     		sub	sp, sp, #20
 4394              	.LCFI34:
 4395              		.cfi_def_cfa_offset 40
 4396 0004 041C     		mov	r4, r0
 4397 0006 0F1C     		mov	r7, r1
 4398 0008 161C     		mov	r6, r2
 4399 000a 1D1C     		mov	r5, r3
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4400              		.loc 1 1042 0
 4401 000c 436F     		ldr	r3, [r0, #116]
 4402              	.LVL375:
 4403 000e 202B     		cmp	r3, #32
 4404 0010 5DD1     		bne	.L290
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4405              		.loc 1 1044 0
 4406 0012 0029     		cmp	r1, #0
 4407 0014 5DD0     		beq	.L291
ARM GAS  /tmp/ccJfp1dB.s 			page 153


1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4408              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4409 0016 002A     		cmp	r2, #0
 4410 0018 5DD0     		beq	.L292
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4411              		.loc 1 1052 0 is_stmt 1
 4412 001a 8023     		mov	r3, #128
 4413 001c 5B01     		lsl	r3, r3, #5
 4414 001e 8268     		ldr	r2, [r0, #8]
 4415              	.LVL376:
 4416 0020 9A42     		cmp	r2, r3
 4417 0022 04D1     		bne	.L284
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4418              		.loc 1 1052 0 is_stmt 0 discriminator 1
 4419 0024 0369     		ldr	r3, [r0, #16]
 4420 0026 002B     		cmp	r3, #0
 4421 0028 01D1     		bne	.L284
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4422              		.loc 1 1054 0 is_stmt 1
 4423 002a CB07     		lsl	r3, r1, #31
 4424 002c 55D4     		bmi	.L293
 4425              	.L284:
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4426              		.loc 1 1061 0
 4427 002e 7023     		mov	r3, #112
 4428 0030 E35C     		ldrb	r3, [r4, r3]
 4429 0032 012B     		cmp	r3, #1
 4430 0034 53D0     		beq	.L294
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4431              		.loc 1 1061 0 is_stmt 0 discriminator 2
 4432 0036 0122     		mov	r2, #1
 4433 0038 7023     		mov	r3, #112
 4434 003a E254     		strb	r2, [r4, r3]
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4435              		.loc 1 1063 0 is_stmt 1 discriminator 2
 4436 003c 0023     		mov	r3, #0
 4437 003e E367     		str	r3, [r4, #124]
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4438              		.loc 1 1064 0 discriminator 2
 4439 0040 2133     		add	r3, r3, #33
 4440 0042 6367     		str	r3, [r4, #116]
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4441              		.loc 1 1067 0 discriminator 2
 4442 0044 FFF7FEFF 		bl	HAL_GetTick
 4443              	.LVL377:
 4444 0048 0390     		str	r0, [sp, #12]
 4445              	.LVL378:
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 4446              		.loc 1 1069 0 discriminator 2
 4447 004a 5023     		mov	r3, #80
 4448 004c E652     		strh	r6, [r4, r3]
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4449              		.loc 1 1070 0 discriminator 2
 4450 004e 0233     		add	r3, r3, #2
 4451 0050 E652     		strh	r6, [r4, r3]
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4452              		.loc 1 1073 0 discriminator 2
ARM GAS  /tmp/ccJfp1dB.s 			page 154


 4453 0052 8023     		mov	r3, #128
 4454 0054 5B01     		lsl	r3, r3, #5
 4455 0056 A268     		ldr	r2, [r4, #8]
 4456 0058 9A42     		cmp	r2, r3
 4457 005a 04D1     		bne	.L295
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4458              		.loc 1 1073 0 is_stmt 0 discriminator 1
 4459 005c 2369     		ldr	r3, [r4, #16]
 4460 005e 002B     		cmp	r3, #0
 4461 0060 03D0     		beq	.L296
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4462              		.loc 1 1081 0 is_stmt 1
 4463 0062 0026     		mov	r6, #0
 4464 0064 1FE0     		b	.L286
 4465              	.L295:
 4466 0066 0026     		mov	r6, #0
 4467 0068 1DE0     		b	.L286
 4468              	.L296:
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4469              		.loc 1 1076 0
 4470 006a 3E1C     		mov	r6, r7
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4471              		.loc 1 1075 0
 4472 006c 0027     		mov	r7, #0
 4473              	.LVL379:
 4474 006e 1AE0     		b	.L286
 4475              	.LVL380:
 4476              	.L289:
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4477              		.loc 1 1086 0
 4478 0070 0095     		str	r5, [sp]
 4479 0072 201C     		mov	r0, r4
 4480 0074 8021     		mov	r1, #128
 4481 0076 0022     		mov	r2, #0
 4482 0078 039B     		ldr	r3, [sp, #12]
 4483 007a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4484              	.LVL381:
 4485 007e 0028     		cmp	r0, #0
 4486 0080 2FD1     		bne	.L297
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4487              		.loc 1 1090 0
 4488 0082 002F     		cmp	r7, #0
 4489 0084 06D1     		bne	.L287
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
 4490              		.loc 1 1092 0
 4491 0086 2268     		ldr	r2, [r4]
 4492 0088 3388     		ldrh	r3, [r6]
 4493 008a DB05     		lsl	r3, r3, #23
 4494 008c DB0D     		lsr	r3, r3, #23
 4495 008e 9362     		str	r3, [r2, #40]
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4496              		.loc 1 1093 0
 4497 0090 0236     		add	r6, r6, #2
 4498              	.LVL382:
 4499 0092 03E0     		b	.L288
 4500              	.L287:
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
ARM GAS  /tmp/ccJfp1dB.s 			page 155


 4501              		.loc 1 1097 0
 4502 0094 2368     		ldr	r3, [r4]
 4503 0096 3A78     		ldrb	r2, [r7]
 4504 0098 9A62     		str	r2, [r3, #40]
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4505              		.loc 1 1098 0
 4506 009a 0137     		add	r7, r7, #1
 4507              	.LVL383:
 4508              	.L288:
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4509              		.loc 1 1100 0
 4510 009c 5222     		mov	r2, #82
 4511 009e A35A     		ldrh	r3, [r4, r2]
 4512 00a0 013B     		sub	r3, r3, #1
 4513 00a2 9BB2     		uxth	r3, r3
 4514 00a4 A352     		strh	r3, [r4, r2]
 4515              	.LVL384:
 4516              	.L286:
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4517              		.loc 1 1084 0
 4518 00a6 5223     		mov	r3, #82
 4519 00a8 E35A     		ldrh	r3, [r4, r3]
 4520 00aa 9BB2     		uxth	r3, r3
 4521 00ac 002B     		cmp	r3, #0
 4522 00ae DFD1     		bne	.L289
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4523              		.loc 1 1103 0
 4524 00b0 0095     		str	r5, [sp]
 4525 00b2 201C     		mov	r0, r4
 4526 00b4 4021     		mov	r1, #64
 4527 00b6 0022     		mov	r2, #0
 4528 00b8 039B     		ldr	r3, [sp, #12]
 4529 00ba FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4530              	.LVL385:
 4531 00be 0028     		cmp	r0, #0
 4532 00c0 11D1     		bne	.L298
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4533              		.loc 1 1109 0
 4534 00c2 2023     		mov	r3, #32
 4535 00c4 6367     		str	r3, [r4, #116]
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4536              		.loc 1 1112 0
 4537 00c6 0022     		mov	r2, #0
 4538 00c8 5033     		add	r3, r3, #80
 4539 00ca E254     		strb	r2, [r4, r3]
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4540              		.loc 1 1114 0
 4541 00cc 0CE0     		b	.L283
 4542              	.LVL386:
 4543              	.L290:
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4544              		.loc 1 1118 0
 4545 00ce 0220     		mov	r0, #2
 4546              	.LVL387:
 4547 00d0 0AE0     		b	.L283
 4548              	.LVL388:
 4549              	.L291:
ARM GAS  /tmp/ccJfp1dB.s 			page 156


1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4550              		.loc 1 1046 0
 4551 00d2 0120     		mov	r0, #1
 4552              	.LVL389:
 4553 00d4 08E0     		b	.L283
 4554              	.LVL390:
 4555              	.L292:
 4556 00d6 0120     		mov	r0, #1
 4557              	.LVL391:
 4558 00d8 06E0     		b	.L283
 4559              	.LVL392:
 4560              	.L293:
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4561              		.loc 1 1056 0
 4562 00da 0120     		mov	r0, #1
 4563              	.LVL393:
 4564 00dc 04E0     		b	.L283
 4565              	.LVL394:
 4566              	.L294:
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4567              		.loc 1 1061 0
 4568 00de 0220     		mov	r0, #2
 4569              	.LVL395:
 4570 00e0 02E0     		b	.L283
 4571              	.LVL396:
 4572              	.L297:
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4573              		.loc 1 1088 0
 4574 00e2 0320     		mov	r0, #3
 4575 00e4 00E0     		b	.L283
 4576              	.L298:
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4577              		.loc 1 1105 0
 4578 00e6 0320     		mov	r0, #3
 4579              	.LVL397:
 4580              	.L283:
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4581              		.loc 1 1120 0
 4582 00e8 05B0     		add	sp, sp, #20
 4583              		@ sp needed
 4584              	.LVL398:
 4585              	.LVL399:
 4586 00ea F0BD     		pop	{r4, r5, r6, r7, pc}
 4587              		.cfi_endproc
 4588              	.LFE41:
 4590              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4591              		.align	2
 4592              		.global	HAL_UART_Receive
 4593              		.code	16
 4594              		.thumb_func
 4596              	HAL_UART_Receive:
 4597              	.LFB42:
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4598              		.loc 1 1135 0
 4599              		.cfi_startproc
 4600              	.LVL400:
 4601 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccJfp1dB.s 			page 157


 4602              	.LCFI35:
 4603              		.cfi_def_cfa_offset 20
 4604              		.cfi_offset 4, -20
 4605              		.cfi_offset 5, -16
 4606              		.cfi_offset 6, -12
 4607              		.cfi_offset 7, -8
 4608              		.cfi_offset 14, -4
 4609 0002 4F46     		mov	r7, r9
 4610 0004 80B4     		push	{r7}
 4611              	.LCFI36:
 4612              		.cfi_def_cfa_offset 24
 4613              		.cfi_offset 9, -24
 4614 0006 84B0     		sub	sp, sp, #16
 4615              	.LCFI37:
 4616              		.cfi_def_cfa_offset 40
 4617 0008 041C     		mov	r4, r0
 4618 000a 0F1C     		mov	r7, r1
 4619 000c 161C     		mov	r6, r2
 4620 000e 1D1C     		mov	r5, r3
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4621              		.loc 1 1142 0
 4622 0010 836F     		ldr	r3, [r0, #120]
 4623              	.LVL401:
 4624 0012 202B     		cmp	r3, #32
 4625 0014 00D0     		beq	.LCB4412
 4626 0016 8EE0     		b	.L314	@long jump
 4627              	.LCB4412:
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4628              		.loc 1 1144 0
 4629 0018 0029     		cmp	r1, #0
 4630 001a 00D1     		bne	.LCB4414
 4631 001c 8DE0     		b	.L315	@long jump
 4632              	.LCB4414:
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4633              		.loc 1 1144 0 is_stmt 0 discriminator 1
 4634 001e 002A     		cmp	r2, #0
 4635 0020 00D1     		bne	.LCB4416
 4636 0022 8CE0     		b	.L316	@long jump
 4637              	.LCB4416:
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4638              		.loc 1 1152 0 is_stmt 1
 4639 0024 8023     		mov	r3, #128
 4640 0026 5B01     		lsl	r3, r3, #5
 4641 0028 8268     		ldr	r2, [r0, #8]
 4642              	.LVL402:
 4643 002a 9A42     		cmp	r2, r3
 4644 002c 05D1     		bne	.L301
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4645              		.loc 1 1152 0 is_stmt 0 discriminator 1
 4646 002e 0369     		ldr	r3, [r0, #16]
 4647 0030 002B     		cmp	r3, #0
 4648 0032 02D1     		bne	.L301
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4649              		.loc 1 1154 0 is_stmt 1
 4650 0034 CB07     		lsl	r3, r1, #31
 4651 0036 00D5     		bpl	.LCB4431
 4652 0038 83E0     		b	.L317	@long jump
ARM GAS  /tmp/ccJfp1dB.s 			page 158


 4653              	.LCB4431:
 4654              	.L301:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4655              		.loc 1 1161 0
 4656 003a 7023     		mov	r3, #112
 4657 003c E35C     		ldrb	r3, [r4, r3]
 4658 003e 012B     		cmp	r3, #1
 4659 0040 00D1     		bne	.LCB4436
 4660 0042 80E0     		b	.L318	@long jump
 4661              	.LCB4436:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4662              		.loc 1 1161 0 is_stmt 0 discriminator 2
 4663 0044 0122     		mov	r2, #1
 4664 0046 7023     		mov	r3, #112
 4665 0048 E254     		strb	r2, [r4, r3]
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4666              		.loc 1 1163 0 is_stmt 1 discriminator 2
 4667 004a 0023     		mov	r3, #0
 4668 004c E367     		str	r3, [r4, #124]
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4669              		.loc 1 1164 0 discriminator 2
 4670 004e 2233     		add	r3, r3, #34
 4671 0050 A367     		str	r3, [r4, #120]
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4672              		.loc 1 1167 0 discriminator 2
 4673 0052 FFF7FEFF 		bl	HAL_GetTick
 4674              	.LVL403:
 4675 0056 0390     		str	r0, [sp, #12]
 4676              	.LVL404:
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 4677              		.loc 1 1169 0 discriminator 2
 4678 0058 5823     		mov	r3, #88
 4679 005a E652     		strh	r6, [r4, r3]
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4680              		.loc 1 1170 0 discriminator 2
 4681 005c 0233     		add	r3, r3, #2
 4682 005e E652     		strh	r6, [r4, r3]
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4683              		.loc 1 1173 0 discriminator 2
 4684 0060 A368     		ldr	r3, [r4, #8]
 4685 0062 8022     		mov	r2, #128
 4686 0064 5201     		lsl	r2, r2, #5
 4687 0066 9342     		cmp	r3, r2
 4688 0068 0AD1     		bne	.L302
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4689              		.loc 1 1173 0 is_stmt 0 discriminator 1
 4690 006a 2269     		ldr	r2, [r4, #16]
 4691 006c 002A     		cmp	r2, #0
 4692 006e 03D1     		bne	.L303
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4693              		.loc 1 1173 0 discriminator 3
 4694 0070 3849     		ldr	r1, .L322
 4695 0072 5C32     		add	r2, r2, #92
 4696 0074 A152     		strh	r1, [r4, r2]
 4697 0076 22E0     		b	.L304
 4698              	.L303:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/ccJfp1dB.s 			page 159


 4699              		.loc 1 1173 0 discriminator 4
 4700 0078 FF21     		mov	r1, #255
 4701 007a 5C22     		mov	r2, #92
 4702 007c A152     		strh	r1, [r4, r2]
 4703 007e 1EE0     		b	.L304
 4704              	.L302:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4705              		.loc 1 1173 0 discriminator 2
 4706 0080 002B     		cmp	r3, #0
 4707 0082 0AD1     		bne	.L305
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4708              		.loc 1 1173 0 discriminator 5
 4709 0084 2269     		ldr	r2, [r4, #16]
 4710 0086 002A     		cmp	r2, #0
 4711 0088 03D1     		bne	.L306
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4712              		.loc 1 1173 0 discriminator 7
 4713 008a FF21     		mov	r1, #255
 4714 008c 5C32     		add	r2, r2, #92
 4715 008e A152     		strh	r1, [r4, r2]
 4716 0090 15E0     		b	.L304
 4717              	.L306:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4718              		.loc 1 1173 0 discriminator 8
 4719 0092 7F21     		mov	r1, #127
 4720 0094 5C22     		mov	r2, #92
 4721 0096 A152     		strh	r1, [r4, r2]
 4722 0098 11E0     		b	.L304
 4723              	.L305:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4724              		.loc 1 1173 0 discriminator 6
 4725 009a 8022     		mov	r2, #128
 4726 009c 5205     		lsl	r2, r2, #21
 4727 009e 9342     		cmp	r3, r2
 4728 00a0 0AD1     		bne	.L307
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4729              		.loc 1 1173 0 discriminator 9
 4730 00a2 2269     		ldr	r2, [r4, #16]
 4731 00a4 002A     		cmp	r2, #0
 4732 00a6 03D1     		bne	.L308
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4733              		.loc 1 1173 0 discriminator 11
 4734 00a8 7F21     		mov	r1, #127
 4735 00aa 5C32     		add	r2, r2, #92
 4736 00ac A152     		strh	r1, [r4, r2]
 4737 00ae 06E0     		b	.L304
 4738              	.L308:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4739              		.loc 1 1173 0 discriminator 12
 4740 00b0 3F21     		mov	r1, #63
 4741 00b2 5C22     		mov	r2, #92
 4742 00b4 A152     		strh	r1, [r4, r2]
 4743 00b6 02E0     		b	.L304
 4744              	.L307:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4745              		.loc 1 1173 0 discriminator 10
 4746 00b8 0021     		mov	r1, #0
ARM GAS  /tmp/ccJfp1dB.s 			page 160


 4747 00ba 5C22     		mov	r2, #92
 4748 00bc A152     		strh	r1, [r4, r2]
 4749              	.L304:
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4750              		.loc 1 1174 0 is_stmt 1
 4751 00be 5C22     		mov	r2, #92
 4752 00c0 A65A     		ldrh	r6, [r4, r2]
 4753              	.LVL405:
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4754              		.loc 1 1177 0
 4755 00c2 8022     		mov	r2, #128
 4756 00c4 5201     		lsl	r2, r2, #5
 4757 00c6 9342     		cmp	r3, r2
 4758 00c8 05D1     		bne	.L319
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4759              		.loc 1 1177 0 is_stmt 0 discriminator 1
 4760 00ca 2369     		ldr	r3, [r4, #16]
 4761 00cc 002B     		cmp	r3, #0
 4762 00ce 05D0     		beq	.L320
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4763              		.loc 1 1185 0 is_stmt 1
 4764 00d0 0023     		mov	r3, #0
 4765 00d2 9946     		mov	r9, r3
 4766 00d4 23E0     		b	.L310
 4767              	.L319:
 4768 00d6 0023     		mov	r3, #0
 4769 00d8 9946     		mov	r9, r3
 4770 00da 20E0     		b	.L310
 4771              	.L320:
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4772              		.loc 1 1180 0
 4773 00dc B946     		mov	r9, r7
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4774              		.loc 1 1179 0
 4775 00de 0027     		mov	r7, #0
 4776              	.LVL406:
 4777 00e0 1DE0     		b	.L310
 4778              	.LVL407:
 4779              	.L313:
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4780              		.loc 1 1191 0
 4781 00e2 0095     		str	r5, [sp]
 4782 00e4 201C     		mov	r0, r4
 4783 00e6 2021     		mov	r1, #32
 4784 00e8 0022     		mov	r2, #0
 4785 00ea 039B     		ldr	r3, [sp, #12]
 4786 00ec FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4787              	.LVL408:
 4788 00f0 0028     		cmp	r0, #0
 4789 00f2 2AD1     		bne	.L321
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4790              		.loc 1 1195 0
 4791 00f4 002F     		cmp	r7, #0
 4792 00f6 08D1     		bne	.L311
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
 4793              		.loc 1 1197 0
 4794 00f8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccJfp1dB.s 			page 161


 4795 00fa 5B6A     		ldr	r3, [r3, #36]
 4796 00fc 3340     		and	r3, r6
 4797 00fe 4A46     		mov	r2, r9
 4798 0100 1380     		strh	r3, [r2]
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4799              		.loc 1 1198 0
 4800 0102 0223     		mov	r3, #2
 4801 0104 9C46     		mov	ip, r3
 4802 0106 E144     		add	r9, r9, ip
 4803              	.LVL409:
 4804 0108 04E0     		b	.L312
 4805              	.L311:
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
 4806              		.loc 1 1202 0
 4807 010a 2368     		ldr	r3, [r4]
 4808 010c 5B6A     		ldr	r3, [r3, #36]
 4809 010e 3340     		and	r3, r6
 4810 0110 3B70     		strb	r3, [r7]
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4811              		.loc 1 1203 0
 4812 0112 0137     		add	r7, r7, #1
 4813              	.LVL410:
 4814              	.L312:
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4815              		.loc 1 1205 0
 4816 0114 5A22     		mov	r2, #90
 4817 0116 A35A     		ldrh	r3, [r4, r2]
 4818 0118 013B     		sub	r3, r3, #1
 4819 011a 9BB2     		uxth	r3, r3
 4820 011c A352     		strh	r3, [r4, r2]
 4821              	.LVL411:
 4822              	.L310:
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4823              		.loc 1 1189 0
 4824 011e 5A23     		mov	r3, #90
 4825 0120 E35A     		ldrh	r3, [r4, r3]
 4826 0122 9BB2     		uxth	r3, r3
 4827 0124 002B     		cmp	r3, #0
 4828 0126 DCD1     		bne	.L313
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4829              		.loc 1 1209 0
 4830 0128 2033     		add	r3, r3, #32
 4831 012a A367     		str	r3, [r4, #120]
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4832              		.loc 1 1212 0
 4833 012c 0022     		mov	r2, #0
 4834 012e 5033     		add	r3, r3, #80
 4835 0130 E254     		strb	r2, [r4, r3]
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4836              		.loc 1 1214 0
 4837 0132 0020     		mov	r0, #0
 4838 0134 0AE0     		b	.L300
 4839              	.LVL412:
 4840              	.L314:
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4841              		.loc 1 1218 0
 4842 0136 0220     		mov	r0, #2
ARM GAS  /tmp/ccJfp1dB.s 			page 162


 4843              	.LVL413:
 4844 0138 08E0     		b	.L300
 4845              	.LVL414:
 4846              	.L315:
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4847              		.loc 1 1146 0
 4848 013a 0120     		mov	r0, #1
 4849              	.LVL415:
 4850 013c 06E0     		b	.L300
 4851              	.LVL416:
 4852              	.L316:
 4853 013e 0120     		mov	r0, #1
 4854              	.LVL417:
 4855 0140 04E0     		b	.L300
 4856              	.LVL418:
 4857              	.L317:
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4858              		.loc 1 1156 0
 4859 0142 0120     		mov	r0, #1
 4860              	.LVL419:
 4861 0144 02E0     		b	.L300
 4862              	.LVL420:
 4863              	.L318:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4864              		.loc 1 1161 0
 4865 0146 0220     		mov	r0, #2
 4866              	.LVL421:
 4867 0148 00E0     		b	.L300
 4868              	.LVL422:
 4869              	.L321:
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4870              		.loc 1 1193 0
 4871 014a 0320     		mov	r0, #3
 4872              	.LVL423:
 4873              	.L300:
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4874              		.loc 1 1220 0
 4875 014c 04B0     		add	sp, sp, #16
 4876              		@ sp needed
 4877              	.LVL424:
 4878              	.LVL425:
 4879 014e 04BC     		pop	{r2}
 4880 0150 9146     		mov	r9, r2
 4881 0152 F0BD     		pop	{r4, r5, r6, r7, pc}
 4882              	.L323:
 4883              		.align	2
 4884              	.L322:
 4885 0154 FF010000 		.word	511
 4886              		.cfi_endproc
 4887              	.LFE42:
 4889              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4890              		.align	2
 4891              		.global	UART_CheckIdleState
 4892              		.code	16
 4893              		.thumb_func
 4895              	UART_CheckIdleState:
 4896              	.LFB75:
ARM GAS  /tmp/ccJfp1dB.s 			page 163


3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
 4897              		.loc 1 3042 0
 4898              		.cfi_startproc
 4899              	.LVL426:
 4900 0000 30B5     		push	{r4, r5, lr}
 4901              	.LCFI38:
 4902              		.cfi_def_cfa_offset 12
 4903              		.cfi_offset 4, -12
 4904              		.cfi_offset 5, -8
 4905              		.cfi_offset 14, -4
 4906 0002 83B0     		sub	sp, sp, #12
 4907              	.LCFI39:
 4908              		.cfi_def_cfa_offset 24
 4909 0004 041C     		mov	r4, r0
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4910              		.loc 1 3046 0
 4911 0006 0023     		mov	r3, #0
 4912 0008 C367     		str	r3, [r0, #124]
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4913              		.loc 1 3049 0
 4914 000a FFF7FEFF 		bl	HAL_GetTick
 4915              	.LVL427:
 4916 000e 051C     		mov	r5, r0
 4917              	.LVL428:
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4918              		.loc 1 3052 0
 4919 0010 2368     		ldr	r3, [r4]
 4920 0012 1B68     		ldr	r3, [r3]
 4921 0014 1B07     		lsl	r3, r3, #28
 4922 0016 0AD5     		bpl	.L325
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4923              		.loc 1 3055 0
 4924 0018 134B     		ldr	r3, .L330
 4925 001a 0093     		str	r3, [sp]
 4926 001c 201C     		mov	r0, r4
 4927              	.LVL429:
 4928 001e 8021     		mov	r1, #128
 4929 0020 8903     		lsl	r1, r1, #14
 4930 0022 0022     		mov	r2, #0
 4931 0024 2B1C     		mov	r3, r5
 4932 0026 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4933              	.LVL430:
 4934 002a 0028     		cmp	r0, #0
 4935 002c 16D1     		bne	.L328
 4936              	.L325:
3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4937              		.loc 1 3063 0
 4938 002e 2368     		ldr	r3, [r4]
 4939 0030 1B68     		ldr	r3, [r3]
 4940 0032 5B07     		lsl	r3, r3, #29
 4941 0034 0AD5     		bpl	.L327
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4942              		.loc 1 3066 0
 4943 0036 0C4B     		ldr	r3, .L330
 4944 0038 0093     		str	r3, [sp]
 4945 003a 201C     		mov	r0, r4
 4946 003c 8021     		mov	r1, #128
ARM GAS  /tmp/ccJfp1dB.s 			page 164


 4947 003e C903     		lsl	r1, r1, #15
 4948 0040 0022     		mov	r2, #0
 4949 0042 2B1C     		mov	r3, r5
 4950 0044 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4951              	.LVL431:
 4952 0048 0028     		cmp	r0, #0
 4953 004a 09D1     		bne	.L329
 4954              	.L327:
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4955              		.loc 1 3074 0
 4956 004c 2023     		mov	r3, #32
 4957 004e 6367     		str	r3, [r4, #116]
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4958              		.loc 1 3075 0
 4959 0050 A367     		str	r3, [r4, #120]
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4960              		.loc 1 3078 0
 4961 0052 0022     		mov	r2, #0
 4962 0054 5033     		add	r3, r3, #80
 4963 0056 E254     		strb	r2, [r4, r3]
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4964              		.loc 1 3080 0
 4965 0058 0020     		mov	r0, #0
 4966 005a 02E0     		b	.L326
 4967              	.L328:
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4968              		.loc 1 3058 0
 4969 005c 0320     		mov	r0, #3
 4970 005e 00E0     		b	.L326
 4971              	.L329:
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4972              		.loc 1 3069 0
 4973 0060 0320     		mov	r0, #3
 4974              	.L326:
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4975              		.loc 1 3081 0
 4976 0062 03B0     		add	sp, sp, #12
 4977              		@ sp needed
 4978              	.LVL432:
 4979              	.LVL433:
 4980 0064 30BD     		pop	{r4, r5, pc}
 4981              	.L331:
 4982 0066 C046     		.align	2
 4983              	.L330:
 4984 0068 FFFFFF01 		.word	33554431
 4985              		.cfi_endproc
 4986              	.LFE75:
 4988              		.section	.text.HAL_UART_Init,"ax",%progbits
 4989              		.align	2
 4990              		.global	HAL_UART_Init
 4991              		.code	16
 4992              		.thumb_func
 4994              	HAL_UART_Init:
 4995              	.LFB34:
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4996              		.loc 1 293 0
 4997              		.cfi_startproc
ARM GAS  /tmp/ccJfp1dB.s 			page 165


 4998              	.LVL434:
 4999 0000 10B5     		push	{r4, lr}
 5000              	.LCFI40:
 5001              		.cfi_def_cfa_offset 8
 5002              		.cfi_offset 4, -8
 5003              		.cfi_offset 14, -4
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5004              		.loc 1 295 0
 5005 0002 0028     		cmp	r0, #0
 5006 0004 2DD0     		beq	.L336
 5007 0006 041C     		mov	r4, r0
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5008              		.loc 1 311 0
 5009 0008 436F     		ldr	r3, [r0, #116]
 5010 000a 002B     		cmp	r3, #0
 5011 000c 04D1     		bne	.L334
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5012              		.loc 1 314 0
 5013 000e 0022     		mov	r2, #0
 5014 0010 7033     		add	r3, r3, #112
 5015 0012 C254     		strb	r2, [r0, r3]
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5016              		.loc 1 328 0
 5017 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 5018              	.LVL435:
 5019              	.L334:
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5020              		.loc 1 332 0
 5021 0018 2423     		mov	r3, #36
 5022 001a 6367     		str	r3, [r4, #116]
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5023              		.loc 1 335 0
 5024 001c 2268     		ldr	r2, [r4]
 5025 001e 1368     		ldr	r3, [r2]
 5026 0020 0121     		mov	r1, #1
 5027 0022 8B43     		bic	r3, r1
 5028 0024 1360     		str	r3, [r2]
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5029              		.loc 1 338 0
 5030 0026 201C     		mov	r0, r4
 5031 0028 FFF7FEFF 		bl	UART_SetConfig
 5032              	.LVL436:
 5033 002c 0128     		cmp	r0, #1
 5034 002e 19D0     		beq	.L333
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5035              		.loc 1 343 0
 5036 0030 636A     		ldr	r3, [r4, #36]
 5037 0032 002B     		cmp	r3, #0
 5038 0034 02D0     		beq	.L335
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5039              		.loc 1 345 0
 5040 0036 201C     		mov	r0, r4
 5041 0038 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5042              	.LVL437:
 5043              	.L335:
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5044              		.loc 1 351 0
ARM GAS  /tmp/ccJfp1dB.s 			page 166


 5045 003c 2268     		ldr	r2, [r4]
 5046 003e 5168     		ldr	r1, [r2, #4]
 5047 0040 094B     		ldr	r3, .L337
 5048 0042 0B40     		and	r3, r1
 5049 0044 5360     		str	r3, [r2, #4]
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5050              		.loc 1 352 0
 5051 0046 2268     		ldr	r2, [r4]
 5052 0048 9368     		ldr	r3, [r2, #8]
 5053 004a 2A21     		mov	r1, #42
 5054 004c 8B43     		bic	r3, r1
 5055 004e 9360     		str	r3, [r2, #8]
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5056              		.loc 1 355 0
 5057 0050 2268     		ldr	r2, [r4]
 5058 0052 1168     		ldr	r1, [r2]
 5059 0054 0123     		mov	r3, #1
 5060 0056 0B43     		orr	r3, r1
 5061 0058 1360     		str	r3, [r2]
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5062              		.loc 1 358 0
 5063 005a 201C     		mov	r0, r4
 5064 005c FFF7FEFF 		bl	UART_CheckIdleState
 5065              	.LVL438:
 5066 0060 00E0     		b	.L333
 5067              	.LVL439:
 5068              	.L336:
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5069              		.loc 1 297 0
 5070 0062 0120     		mov	r0, #1
 5071              	.LVL440:
 5072              	.L333:
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5073              		.loc 1 359 0
 5074              		@ sp needed
 5075 0064 10BD     		pop	{r4, pc}
 5076              	.L338:
 5077 0066 C046     		.align	2
 5078              	.L337:
 5079 0068 FFB7FFFF 		.word	-18433
 5080              		.cfi_endproc
 5081              	.LFE34:
 5083              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 5084              		.align	2
 5085              		.global	HAL_HalfDuplex_Init
 5086              		.code	16
 5087              		.thumb_func
 5089              	HAL_HalfDuplex_Init:
 5090              	.LFB35:
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5091              		.loc 1 368 0
 5092              		.cfi_startproc
 5093              	.LVL441:
 5094 0000 10B5     		push	{r4, lr}
 5095              	.LCFI41:
 5096              		.cfi_def_cfa_offset 8
 5097              		.cfi_offset 4, -8
ARM GAS  /tmp/ccJfp1dB.s 			page 167


 5098              		.cfi_offset 14, -4
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5099              		.loc 1 370 0
 5100 0002 0028     		cmp	r0, #0
 5101 0004 32D0     		beq	.L343
 5102 0006 041C     		mov	r4, r0
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5103              		.loc 1 378 0
 5104 0008 436F     		ldr	r3, [r0, #116]
 5105 000a 002B     		cmp	r3, #0
 5106 000c 04D1     		bne	.L341
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5107              		.loc 1 381 0
 5108 000e 0022     		mov	r2, #0
 5109 0010 7033     		add	r3, r3, #112
 5110 0012 C254     		strb	r2, [r0, r3]
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5111              		.loc 1 395 0
 5112 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 5113              	.LVL442:
 5114              	.L341:
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5115              		.loc 1 399 0
 5116 0018 2423     		mov	r3, #36
 5117 001a 6367     		str	r3, [r4, #116]
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5118              		.loc 1 402 0
 5119 001c 2268     		ldr	r2, [r4]
 5120 001e 1368     		ldr	r3, [r2]
 5121 0020 0121     		mov	r1, #1
 5122 0022 8B43     		bic	r3, r1
 5123 0024 1360     		str	r3, [r2]
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5124              		.loc 1 405 0
 5125 0026 201C     		mov	r0, r4
 5126 0028 FFF7FEFF 		bl	UART_SetConfig
 5127              	.LVL443:
 5128 002c 0128     		cmp	r0, #1
 5129 002e 1ED0     		beq	.L340
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5130              		.loc 1 410 0
 5131 0030 636A     		ldr	r3, [r4, #36]
 5132 0032 002B     		cmp	r3, #0
 5133 0034 02D0     		beq	.L342
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5134              		.loc 1 412 0
 5135 0036 201C     		mov	r0, r4
 5136 0038 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5137              	.LVL444:
 5138              	.L342:
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 5139              		.loc 1 418 0
 5140 003c 2268     		ldr	r2, [r4]
 5141 003e 5168     		ldr	r1, [r2, #4]
 5142 0040 0B4B     		ldr	r3, .L344
 5143 0042 0B40     		and	r3, r1
 5144 0044 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccJfp1dB.s 			page 168


 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5145              		.loc 1 419 0
 5146 0046 2268     		ldr	r2, [r4]
 5147 0048 9368     		ldr	r3, [r2, #8]
 5148 004a 2221     		mov	r1, #34
 5149 004c 8B43     		bic	r3, r1
 5150 004e 9360     		str	r3, [r2, #8]
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5151              		.loc 1 422 0
 5152 0050 2268     		ldr	r2, [r4]
 5153 0052 9168     		ldr	r1, [r2, #8]
 5154 0054 0823     		mov	r3, #8
 5155 0056 0B43     		orr	r3, r1
 5156 0058 9360     		str	r3, [r2, #8]
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5157              		.loc 1 425 0
 5158 005a 2268     		ldr	r2, [r4]
 5159 005c 1168     		ldr	r1, [r2]
 5160 005e 0123     		mov	r3, #1
 5161 0060 0B43     		orr	r3, r1
 5162 0062 1360     		str	r3, [r2]
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5163              		.loc 1 428 0
 5164 0064 201C     		mov	r0, r4
 5165 0066 FFF7FEFF 		bl	UART_CheckIdleState
 5166              	.LVL445:
 5167 006a 00E0     		b	.L340
 5168              	.LVL446:
 5169              	.L343:
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5170              		.loc 1 372 0
 5171 006c 0120     		mov	r0, #1
 5172              	.LVL447:
 5173              	.L340:
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5174              		.loc 1 429 0
 5175              		@ sp needed
 5176 006e 10BD     		pop	{r4, pc}
 5177              	.L345:
 5178              		.align	2
 5179              	.L344:
 5180 0070 FFB7FFFF 		.word	-18433
 5181              		.cfi_endproc
 5182              	.LFE35:
 5184              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5185              		.align	2
 5186              		.global	HAL_LIN_Init
 5187              		.code	16
 5188              		.thumb_func
 5190              	HAL_LIN_Init:
 5191              	.LFB36:
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5192              		.loc 1 443 0
 5193              		.cfi_startproc
 5194              	.LVL448:
 5195 0000 38B5     		push	{r3, r4, r5, lr}
 5196              	.LCFI42:
ARM GAS  /tmp/ccJfp1dB.s 			page 169


 5197              		.cfi_def_cfa_offset 16
 5198              		.cfi_offset 3, -16
 5199              		.cfi_offset 4, -12
 5200              		.cfi_offset 5, -8
 5201              		.cfi_offset 14, -4
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5202              		.loc 1 445 0
 5203 0002 0028     		cmp	r0, #0
 5204 0004 42D0     		beq	.L350
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5205              		.loc 1 456 0
 5206 0006 8023     		mov	r3, #128
 5207 0008 1B02     		lsl	r3, r3, #8
 5208 000a C269     		ldr	r2, [r0, #28]
 5209 000c 9A42     		cmp	r2, r3
 5210 000e 3FD0     		beq	.L351
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5211              		.loc 1 461 0
 5212 0010 8368     		ldr	r3, [r0, #8]
 5213 0012 002B     		cmp	r3, #0
 5214 0014 3ED1     		bne	.L352
 5215 0016 0D1C     		mov	r5, r1
 5216 0018 041C     		mov	r4, r0
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5217              		.loc 1 466 0
 5218 001a 436F     		ldr	r3, [r0, #116]
 5219 001c 002B     		cmp	r3, #0
 5220 001e 04D1     		bne	.L348
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5221              		.loc 1 469 0
 5222 0020 0022     		mov	r2, #0
 5223 0022 7033     		add	r3, r3, #112
 5224 0024 C254     		strb	r2, [r0, r3]
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5225              		.loc 1 483 0
 5226 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 5227              	.LVL449:
 5228              	.L348:
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5229              		.loc 1 487 0
 5230 002a 2423     		mov	r3, #36
 5231 002c 6367     		str	r3, [r4, #116]
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5232              		.loc 1 490 0
 5233 002e 2268     		ldr	r2, [r4]
 5234 0030 1368     		ldr	r3, [r2]
 5235 0032 0121     		mov	r1, #1
 5236 0034 8B43     		bic	r3, r1
 5237 0036 1360     		str	r3, [r2]
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5238              		.loc 1 493 0
 5239 0038 201C     		mov	r0, r4
 5240 003a FFF7FEFF 		bl	UART_SetConfig
 5241              	.LVL450:
 5242 003e 0128     		cmp	r0, #1
 5243 0040 29D0     		beq	.L347
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccJfp1dB.s 			page 170


 5244              		.loc 1 498 0
 5245 0042 636A     		ldr	r3, [r4, #36]
 5246 0044 002B     		cmp	r3, #0
 5247 0046 02D0     		beq	.L349
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5248              		.loc 1 500 0
 5249 0048 201C     		mov	r0, r4
 5250 004a FFF7FEFF 		bl	UART_AdvFeatureConfig
 5251              	.LVL451:
 5252              	.L349:
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 5253              		.loc 1 506 0
 5254 004e 2268     		ldr	r2, [r4]
 5255 0050 5168     		ldr	r1, [r2, #4]
 5256 0052 114B     		ldr	r3, .L353
 5257 0054 0B40     		and	r3, r1
 5258 0056 5360     		str	r3, [r2, #4]
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5259              		.loc 1 507 0
 5260 0058 2268     		ldr	r2, [r4]
 5261 005a 9368     		ldr	r3, [r2, #8]
 5262 005c 2A21     		mov	r1, #42
 5263 005e 8B43     		bic	r3, r1
 5264 0060 9360     		str	r3, [r2, #8]
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5265              		.loc 1 510 0
 5266 0062 2268     		ldr	r2, [r4]
 5267 0064 5368     		ldr	r3, [r2, #4]
 5268 0066 8021     		mov	r1, #128
 5269 0068 C901     		lsl	r1, r1, #7
 5270 006a 0B43     		orr	r3, r1
 5271 006c 5360     		str	r3, [r2, #4]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5272              		.loc 1 513 0
 5273 006e 2368     		ldr	r3, [r4]
 5274 0070 5968     		ldr	r1, [r3, #4]
 5275 0072 2022     		mov	r2, #32
 5276 0074 9143     		bic	r1, r2
 5277 0076 2943     		orr	r1, r5
 5278 0078 5960     		str	r1, [r3, #4]
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5279              		.loc 1 516 0
 5280 007a 2268     		ldr	r2, [r4]
 5281 007c 1168     		ldr	r1, [r2]
 5282 007e 0123     		mov	r3, #1
 5283 0080 0B43     		orr	r3, r1
 5284 0082 1360     		str	r3, [r2]
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5285              		.loc 1 519 0
 5286 0084 201C     		mov	r0, r4
 5287 0086 FFF7FEFF 		bl	UART_CheckIdleState
 5288              	.LVL452:
 5289 008a 04E0     		b	.L347
 5290              	.LVL453:
 5291              	.L350:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5292              		.loc 1 447 0
ARM GAS  /tmp/ccJfp1dB.s 			page 171


 5293 008c 0120     		mov	r0, #1
 5294              	.LVL454:
 5295 008e 02E0     		b	.L347
 5296              	.LVL455:
 5297              	.L351:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5298              		.loc 1 458 0
 5299 0090 0120     		mov	r0, #1
 5300              	.LVL456:
 5301 0092 00E0     		b	.L347
 5302              	.LVL457:
 5303              	.L352:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5304              		.loc 1 463 0
 5305 0094 0120     		mov	r0, #1
 5306              	.LVL458:
 5307              	.L347:
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5308              		.loc 1 520 0
 5309              		@ sp needed
 5310 0096 38BD     		pop	{r3, r4, r5, pc}
 5311              	.L354:
 5312              		.align	2
 5313              	.L353:
 5314 0098 FFF7FFFF 		.word	-2049
 5315              		.cfi_endproc
 5316              	.LFE36:
 5318              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5319              		.align	2
 5320              		.global	HAL_MultiProcessor_Init
 5321              		.code	16
 5322              		.thumb_func
 5324              	HAL_MultiProcessor_Init:
 5325              	.LFB37:
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5326              		.loc 1 542 0
 5327              		.cfi_startproc
 5328              	.LVL459:
 5329 0000 70B5     		push	{r4, r5, r6, lr}
 5330              	.LCFI43:
 5331              		.cfi_def_cfa_offset 16
 5332              		.cfi_offset 4, -16
 5333              		.cfi_offset 5, -12
 5334              		.cfi_offset 6, -8
 5335              		.cfi_offset 14, -4
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5336              		.loc 1 544 0
 5337 0002 0028     		cmp	r0, #0
 5338 0004 40D0     		beq	.L360
 5339 0006 161C     		mov	r6, r2
 5340 0008 0D1C     		mov	r5, r1
 5341 000a 041C     		mov	r4, r0
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5342              		.loc 1 552 0
 5343 000c 436F     		ldr	r3, [r0, #116]
 5344 000e 002B     		cmp	r3, #0
 5345 0010 04D1     		bne	.L357
ARM GAS  /tmp/ccJfp1dB.s 			page 172


 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5346              		.loc 1 555 0
 5347 0012 0022     		mov	r2, #0
 5348              	.LVL460:
 5349 0014 7033     		add	r3, r3, #112
 5350 0016 C254     		strb	r2, [r0, r3]
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5351              		.loc 1 569 0
 5352 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 5353              	.LVL461:
 5354              	.L357:
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5355              		.loc 1 573 0
 5356 001c 2423     		mov	r3, #36
 5357 001e 6367     		str	r3, [r4, #116]
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5358              		.loc 1 576 0
 5359 0020 2268     		ldr	r2, [r4]
 5360 0022 1368     		ldr	r3, [r2]
 5361 0024 0121     		mov	r1, #1
 5362 0026 8B43     		bic	r3, r1
 5363 0028 1360     		str	r3, [r2]
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5364              		.loc 1 579 0
 5365 002a 201C     		mov	r0, r4
 5366 002c FFF7FEFF 		bl	UART_SetConfig
 5367              	.LVL462:
 5368 0030 0128     		cmp	r0, #1
 5369 0032 2AD0     		beq	.L356
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5370              		.loc 1 584 0
 5371 0034 636A     		ldr	r3, [r4, #36]
 5372 0036 002B     		cmp	r3, #0
 5373 0038 02D0     		beq	.L358
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5374              		.loc 1 586 0
 5375 003a 201C     		mov	r0, r4
 5376 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 5377              	.LVL463:
 5378              	.L358:
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5379              		.loc 1 592 0
 5380 0040 2268     		ldr	r2, [r4]
 5381 0042 5168     		ldr	r1, [r2, #4]
 5382 0044 114B     		ldr	r3, .L361
 5383 0046 0B40     		and	r3, r1
 5384 0048 5360     		str	r3, [r2, #4]
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5385              		.loc 1 593 0
 5386 004a 2268     		ldr	r2, [r4]
 5387 004c 9368     		ldr	r3, [r2, #8]
 5388 004e 2A21     		mov	r1, #42
 5389 0050 8B43     		bic	r3, r1
 5390 0052 9360     		str	r3, [r2, #8]
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5391              		.loc 1 595 0
 5392 0054 8023     		mov	r3, #128
ARM GAS  /tmp/ccJfp1dB.s 			page 173


 5393 0056 1B01     		lsl	r3, r3, #4
 5394 0058 9E42     		cmp	r6, r3
 5395 005a 06D1     		bne	.L359
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5396              		.loc 1 598 0
 5397 005c 2368     		ldr	r3, [r4]
 5398 005e 5968     		ldr	r1, [r3, #4]
 5399 0060 0902     		lsl	r1, r1, #8
 5400 0062 090A     		lsr	r1, r1, #8
 5401 0064 2D06     		lsl	r5, r5, #24
 5402 0066 0D43     		orr	r5, r1
 5403 0068 5D60     		str	r5, [r3, #4]
 5404              	.L359:
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5405              		.loc 1 602 0
 5406 006a 2168     		ldr	r1, [r4]
 5407 006c 0A68     		ldr	r2, [r1]
 5408 006e 084B     		ldr	r3, .L361+4
 5409 0070 1A40     		and	r2, r3
 5410 0072 1643     		orr	r6, r2
 5411              	.LVL464:
 5412 0074 0E60     		str	r6, [r1]
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5413              		.loc 1 605 0
 5414 0076 2268     		ldr	r2, [r4]
 5415 0078 1168     		ldr	r1, [r2]
 5416 007a 0123     		mov	r3, #1
 5417 007c 0B43     		orr	r3, r1
 5418 007e 1360     		str	r3, [r2]
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5419              		.loc 1 608 0
 5420 0080 201C     		mov	r0, r4
 5421 0082 FFF7FEFF 		bl	UART_CheckIdleState
 5422              	.LVL465:
 5423 0086 00E0     		b	.L356
 5424              	.LVL466:
 5425              	.L360:
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5426              		.loc 1 546 0
 5427 0088 0120     		mov	r0, #1
 5428              	.LVL467:
 5429              	.L356:
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5430              		.loc 1 609 0
 5431              		@ sp needed
 5432 008a 70BD     		pop	{r4, r5, r6, pc}
 5433              	.L362:
 5434              		.align	2
 5435              	.L361:
 5436 008c FFB7FFFF 		.word	-18433
 5437 0090 FFF7FFFF 		.word	-2049
 5438              		.cfi_endproc
 5439              	.LFE37:
 5441              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5442              		.align	2
 5443              		.global	HAL_MultiProcessor_EnableMuteMode
 5444              		.code	16
ARM GAS  /tmp/ccJfp1dB.s 			page 174


 5445              		.thumb_func
 5447              	HAL_MultiProcessor_EnableMuteMode:
 5448              	.LFB65:
2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5449              		.loc 1 2543 0
 5450              		.cfi_startproc
 5451              	.LVL468:
 5452 0000 08B5     		push	{r3, lr}
 5453              	.LCFI44:
 5454              		.cfi_def_cfa_offset 8
 5455              		.cfi_offset 3, -8
 5456              		.cfi_offset 14, -4
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5457              		.loc 1 2545 0
 5458 0002 7023     		mov	r3, #112
 5459 0004 C35C     		ldrb	r3, [r0, r3]
 5460 0006 012B     		cmp	r3, #1
 5461 0008 0FD0     		beq	.L365
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5462              		.loc 1 2545 0 is_stmt 0 discriminator 2
 5463 000a 0122     		mov	r2, #1
 5464 000c 7023     		mov	r3, #112
 5465 000e C254     		strb	r2, [r0, r3]
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5466              		.loc 1 2547 0 is_stmt 1 discriminator 2
 5467 0010 4C3B     		sub	r3, r3, #76
 5468 0012 4367     		str	r3, [r0, #116]
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5469              		.loc 1 2550 0 discriminator 2
 5470 0014 0268     		ldr	r2, [r0]
 5471 0016 1368     		ldr	r3, [r2]
 5472 0018 8021     		mov	r1, #128
 5473 001a 8901     		lsl	r1, r1, #6
 5474 001c 0B43     		orr	r3, r1
 5475 001e 1360     		str	r3, [r2]
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5476              		.loc 1 2552 0 discriminator 2
 5477 0020 2023     		mov	r3, #32
 5478 0022 4367     		str	r3, [r0, #116]
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5479              		.loc 1 2554 0 discriminator 2
 5480 0024 FFF7FEFF 		bl	UART_CheckIdleState
 5481              	.LVL469:
 5482 0028 00E0     		b	.L364
 5483              	.LVL470:
 5484              	.L365:
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5485              		.loc 1 2545 0
 5486 002a 0220     		mov	r0, #2
 5487              	.LVL471:
 5488              	.L364:
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5489              		.loc 1 2555 0
 5490              		@ sp needed
 5491 002c 08BD     		pop	{r3, pc}
 5492              		.cfi_endproc
 5493              	.LFE65:
ARM GAS  /tmp/ccJfp1dB.s 			page 175


 5495 002e C046     		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5496              		.align	2
 5497              		.global	HAL_MultiProcessor_DisableMuteMode
 5498              		.code	16
 5499              		.thumb_func
 5501              	HAL_MultiProcessor_DisableMuteMode:
 5502              	.LFB66:
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5503              		.loc 1 2564 0
 5504              		.cfi_startproc
 5505              	.LVL472:
 5506 0000 08B5     		push	{r3, lr}
 5507              	.LCFI45:
 5508              		.cfi_def_cfa_offset 8
 5509              		.cfi_offset 3, -8
 5510              		.cfi_offset 14, -4
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5511              		.loc 1 2566 0
 5512 0002 7023     		mov	r3, #112
 5513 0004 C35C     		ldrb	r3, [r0, r3]
 5514 0006 012B     		cmp	r3, #1
 5515 0008 0ED0     		beq	.L368
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5516              		.loc 1 2566 0 is_stmt 0 discriminator 2
 5517 000a 0122     		mov	r2, #1
 5518 000c 7023     		mov	r3, #112
 5519 000e C254     		strb	r2, [r0, r3]
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5520              		.loc 1 2568 0 is_stmt 1 discriminator 2
 5521 0010 4C3B     		sub	r3, r3, #76
 5522 0012 4367     		str	r3, [r0, #116]
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5523              		.loc 1 2571 0 discriminator 2
 5524 0014 0268     		ldr	r2, [r0]
 5525 0016 1168     		ldr	r1, [r2]
 5526 0018 044B     		ldr	r3, .L369
 5527 001a 0B40     		and	r3, r1
 5528 001c 1360     		str	r3, [r2]
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5529              		.loc 1 2573 0 discriminator 2
 5530 001e 2023     		mov	r3, #32
 5531 0020 4367     		str	r3, [r0, #116]
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5532              		.loc 1 2575 0 discriminator 2
 5533 0022 FFF7FEFF 		bl	UART_CheckIdleState
 5534              	.LVL473:
 5535 0026 00E0     		b	.L367
 5536              	.LVL474:
 5537              	.L368:
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5538              		.loc 1 2566 0
 5539 0028 0220     		mov	r0, #2
 5540              	.LVL475:
 5541              	.L367:
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5542              		.loc 1 2576 0
 5543              		@ sp needed
ARM GAS  /tmp/ccJfp1dB.s 			page 176


 5544 002a 08BD     		pop	{r3, pc}
 5545              	.L370:
 5546              		.align	2
 5547              	.L369:
 5548 002c FFDFFFFF 		.word	-8193
 5549              		.cfi_endproc
 5550              	.LFE66:
 5552              		.text
 5553              	.Letext0:
 5554              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5555              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5556              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 5557              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 5558              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 5559              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 5560              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 5561              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 5562              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 5563              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccJfp1dB.s 			page 177


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_uart.c
     /tmp/ccJfp1dB.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccJfp1dB.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccJfp1dB.s:44     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccJfp1dB.s:48     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccJfp1dB.s:77     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/ccJfp1dB.s:82     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccJfp1dB.s:86     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccJfp1dB.s:138    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccJfp1dB.s:142    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccJfp1dB.s:198    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccJfp1dB.s:203    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccJfp1dB.s:215    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccJfp1dB.s:220    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccJfp1dB.s:232    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccJfp1dB.s:237    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccJfp1dB.s:300    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:305    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccJfp1dB.s:436    .text.HAL_UART_Transmit_IT:0000000000000088 $d
     /tmp/ccJfp1dB.s:442    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:447    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccJfp1dB.s:653    .text.HAL_UART_Receive_IT:00000000000000f4 $d
     /tmp/ccJfp1dB.s:1877   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccJfp1dB.s:1785   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccJfp1dB.s:660    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccJfp1dB.s:665    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccJfp1dB.s:819    .text.HAL_UART_Transmit_DMA:00000000000000b4 $d
     /tmp/ccJfp1dB.s:1632   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccJfp1dB.s:1741   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccJfp1dB.s:2095   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccJfp1dB.s:826    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccJfp1dB.s:831    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccJfp1dB.s:991    .text.HAL_UART_Receive_DMA:00000000000000c0 $d
     /tmp/ccJfp1dB.s:1970   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccJfp1dB.s:2051   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccJfp1dB.s:998    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccJfp1dB.s:1003   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccJfp1dB.s:1090   .text.HAL_UART_DMAPause:0000000000000060 $d
     /tmp/ccJfp1dB.s:1095   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccJfp1dB.s:1100   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccJfp1dB.s:1174   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccJfp1dB.s:1179   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccJfp1dB.s:1297   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccJfp1dB.s:1302   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccJfp1dB.s:1432   .text.HAL_UART_Abort:00000000000000ac $d
     /tmp/ccJfp1dB.s:1437   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccJfp1dB.s:1442   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccJfp1dB.s:1514   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccJfp1dB.s:1519   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccJfp1dB.s:1606   .text.HAL_UART_AbortReceive:000000000000006c $d
     /tmp/ccJfp1dB.s:1611   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:1616   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccJfp1dB.s:1628   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccJfp1dB.s:1684   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:1688   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccJfp1dB.s:1720   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccJfp1dB.s 			page 178


     /tmp/ccJfp1dB.s:1725   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccJfp1dB.s:1737   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccJfp1dB.s:1764   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:1769   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccJfp1dB.s:1781   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccJfp1dB.s:1868   .text.UART_RxISR_8BIT:000000000000005c $d
     /tmp/ccJfp1dB.s:1873   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccJfp1dB.s:1961   .text.UART_RxISR_16BIT:000000000000005c $d
     /tmp/ccJfp1dB.s:1966   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccJfp1dB.s:2025   .text.UART_DMAReceiveCplt:000000000000003c $d
     /tmp/ccJfp1dB.s:2030   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2035   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccJfp1dB.s:2047   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccJfp1dB.s:2074   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2079   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccJfp1dB.s:2091   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccJfp1dB.s:2170   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccJfp1dB.s:2175   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccJfp1dB.s:2454   .text.HAL_UART_IRQHandler:0000000000000140 $d
     /tmp/ccJfp1dB.s:2463   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccJfp1dB.s:2459   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccJfp1dB.s:2493   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2498   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccJfp1dB.s:2510   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:2515   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccJfp1dB.s:2697   .text.HAL_UART_Abort_IT:00000000000000d8 $d
     /tmp/ccJfp1dB.s:2773   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccJfp1dB.s:2708   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccJfp1dB.s:2704   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2769   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2828   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2833   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccJfp1dB.s:2845   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:2850   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccJfp1dB.s:2935   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccJfp1dB.s:2944   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccJfp1dB.s:2940   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2974   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:2979   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccJfp1dB.s:2991   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccJfp1dB.s:2996   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccJfp1dB.s:3100   .text.HAL_UART_AbortReceive_IT:0000000000000080 $d
     /tmp/ccJfp1dB.s:3110   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccJfp1dB.s:3106   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccJfp1dB.s:3150   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccJfp1dB.s:3155   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccJfp1dB.s:3173   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccJfp1dB.s:3178   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccJfp1dB.s:3235   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccJfp1dB.s:3240   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccJfp1dB.s:3297   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccJfp1dB.s:3302   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccJfp1dB.s:3353   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccJfp1dB.s:3358   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccJfp1dB.s:3381   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccJfp1dB.s:3386   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccJfp1dB.s:3403   .text.UART_SetConfig:0000000000000000 $t
ARM GAS  /tmp/ccJfp1dB.s 			page 179


     /tmp/ccJfp1dB.s:3408   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccJfp1dB.s:3749   .rodata.UART_SetConfig:0000000000000000 $d
     /tmp/ccJfp1dB.s:4043   .text.UART_SetConfig:0000000000000314 $d
     /tmp/ccJfp1dB.s:4064   .text.UART_SetConfig:000000000000035c $t
     /tmp/ccJfp1dB.s:4122   .text.UART_SetConfig:000000000000038c $d
     /tmp/ccJfp1dB.s:4127   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccJfp1dB.s:4132   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccJfp1dB.s:4261   .text.UART_AdvFeatureConfig:00000000000000bc $d
     /tmp/ccJfp1dB.s:4274   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccJfp1dB.s:4279   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccJfp1dB.s:4370   .text.UART_WaitOnFlagUntilTimeout:0000000000000064 $d
     /tmp/ccJfp1dB.s:4375   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccJfp1dB.s:4380   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccJfp1dB.s:4591   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccJfp1dB.s:4596   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccJfp1dB.s:4885   .text.HAL_UART_Receive:0000000000000154 $d
     /tmp/ccJfp1dB.s:4890   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccJfp1dB.s:4895   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccJfp1dB.s:4984   .text.UART_CheckIdleState:0000000000000068 $d
     /tmp/ccJfp1dB.s:4989   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccJfp1dB.s:4994   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccJfp1dB.s:5079   .text.HAL_UART_Init:0000000000000068 $d
     /tmp/ccJfp1dB.s:5084   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccJfp1dB.s:5089   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccJfp1dB.s:5180   .text.HAL_HalfDuplex_Init:0000000000000070 $d
     /tmp/ccJfp1dB.s:5185   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccJfp1dB.s:5190   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccJfp1dB.s:5314   .text.HAL_LIN_Init:0000000000000098 $d
     /tmp/ccJfp1dB.s:5319   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccJfp1dB.s:5324   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccJfp1dB.s:5436   .text.HAL_MultiProcessor_Init:000000000000008c $d
     /tmp/ccJfp1dB.s:5442   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccJfp1dB.s:5447   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccJfp1dB.s:5496   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccJfp1dB.s:5501   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccJfp1dB.s:5548   .text.HAL_MultiProcessor_DisableMuteMode:000000000000002c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
