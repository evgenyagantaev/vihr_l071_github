ARM GAS  /tmp/cctjJIcy.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"depth_switch_object.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.depth_switch_check_gpio,"ax",%progbits
  18              		.align	2
  19              		.global	depth_switch_check_gpio
  20              		.code	16
  21              		.thumb_func
  23              	depth_switch_check_gpio:
  24              	.LFB34:
  25              		.file 1 "Src/depth_switch_object.c"
   1:Src/depth_switch_object.c **** #include "depth_switch_object.h"
   2:Src/depth_switch_object.c **** #include "depth_switch_interface.h"
   3:Src/depth_switch_object.c **** 
   4:Src/depth_switch_object.c **** 
   5:Src/depth_switch_object.c **** 
   6:Src/depth_switch_object.c **** 
   7:Src/depth_switch_object.c **** int depth_switch_check_gpio()
   8:Src/depth_switch_object.c **** {
  26              		.loc 1 8 0
  27              		.cfi_startproc
   9:Src/depth_switch_object.c **** 	int bitstatus;
  10:Src/depth_switch_object.c **** 
  11:Src/depth_switch_object.c **** 	if ((GPIOA->IDR & GPIO_PIN_9) != (uint32_t)GPIO_PIN_RESET)
  28              		.loc 1 11 0
  29 0000 A023     		mov	r3, #160
  30 0002 DB05     		lsl	r3, r3, #23
  31 0004 1B69     		ldr	r3, [r3, #16]
  32 0006 9B05     		lsl	r3, r3, #22
  33 0008 01D5     		bpl	.L3
  12:Src/depth_switch_object.c ****   	{
  13:Src/depth_switch_object.c ****     	bitstatus = 1;
  34              		.loc 1 13 0
  35 000a 0120     		mov	r0, #1
  36 000c 00E0     		b	.L2
  37              	.L3:
  14:Src/depth_switch_object.c ****   	}
  15:Src/depth_switch_object.c ****   	else
  16:Src/depth_switch_object.c ****   	{
  17:Src/depth_switch_object.c ****     	bitstatus = 0;
  38              		.loc 1 17 0
  39 000e 0020     		mov	r0, #0
  40              	.L2:
  41              	.LVL0:
ARM GAS  /tmp/cctjJIcy.s 			page 2


  18:Src/depth_switch_object.c ****   	}
  19:Src/depth_switch_object.c **** 
  20:Src/depth_switch_object.c **** 	return bitstatus;
  21:Src/depth_switch_object.c **** }
  42              		.loc 1 21 0
  43              		@ sp needed
  44 0010 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE34:
  48 0012 C046     		.section	.text.depth_switch_turn_signal_led,"ax",%progbits
  49              		.align	2
  50              		.global	depth_switch_turn_signal_led
  51              		.code	16
  52              		.thumb_func
  54              	depth_switch_turn_signal_led:
  55              	.LFB35:
  22:Src/depth_switch_object.c **** 
  23:Src/depth_switch_object.c **** 
  24:Src/depth_switch_object.c **** void depth_switch_turn_signal_led(int led_number)
  25:Src/depth_switch_object.c **** {
  56              		.loc 1 25 0
  57              		.cfi_startproc
  58              	.LVL1:
  59 0000 10B5     		push	{r4, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 4, -8
  63              		.cfi_offset 14, -4
  64 0002 041C     		mov	r4, r0
  26:Src/depth_switch_object.c **** 	// turn all leds off
  27:Src/depth_switch_object.c ****   	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3, GPIO_PIN_SET);// turn
  65              		.loc 1 27 0
  66 0004 1648     		ldr	r0, .L10
  67              	.LVL2:
  68 0006 0F21     		mov	r1, #15
  69 0008 0122     		mov	r2, #1
  70 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL3:
  28:Src/depth_switch_object.c **** 
  29:Src/depth_switch_object.c **** 	if(led_number == 1)
  72              		.loc 1 29 0
  73 000e 012C     		cmp	r4, #1
  74 0010 05D1     		bne	.L5
  30:Src/depth_switch_object.c ****   		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  75              		.loc 1 30 0
  76 0012 1348     		ldr	r0, .L10
  77 0014 0121     		mov	r1, #1
  78 0016 0022     		mov	r2, #0
  79 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  80              	.LVL4:
  81 001c 1EE0     		b	.L4
  82              	.L5:
  31:Src/depth_switch_object.c **** 	else if(led_number == 2)
  83              		.loc 1 31 0
  84 001e 022C     		cmp	r4, #2
  85 0020 05D1     		bne	.L7
  32:Src/depth_switch_object.c ****   		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
ARM GAS  /tmp/cctjJIcy.s 			page 3


  86              		.loc 1 32 0
  87 0022 0F48     		ldr	r0, .L10
  88 0024 0221     		mov	r1, #2
  89 0026 0022     		mov	r2, #0
  90 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  91              	.LVL5:
  92 002c 16E0     		b	.L4
  93              	.L7:
  33:Src/depth_switch_object.c **** 	else if(led_number == 3)
  94              		.loc 1 33 0
  95 002e 032C     		cmp	r4, #3
  96 0030 05D1     		bne	.L8
  34:Src/depth_switch_object.c ****   		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
  97              		.loc 1 34 0
  98 0032 0B48     		ldr	r0, .L10
  99 0034 0421     		mov	r1, #4
 100 0036 0022     		mov	r2, #0
 101 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL6:
 103 003c 0EE0     		b	.L4
 104              	.L8:
  35:Src/depth_switch_object.c **** 	else if(led_number == 4)
 105              		.loc 1 35 0
 106 003e 042C     		cmp	r4, #4
 107 0040 05D1     		bne	.L9
  36:Src/depth_switch_object.c ****   		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 108              		.loc 1 36 0
 109 0042 0748     		ldr	r0, .L10
 110 0044 0821     		mov	r1, #8
 111 0046 0022     		mov	r2, #0
 112 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL7:
 114 004c 06E0     		b	.L4
 115              	.L9:
  37:Src/depth_switch_object.c **** 	else if(led_number == 5) // test mode all leds on
 116              		.loc 1 37 0
 117 004e 052C     		cmp	r4, #5
 118 0050 04D1     		bne	.L4
  38:Src/depth_switch_object.c **** 	{
  39:Src/depth_switch_object.c ****   		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3, GPIO_PIN_RESET);// t
 119              		.loc 1 39 0
 120 0052 0348     		ldr	r0, .L10
 121 0054 0F21     		mov	r1, #15
 122 0056 0022     		mov	r2, #0
 123 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL8:
 125              	.L4:
  40:Src/depth_switch_object.c **** 
  41:Src/depth_switch_object.c **** 	}
  42:Src/depth_switch_object.c **** 
  43:Src/depth_switch_object.c **** }
 126              		.loc 1 43 0
 127              		@ sp needed
 128              	.LVL9:
 129 005c 10BD     		pop	{r4, pc}
 130              	.L11:
 131 005e C046     		.align	2
ARM GAS  /tmp/cctjJIcy.s 			page 4


 132              	.L10:
 133 0060 00040050 		.word	1342178304
 134              		.cfi_endproc
 135              	.LFE35:
 137              		.global	__aeabi_dcmpeq
 138              		.global	__aeabi_dadd
 139              		.global	__aeabi_dcmpge
 140              		.global	__aeabi_dmul
 141              		.section	.text.depth_switch_step_current_depth,"ax",%progbits
 142              		.align	2
 143              		.global	depth_switch_step_current_depth
 144              		.code	16
 145              		.thumb_func
 147              	depth_switch_step_current_depth:
 148              	.LFB36:
  44:Src/depth_switch_object.c **** 
  45:Src/depth_switch_object.c **** 
  46:Src/depth_switch_object.c **** 
  47:Src/depth_switch_object.c **** double depth_switch_step_current_depth(double increment)
  48:Src/depth_switch_object.c **** {
 149              		.loc 1 48 0
 150              		.cfi_startproc
 151              	.LVL10:
 152 0000 38B5     		push	{r3, r4, r5, lr}
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 3, -16
 156              		.cfi_offset 4, -12
 157              		.cfi_offset 5, -8
 158              		.cfi_offset 14, -4
 159 0002 041C     		mov	r4, r0
 160 0004 0D1C     		mov	r5, r1
  49:Src/depth_switch_object.c **** 	/*
  50:Src/depth_switch_object.c **** 	if(current_depth != DEPTH0)
  51:Src/depth_switch_object.c **** 	{
  52:Src/depth_switch_object.c **** 		if(current_depth == DEPTH1)
  53:Src/depth_switch_object.c **** 		{
  54:Src/depth_switch_object.c **** 			current_depth = DEPTH2;
  55:Src/depth_switch_object.c **** 			depth_switch_turn_signal_led(2);
  56:Src/depth_switch_object.c **** 		}
  57:Src/depth_switch_object.c **** 		else if(current_depth == DEPTH2)
  58:Src/depth_switch_object.c **** 		{
  59:Src/depth_switch_object.c **** 			current_depth = DEPTH3;
  60:Src/depth_switch_object.c **** 			depth_switch_turn_signal_led(3);
  61:Src/depth_switch_object.c **** 		}
  62:Src/depth_switch_object.c **** 		else if(current_depth == DEPTH3)
  63:Src/depth_switch_object.c **** 		{
  64:Src/depth_switch_object.c **** 			current_depth = DEPTH4;
  65:Src/depth_switch_object.c **** 			depth_switch_turn_signal_led(4);
  66:Src/depth_switch_object.c **** 		}
  67:Src/depth_switch_object.c **** 		else if(current_depth == DEPTH4)
  68:Src/depth_switch_object.c **** 		{
  69:Src/depth_switch_object.c **** 			current_depth = DEPTH1;
  70:Src/depth_switch_object.c **** 			depth_switch_turn_signal_led(1);
  71:Src/depth_switch_object.c **** 		}
  72:Src/depth_switch_object.c **** 	}
  73:Src/depth_switch_object.c **** 	*/
ARM GAS  /tmp/cctjJIcy.s 			page 5


  74:Src/depth_switch_object.c **** 
  75:Src/depth_switch_object.c **** 
  76:Src/depth_switch_object.c **** 	if(increment == INC_ONE)
 161              		.loc 1 76 0
 162 0006 0022     		mov	r2, #0
 163 0008 214B     		ldr	r3, .L24
 164 000a FFF7FEFF 		bl	__aeabi_dcmpeq
 165              	.LVL11:
 166 000e 0028     		cmp	r0, #0
 167 0010 13D0     		beq	.L23
  77:Src/depth_switch_object.c **** 	{
  78:Src/depth_switch_object.c **** 		order0++;
 168              		.loc 1 78 0
 169 0012 204C     		ldr	r4, .L24+4
 170 0014 2068     		ldr	r0, [r4]
 171 0016 6168     		ldr	r1, [r4, #4]
 172 0018 0022     		mov	r2, #0
 173 001a 1D4B     		ldr	r3, .L24
 174 001c FFF7FEFF 		bl	__aeabi_dadd
 175              	.LVL12:
 176 0020 2060     		str	r0, [r4]
 177 0022 6160     		str	r1, [r4, #4]
  79:Src/depth_switch_object.c **** 		if(order0 >= 10)
 178              		.loc 1 79 0
 179 0024 0022     		mov	r2, #0
 180 0026 1C4B     		ldr	r3, .L24+8
 181 0028 FFF7FEFF 		bl	__aeabi_dcmpge
 182              	.LVL13:
 183 002c 0028     		cmp	r0, #0
 184 002e 1FD0     		beq	.L15
  80:Src/depth_switch_object.c **** 			order0 = 0;
 185              		.loc 1 80 0
 186 0030 0020     		mov	r0, #0
 187 0032 0021     		mov	r1, #0
 188 0034 2060     		str	r0, [r4]
 189 0036 6160     		str	r1, [r4, #4]
 190 0038 1AE0     		b	.L15
 191              	.L23:
  81:Src/depth_switch_object.c **** 	}
  82:Src/depth_switch_object.c **** 	else if(increment == INC_TEN)
 192              		.loc 1 82 0
 193 003a 201C     		mov	r0, r4
 194 003c 291C     		mov	r1, r5
 195 003e 0022     		mov	r2, #0
 196 0040 154B     		ldr	r3, .L24+8
 197 0042 FFF7FEFF 		bl	__aeabi_dcmpeq
 198              	.LVL14:
 199 0046 0028     		cmp	r0, #0
 200 0048 12D0     		beq	.L15
  83:Src/depth_switch_object.c **** 	{
  84:Src/depth_switch_object.c **** 		order1++;
 201              		.loc 1 84 0
 202 004a 144C     		ldr	r4, .L24+12
 203 004c 2068     		ldr	r0, [r4]
 204 004e 6168     		ldr	r1, [r4, #4]
 205 0050 0022     		mov	r2, #0
 206 0052 0F4B     		ldr	r3, .L24
ARM GAS  /tmp/cctjJIcy.s 			page 6


 207 0054 FFF7FEFF 		bl	__aeabi_dadd
 208              	.LVL15:
 209 0058 2060     		str	r0, [r4]
 210 005a 6160     		str	r1, [r4, #4]
  85:Src/depth_switch_object.c **** 		if(order1 >= 5)
 211              		.loc 1 85 0
 212 005c 0022     		mov	r2, #0
 213 005e 104B     		ldr	r3, .L24+16
 214 0060 FFF7FEFF 		bl	__aeabi_dcmpge
 215              	.LVL16:
 216 0064 0028     		cmp	r0, #0
 217 0066 03D0     		beq	.L15
  86:Src/depth_switch_object.c **** 			order1 = 0;
 218              		.loc 1 86 0
 219 0068 0020     		mov	r0, #0
 220 006a 0021     		mov	r1, #0
 221 006c 2060     		str	r0, [r4]
 222 006e 6160     		str	r1, [r4, #4]
 223              	.L15:
  87:Src/depth_switch_object.c **** 	}
  88:Src/depth_switch_object.c **** 
  89:Src/depth_switch_object.c **** 	current_depth = order1*10.0 + order0;
 224              		.loc 1 89 0
 225 0070 0A4B     		ldr	r3, .L24+12
 226 0072 1868     		ldr	r0, [r3]
 227 0074 5968     		ldr	r1, [r3, #4]
 228 0076 0022     		mov	r2, #0
 229 0078 074B     		ldr	r3, .L24+8
 230 007a FFF7FEFF 		bl	__aeabi_dmul
 231              	.LVL17:
 232 007e 054B     		ldr	r3, .L24+4
 233 0080 1A68     		ldr	r2, [r3]
 234 0082 5B68     		ldr	r3, [r3, #4]
 235 0084 FFF7FEFF 		bl	__aeabi_dadd
 236              	.LVL18:
 237 0088 064B     		ldr	r3, .L24+20
 238 008a 1860     		str	r0, [r3]
 239 008c 5960     		str	r1, [r3, #4]
  90:Src/depth_switch_object.c **** }
 240              		.loc 1 90 0
 241              		@ sp needed
 242 008e 38BD     		pop	{r3, r4, r5, pc}
 243              	.L25:
 244              		.align	2
 245              	.L24:
 246 0090 0000F03F 		.word	1072693248
 247 0094 00000000 		.word	.LANCHOR0
 248 0098 00002440 		.word	1076101120
 249 009c 00000000 		.word	.LANCHOR1
 250 00a0 00001440 		.word	1075052544
 251 00a4 00000000 		.word	.LANCHOR2
 252              		.cfi_endproc
 253              	.LFE36:
 255              		.section	.text.depth_switch_step_to_test,"ax",%progbits
 256              		.align	2
 257              		.global	depth_switch_step_to_test
 258              		.code	16
ARM GAS  /tmp/cctjJIcy.s 			page 7


 259              		.thumb_func
 261              	depth_switch_step_to_test:
 262              	.LFB37:
  91:Src/depth_switch_object.c **** 
  92:Src/depth_switch_object.c **** 
  93:Src/depth_switch_object.c **** void depth_switch_step_to_test()
  94:Src/depth_switch_object.c **** {
 263              		.loc 1 94 0
 264              		.cfi_startproc
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
  95:Src/depth_switch_object.c **** 	current_depth = DEPTH0;
 270              		.loc 1 95 0
 271 0002 0020     		mov	r0, #0
 272 0004 0349     		ldr	r1, .L27
 273 0006 044B     		ldr	r3, .L27+4
 274 0008 1860     		str	r0, [r3]
 275 000a 5960     		str	r1, [r3, #4]
  96:Src/depth_switch_object.c **** 	depth_switch_turn_signal_led(5);
 276              		.loc 1 96 0
 277 000c 0520     		mov	r0, #5
 278 000e FFF7FEFF 		bl	depth_switch_turn_signal_led
 279              	.LVL19:
  97:Src/depth_switch_object.c **** }
 280              		.loc 1 97 0
 281              		@ sp needed
 282 0012 08BD     		pop	{r3, pc}
 283              	.L28:
 284              		.align	2
 285              	.L27:
 286 0014 0000F03F 		.word	1072693248
 287 0018 00000000 		.word	.LANCHOR2
 288              		.cfi_endproc
 289              	.LFE37:
 291              		.section	.text.depth_switch_get_current_depth,"ax",%progbits
 292              		.align	2
 293              		.global	depth_switch_get_current_depth
 294              		.code	16
 295              		.thumb_func
 297              	depth_switch_get_current_depth:
 298              	.LFB38:
  98:Src/depth_switch_object.c **** 
  99:Src/depth_switch_object.c **** double depth_switch_get_current_depth()
 100:Src/depth_switch_object.c **** {
 299              		.loc 1 100 0
 300              		.cfi_startproc
 101:Src/depth_switch_object.c **** 	return current_depth;
 301              		.loc 1 101 0
 302 0000 014B     		ldr	r3, .L30
 303 0002 1868     		ldr	r0, [r3]
 304 0004 5968     		ldr	r1, [r3, #4]
 102:Src/depth_switch_object.c **** }
 305              		.loc 1 102 0
 306              		@ sp needed
ARM GAS  /tmp/cctjJIcy.s 			page 8


 307 0006 7047     		bx	lr
 308              	.L31:
 309              		.align	2
 310              	.L30:
 311 0008 00000000 		.word	.LANCHOR2
 312              		.cfi_endproc
 313              	.LFE38:
 315              		.section	.text.depth_switch_action,"ax",%progbits
 316              		.align	2
 317              		.global	depth_switch_action
 318              		.code	16
 319              		.thumb_func
 321              	depth_switch_action:
 322              	.LFB39:
 103:Src/depth_switch_object.c **** 
 104:Src/depth_switch_object.c **** 
 105:Src/depth_switch_object.c **** 
 106:Src/depth_switch_object.c **** 
 107:Src/depth_switch_object.c **** void depth_switch_action()
 108:Src/depth_switch_object.c **** {
 323              		.loc 1 108 0
 324              		.cfi_startproc
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI3:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 109:Src/depth_switch_object.c **** 	if(!depth_switch_check_gpio()) // key pressed
 330              		.loc 1 109 0
 331 0002 FFF7FEFF 		bl	depth_switch_check_gpio
 332              	.LVL20:
 333 0006 0028     		cmp	r0, #0
 334 0008 04D1     		bne	.L33
 110:Src/depth_switch_object.c **** 		depth_switch_key_press_period_counter++;
 335              		.loc 1 110 0
 336 000a 0F4A     		ldr	r2, .L38
 337 000c 1368     		ldr	r3, [r2]
 338 000e 0133     		add	r3, r3, #1
 339 0010 1360     		str	r3, [r2]
 340 0012 17E0     		b	.L32
 341              	.L33:
 111:Src/depth_switch_object.c **** 	else  // key is not pressed
 112:Src/depth_switch_object.c **** 	{
 113:Src/depth_switch_object.c **** 		if(depth_switch_key_press_period_counter > 0)
 342              		.loc 1 113 0
 343 0014 0C4B     		ldr	r3, .L38
 344 0016 1B68     		ldr	r3, [r3]
 345 0018 002B     		cmp	r3, #0
 346 001a 13DD     		ble	.L32
 114:Src/depth_switch_object.c **** 		{
 115:Src/depth_switch_object.c **** 			if(depth_switch_key_press_period_counter <= 3)     // less then 3 seconds
 347              		.loc 1 115 0
 348 001c 032B     		cmp	r3, #3
 349 001e 04DC     		bgt	.L35
 116:Src/depth_switch_object.c **** 				depth_switch_step_current_depth(INC_ONE);
 350              		.loc 1 116 0
 351 0020 0020     		mov	r0, #0
ARM GAS  /tmp/cctjJIcy.s 			page 9


 352 0022 0A49     		ldr	r1, .L38+4
 353 0024 FFF7FEFF 		bl	depth_switch_step_current_depth
 354              	.LVL21:
 355 0028 09E0     		b	.L36
 356              	.L35:
 117:Src/depth_switch_object.c **** 			else if((depth_switch_key_press_period_counter > 3) && (depth_switch_key_press_period_counter <=
 357              		.loc 1 117 0
 358 002a 043B     		sub	r3, r3, #4
 359 002c 0D2B     		cmp	r3, #13
 360 002e 04D8     		bhi	.L37
 118:Src/depth_switch_object.c **** 				depth_switch_step_current_depth(INC_TEN);
 361              		.loc 1 118 0
 362 0030 0020     		mov	r0, #0
 363 0032 0749     		ldr	r1, .L38+8
 364 0034 FFF7FEFF 		bl	depth_switch_step_current_depth
 365              	.LVL22:
 366 0038 01E0     		b	.L36
 367              	.L37:
 119:Src/depth_switch_object.c **** 			else   // more then 3 seconds
 120:Src/depth_switch_object.c **** 				depth_switch_step_to_test();
 368              		.loc 1 120 0
 369 003a FFF7FEFF 		bl	depth_switch_step_to_test
 370              	.LVL23:
 371              	.L36:
 121:Src/depth_switch_object.c **** 
 122:Src/depth_switch_object.c **** 			depth_switch_key_press_period_counter = 0;
 372              		.loc 1 122 0
 373 003e 0022     		mov	r2, #0
 374 0040 014B     		ldr	r3, .L38
 375 0042 1A60     		str	r2, [r3]
 376              	.L32:
 123:Src/depth_switch_object.c **** 		}
 124:Src/depth_switch_object.c **** 
 125:Src/depth_switch_object.c **** 	}
 126:Src/depth_switch_object.c **** }
 377              		.loc 1 126 0
 378              		@ sp needed
 379 0044 08BD     		pop	{r3, pc}
 380              	.L39:
 381 0046 C046     		.align	2
 382              	.L38:
 383 0048 00000000 		.word	.LANCHOR3
 384 004c 0000F03F 		.word	1072693248
 385 0050 00002440 		.word	1076101120
 386              		.cfi_endproc
 387              	.LFE39:
 389              		.section	.bss.order1,"aw",%nobits
 390              		.align	3
 391              		.set	.LANCHOR1,. + 0
 394              	order1:
 395 0000 00000000 		.space	8
 395      00000000 
 396              		.section	.data.order0,"aw",%progbits
 397              		.align	3
 398              		.set	.LANCHOR0,. + 0
 401              	order0:
 402 0000 00000000 		.word	0
ARM GAS  /tmp/cctjJIcy.s 			page 10


 403 0004 00000040 		.word	1073741824
 404              		.section	.data.current_depth,"aw",%progbits
 405              		.align	3
 406              		.set	.LANCHOR2,. + 0
 409              	current_depth:
 410 0000 00000000 		.word	0
 411 0004 00000040 		.word	1073741824
 412              		.section	.bss.depth_switch_key_press_period_counter,"aw",%nobits
 413              		.align	2
 414              		.set	.LANCHOR3,. + 0
 417              	depth_switch_key_press_period_counter:
 418 0000 00000000 		.space	4
 419              		.text
 420              	.Letext0:
 421              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 422              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 423              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 424              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 425              		.file 6 "Inc/depth_switch_object.h"
ARM GAS  /tmp/cctjJIcy.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 depth_switch_object.c
     /tmp/cctjJIcy.s:18     .text.depth_switch_check_gpio:0000000000000000 $t
     /tmp/cctjJIcy.s:23     .text.depth_switch_check_gpio:0000000000000000 depth_switch_check_gpio
     /tmp/cctjJIcy.s:49     .text.depth_switch_turn_signal_led:0000000000000000 $t
     /tmp/cctjJIcy.s:54     .text.depth_switch_turn_signal_led:0000000000000000 depth_switch_turn_signal_led
     /tmp/cctjJIcy.s:133    .text.depth_switch_turn_signal_led:0000000000000060 $d
     /tmp/cctjJIcy.s:142    .text.depth_switch_step_current_depth:0000000000000000 $t
     /tmp/cctjJIcy.s:147    .text.depth_switch_step_current_depth:0000000000000000 depth_switch_step_current_depth
     /tmp/cctjJIcy.s:246    .text.depth_switch_step_current_depth:0000000000000090 $d
     /tmp/cctjJIcy.s:256    .text.depth_switch_step_to_test:0000000000000000 $t
     /tmp/cctjJIcy.s:261    .text.depth_switch_step_to_test:0000000000000000 depth_switch_step_to_test
     /tmp/cctjJIcy.s:286    .text.depth_switch_step_to_test:0000000000000014 $d
     /tmp/cctjJIcy.s:292    .text.depth_switch_get_current_depth:0000000000000000 $t
     /tmp/cctjJIcy.s:297    .text.depth_switch_get_current_depth:0000000000000000 depth_switch_get_current_depth
     /tmp/cctjJIcy.s:311    .text.depth_switch_get_current_depth:0000000000000008 $d
     /tmp/cctjJIcy.s:316    .text.depth_switch_action:0000000000000000 $t
     /tmp/cctjJIcy.s:321    .text.depth_switch_action:0000000000000000 depth_switch_action
     /tmp/cctjJIcy.s:383    .text.depth_switch_action:0000000000000048 $d
     /tmp/cctjJIcy.s:390    .bss.order1:0000000000000000 $d
     /tmp/cctjJIcy.s:394    .bss.order1:0000000000000000 order1
     /tmp/cctjJIcy.s:397    .data.order0:0000000000000000 $d
     /tmp/cctjJIcy.s:401    .data.order0:0000000000000000 order0
     /tmp/cctjJIcy.s:405    .data.current_depth:0000000000000000 $d
     /tmp/cctjJIcy.s:409    .data.current_depth:0000000000000000 current_depth
     /tmp/cctjJIcy.s:413    .bss.depth_switch_key_press_period_counter:0000000000000000 $d
     /tmp/cctjJIcy.s:417    .bss.depth_switch_key_press_period_counter:0000000000000000 depth_switch_key_press_period_counter
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
__aeabi_dcmpeq
__aeabi_dadd
__aeabi_dcmpge
__aeabi_dmul
