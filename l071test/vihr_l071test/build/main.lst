ARM GAS  /tmp/ccpZkpgN.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	2
  19              		.global	SystemClock_Config
  20              		.code	16
  21              		.thumb_func
  23              	SystemClock_Config:
  24              	.LFB35:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "math.h"
  24:Src/main.c    **** #include "tim.h"
  25:Src/main.c    **** #include "adc.h"
  26:Src/main.c    **** #include "i2c.h"
  27:Src/main.c    **** #include "spi.h"
  28:Src/main.c    **** #include "usart.h"
  29:Src/main.c    **** #include "gpio.h"
  30:Src/main.c    **** 
  31:Src/main.c    **** #include "ssd1306.h"
  32:Src/main.c    **** 
  33:Src/main.c    **** #include "one_second_timer_interface.h"
ARM GAS  /tmp/ccpZkpgN.s 			page 2


  34:Src/main.c    **** #include "pressure_sensor_object.h"
  35:Src/main.c    **** #include "depth_switch_interface.h"
  36:Src/main.c    **** #include "rtc_ds3231_interface.h"
  37:Src/main.c    **** #include "voltmeter_object.h"
  38:Src/main.c    **** //#include "at24c32_interface.h"
  39:Src/main.c    **** 
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** static char message[64];
  43:Src/main.c    **** static char timestamp[64];
  44:Src/main.c    **** static char temperature_message[64];
  45:Src/main.c    **** 
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  48:Src/main.c    **** void SystemClock_Config(void);
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** 
  53:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  54:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  55:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  56:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  57:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  58:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  59:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  60:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  61:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  62:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  63:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  64:Src/main.c    **** int main(void)
  65:Src/main.c    **** {
  66:Src/main.c    **** 
  67:Src/main.c    **** 
  68:Src/main.c    **** 
  69:Src/main.c    **** 
  70:Src/main.c    **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  71:Src/main.c    **** 	HAL_Init();
  72:Src/main.c    **** 
  73:Src/main.c    ****   
  74:Src/main.c    ****   
  75:Src/main.c    **** 	SystemClock_Config();
  76:Src/main.c    **** 
  77:Src/main.c    ****   
  78:Src/main.c    ****   
  79:Src/main.c    **** 	MX_GPIO_Init();
  80:Src/main.c    **** 	MX_ADC_Init();
  81:Src/main.c    **** 	MX_I2C1_Init();
  82:Src/main.c    **** 	//MX_I2C2_Init();
  83:Src/main.c    **** 	MX_I2C3_Init();
  84:Src/main.c    **** 	MX_SPI1_Init();
  85:Src/main.c    ****     // enable spi1
  86:Src/main.c    ****     SPI1->CR1 |= SPI_CR1_SPE;
  87:Src/main.c    **** 	MX_USART1_UART_Init();
  88:Src/main.c    ****   
  89:Src/main.c    **** 	rtc_ds3231_set_i2c_handle(&hi2c3);
  90:Src/main.c    **** 	//rtc_ds3231_set_time(16, 40, 0);
ARM GAS  /tmp/ccpZkpgN.s 			page 3


  91:Src/main.c    **** 	//rtc_ds3231_set_date(22, 11, 19);
  92:Src/main.c    **** 	//at24c32_set_i2c_handle(&hi2c2);
  93:Src/main.c    **** 
  94:Src/main.c    ****     ssd1306_set_i2c_port(&hi2c1, 1);
  95:Src/main.c    ****   	ssd1306_Init();
  96:Src/main.c    ****   	HAL_Delay(100);
  97:Src/main.c    ****   	ssd1306_Fill(White);
  98:Src/main.c    ****   	ssd1306_UpdateScreen();
  99:Src/main.c    ****   	HAL_Delay(100);
 100:Src/main.c    ****   	ssd1306_Fill(Black);
 101:Src/main.c    ****   	ssd1306_UpdateScreen();
 102:Src/main.c    **** 
 103:Src/main.c    ****   	HAL_Delay(100);
 104:Src/main.c    **** 
 105:Src/main.c    ****   	ssd1306_SetCursor(0,0);
 106:Src/main.c    ****   	ssd1306_WriteString("L071", Font_16x26, White);
 107:Src/main.c    ****   	ssd1306_SetCursor(0,30);
 108:Src/main.c    ****   	ssd1306_WriteString("TEST..", Font_16x26, White);
 109:Src/main.c    ****   	ssd1306_UpdateScreen();
 110:Src/main.c    ****   
 111:Src/main.c    **** 
 112:Src/main.c    **** 	one_second_timer_init();
 113:Src/main.c    **** 	one_second_timer_start();
 114:Src/main.c    **** 
 115:Src/main.c    **** 	pressure_sensor_object_init();
 116:Src/main.c    **** 	HAL_Delay(1000);
 117:Src/main.c    **** 	uint32_t surface_pressure = 101325;
 118:Src/main.c    **** 	depth_switch_turn_signal_led(1);
 119:Src/main.c    **** 
 120:Src/main.c    **** 	rtc_ds3231_action();
 121:Src/main.c    **** 	//atm_barometer_init();
 122:Src/main.c    **** 	int odd_even = 0;
 123:Src/main.c    **** 	int led_counter = 0;
 124:Src/main.c    **** 
 125:Src/main.c    **** 	int mem_test_base = 0;
 126:Src/main.c    **** 
 127:Src/main.c    **** 	uint8_t at24c32_shifted_address = 0x50 << 1;
 128:Src/main.c    **** 	uint16_t eeprom_address = 64;
 129:Src/main.c    **** 	uint16_t eeprom_debug_address = 64;
 130:Src/main.c    **** 	int eeprom_number_of_records = 0;
 131:Src/main.c    **** 	uint32_t log_counter = 0;
 132:Src/main.c    **** 
 133:Src/main.c    **** 	// log debug
 134:Src/main.c    **** 	//****************************************
 135:Src/main.c    **** 	//int sin_counter = 0;
 136:Src/main.c    **** 	//double dt = 2.0*3.14/30.0;
 137:Src/main.c    **** 	// log debug
 138:Src/main.c    **** 	//****************************************
 139:Src/main.c    **** 
 140:Src/main.c    **** 	int actuator_counter = 0;
 141:Src/main.c    **** 
 142:Src/main.c    **** 	// debug!!!
 143:Src/main.c    **** 	//double P_sym = surface_pressure;
 144:Src/main.c    **** 
 145:Src/main.c    **** 
 146:Src/main.c    **** 	if(!depth_switch_check_gpio())
 147:Src/main.c    **** 	{
ARM GAS  /tmp/ccpZkpgN.s 			page 4


 148:Src/main.c    **** 		// log mode
 149:Src/main.c    ****   		ssd1306_Fill(Black);
 150:Src/main.c    ****   	    ssd1306_SetCursor(0,0);
 151:Src/main.c    **** 	    sprintf(message, "log mode");
 152:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 153:Src/main.c    ****   	    ssd1306_SetCursor(0,22);
 154:Src/main.c    **** 	    sprintf(message, "download...");
 155:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 156:Src/main.c    ****   	    ssd1306_UpdateScreen();
 157:Src/main.c    **** 
 158:Src/main.c    **** 
 159:Src/main.c    **** 
 160:Src/main.c    **** 	/*
 161:Src/main.c    **** 	int end_of_log_reached = 0;
 162:Src/main.c    **** 	HAL_Delay(1000);
 163:Src/main.c    **** 	uint16_t eeprom_debug_address = 64;
 164:Src/main.c    **** 	uint8_t b0;
 165:Src/main.c    **** 	uint8_t at24c32_shifted_address = 0x50 << 1;
 166:Src/main.c    **** 	static I2C_HandleTypeDef *at24c32_i2c_handle = &hi2c2;
 167:Src/main.c    **** 
 168:Src/main.c    **** 	sprintf(message, "\r\n");
 169:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 170:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 171:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 172:Src/main.c    **** 
 173:Src/main.c    **** 	sprintf(message, "log bank 1 start\r\n***********\r\n");
 174:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 175:Src/main.c    **** 
 176:Src/main.c    **** 	// read timestamp time
 177:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 178:Src/main.c    **** 	message[0] = b0;                                                                                  
 179:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 180:Src/main.c    ****                                                                                                    
 181:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 182:Src/main.c    **** 	message[1] = b0;                                                                                  
 183:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 184:Src/main.c    ****                                                                                                    
 185:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 186:Src/main.c    **** 	message[2] = b0;                                                                                  
 187:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 188:Src/main.c    ****                                                                                                    
 189:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 190:Src/main.c    **** 	message[3] = b0;                                                                                  
 191:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 192:Src/main.c    ****                                                                                                    
 193:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 194:Src/main.c    **** 	{                                                                                                 
 195:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 196:Src/main.c    **** 	}                                                                                                 
 197:Src/main.c    **** 	else                                                                                              
 198:Src/main.c    **** 	{                                                                                                 
 199:Src/main.c    **** 		message[4] = '\r';                                                                               
 200:Src/main.c    **** 		message[5] = '\n';                                                                               
 201:Src/main.c    **** 		message[6] = 0;                                                                                  
 202:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 203:Src/main.c    **** 	}                                                                                                 
 204:Src/main.c    **** 	// read timestamp date
ARM GAS  /tmp/ccpZkpgN.s 			page 5


 205:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 206:Src/main.c    **** 	message[0] = b0;                                                                                  
 207:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 208:Src/main.c    ****                                                                                                    
 209:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 210:Src/main.c    **** 	message[1] = b0;                                                                                  
 211:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 212:Src/main.c    ****                                                                                                    
 213:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 214:Src/main.c    **** 	message[2] = b0;                                                                                  
 215:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 216:Src/main.c    ****                                                                                                    
 217:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 218:Src/main.c    **** 	message[3] = b0;                                                                                  
 219:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 220:Src/main.c    ****                                                                                                    
 221:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 222:Src/main.c    **** 	{                                                                                                 
 223:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 224:Src/main.c    **** 	}                                                                                                 
 225:Src/main.c    **** 	else                                                                                              
 226:Src/main.c    **** 	{                                                                                                 
 227:Src/main.c    **** 		message[4] = '\r';                                                                               
 228:Src/main.c    **** 		message[5] = '\n';                                                                               
 229:Src/main.c    **** 		message[6] = 0;                                                                                  
 230:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 231:Src/main.c    **** 	}                                                                                                 
 232:Src/main.c    **** 	
 233:Src/main.c    **** 	while(!end_of_log_reached)
 234:Src/main.c    **** 	{
 235:Src/main.c    **** 
 236:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 237:Src/main.c    **** 		message[0] = b0;                                                                                 
 238:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 239:Src/main.c    **** 		HAL_Delay(3);
 240:Src/main.c    **** 
 241:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 242:Src/main.c    **** 		message[1] = b0;                                                                                 
 243:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 244:Src/main.c    **** 
 245:Src/main.c    **** 		message[2] = '.';                                                                                
 246:Src/main.c    **** 
 247:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 248:Src/main.c    **** 		message[3] = b0;                                                                                 
 249:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 250:Src/main.c    **** 
 251:Src/main.c    **** 		message[4] = ' ';                                                                                
 252:Src/main.c    **** 
 253:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 254:Src/main.c    **** 		message[5] = b0;                                                                                 
 255:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 256:Src/main.c    **** 		
 257:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 258:Src/main.c    **** 		message[6] = b0;                                                                                 
 259:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 260:Src/main.c    **** 
 261:Src/main.c    **** 		if((message[0] == 0) && (message[1] == 0))
ARM GAS  /tmp/ccpZkpgN.s 			page 6


 262:Src/main.c    **** 		{
 263:Src/main.c    **** 			end_of_log_reached = 1;
 264:Src/main.c    **** 		}
 265:Src/main.c    **** 		else
 266:Src/main.c    **** 		{
 267:Src/main.c    **** 			message[7] = '\r';                                                                              
 268:Src/main.c    **** 			message[8] = '\n';                                                                              
 269:Src/main.c    **** 			message[9] = 0;                                                                                 
 270:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 271:Src/main.c    **** 		}
 272:Src/main.c    **** 	}
 273:Src/main.c    **** 	
 274:Src/main.c    **** 	sprintf(message, "\r\n");
 275:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 276:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 1 finish\r\n");
 277:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 278:Src/main.c    **** 
 279:Src/main.c    **** 
 280:Src/main.c    **** 	eeprom_debug_address = 64;
 281:Src/main.c    **** 	at24c32_shifted_address = 0x51 << 1;
 282:Src/main.c    **** 
 283:Src/main.c    **** 	sprintf(message, "\r\n");
 284:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 285:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 286:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 287:Src/main.c    **** 
 288:Src/main.c    **** 	sprintf(message, "log bank 2 start\r\n***********\r\n");
 289:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 290:Src/main.c    **** 
 291:Src/main.c    **** 	end_of_log_reached = 0;
 292:Src/main.c    **** 
 293:Src/main.c    **** 
 294:Src/main.c    **** 	// read timestamp time
 295:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 296:Src/main.c    **** 	message[0] = b0;                                                                                  
 297:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 298:Src/main.c    ****                                                                                                    
 299:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 300:Src/main.c    **** 	message[1] = b0;                                                                                  
 301:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 302:Src/main.c    ****                                                                                                    
 303:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 304:Src/main.c    **** 	message[2] = b0;                                                                                  
 305:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 306:Src/main.c    ****                                                                                                    
 307:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 308:Src/main.c    **** 	message[3] = b0;                                                                                  
 309:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 310:Src/main.c    ****                                                                                                    
 311:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 312:Src/main.c    **** 	{                                                                                                 
 313:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 314:Src/main.c    **** 	}                                                                                                 
 315:Src/main.c    **** 	else                                                                                              
 316:Src/main.c    **** 	{                                                                                                 
 317:Src/main.c    **** 		message[4] = '\r';                                                                               
 318:Src/main.c    **** 		message[5] = '\n';                                                                               
ARM GAS  /tmp/ccpZkpgN.s 			page 7


 319:Src/main.c    **** 		message[6] = 0;                                                                                  
 320:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 321:Src/main.c    **** 	}                                                                                                 
 322:Src/main.c    **** 	// read timestamp date
 323:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 324:Src/main.c    **** 	message[0] = b0;                                                                                  
 325:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 326:Src/main.c    ****                                                                                                    
 327:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 328:Src/main.c    **** 	message[1] = b0;                                                                                  
 329:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 330:Src/main.c    ****                                                                                                    
 331:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 332:Src/main.c    **** 	message[2] = b0;                                                                                  
 333:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 334:Src/main.c    ****                                                                                                    
 335:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 336:Src/main.c    **** 	message[3] = b0;                                                                                  
 337:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 338:Src/main.c    ****                                                                                                    
 339:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 340:Src/main.c    **** 	{                                                                                                 
 341:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 342:Src/main.c    **** 	}                                                                                                 
 343:Src/main.c    **** 	else                                                                                              
 344:Src/main.c    **** 	{                                                                                                 
 345:Src/main.c    **** 		message[4] = '\r';                                                                               
 346:Src/main.c    **** 		message[5] = '\n';                                                                               
 347:Src/main.c    **** 		message[6] = 0;                                                                                  
 348:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 349:Src/main.c    **** 	}                                                                                                 
 350:Src/main.c    **** 
 351:Src/main.c    **** 
 352:Src/main.c    **** 	while(!end_of_log_reached)
 353:Src/main.c    **** 	{
 354:Src/main.c    **** 
 355:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 356:Src/main.c    **** 		message[0] = b0;                                                                                 
 357:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 358:Src/main.c    **** 		HAL_Delay(3);
 359:Src/main.c    **** 
 360:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 361:Src/main.c    **** 		message[1] = b0;                                                                                 
 362:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 363:Src/main.c    **** 
 364:Src/main.c    **** 		message[2] = '.';                                                                                
 365:Src/main.c    **** 
 366:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 367:Src/main.c    **** 		message[3] = b0;                                                                                 
 368:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 369:Src/main.c    **** 
 370:Src/main.c    **** 		message[4] = ' ';                                                                                
 371:Src/main.c    **** 
 372:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 373:Src/main.c    **** 		message[5] = b0;                                                                                 
 374:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 375:Src/main.c    **** 		
ARM GAS  /tmp/ccpZkpgN.s 			page 8


 376:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 377:Src/main.c    **** 		message[6] = b0;                                                                                 
 378:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 379:Src/main.c    **** 
 380:Src/main.c    **** 		if((message[0] == 0) && (message[1] == 0))
 381:Src/main.c    **** 		{
 382:Src/main.c    **** 			end_of_log_reached = 1;
 383:Src/main.c    **** 		}
 384:Src/main.c    **** 		else
 385:Src/main.c    **** 		{
 386:Src/main.c    **** 			message[7] = '\r';                                                                              
 387:Src/main.c    **** 			message[8] = '\n';                                                                              
 388:Src/main.c    **** 			message[9] = 0;                                                                                 
 389:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 390:Src/main.c    **** 		}
 391:Src/main.c    **** 	}
 392:Src/main.c    **** 	
 393:Src/main.c    **** 	sprintf(message, "\r\n");
 394:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 395:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 2 finish\r\n");
 396:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 397:Src/main.c    **** 
 398:Src/main.c    **** 	//*/
 399:Src/main.c    **** 
 400:Src/main.c    **** 
 401:Src/main.c    **** 		while(1)
 402:Src/main.c    **** 		{
 403:Src/main.c    **** 		}
 404:Src/main.c    **** 
 405:Src/main.c    **** 
 406:Src/main.c    **** 
 407:Src/main.c    **** 
 408:Src/main.c    **** 
 409:Src/main.c    **** 
 410:Src/main.c    **** 
 411:Src/main.c    **** 	}
 412:Src/main.c    **** 	else
 413:Src/main.c    **** 	{
 414:Src/main.c    **** 
 415:Src/main.c    **** 		while (1)
 416:Src/main.c    **** 		{
 417:Src/main.c    **** 			
 418:Src/main.c    **** 			//*
 419:Src/main.c    **** 	    	if(one_second_timer_get_flag())
 420:Src/main.c    **** 	    	{
 421:Src/main.c    **** 	    		one_second_timer_reset_flag();
 422:Src/main.c    **** 	    		odd_even = (odd_even+1)%2;
 423:Src/main.c    ****   	    
 424:Src/main.c    **** 	    		pressure_sensor_measure_pressure_temperature();                                             
 425:Src/main.c    **** 	    	    double P = pressure_sensor_get_pressure();
 426:Src/main.c    **** 	    	    double actual_temperature = pressure_sensor_get_temperature();
 427:Src/main.c    ****                                                                                                    
 428:Src/main.c    **** 	    	    voltmeter_measure_voltage();
 429:Src/main.c    **** 	    	    double accu_voltage = voltmeter_get_voltage();
 430:Src/main.c    **** 	    	    double accu_percentage = voltmeter_get_percentage();
 431:Src/main.c    **** 	                                                                                                  
 432:Src/main.c    **** 	    		rtc_ds3231_action();
ARM GAS  /tmp/ccpZkpgN.s 			page 9


 433:Src/main.c    **** 	    		// time-date calculation ----------------------------------------
 434:Src/main.c    **** 	    		uint8_t seconds, minutes, hours;
 435:Src/main.c    **** 	    		rtc_ds3231_get_time(&hours, &minutes, &seconds);
 436:Src/main.c    **** 	    		uint8_t date, month, year;
 437:Src/main.c    **** 	    		rtc_ds3231_get_date(&date, &month, &year);
 438:Src/main.c    **** 	    		//--------------------------------------------------------------
 439:Src/main.c    ****               
 440:Src/main.c    ****                                                                                                    
 441:Src/main.c    **** 	    		// debug!!!
 442:Src/main.c    **** 	    	  	//P_sym += 980;
 443:Src/main.c    **** 	    		//P = P_sym;
 444:Src/main.c    ****                                                                                                    
 445:Src/main.c    ****                                                                                                    
 446:Src/main.c    **** 	    		if(P <= surface_pressure)
 447:Src/main.c    **** 	    			surface_pressure = P;
 448:Src/main.c    ****                                                                                                    
 449:Src/main.c    **** 	    		int we_are_under_water = 0;
 450:Src/main.c    ****                                                                                                    
 451:Src/main.c    **** 	    		if(P > (surface_pressure + 9800)) // underwater
 452:Src/main.c    **** 	    			we_are_under_water = 1;
 453:Src/main.c    ****                                                                                                    
 454:Src/main.c    **** 	    		if(!we_are_under_water)  // we are not under water
 455:Src/main.c    **** 	    		{
 456:Src/main.c    **** 	    			depth_switch_action();		    
 457:Src/main.c    ****                                                                                                    
 458:Src/main.c    **** 	    			
 459:Src/main.c    **** 	    			if(actuator_counter == 0)
 460:Src/main.c    **** 	    			{
 461:Src/main.c    **** 	    				//ssd1306_Fill(Black);                                                                    
 462:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 463:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 464:Src/main.c    **** 	    				if(odd_even)
 465:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 466:Src/main.c    **** 	    				else
 467:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d %02d %02d %02d", hours, minutes, date, month);
 468:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 469:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 470:Src/main.c    **** 	    	        	sprintf(message, "AVAR GL %02dm", (int)depth_switch_get_current_depth());
 471:Src/main.c    ****         
 472:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 473:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 474:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 475:Src/main.c    **** 	    	        	//sprintf(message, "akkum");
 476:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 477:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();                                                           
 478:Src/main.c    **** 	    
 479:Src/main.c    **** 	    			}
 480:Src/main.c    ****                                                                                                    
 481:Src/main.c    **** 	    			
 482:Src/main.c    ****                                                                                                    
 483:Src/main.c    **** 	    		}
 484:Src/main.c    **** 	    		else // we are under water
 485:Src/main.c    **** 	    		{
 486:Src/main.c    ****         
 487:Src/main.c    **** 	    			uint16_t data;
 488:Src/main.c    ****                                                                                                    
 489:Src/main.c    **** 	    			log_counter++;
ARM GAS  /tmp/ccpZkpgN.s 			page 10


 490:Src/main.c    ****                                                                                                    
 491:Src/main.c    **** 	    			// calculate depth
 492:Src/main.c    **** 	    			double depth = ((double)(P - surface_pressure))/9800.0;
 493:Src/main.c    **** 	    			if(depth > 1.0)
 494:Src/main.c    **** 	    				depth -= 1.0;
 495:Src/main.c    **** 	    			else
 496:Src/main.c    **** 	    				depth = 0.0;
 497:Src/main.c    ****                                                                                                    
 498:Src/main.c    **** 	    			if(actuator_counter == 0)
 499:Src/main.c    **** 	    			{
 500:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 501:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 502:Src/main.c    **** 	    				if(odd_even)
 503:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 504:Src/main.c    **** 	    				else
 505:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d %02d %02d %02d", hours, minutes, date, month);
 506:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 507:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 508:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 509:Src/main.c    **** 	    	        	//sprintf(message, "glubina %02dm", (int)depth);
 510:Src/main.c    **** 	    	        	sprintf(message, "gl--> %02d.%01dm", (int)depth, (int)((depth - (int)depth)*10.0));
 511:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 512:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 513:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 514:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 515:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();  
 516:Src/main.c    ****                                                                                                    
 517:Src/main.c    **** 	    			}
 518:Src/main.c    ****                                                                                                    
 519:Src/main.c    **** 	    			// log depth
 520:Src/main.c    **** 	    			//--------------------------------------------------------------------------
 521:Src/main.c    **** 	    			uint8_t b0;
 522:Src/main.c    **** 	    			int write_delay = 5;
 523:Src/main.c    **** 	    			static I2C_HandleTypeDef *at24c32_i2c_handle = &hi2c2;
 524:Src/main.c    ****                                                                                                    
 525:Src/main.c    **** 	    			if(eeprom_number_of_records == 0)
 526:Src/main.c    **** 	    			{
 527:Src/main.c    **** 	    				// no records yet
 528:Src/main.c    **** 	    				
 529:Src/main.c    **** 	    				// read memory bank id
 530:Src/main.c    **** 	    				HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, &b
 531:Src/main.c    ****                                                                                                    
 532:Src/main.c    **** 	    				if(b0 == 1)   // pishem v bank 1
 533:Src/main.c    **** 	    				{
 534:Src/main.c    **** 	    					// pri sleduyuschem zapuske budem pisat' v bank 0
 535:Src/main.c    **** 	    					b0 = 0;
 536:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 537:Src/main.c    **** 	    					HAL_Delay(write_delay);
 538:Src/main.c    ****                                                                                                    
 539:Src/main.c    **** 	    					// nastraivaem address i2c banka pamyati (nomer 1)
 540:Src/main.c    **** 	    					at24c32_shifted_address = 0x51 << 1;
 541:Src/main.c    **** 	    				}
 542:Src/main.c    **** 	    				else
 543:Src/main.c    **** 	    				{
 544:Src/main.c    **** 	    					// pri sleduyuschem zapuske budem pisat' v bank 1
 545:Src/main.c    **** 	    					b0 = 1;
 546:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
ARM GAS  /tmp/ccpZkpgN.s 			page 11


 547:Src/main.c    **** 	    					HAL_Delay(write_delay);
 548:Src/main.c    **** 	    				}
 549:Src/main.c    ****                                                                                                    
 550:Src/main.c    ****                                                                                                    
 551:Src/main.c    **** 	    				// write timestamp
 552:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 553:Src/main.c    **** 	    				b0 = timestamp[0];
 554:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 555:Src/main.c    **** 	    				HAL_Delay(write_delay);
 556:Src/main.c    **** 	    				eeprom_debug_address++;
 557:Src/main.c    **** 	    				b0 = timestamp[1];
 558:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 559:Src/main.c    **** 	    				HAL_Delay(write_delay);
 560:Src/main.c    **** 	    				eeprom_debug_address++;
 561:Src/main.c    **** 	    				b0 = timestamp[3];
 562:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 563:Src/main.c    **** 	    				HAL_Delay(write_delay);
 564:Src/main.c    **** 	    				eeprom_debug_address++;
 565:Src/main.c    **** 	    				b0 = timestamp[4];
 566:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 567:Src/main.c    **** 	    				HAL_Delay(write_delay);
 568:Src/main.c    **** 	    				eeprom_debug_address++;
 569:Src/main.c    **** 	    				//b0 = ' ';
 570:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 571:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 572:Src/main.c    **** 	    				//eeprom_debug_address++;
 573:Src/main.c    **** 	    				b0 = timestamp[6];
 574:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 575:Src/main.c    **** 	    				HAL_Delay(write_delay);
 576:Src/main.c    **** 	    				eeprom_debug_address++;
 577:Src/main.c    **** 	    				b0 = timestamp[7];
 578:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 579:Src/main.c    **** 	    				HAL_Delay(write_delay);
 580:Src/main.c    **** 	    				eeprom_debug_address++;
 581:Src/main.c    **** 	    				b0 = timestamp[9];
 582:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 583:Src/main.c    **** 	    				HAL_Delay(write_delay);
 584:Src/main.c    **** 	    				eeprom_debug_address++;
 585:Src/main.c    **** 	    				b0 = timestamp[10];
 586:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 587:Src/main.c    **** 	    				HAL_Delay(write_delay);
 588:Src/main.c    **** 	    				eeprom_debug_address++;
 589:Src/main.c    **** 	    				//b0 = ' ';
 590:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 591:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 592:Src/main.c    **** 	    				//eeprom_debug_address++;
 593:Src/main.c    ****                                                                                                    
 594:Src/main.c    ****                                                                                                    
 595:Src/main.c    ****                                                                                                    
 596:Src/main.c    **** 	    				// write first depth record
 597:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 598:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 599:Src/main.c    **** 	    				b0 = message[0];
 600:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 601:Src/main.c    **** 	    				HAL_Delay(write_delay);
 602:Src/main.c    **** 	    				eeprom_debug_address++;
 603:Src/main.c    **** 	    				b0 = message[1];
ARM GAS  /tmp/ccpZkpgN.s 			page 12


 604:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 605:Src/main.c    **** 	    				HAL_Delay(write_delay);
 606:Src/main.c    **** 	    				eeprom_debug_address++;
 607:Src/main.c    **** 	    				//b0 = message[2];
 608:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 609:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 610:Src/main.c    **** 	    				//eeprom_debug_address++;
 611:Src/main.c    **** 	    				b0 = message[3];
 612:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 613:Src/main.c    **** 	    				HAL_Delay(write_delay);
 614:Src/main.c    **** 	    				eeprom_debug_address++;
 615:Src/main.c    **** 	    				b0 = temperature_message[0];
 616:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 617:Src/main.c    **** 	    				HAL_Delay(write_delay);
 618:Src/main.c    **** 	    				eeprom_debug_address++;
 619:Src/main.c    **** 	    				b0 = temperature_message[1];
 620:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 621:Src/main.c    **** 	    				HAL_Delay(write_delay);
 622:Src/main.c    **** 	    				eeprom_debug_address++;
 623:Src/main.c    **** 	    				b0 = 0;
 624:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 625:Src/main.c    **** 	    				HAL_Delay(write_delay);
 626:Src/main.c    **** 	    				eeprom_debug_address++;
 627:Src/main.c    **** 	    				b0 = 0;
 628:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 629:Src/main.c    **** 	    				HAL_Delay(write_delay);
 630:Src/main.c    **** 	    				eeprom_debug_address--;
 631:Src/main.c    **** 	    				eeprom_number_of_records++;
 632:Src/main.c    ****                                                                                                    
 633:Src/main.c    **** 	    			}
 634:Src/main.c    **** 	    			else
 635:Src/main.c    **** 	    			{
 636:Src/main.c    **** 	    				// there are depth records
 637:Src/main.c    ****                                                                                                    
 638:Src/main.c    **** 	    				// write new record
 639:Src/main.c    **** 	    				b0 = 0;
 640:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 5, I
 641:Src/main.c    **** 	    				HAL_Delay(write_delay);
 642:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 6, I
 643:Src/main.c    **** 	    				HAL_Delay(write_delay);
 644:Src/main.c    **** 	    				eeprom_number_of_records++;
 645:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 646:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 647:Src/main.c    **** 	    				b0 = message[0];
 648:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 649:Src/main.c    **** 	    				HAL_Delay(write_delay);
 650:Src/main.c    **** 	    				eeprom_debug_address++;
 651:Src/main.c    **** 	    				b0 = message[1];
 652:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 653:Src/main.c    **** 	    				HAL_Delay(write_delay);
 654:Src/main.c    **** 	    				eeprom_debug_address++;
 655:Src/main.c    **** 	    				//b0 = message[2];
 656:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 657:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 658:Src/main.c    **** 	    				//eeprom_debug_address++;
 659:Src/main.c    **** 	    				b0 = message[3];
 660:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
ARM GAS  /tmp/ccpZkpgN.s 			page 13


 661:Src/main.c    **** 	    				HAL_Delay(write_delay);
 662:Src/main.c    **** 	    				eeprom_debug_address++;
 663:Src/main.c    **** 	    				b0 = temperature_message[0];
 664:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 665:Src/main.c    **** 	    				HAL_Delay(write_delay);
 666:Src/main.c    **** 	    				eeprom_debug_address++;
 667:Src/main.c    **** 	    				b0 = temperature_message[1];
 668:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 669:Src/main.c    **** 	    				HAL_Delay(write_delay);
 670:Src/main.c    **** 	    				eeprom_debug_address++;
 671:Src/main.c    ****                                                                                                    
 672:Src/main.c    **** 	    			}
 673:Src/main.c    ****                                                                                                    
 674:Src/main.c    ****                                                                                                    
 675:Src/main.c    ****                                                                                                    
 676:Src/main.c    ****                                                                                                    
 677:Src/main.c    ****                                                                                                    
 678:Src/main.c    **** 	    			//--------------------------------------------------------------------------
 679:Src/main.c    ****                                                                                                    
 680:Src/main.c    **** 	    			if((actuator_counter > 0) && (actuator_counter < 100))
 681:Src/main.c    **** 	    			{
 682:Src/main.c    **** 	    				if(actuator_counter >= 21)
 683:Src/main.c    **** 	    				{
 684:Src/main.c    **** 	    					// switch off actuators
 685:Src/main.c    ****   	    					HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_RESET);// turn actuators o
 686:Src/main.c    **** 	    					actuator_counter = 100;
 687:Src/main.c    **** 	    				}
 688:Src/main.c    **** 	    				else
 689:Src/main.c    **** 	    				{
 690:Src/main.c    **** 	    					actuator_counter++;
 691:Src/main.c    **** 	    				}
 692:Src/main.c    **** 	    			}
 693:Src/main.c    ****                                                                                                    
 694:Src/main.c    ****                                                                                                    
 695:Src/main.c    **** 	    			if((depth >= (depth_switch_get_current_depth())) && actuator_counter == 0)
 696:Src/main.c    **** 	    			{
 697:Src/main.c    ****                                                                                                    
 698:Src/main.c    **** 	    				actuator_counter++;
 699:Src/main.c    **** 	    				// switch on actuators
 700:Src/main.c    ****   	    				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_SET);// turn actuators on
 701:Src/main.c    ****                                                                                                    
 702:Src/main.c    **** 	    				// switch on signal leds
 703:Src/main.c    ****   	    				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3, GPIO_PIN_SET
 704:Src/main.c    ****                                                                                                    
 705:Src/main.c    ****                                                                                                    
 706:Src/main.c    **** 	    				// save info about activation conditions (time, depth, etc)
 707:Src/main.c    **** 	    				ssd1306_Fill(Black);
 708:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 709:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 710:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 711:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 712:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 713:Src/main.c    **** 	    	        	sprintf(message, ">>>>> %02dm", (int)depth);
 714:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 715:Src/main.c    ****   	    	        	//ssd1306_SetCursor(0,44);
 716:Src/main.c    **** 	    	        	//sprintf(message, "activated!!!");
 717:Src/main.c    ****   	    	        	//ssd1306_WriteString(message, Font_11x18, White);
ARM GAS  /tmp/ccpZkpgN.s 			page 14


 718:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();   
 719:Src/main.c    ****                                                                                                    
 720:Src/main.c    ****                                                                                                    
 721:Src/main.c    **** 	    				// write depth of activation 
 722:Src/main.c    **** 	    	        	//sprintf(message, "%02d", (int)depth);
 723:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 724:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 725:Src/main.c    **** 	    				b0 = message[0];
 726:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 727:Src/main.c    **** 	    				HAL_Delay(write_delay);
 728:Src/main.c    **** 	    				eeprom_debug_address++;
 729:Src/main.c    **** 	    				b0 = message[1];
 730:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 731:Src/main.c    **** 	    				HAL_Delay(write_delay);
 732:Src/main.c    **** 	    				eeprom_debug_address++;
 733:Src/main.c    **** 	    				//b0 = message[2];
 734:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 735:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 736:Src/main.c    **** 	    				//eeprom_debug_address++;
 737:Src/main.c    **** 	    				b0 = message[3];
 738:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 739:Src/main.c    **** 	    				HAL_Delay(write_delay);
 740:Src/main.c    **** 	    				eeprom_debug_address++;
 741:Src/main.c    **** 	    				b0 = temperature_message[0];
 742:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 743:Src/main.c    **** 	    				HAL_Delay(write_delay);
 744:Src/main.c    **** 	    				eeprom_debug_address++;
 745:Src/main.c    **** 	    				b0 = temperature_message[1];
 746:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 747:Src/main.c    **** 	    				HAL_Delay(write_delay);
 748:Src/main.c    **** 	    				eeprom_debug_address++;
 749:Src/main.c    **** 	    				b0 = '$';
 750:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 751:Src/main.c    **** 	    				HAL_Delay(write_delay);
 752:Src/main.c    **** 	    				eeprom_debug_address++;
 753:Src/main.c    **** 	    				b0 = '$';
 754:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 755:Src/main.c    **** 	    				HAL_Delay(write_delay);
 756:Src/main.c    **** 	    				eeprom_debug_address++;
 757:Src/main.c    **** 	    				eeprom_number_of_records++;
 758:Src/main.c    **** 	    				b0 = '$';
 759:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 760:Src/main.c    **** 	    				HAL_Delay(write_delay);
 761:Src/main.c    **** 	    				eeprom_debug_address++;
 762:Src/main.c    **** 	    				eeprom_number_of_records++;
 763:Src/main.c    **** 	    				b0 = '$';
 764:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 765:Src/main.c    **** 	    				HAL_Delay(write_delay);
 766:Src/main.c    **** 	    				eeprom_debug_address++;
 767:Src/main.c    **** 	    				eeprom_number_of_records++;
 768:Src/main.c    **** 	    				b0 = '$';
 769:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 770:Src/main.c    **** 	    				HAL_Delay(write_delay);
 771:Src/main.c    **** 	    				eeprom_debug_address++;
 772:Src/main.c    **** 	    				eeprom_number_of_records++;
 773:Src/main.c    ****                                                                                                    
 774:Src/main.c    **** 	    				// pause 21 sec
ARM GAS  /tmp/ccpZkpgN.s 			page 15


 775:Src/main.c    **** 	    				//HAL_Delay(21000);
 776:Src/main.c    ****                                                                                                    
 777:Src/main.c    ****                                                                                                    
 778:Src/main.c    **** 	    				// switch off actuators
 779:Src/main.c    ****   	    				//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_RESET);// turn actuators 
 780:Src/main.c    ****                                                                                                    
 781:Src/main.c    **** 	    				// stop
 782:Src/main.c    **** 	    				//while(1);
 783:Src/main.c    **** 	    			}
 784:Src/main.c    ****                                                                                                    
 785:Src/main.c    **** 	    
 786:Src/main.c    **** 	    		}// end if(!we_are_under_water)  // we are not under water
 787:Src/main.c    ****                 
 788:Src/main.c    **** 	    	}// end if(one_second_timer_get_flag())
 789:Src/main.c    ****             //*/                                                                                   
 790:Src/main.c    **** 
 791:Src/main.c    **** 
 792:Src/main.c    ****   
 793:Src/main.c    **** 	    }// end while   
 794:Src/main.c    **** 
 795:Src/main.c    **** 	}// end if
 796:Src/main.c    **** }
 797:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 798:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 799:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 800:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 801:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 802:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 803:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 804:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 805:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 806:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 807:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 808:Src/main.c    **** 
 809:Src/main.c    **** /**
 810:Src/main.c    ****   * @brief System Clock Configuration
 811:Src/main.c    ****   * @retval None
 812:Src/main.c    ****   */
 813:Src/main.c    **** void SystemClock_Config(void)
 814:Src/main.c    **** {
  26              		.loc 1 814 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  33 0002 9AB0     		sub	sp, sp, #104
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 112
 815:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  36              		.loc 1 815 0
  37 0004 0024     		mov	r4, #0
  38 0006 0D94     		str	r4, [sp, #52]
  39 0008 0E94     		str	r4, [sp, #56]
  40 000a 0F94     		str	r4, [sp, #60]
  41 000c 1094     		str	r4, [sp, #64]
ARM GAS  /tmp/ccpZkpgN.s 			page 16


  42 000e 1194     		str	r4, [sp, #68]
  43 0010 1294     		str	r4, [sp, #72]
  44 0012 1394     		str	r4, [sp, #76]
  45 0014 1494     		str	r4, [sp, #80]
  46 0016 1594     		str	r4, [sp, #84]
  47 0018 1694     		str	r4, [sp, #88]
  48 001a 1794     		str	r4, [sp, #92]
  49 001c 1894     		str	r4, [sp, #96]
  50 001e 1994     		str	r4, [sp, #100]
 816:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  51              		.loc 1 816 0
  52 0020 0894     		str	r4, [sp, #32]
  53 0022 0994     		str	r4, [sp, #36]
  54 0024 0A94     		str	r4, [sp, #40]
  55 0026 0B94     		str	r4, [sp, #44]
  56 0028 0C94     		str	r4, [sp, #48]
 817:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  57              		.loc 1 817 0
  58 002a 0094     		str	r4, [sp]
  59 002c 0194     		str	r4, [sp, #4]
  60 002e 0294     		str	r4, [sp, #8]
  61 0030 0394     		str	r4, [sp, #12]
  62 0032 0494     		str	r4, [sp, #16]
  63 0034 0594     		str	r4, [sp, #20]
  64 0036 0694     		str	r4, [sp, #24]
  65 0038 0794     		str	r4, [sp, #28]
 818:Src/main.c    **** 
 819:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 820:Src/main.c    ****   */
 821:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  66              		.loc 1 821 0
  67 003a 144A     		ldr	r2, .L2
  68 003c 1168     		ldr	r1, [r2]
  69 003e 144B     		ldr	r3, .L2+4
  70 0040 0B40     		and	r3, r1
  71 0042 8021     		mov	r1, #128
  72 0044 0901     		lsl	r1, r1, #4
  73 0046 0B43     		orr	r3, r1
  74 0048 1360     		str	r3, [r2]
 822:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 823:Src/main.c    ****   */
 824:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  75              		.loc 1 824 0
  76 004a 1023     		mov	r3, #16
  77 004c 0D93     		str	r3, [sp, #52]
 825:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  78              		.loc 1 825 0
  79 004e 0F3B     		sub	r3, r3, #15
  80 0050 1393     		str	r3, [sp, #76]
 826:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
  81              		.loc 1 826 0
  82 0052 1494     		str	r4, [sp, #80]
 827:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
  83              		.loc 1 827 0
  84 0054 A023     		mov	r3, #160
  85 0056 1B02     		lsl	r3, r3, #8
  86 0058 1593     		str	r3, [sp, #84]
ARM GAS  /tmp/ccpZkpgN.s 			page 17


 828:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  87              		.loc 1 828 0
  88 005a 1694     		str	r4, [sp, #88]
 829:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  89              		.loc 1 829 0
  90 005c 0DA8     		add	r0, sp, #52
  91 005e FFF7FEFF 		bl	HAL_RCC_OscConfig
  92              	.LVL0:
 830:Src/main.c    ****   {
 831:Src/main.c    ****     Error_Handler();
 832:Src/main.c    ****   }
 833:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 834:Src/main.c    ****   */
 835:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  93              		.loc 1 835 0
  94 0062 0F23     		mov	r3, #15
  95 0064 0893     		str	r3, [sp, #32]
 836:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 837:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
  96              		.loc 1 837 0
  97 0066 0994     		str	r4, [sp, #36]
 838:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 838 0
  99 0068 0A94     		str	r4, [sp, #40]
 839:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 100              		.loc 1 839 0
 101 006a 0B94     		str	r4, [sp, #44]
 840:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 840 0
 103 006c 0C94     		str	r4, [sp, #48]
 841:Src/main.c    **** 
 842:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 104              		.loc 1 842 0
 105 006e 08A8     		add	r0, sp, #32
 106 0070 0021     		mov	r1, #0
 107 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 108              	.LVL1:
 843:Src/main.c    ****   {
 844:Src/main.c    ****     Error_Handler();
 845:Src/main.c    ****   }
 846:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 109              		.loc 1 846 0
 110 0076 0A23     		mov	r3, #10
 111 0078 FF33     		add	r3, r3, #255
 112 007a 0093     		str	r3, [sp]
 847:Src/main.c    ****                               |RCC_PERIPHCLK_I2C3;
 848:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 113              		.loc 1 848 0
 114 007c 0294     		str	r4, [sp, #8]
 849:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 115              		.loc 1 849 0
 116 007e 0594     		str	r4, [sp, #20]
 850:Src/main.c    ****   PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 117              		.loc 1 850 0
 118 0080 0694     		str	r4, [sp, #24]
 851:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 119              		.loc 1 851 0
ARM GAS  /tmp/ccpZkpgN.s 			page 18


 120 0082 6846     		mov	r0, sp
 121 0084 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 122              	.LVL2:
 852:Src/main.c    ****   {
 853:Src/main.c    ****     Error_Handler();
 854:Src/main.c    ****   }
 855:Src/main.c    **** }
 123              		.loc 1 855 0
 124 0088 1AB0     		add	sp, sp, #104
 125              		@ sp needed
 126 008a 10BD     		pop	{r4, pc}
 127              	.L3:
 128              		.align	2
 129              	.L2:
 130 008c 00700040 		.word	1073770496
 131 0090 FFE7FFFF 		.word	-6145
 132              		.cfi_endproc
 133              	.LFE35:
 135              		.global	__aeabi_ui2d
 136              		.global	__aeabi_dcmpge
 137              		.global	__aeabi_d2uiz
 138              		.global	__aeabi_dcmplt
 139              		.global	__aeabi_d2iz
 140              		.global	__aeabi_dsub
 141              		.global	__aeabi_ddiv
 142              		.global	__aeabi_dcmpgt
 143              		.global	__aeabi_i2d
 144              		.global	__aeabi_dmul
 145              		.global	__aeabi_dcmple
 146              		.section	.text.main,"ax",%progbits
 147              		.align	2
 148              		.global	main
 149              		.code	16
 150              		.thumb_func
 152              	main:
 153              	.LFB34:
  65:Src/main.c    **** 
 154              		.loc 1 65 0
 155              		.cfi_startproc
 156 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 157              	.LCFI2:
 158              		.cfi_def_cfa_offset 20
 159              		.cfi_offset 4, -20
 160              		.cfi_offset 5, -16
 161              		.cfi_offset 6, -12
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 5F46     		mov	r7, fp
 165 0004 5646     		mov	r6, r10
 166 0006 4D46     		mov	r5, r9
 167 0008 4446     		mov	r4, r8
 168 000a F0B4     		push	{r4, r5, r6, r7}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 36
 171              		.cfi_offset 8, -36
 172              		.cfi_offset 9, -32
 173              		.cfi_offset 10, -28
ARM GAS  /tmp/ccpZkpgN.s 			page 19


 174              		.cfi_offset 11, -24
 175 000c 91B0     		sub	sp, sp, #68
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 104
  71:Src/main.c    **** 
 178              		.loc 1 71 0
 179 000e FFF7FEFF 		bl	HAL_Init
 180              	.LVL3:
  75:Src/main.c    **** 
 181              		.loc 1 75 0
 182 0012 FFF7FEFF 		bl	SystemClock_Config
 183              	.LVL4:
  79:Src/main.c    **** 	MX_ADC_Init();
 184              		.loc 1 79 0
 185 0016 FFF7FEFF 		bl	MX_GPIO_Init
 186              	.LVL5:
  80:Src/main.c    **** 	MX_I2C1_Init();
 187              		.loc 1 80 0
 188 001a FFF7FEFF 		bl	MX_ADC_Init
 189              	.LVL6:
  81:Src/main.c    **** 	//MX_I2C2_Init();
 190              		.loc 1 81 0
 191 001e FFF7FEFF 		bl	MX_I2C1_Init
 192              	.LVL7:
  83:Src/main.c    **** 	MX_SPI1_Init();
 193              		.loc 1 83 0
 194 0022 FFF7FEFF 		bl	MX_I2C3_Init
 195              	.LVL8:
  84:Src/main.c    ****     // enable spi1
 196              		.loc 1 84 0
 197 0026 FFF7FEFF 		bl	MX_SPI1_Init
 198              	.LVL9:
  86:Src/main.c    **** 	MX_USART1_UART_Init();
 199              		.loc 1 86 0
 200 002a BB4A     		ldr	r2, .L35
 201 002c 1168     		ldr	r1, [r2]
 202 002e 4023     		mov	r3, #64
 203 0030 0B43     		orr	r3, r1
 204 0032 1360     		str	r3, [r2]
  87:Src/main.c    ****   
 205              		.loc 1 87 0
 206 0034 FFF7FEFF 		bl	MX_USART1_UART_Init
 207              	.LVL10:
  89:Src/main.c    **** 	//rtc_ds3231_set_time(16, 40, 0);
 208              		.loc 1 89 0
 209 0038 B848     		ldr	r0, .L35+4
 210 003a FFF7FEFF 		bl	rtc_ds3231_set_i2c_handle
 211              	.LVL11:
  94:Src/main.c    ****   	ssd1306_Init();
 212              		.loc 1 94 0
 213 003e B848     		ldr	r0, .L35+8
 214 0040 0121     		mov	r1, #1
 215 0042 FFF7FEFF 		bl	ssd1306_set_i2c_port
 216              	.LVL12:
  95:Src/main.c    ****   	HAL_Delay(100);
 217              		.loc 1 95 0
 218 0046 FFF7FEFF 		bl	ssd1306_Init
ARM GAS  /tmp/ccpZkpgN.s 			page 20


 219              	.LVL13:
  96:Src/main.c    ****   	ssd1306_Fill(White);
 220              		.loc 1 96 0
 221 004a 6420     		mov	r0, #100
 222 004c FFF7FEFF 		bl	HAL_Delay
 223              	.LVL14:
  97:Src/main.c    ****   	ssd1306_UpdateScreen();
 224              		.loc 1 97 0
 225 0050 0120     		mov	r0, #1
 226 0052 FFF7FEFF 		bl	ssd1306_Fill
 227              	.LVL15:
  98:Src/main.c    ****   	HAL_Delay(100);
 228              		.loc 1 98 0
 229 0056 FFF7FEFF 		bl	ssd1306_UpdateScreen
 230              	.LVL16:
  99:Src/main.c    ****   	ssd1306_Fill(Black);
 231              		.loc 1 99 0
 232 005a 6420     		mov	r0, #100
 233 005c FFF7FEFF 		bl	HAL_Delay
 234              	.LVL17:
 100:Src/main.c    ****   	ssd1306_UpdateScreen();
 235              		.loc 1 100 0
 236 0060 0020     		mov	r0, #0
 237 0062 FFF7FEFF 		bl	ssd1306_Fill
 238              	.LVL18:
 101:Src/main.c    **** 
 239              		.loc 1 101 0
 240 0066 FFF7FEFF 		bl	ssd1306_UpdateScreen
 241              	.LVL19:
 103:Src/main.c    **** 
 242              		.loc 1 103 0
 243 006a 6420     		mov	r0, #100
 244 006c FFF7FEFF 		bl	HAL_Delay
 245              	.LVL20:
 105:Src/main.c    ****   	ssd1306_WriteString("L071", Font_16x26, White);
 246              		.loc 1 105 0
 247 0070 0020     		mov	r0, #0
 248 0072 0021     		mov	r1, #0
 249 0074 FFF7FEFF 		bl	ssd1306_SetCursor
 250              	.LVL21:
 106:Src/main.c    ****   	ssd1306_SetCursor(0,30);
 251              		.loc 1 106 0
 252 0078 AA4C     		ldr	r4, .L35+12
 253 007a AB48     		ldr	r0, .L35+16
 254 007c 2168     		ldr	r1, [r4]
 255 007e 6268     		ldr	r2, [r4, #4]
 256 0080 0123     		mov	r3, #1
 257 0082 FFF7FEFF 		bl	ssd1306_WriteString
 258              	.LVL22:
 107:Src/main.c    ****   	ssd1306_WriteString("TEST..", Font_16x26, White);
 259              		.loc 1 107 0
 260 0086 0020     		mov	r0, #0
 261 0088 1E21     		mov	r1, #30
 262 008a FFF7FEFF 		bl	ssd1306_SetCursor
 263              	.LVL23:
 108:Src/main.c    ****   	ssd1306_UpdateScreen();
 264              		.loc 1 108 0
ARM GAS  /tmp/ccpZkpgN.s 			page 21


 265 008e A748     		ldr	r0, .L35+20
 266 0090 2168     		ldr	r1, [r4]
 267 0092 6268     		ldr	r2, [r4, #4]
 268 0094 0123     		mov	r3, #1
 269 0096 FFF7FEFF 		bl	ssd1306_WriteString
 270              	.LVL24:
 109:Src/main.c    ****   
 271              		.loc 1 109 0
 272 009a FFF7FEFF 		bl	ssd1306_UpdateScreen
 273              	.LVL25:
 112:Src/main.c    **** 	one_second_timer_start();
 274              		.loc 1 112 0
 275 009e FFF7FEFF 		bl	one_second_timer_init
 276              	.LVL26:
 113:Src/main.c    **** 
 277              		.loc 1 113 0
 278 00a2 FFF7FEFF 		bl	one_second_timer_start
 279              	.LVL27:
 115:Src/main.c    **** 	HAL_Delay(1000);
 280              		.loc 1 115 0
 281 00a6 FFF7FEFF 		bl	pressure_sensor_object_init
 282              	.LVL28:
 116:Src/main.c    **** 	uint32_t surface_pressure = 101325;
 283              		.loc 1 116 0
 284 00aa FA20     		mov	r0, #250
 285 00ac 8000     		lsl	r0, r0, #2
 286 00ae FFF7FEFF 		bl	HAL_Delay
 287              	.LVL29:
 118:Src/main.c    **** 
 288              		.loc 1 118 0
 289 00b2 0120     		mov	r0, #1
 290 00b4 FFF7FEFF 		bl	depth_switch_turn_signal_led
 291              	.LVL30:
 120:Src/main.c    **** 	//atm_barometer_init();
 292              		.loc 1 120 0
 293 00b8 FFF7FEFF 		bl	rtc_ds3231_action
 294              	.LVL31:
 146:Src/main.c    **** 	{
 295              		.loc 1 146 0
 296 00bc FFF7FEFF 		bl	depth_switch_check_gpio
 297              	.LVL32:
 298 00c0 0028     		cmp	r0, #0
 299 00c2 24D1     		bne	.L28
 300              	.LBB2:
 149:Src/main.c    ****   	    ssd1306_SetCursor(0,0);
 301              		.loc 1 149 0
 302 00c4 FFF7FEFF 		bl	ssd1306_Fill
 303              	.LVL33:
 150:Src/main.c    **** 	    sprintf(message, "log mode");
 304              		.loc 1 150 0
 305 00c8 0020     		mov	r0, #0
 306 00ca 0021     		mov	r1, #0
 307 00cc FFF7FEFF 		bl	ssd1306_SetCursor
 308              	.LVL34:
 151:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 309              		.loc 1 151 0
 310 00d0 974C     		ldr	r4, .L35+24
ARM GAS  /tmp/ccpZkpgN.s 			page 22


 311 00d2 984B     		ldr	r3, .L35+28
 312 00d4 221C     		mov	r2, r4
 313 00d6 03CB     		ldmia	r3!, {r0, r1}
 314 00d8 03C2     		stmia	r2!, {r0, r1}
 315 00da 1B78     		ldrb	r3, [r3]
 316 00dc 1370     		strb	r3, [r2]
 152:Src/main.c    ****   	    ssd1306_SetCursor(0,22);
 317              		.loc 1 152 0
 318 00de 964D     		ldr	r5, .L35+32
 319 00e0 201C     		mov	r0, r4
 320 00e2 2968     		ldr	r1, [r5]
 321 00e4 6A68     		ldr	r2, [r5, #4]
 322 00e6 0123     		mov	r3, #1
 323 00e8 FFF7FEFF 		bl	ssd1306_WriteString
 324              	.LVL35:
 153:Src/main.c    **** 	    sprintf(message, "download...");
 325              		.loc 1 153 0
 326 00ec 0020     		mov	r0, #0
 327 00ee 1621     		mov	r1, #22
 328 00f0 FFF7FEFF 		bl	ssd1306_SetCursor
 329              	.LVL36:
 154:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 330              		.loc 1 154 0
 331 00f4 914B     		ldr	r3, .L35+36
 332 00f6 221C     		mov	r2, r4
 333 00f8 43CB     		ldmia	r3!, {r0, r1, r6}
 334 00fa 43C2     		stmia	r2!, {r0, r1, r6}
 155:Src/main.c    ****   	    ssd1306_UpdateScreen();
 335              		.loc 1 155 0
 336 00fc 201C     		mov	r0, r4
 337 00fe 2968     		ldr	r1, [r5]
 338 0100 6A68     		ldr	r2, [r5, #4]
 339 0102 0123     		mov	r3, #1
 340 0104 FFF7FEFF 		bl	ssd1306_WriteString
 341              	.LVL37:
 156:Src/main.c    **** 
 342              		.loc 1 156 0
 343 0108 FFF7FEFF 		bl	ssd1306_UpdateScreen
 344              	.LVL38:
 345              	.L6:
 403:Src/main.c    **** 
 346              		.loc 1 403 0 discriminator 1
 347 010c FEE7     		b	.L6
 348              	.L28:
 349              	.LBE2:
 350 010e 0023     		mov	r3, #0
 351 0110 9946     		mov	r9, r3
 352 0112 0C93     		str	r3, [sp, #48]
 353 0114 4033     		add	r3, r3, #64
 354 0116 9B46     		mov	fp, r3
 355 0118 6033     		add	r3, r3, #96
 356 011a 0D93     		str	r3, [sp, #52]
 357 011c 0023     		mov	r3, #0
 358 011e 0993     		str	r3, [sp, #36]
 359 0120 874B     		ldr	r3, .L35+40
 360 0122 0893     		str	r3, [sp, #32]
 361              	.LVL39:
ARM GAS  /tmp/ccpZkpgN.s 			page 23


 362              	.L7:
 419:Src/main.c    **** 	    	{
 363              		.loc 1 419 0
 364 0124 FFF7FEFF 		bl	one_second_timer_get_flag
 365              	.LVL40:
 366 0128 0028     		cmp	r0, #0
 367 012a FBD0     		beq	.L7
 368              	.LBB3:
 421:Src/main.c    **** 	    		odd_even = (odd_even+1)%2;
 369              		.loc 1 421 0
 370 012c FFF7FEFF 		bl	one_second_timer_reset_flag
 371              	.LVL41:
 422:Src/main.c    ****   	    
 372              		.loc 1 422 0
 373 0130 099B     		ldr	r3, [sp, #36]
 374 0132 0133     		add	r3, r3, #1
 375 0134 DA0F     		lsr	r2, r3, #31
 376 0136 9B18     		add	r3, r3, r2
 377 0138 0121     		mov	r1, #1
 378 013a 0B40     		and	r3, r1
 379 013c 9B1A     		sub	r3, r3, r2
 380 013e 0993     		str	r3, [sp, #36]
 381              	.LVL42:
 424:Src/main.c    **** 	    	    double P = pressure_sensor_get_pressure();
 382              		.loc 1 424 0
 383 0140 FFF7FEFF 		bl	pressure_sensor_measure_pressure_temperature
 384              	.LVL43:
 425:Src/main.c    **** 	    	    double actual_temperature = pressure_sensor_get_temperature();
 385              		.loc 1 425 0
 386 0144 FFF7FEFF 		bl	pressure_sensor_get_pressure
 387              	.LVL44:
 388 0148 041C     		mov	r4, r0
 389 014a 0D1C     		mov	r5, r1
 390              	.LVL45:
 426:Src/main.c    ****                                                                                                    
 391              		.loc 1 426 0
 392 014c FFF7FEFF 		bl	pressure_sensor_get_temperature
 393              	.LVL46:
 394 0150 0A90     		str	r0, [sp, #40]
 395 0152 0B91     		str	r1, [sp, #44]
 396              	.LVL47:
 428:Src/main.c    **** 	    	    double accu_voltage = voltmeter_get_voltage();
 397              		.loc 1 428 0
 398 0154 FFF7FEFF 		bl	voltmeter_measure_voltage
 399              	.LVL48:
 429:Src/main.c    **** 	    	    double accu_percentage = voltmeter_get_percentage();
 400              		.loc 1 429 0
 401 0158 FFF7FEFF 		bl	voltmeter_get_voltage
 402              	.LVL49:
 430:Src/main.c    **** 	                                                                                                  
 403              		.loc 1 430 0
 404 015c FFF7FEFF 		bl	voltmeter_get_percentage
 405              	.LVL50:
 406 0160 061C     		mov	r6, r0
 407 0162 0F1C     		mov	r7, r1
 408              	.LVL51:
 432:Src/main.c    **** 	    		// time-date calculation ----------------------------------------
ARM GAS  /tmp/ccpZkpgN.s 			page 24


 409              		.loc 1 432 0
 410 0164 FFF7FEFF 		bl	rtc_ds3231_action
 411              	.LVL52:
 435:Src/main.c    **** 	    		uint8_t date, month, year;
 412              		.loc 1 435 0
 413 0168 1320     		mov	r0, #19
 414 016a 0AAB     		add	r3, sp, #40
 415              	.LVL53:
 416 016c 9C46     		mov	ip, r3
 417 016e 6044     		add	r0, r0, ip
 418 0170 1221     		mov	r1, #18
 419 0172 6144     		add	r1, r1, ip
 420 0174 1122     		mov	r2, #17
 421 0176 6244     		add	r2, r2, ip
 422 0178 FFF7FEFF 		bl	rtc_ds3231_get_time
 423              	.LVL54:
 437:Src/main.c    **** 	    		//--------------------------------------------------------------
 424              		.loc 1 437 0
 425 017c 0FA8     		add	r0, sp, #60
 426 017e 1521     		mov	r1, #21
 427 0180 0AAB     		add	r3, sp, #40
 428              	.LVL55:
 429 0182 9C46     		mov	ip, r3
 430 0184 6144     		add	r1, r1, ip
 431 0186 1622     		mov	r2, #22
 432 0188 6244     		add	r2, r2, ip
 433 018a FFF7FEFF 		bl	rtc_ds3231_get_date
 434              	.LVL56:
 446:Src/main.c    **** 	    			surface_pressure = P;
 435              		.loc 1 446 0
 436 018e 0898     		ldr	r0, [sp, #32]
 437 0190 FFF7FEFF 		bl	__aeabi_ui2d
 438              	.LVL57:
 439 0194 221C     		mov	r2, r4
 440 0196 2B1C     		mov	r3, r5
 441 0198 FFF7FEFF 		bl	__aeabi_dcmpge
 442              	.LVL58:
 443 019c 0028     		cmp	r0, #0
 444 019e 04D0     		beq	.L8
 447:Src/main.c    ****                                                                                                    
 445              		.loc 1 447 0
 446 01a0 201C     		mov	r0, r4
 447 01a2 291C     		mov	r1, r5
 448 01a4 FFF7FEFF 		bl	__aeabi_d2uiz
 449              	.LVL59:
 450 01a8 0890     		str	r0, [sp, #32]
 451              	.LVL60:
 452              	.L8:
 451:Src/main.c    **** 	    			we_are_under_water = 1;
 453              		.loc 1 451 0
 454 01aa 089B     		ldr	r3, [sp, #32]
 455 01ac 654A     		ldr	r2, .L35+44
 456 01ae 9446     		mov	ip, r2
 457 01b0 6344     		add	r3, r3, ip
 458 01b2 181C     		mov	r0, r3
 459 01b4 FFF7FEFF 		bl	__aeabi_ui2d
 460              	.LVL61:
ARM GAS  /tmp/ccpZkpgN.s 			page 25


 461 01b8 221C     		mov	r2, r4
 462 01ba 2B1C     		mov	r3, r5
 463 01bc FFF7FEFF 		bl	__aeabi_dcmplt
 464              	.LVL62:
 465 01c0 0028     		cmp	r0, #0
 466 01c2 01D1     		bne	.L29
 449:Src/main.c    ****                                                                                                    
 467              		.loc 1 449 0
 468 01c4 0023     		mov	r3, #0
 469 01c6 00E0     		b	.L10
 470              	.L29:
 452:Src/main.c    ****                                                                                                    
 471              		.loc 1 452 0
 472 01c8 0123     		mov	r3, #1
 473              	.L10:
 474              	.LVL63:
 454:Src/main.c    **** 	    		{
 475              		.loc 1 454 0
 476 01ca 002B     		cmp	r3, #0
 477 01cc 63D1     		bne	.L11
 456:Src/main.c    ****                                                                                                    
 478              		.loc 1 456 0
 479 01ce FFF7FEFF 		bl	depth_switch_action
 480              	.LVL64:
 459:Src/main.c    **** 	    			{
 481              		.loc 1 459 0
 482 01d2 4B46     		mov	r3, r9
 483 01d4 002B     		cmp	r3, #0
 484 01d6 A5D1     		bne	.L7
 485              	.LVL65:
 486              	.LBB4:
 462:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 487              		.loc 1 462 0
 488 01d8 0020     		mov	r0, #0
 489 01da 0021     		mov	r1, #0
 490 01dc FFF7FEFF 		bl	ssd1306_SetCursor
 491              	.LVL66:
 464:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 492              		.loc 1 464 0
 493 01e0 099B     		ldr	r3, [sp, #36]
 494 01e2 002B     		cmp	r3, #0
 495 01e4 13D0     		beq	.L13
 465:Src/main.c    **** 	    				else
 496              		.loc 1 465 0
 497 01e6 1323     		mov	r3, #19
 498 01e8 0AAA     		add	r2, sp, #40
 499              	.LVL67:
 500 01ea 9446     		mov	ip, r2
 501 01ec 6344     		add	r3, r3, ip
 502 01ee 1A78     		ldrb	r2, [r3]
 503              	.LVL68:
 504 01f0 1223     		mov	r3, #18
 505 01f2 6344     		add	r3, r3, ip
 506 01f4 1B78     		ldrb	r3, [r3]
 507 01f6 0FA9     		add	r1, sp, #60
 508 01f8 0978     		ldrb	r1, [r1]
 509 01fa 0091     		str	r1, [sp]
ARM GAS  /tmp/ccpZkpgN.s 			page 26


 510 01fc 1521     		mov	r1, #21
 511 01fe 6144     		add	r1, r1, ip
 512 0200 0978     		ldrb	r1, [r1]
 513 0202 0191     		str	r1, [sp, #4]
 514 0204 5048     		ldr	r0, .L35+48
 515 0206 5149     		ldr	r1, .L35+52
 516 0208 FFF7FEFF 		bl	sprintf
 517              	.LVL69:
 518 020c 12E0     		b	.L14
 519              	.L13:
 467:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 520              		.loc 1 467 0
 521 020e 1323     		mov	r3, #19
 522 0210 0AAA     		add	r2, sp, #40
 523              	.LVL70:
 524 0212 9446     		mov	ip, r2
 525 0214 6344     		add	r3, r3, ip
 526 0216 1A78     		ldrb	r2, [r3]
 527              	.LVL71:
 528 0218 1223     		mov	r3, #18
 529 021a 6344     		add	r3, r3, ip
 530 021c 1B78     		ldrb	r3, [r3]
 531 021e 0FA9     		add	r1, sp, #60
 532 0220 0978     		ldrb	r1, [r1]
 533 0222 0091     		str	r1, [sp]
 534 0224 1521     		mov	r1, #21
 535 0226 6144     		add	r1, r1, ip
 536 0228 0978     		ldrb	r1, [r1]
 537 022a 0191     		str	r1, [sp, #4]
 538 022c 4648     		ldr	r0, .L35+48
 539 022e 4849     		ldr	r1, .L35+56
 540 0230 FFF7FEFF 		bl	sprintf
 541              	.LVL72:
 542              	.L14:
 468:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 543              		.loc 1 468 0
 544 0234 404D     		ldr	r5, .L35+32
 545 0236 4448     		ldr	r0, .L35+48
 546 0238 2968     		ldr	r1, [r5]
 547 023a 6A68     		ldr	r2, [r5, #4]
 548 023c 0123     		mov	r3, #1
 549 023e FFF7FEFF 		bl	ssd1306_WriteString
 550              	.LVL73:
 469:Src/main.c    **** 	    	        	sprintf(message, "AVAR GL %02dm", (int)depth_switch_get_current_depth());
 551              		.loc 1 469 0
 552 0242 0020     		mov	r0, #0
 553 0244 1621     		mov	r1, #22
 554 0246 FFF7FEFF 		bl	ssd1306_SetCursor
 555              	.LVL74:
 470:Src/main.c    ****         
 556              		.loc 1 470 0
 557 024a FFF7FEFF 		bl	depth_switch_get_current_depth
 558              	.LVL75:
 559 024e 384C     		ldr	r4, .L35+24
 560              	.LVL76:
 561 0250 FFF7FEFF 		bl	__aeabi_d2iz
 562              	.LVL77:
ARM GAS  /tmp/ccpZkpgN.s 			page 27


 563 0254 021C     		mov	r2, r0
 564 0256 201C     		mov	r0, r4
 565 0258 3E49     		ldr	r1, .L35+60
 566 025a FFF7FEFF 		bl	sprintf
 567              	.LVL78:
 472:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 568              		.loc 1 472 0
 569 025e 201C     		mov	r0, r4
 570 0260 2968     		ldr	r1, [r5]
 571 0262 6A68     		ldr	r2, [r5, #4]
 572 0264 0123     		mov	r3, #1
 573 0266 FFF7FEFF 		bl	ssd1306_WriteString
 574              	.LVL79:
 473:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 575              		.loc 1 473 0
 576 026a 0020     		mov	r0, #0
 577 026c 2C21     		mov	r1, #44
 578 026e FFF7FEFF 		bl	ssd1306_SetCursor
 579              	.LVL80:
 474:Src/main.c    **** 	    	        	//sprintf(message, "akkum");
 580              		.loc 1 474 0
 581 0272 301C     		mov	r0, r6
 582 0274 391C     		mov	r1, r7
 583 0276 FFF7FEFF 		bl	__aeabi_d2iz
 584              	.LVL81:
 585 027a 021C     		mov	r2, r0
 586 027c 201C     		mov	r0, r4
 587 027e 3649     		ldr	r1, .L35+64
 588 0280 FFF7FEFF 		bl	sprintf
 589              	.LVL82:
 476:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();                                                           
 590              		.loc 1 476 0
 591 0284 201C     		mov	r0, r4
 592 0286 2968     		ldr	r1, [r5]
 593 0288 6A68     		ldr	r2, [r5, #4]
 594 028a 0123     		mov	r3, #1
 595 028c FFF7FEFF 		bl	ssd1306_WriteString
 596              	.LVL83:
 477:Src/main.c    **** 	    
 597              		.loc 1 477 0
 598 0290 FFF7FEFF 		bl	ssd1306_UpdateScreen
 599              	.LVL84:
 600 0294 46E7     		b	.L7
 601              	.LVL85:
 602              	.L11:
 603              	.LBE4:
 604              	.LBB5:
 492:Src/main.c    **** 	    			if(depth > 1.0)
 605              		.loc 1 492 0
 606 0296 0898     		ldr	r0, [sp, #32]
 607 0298 FFF7FEFF 		bl	__aeabi_ui2d
 608              	.LVL86:
 609 029c 021C     		mov	r2, r0
 610 029e 0B1C     		mov	r3, r1
 611 02a0 201C     		mov	r0, r4
 612 02a2 291C     		mov	r1, r5
 613 02a4 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  /tmp/ccpZkpgN.s 			page 28


 614              	.LVL87:
 615 02a8 0022     		mov	r2, #0
 616 02aa 2C4B     		ldr	r3, .L35+68
 617 02ac FFF7FEFF 		bl	__aeabi_ddiv
 618              	.LVL88:
 619 02b0 041C     		mov	r4, r0
 620              	.LVL89:
 621 02b2 0D1C     		mov	r5, r1
 622              	.LVL90:
 493:Src/main.c    **** 	    				depth -= 1.0;
 623              		.loc 1 493 0
 624 02b4 0022     		mov	r2, #0
 625 02b6 2A4B     		ldr	r3, .L35+72
 626 02b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 627              	.LVL91:
 628 02bc 0028     		cmp	r0, #0
 629 02be 08D0     		beq	.L34
 494:Src/main.c    **** 	    			else
 630              		.loc 1 494 0
 631 02c0 201C     		mov	r0, r4
 632 02c2 291C     		mov	r1, r5
 633 02c4 0022     		mov	r2, #0
 634 02c6 264B     		ldr	r3, .L35+72
 635 02c8 FFF7FEFF 		bl	__aeabi_dsub
 636              	.LVL92:
 637 02cc 0690     		str	r0, [sp, #24]
 638 02ce 0791     		str	r1, [sp, #28]
 639              	.LVL93:
 640 02d0 03E0     		b	.L15
 641              	.LVL94:
 642              	.L34:
 496:Src/main.c    ****                                                                                                    
 643              		.loc 1 496 0
 644 02d2 0023     		mov	r3, #0
 645 02d4 0024     		mov	r4, #0
 646              	.LVL95:
 647 02d6 0693     		str	r3, [sp, #24]
 648 02d8 0794     		str	r4, [sp, #28]
 649              	.L15:
 650              	.LVL96:
 498:Src/main.c    **** 	    			{
 651              		.loc 1 498 0
 652 02da 4B46     		mov	r3, r9
 653 02dc 002B     		cmp	r3, #0
 654 02de 00D0     		beq	.LCB572
 655 02e0 93E0     		b	.L17	@long jump
 656              	.LCB572:
 657              	.LVL97:
 658              	.LBB6:
 500:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 659              		.loc 1 500 0
 660 02e2 0020     		mov	r0, #0
 661 02e4 0021     		mov	r1, #0
 662 02e6 FFF7FEFF 		bl	ssd1306_SetCursor
 663              	.LVL98:
 502:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 664              		.loc 1 502 0
ARM GAS  /tmp/ccpZkpgN.s 			page 29


 665 02ea 099B     		ldr	r3, [sp, #36]
 666 02ec 002B     		cmp	r3, #0
 667 02ee 39D0     		beq	.L18
 503:Src/main.c    **** 	    				else
 668              		.loc 1 503 0
 669 02f0 1323     		mov	r3, #19
 670 02f2 0AAA     		add	r2, sp, #40
 671              	.LVL99:
 672 02f4 9446     		mov	ip, r2
 673 02f6 6344     		add	r3, r3, ip
 674 02f8 1A78     		ldrb	r2, [r3]
 675              	.LVL100:
 676 02fa 1223     		mov	r3, #18
 677 02fc 6344     		add	r3, r3, ip
 678 02fe 1B78     		ldrb	r3, [r3]
 679 0300 0FA9     		add	r1, sp, #60
 680 0302 0978     		ldrb	r1, [r1]
 681 0304 0091     		str	r1, [sp]
 682 0306 1521     		mov	r1, #21
 683 0308 6144     		add	r1, r1, ip
 684 030a 0978     		ldrb	r1, [r1]
 685 030c 0191     		str	r1, [sp, #4]
 686 030e 0E48     		ldr	r0, .L35+48
 687 0310 0E49     		ldr	r1, .L35+52
 688 0312 FFF7FEFF 		bl	sprintf
 689              	.LVL101:
 690 0316 38E0     		b	.L19
 691              	.L36:
 692              		.align	2
 693              	.L35:
 694 0318 00300140 		.word	1073819648
 695 031c 00000000 		.word	hi2c3
 696 0320 00000000 		.word	hi2c1
 697 0324 00000000 		.word	Font_16x26
 698 0328 00000000 		.word	.LC2
 699 032c 08000000 		.word	.LC5
 700 0330 00000000 		.word	.LANCHOR0
 701 0334 10000000 		.word	.LC8
 702 0338 00000000 		.word	Font_11x18
 703 033c 1C000000 		.word	.LC11
 704 0340 CD8B0100 		.word	101325
 705 0344 48260000 		.word	9800
 706 0348 00000000 		.word	.LANCHOR1
 707 034c 28000000 		.word	.LC14
 708 0350 3C000000 		.word	.LC16
 709 0354 50000000 		.word	.LC18
 710 0358 60000000 		.word	.LC20
 711 035c 0024C340 		.word	1086530560
 712 0360 0000F03F 		.word	1072693248
 713              	.L18:
 505:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 714              		.loc 1 505 0
 715 0364 1323     		mov	r3, #19
 716 0366 0AAA     		add	r2, sp, #40
 717              	.LVL102:
 718 0368 9446     		mov	ip, r2
 719 036a 6344     		add	r3, r3, ip
ARM GAS  /tmp/ccpZkpgN.s 			page 30


 720 036c 1A78     		ldrb	r2, [r3]
 721              	.LVL103:
 722 036e 1223     		mov	r3, #18
 723 0370 6344     		add	r3, r3, ip
 724 0372 1B78     		ldrb	r3, [r3]
 725 0374 0FA9     		add	r1, sp, #60
 726 0376 0978     		ldrb	r1, [r1]
 727 0378 0091     		str	r1, [sp]
 728 037a 1521     		mov	r1, #21
 729 037c 6144     		add	r1, r1, ip
 730 037e 0978     		ldrb	r1, [r1]
 731 0380 0191     		str	r1, [sp, #4]
 732 0382 EB48     		ldr	r0, .L37
 733 0384 EB49     		ldr	r1, .L37+4
 734 0386 FFF7FEFF 		bl	sprintf
 735              	.LVL104:
 736              	.L19:
 507:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 737              		.loc 1 507 0
 738 038a EB4D     		ldr	r5, .L37+8
 739 038c E848     		ldr	r0, .L37
 740 038e 2968     		ldr	r1, [r5]
 741 0390 6A68     		ldr	r2, [r5, #4]
 742 0392 0123     		mov	r3, #1
 743 0394 FFF7FEFF 		bl	ssd1306_WriteString
 744              	.LVL105:
 508:Src/main.c    **** 	    	        	//sprintf(message, "glubina %02dm", (int)depth);
 745              		.loc 1 508 0
 746 0398 0020     		mov	r0, #0
 747 039a 1621     		mov	r1, #22
 748 039c FFF7FEFF 		bl	ssd1306_SetCursor
 749              	.LVL106:
 510:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 750              		.loc 1 510 0
 751 03a0 0698     		ldr	r0, [sp, #24]
 752 03a2 0799     		ldr	r1, [sp, #28]
 753 03a4 FFF7FEFF 		bl	__aeabi_d2iz
 754              	.LVL107:
 755 03a8 0590     		str	r0, [sp, #20]
 756 03aa FFF7FEFF 		bl	__aeabi_i2d
 757              	.LVL108:
 758 03ae 021C     		mov	r2, r0
 759 03b0 0B1C     		mov	r3, r1
 760 03b2 0698     		ldr	r0, [sp, #24]
 761 03b4 0799     		ldr	r1, [sp, #28]
 762 03b6 FFF7FEFF 		bl	__aeabi_dsub
 763              	.LVL109:
 764 03ba 0022     		mov	r2, #0
 765 03bc DF4B     		ldr	r3, .L37+12
 766 03be FFF7FEFF 		bl	__aeabi_dmul
 767              	.LVL110:
 768 03c2 DF4C     		ldr	r4, .L37+16
 769 03c4 FFF7FEFF 		bl	__aeabi_d2iz
 770              	.LVL111:
 771 03c8 031C     		mov	r3, r0
 772 03ca 201C     		mov	r0, r4
 773 03cc DD49     		ldr	r1, .L37+20
ARM GAS  /tmp/ccpZkpgN.s 			page 31


 774 03ce 059A     		ldr	r2, [sp, #20]
 775 03d0 FFF7FEFF 		bl	sprintf
 776              	.LVL112:
 511:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 777              		.loc 1 511 0
 778 03d4 201C     		mov	r0, r4
 779 03d6 2968     		ldr	r1, [r5]
 780 03d8 6A68     		ldr	r2, [r5, #4]
 781 03da 0123     		mov	r3, #1
 782 03dc FFF7FEFF 		bl	ssd1306_WriteString
 783              	.LVL113:
 512:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 784              		.loc 1 512 0
 785 03e0 0020     		mov	r0, #0
 786 03e2 2C21     		mov	r1, #44
 787 03e4 FFF7FEFF 		bl	ssd1306_SetCursor
 788              	.LVL114:
 513:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 789              		.loc 1 513 0
 790 03e8 301C     		mov	r0, r6
 791 03ea 391C     		mov	r1, r7
 792 03ec FFF7FEFF 		bl	__aeabi_d2iz
 793              	.LVL115:
 794 03f0 021C     		mov	r2, r0
 795 03f2 201C     		mov	r0, r4
 796 03f4 D449     		ldr	r1, .L37+24
 797 03f6 FFF7FEFF 		bl	sprintf
 798              	.LVL116:
 514:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();  
 799              		.loc 1 514 0
 800 03fa 201C     		mov	r0, r4
 801 03fc 2968     		ldr	r1, [r5]
 802 03fe 6A68     		ldr	r2, [r5, #4]
 803 0400 0123     		mov	r3, #1
 804 0402 FFF7FEFF 		bl	ssd1306_WriteString
 805              	.LVL117:
 515:Src/main.c    ****                                                                                                    
 806              		.loc 1 515 0
 807 0406 FFF7FEFF 		bl	ssd1306_UpdateScreen
 808              	.LVL118:
 809              	.L17:
 810              	.LBE6:
 525:Src/main.c    **** 	    			{
 811              		.loc 1 525 0
 812 040a 0C9B     		ldr	r3, [sp, #48]
 813 040c 002B     		cmp	r3, #0
 814 040e 00D0     		beq	.LCB727
 815 0410 A8E1     		b	.L20	@long jump
 816              	.LCB727:
 817              	.LBB7:
 530:Src/main.c    ****                                                                                                    
 818              		.loc 1 530 0
 819 0412 6B46     		mov	r3, sp
 820 0414 9C8E     		ldrh	r4, [r3, #52]
 821 0416 1725     		mov	r5, #23
 822 0418 0AAB     		add	r3, sp, #40
 823              	.LVL119:
ARM GAS  /tmp/ccpZkpgN.s 			page 32


 824 041a 9C46     		mov	ip, r3
 825 041c 6544     		add	r5, r5, ip
 826 041e 0095     		str	r5, [sp]
 827 0420 0123     		mov	r3, #1
 828              	.LVL120:
 829 0422 0193     		str	r3, [sp, #4]
 830 0424 6333     		add	r3, r3, #99
 831 0426 0293     		str	r3, [sp, #8]
 832 0428 C848     		ldr	r0, .L37+28
 833 042a 211C     		mov	r1, r4
 834 042c 0022     		mov	r2, #0
 835 042e 623B     		sub	r3, r3, #98
 836 0430 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 837              	.LVL121:
 532:Src/main.c    **** 	    				{
 838              		.loc 1 532 0
 839 0434 2B78     		ldrb	r3, [r5]
 840 0436 012B     		cmp	r3, #1
 841 0438 15D1     		bne	.L21
 535:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 842              		.loc 1 535 0
 843 043a 1633     		add	r3, r3, #22
 844 043c 0AAA     		add	r2, sp, #40
 845              	.LVL122:
 846 043e 9446     		mov	ip, r2
 847 0440 6344     		add	r3, r3, ip
 848 0442 0022     		mov	r2, #0
 849              	.LVL123:
 850 0444 1A70     		strb	r2, [r3]
 536:Src/main.c    **** 	    					HAL_Delay(write_delay);
 851              		.loc 1 536 0
 852 0446 0093     		str	r3, [sp]
 853 0448 0123     		mov	r3, #1
 854 044a 0193     		str	r3, [sp, #4]
 855 044c 6333     		add	r3, r3, #99
 856 044e 0293     		str	r3, [sp, #8]
 857 0450 BE48     		ldr	r0, .L37+28
 858 0452 211C     		mov	r1, r4
 859 0454 623B     		sub	r3, r3, #98
 860 0456 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 861              	.LVL124:
 537:Src/main.c    ****                                                                                                    
 862              		.loc 1 537 0
 863 045a 0520     		mov	r0, #5
 864 045c FFF7FEFF 		bl	HAL_Delay
 865              	.LVL125:
 540:Src/main.c    **** 	    				}
 866              		.loc 1 540 0
 867 0460 A223     		mov	r3, #162
 868 0462 0D93     		str	r3, [sp, #52]
 869 0464 12E0     		b	.L22
 870              	.LVL126:
 871              	.L21:
 545:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 872              		.loc 1 545 0
 873 0466 1722     		mov	r2, #23
 874 0468 0AAB     		add	r3, sp, #40
ARM GAS  /tmp/ccpZkpgN.s 			page 33


 875              	.LVL127:
 876 046a 9C46     		mov	ip, r3
 877 046c 6244     		add	r2, r2, ip
 878 046e 0123     		mov	r3, #1
 879              	.LVL128:
 880 0470 1370     		strb	r3, [r2]
 546:Src/main.c    **** 	    					HAL_Delay(write_delay);
 881              		.loc 1 546 0
 882 0472 0092     		str	r2, [sp]
 883 0474 0193     		str	r3, [sp, #4]
 884 0476 6333     		add	r3, r3, #99
 885 0478 0293     		str	r3, [sp, #8]
 886 047a B448     		ldr	r0, .L37+28
 887 047c 211C     		mov	r1, r4
 888 047e 0022     		mov	r2, #0
 889 0480 623B     		sub	r3, r3, #98
 890 0482 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 891              	.LVL129:
 547:Src/main.c    **** 	    				}
 892              		.loc 1 547 0
 893 0486 0520     		mov	r0, #5
 894 0488 FFF7FEFF 		bl	HAL_Delay
 895              	.LVL130:
 896              	.L22:
 552:Src/main.c    **** 	    				b0 = timestamp[0];
 897              		.loc 1 552 0
 898 048c A84F     		ldr	r7, .L37
 899 048e 1323     		mov	r3, #19
 900 0490 0AAA     		add	r2, sp, #40
 901              	.LVL131:
 902 0492 9446     		mov	ip, r2
 903 0494 6344     		add	r3, r3, ip
 904 0496 1A78     		ldrb	r2, [r3]
 905              	.LVL132:
 906 0498 1223     		mov	r3, #18
 907 049a 6344     		add	r3, r3, ip
 908 049c 1B78     		ldrb	r3, [r3]
 909 049e 0FA9     		add	r1, sp, #60
 910 04a0 0978     		ldrb	r1, [r1]
 911 04a2 0091     		str	r1, [sp]
 912 04a4 1521     		mov	r1, #21
 913 04a6 6144     		add	r1, r1, ip
 914 04a8 0978     		ldrb	r1, [r1]
 915 04aa 0191     		str	r1, [sp, #4]
 916 04ac 381C     		mov	r0, r7
 917 04ae A849     		ldr	r1, .L37+32
 918 04b0 FFF7FEFF 		bl	sprintf
 919              	.LVL133:
 553:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 920              		.loc 1 553 0
 921 04b4 3B78     		ldrb	r3, [r7]
 922 04b6 1724     		mov	r4, #23
 923 04b8 0AAA     		add	r2, sp, #40
 924              	.LVL134:
 925 04ba 9446     		mov	ip, r2
 926 04bc 6444     		add	r4, r4, ip
 927 04be 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccpZkpgN.s 			page 34


 554:Src/main.c    **** 	    				HAL_Delay(write_delay);
 928              		.loc 1 554 0
 929 04c0 6B46     		mov	r3, sp
 930 04c2 9B8E     		ldrh	r3, [r3, #52]
 931 04c4 0094     		str	r4, [sp]
 932 04c6 0125     		mov	r5, #1
 933 04c8 0195     		str	r5, [sp, #4]
 934 04ca 6426     		mov	r6, #100
 935              	.LVL135:
 936 04cc 0296     		str	r6, [sp, #8]
 937 04ce 9F48     		ldr	r0, .L37+28
 938 04d0 0593     		str	r3, [sp, #20]
 939 04d2 191C     		mov	r1, r3
 940 04d4 5A46     		mov	r2, fp
 941              	.LVL136:
 942 04d6 0223     		mov	r3, #2
 943 04d8 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 944              	.LVL137:
 555:Src/main.c    **** 	    				eeprom_debug_address++;
 945              		.loc 1 555 0
 946 04dc 0520     		mov	r0, #5
 947 04de FFF7FEFF 		bl	HAL_Delay
 948              	.LVL138:
 556:Src/main.c    **** 	    				b0 = timestamp[1];
 949              		.loc 1 556 0
 950 04e2 5A46     		mov	r2, fp
 951 04e4 0132     		add	r2, r2, #1
 952 04e6 92B2     		uxth	r2, r2
 953 04e8 9346     		mov	fp, r2
 954              	.LVL139:
 557:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 955              		.loc 1 557 0
 956 04ea 7B78     		ldrb	r3, [r7, #1]
 957 04ec 2370     		strb	r3, [r4]
 558:Src/main.c    **** 	    				HAL_Delay(write_delay);
 958              		.loc 1 558 0
 959 04ee 0094     		str	r4, [sp]
 960 04f0 0195     		str	r5, [sp, #4]
 961 04f2 0296     		str	r6, [sp, #8]
 962 04f4 9548     		ldr	r0, .L37+28
 963 04f6 0599     		ldr	r1, [sp, #20]
 964 04f8 0223     		mov	r3, #2
 965 04fa FFF7FEFF 		bl	HAL_I2C_Mem_Write
 966              	.LVL140:
 559:Src/main.c    **** 	    				eeprom_debug_address++;
 967              		.loc 1 559 0
 968 04fe 0520     		mov	r0, #5
 969 0500 FFF7FEFF 		bl	HAL_Delay
 970              	.LVL141:
 560:Src/main.c    **** 	    				b0 = timestamp[3];
 971              		.loc 1 560 0
 972 0504 5A46     		mov	r2, fp
 973 0506 0132     		add	r2, r2, #1
 974 0508 92B2     		uxth	r2, r2
 975 050a 9046     		mov	r8, r2
 976              	.LVL142:
 561:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
ARM GAS  /tmp/ccpZkpgN.s 			page 35


 977              		.loc 1 561 0
 978 050c FB78     		ldrb	r3, [r7, #3]
 979 050e 2370     		strb	r3, [r4]
 562:Src/main.c    **** 	    				HAL_Delay(write_delay);
 980              		.loc 1 562 0
 981 0510 0094     		str	r4, [sp]
 982 0512 0195     		str	r5, [sp, #4]
 983 0514 0296     		str	r6, [sp, #8]
 984 0516 8D48     		ldr	r0, .L37+28
 985 0518 0599     		ldr	r1, [sp, #20]
 986 051a 0223     		mov	r3, #2
 987 051c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 988              	.LVL143:
 563:Src/main.c    **** 	    				eeprom_debug_address++;
 989              		.loc 1 563 0
 990 0520 0520     		mov	r0, #5
 991 0522 FFF7FEFF 		bl	HAL_Delay
 992              	.LVL144:
 564:Src/main.c    **** 	    				b0 = timestamp[4];
 993              		.loc 1 564 0
 994 0526 4246     		mov	r2, r8
 995 0528 0132     		add	r2, r2, #1
 996 052a 92B2     		uxth	r2, r2
 997 052c 9046     		mov	r8, r2
 998              	.LVL145:
 565:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 999              		.loc 1 565 0
 1000 052e 3B79     		ldrb	r3, [r7, #4]
 1001 0530 2370     		strb	r3, [r4]
 566:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1002              		.loc 1 566 0
 1003 0532 0094     		str	r4, [sp]
 1004 0534 0195     		str	r5, [sp, #4]
 1005 0536 0296     		str	r6, [sp, #8]
 1006 0538 8448     		ldr	r0, .L37+28
 1007 053a 0599     		ldr	r1, [sp, #20]
 1008 053c 0223     		mov	r3, #2
 1009 053e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1010              	.LVL146:
 567:Src/main.c    **** 	    				eeprom_debug_address++;
 1011              		.loc 1 567 0
 1012 0542 0520     		mov	r0, #5
 1013 0544 FFF7FEFF 		bl	HAL_Delay
 1014              	.LVL147:
 568:Src/main.c    **** 	    				//b0 = ' ';
 1015              		.loc 1 568 0
 1016 0548 4246     		mov	r2, r8
 1017 054a 531C     		add	r3, r2, #1
 1018 054c 9AB2     		uxth	r2, r3
 1019 054e 9046     		mov	r8, r2
 1020              	.LVL148:
 573:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1021              		.loc 1 573 0
 1022 0550 BB79     		ldrb	r3, [r7, #6]
 1023 0552 2370     		strb	r3, [r4]
 574:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1024              		.loc 1 574 0
ARM GAS  /tmp/ccpZkpgN.s 			page 36


 1025 0554 0094     		str	r4, [sp]
 1026 0556 0195     		str	r5, [sp, #4]
 1027 0558 0296     		str	r6, [sp, #8]
 1028 055a 7C48     		ldr	r0, .L37+28
 1029 055c 0599     		ldr	r1, [sp, #20]
 1030 055e 0223     		mov	r3, #2
 1031 0560 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1032              	.LVL149:
 575:Src/main.c    **** 	    				eeprom_debug_address++;
 1033              		.loc 1 575 0
 1034 0564 0520     		mov	r0, #5
 1035 0566 FFF7FEFF 		bl	HAL_Delay
 1036              	.LVL150:
 576:Src/main.c    **** 	    				b0 = timestamp[7];
 1037              		.loc 1 576 0
 1038 056a 4246     		mov	r2, r8
 1039 056c 531C     		add	r3, r2, #1
 1040 056e 9AB2     		uxth	r2, r3
 1041 0570 9046     		mov	r8, r2
 1042              	.LVL151:
 577:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1043              		.loc 1 577 0
 1044 0572 FB79     		ldrb	r3, [r7, #7]
 1045 0574 2370     		strb	r3, [r4]
 578:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1046              		.loc 1 578 0
 1047 0576 0094     		str	r4, [sp]
 1048 0578 0195     		str	r5, [sp, #4]
 1049 057a 0296     		str	r6, [sp, #8]
 1050 057c 7348     		ldr	r0, .L37+28
 1051 057e 0599     		ldr	r1, [sp, #20]
 1052 0580 0223     		mov	r3, #2
 1053 0582 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1054              	.LVL152:
 579:Src/main.c    **** 	    				eeprom_debug_address++;
 1055              		.loc 1 579 0
 1056 0586 0520     		mov	r0, #5
 1057 0588 FFF7FEFF 		bl	HAL_Delay
 1058              	.LVL153:
 580:Src/main.c    **** 	    				b0 = timestamp[9];
 1059              		.loc 1 580 0
 1060 058c 4246     		mov	r2, r8
 1061 058e 531C     		add	r3, r2, #1
 1062 0590 9AB2     		uxth	r2, r3
 1063 0592 9046     		mov	r8, r2
 1064              	.LVL154:
 581:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1065              		.loc 1 581 0
 1066 0594 7B7A     		ldrb	r3, [r7, #9]
 1067 0596 2370     		strb	r3, [r4]
 582:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1068              		.loc 1 582 0
 1069 0598 0094     		str	r4, [sp]
 1070 059a 0195     		str	r5, [sp, #4]
 1071 059c 0296     		str	r6, [sp, #8]
 1072 059e 6B48     		ldr	r0, .L37+28
 1073 05a0 0599     		ldr	r1, [sp, #20]
ARM GAS  /tmp/ccpZkpgN.s 			page 37


 1074 05a2 0223     		mov	r3, #2
 1075 05a4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1076              	.LVL155:
 583:Src/main.c    **** 	    				eeprom_debug_address++;
 1077              		.loc 1 583 0
 1078 05a8 0520     		mov	r0, #5
 1079 05aa FFF7FEFF 		bl	HAL_Delay
 1080              	.LVL156:
 584:Src/main.c    **** 	    				b0 = timestamp[10];
 1081              		.loc 1 584 0
 1082 05ae 4346     		mov	r3, r8
 1083 05b0 0133     		add	r3, r3, #1
 1084 05b2 9BB2     		uxth	r3, r3
 1085 05b4 9846     		mov	r8, r3
 1086              	.LVL157:
 585:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1087              		.loc 1 585 0
 1088 05b6 BB7A     		ldrb	r3, [r7, #10]
 1089 05b8 2370     		strb	r3, [r4]
 586:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1090              		.loc 1 586 0
 1091 05ba 0094     		str	r4, [sp]
 1092 05bc 0195     		str	r5, [sp, #4]
 1093 05be 0296     		str	r6, [sp, #8]
 1094 05c0 6248     		ldr	r0, .L37+28
 1095 05c2 0599     		ldr	r1, [sp, #20]
 1096 05c4 4246     		mov	r2, r8
 1097 05c6 0223     		mov	r3, #2
 1098 05c8 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1099              	.LVL158:
 587:Src/main.c    **** 	    				eeprom_debug_address++;
 1100              		.loc 1 587 0
 1101 05cc 0520     		mov	r0, #5
 1102 05ce FFF7FEFF 		bl	HAL_Delay
 1103              	.LVL159:
 588:Src/main.c    **** 	    				//b0 = ' ';
 1104              		.loc 1 588 0
 1105 05d2 4346     		mov	r3, r8
 1106 05d4 0133     		add	r3, r3, #1
 1107 05d6 9BB2     		uxth	r3, r3
 1108 05d8 9846     		mov	r8, r3
 1109              	.LVL160:
 597:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 1110              		.loc 1 597 0
 1111 05da 0698     		ldr	r0, [sp, #24]
 1112 05dc 0799     		ldr	r1, [sp, #28]
 1113 05de FFF7FEFF 		bl	__aeabi_d2iz
 1114              	.LVL161:
 1115 05e2 071C     		mov	r7, r0
 1116 05e4 FFF7FEFF 		bl	__aeabi_i2d
 1117              	.LVL162:
 1118 05e8 021C     		mov	r2, r0
 1119 05ea 0B1C     		mov	r3, r1
 1120 05ec 0698     		ldr	r0, [sp, #24]
 1121 05ee 0799     		ldr	r1, [sp, #28]
 1122 05f0 FFF7FEFF 		bl	__aeabi_dsub
 1123              	.LVL163:
ARM GAS  /tmp/ccpZkpgN.s 			page 38


 1124 05f4 0022     		mov	r2, #0
 1125 05f6 514B     		ldr	r3, .L37+12
 1126 05f8 FFF7FEFF 		bl	__aeabi_dmul
 1127              	.LVL164:
 1128 05fc 504B     		ldr	r3, .L37+16
 1129 05fe 9B46     		mov	fp, r3
 1130 0600 FFF7FEFF 		bl	__aeabi_d2iz
 1131              	.LVL165:
 1132 0604 031C     		mov	r3, r0
 1133 0606 5846     		mov	r0, fp
 1134 0608 5249     		ldr	r1, .L37+36
 1135 060a 3A1C     		mov	r2, r7
 1136 060c FFF7FEFF 		bl	sprintf
 1137              	.LVL166:
 598:Src/main.c    **** 	    				b0 = message[0];
 1138              		.loc 1 598 0
 1139 0610 0A98     		ldr	r0, [sp, #40]
 1140 0612 0B99     		ldr	r1, [sp, #44]
 1141 0614 0022     		mov	r2, #0
 1142 0616 504B     		ldr	r3, .L37+40
 1143 0618 FFF7FEFF 		bl	__aeabi_ddiv
 1144              	.LVL167:
 1145 061c 4F4F     		ldr	r7, .L37+44
 1146 061e FFF7FEFF 		bl	__aeabi_d2iz
 1147              	.LVL168:
 1148 0622 021C     		mov	r2, r0
 1149 0624 381C     		mov	r0, r7
 1150 0626 4E49     		ldr	r1, .L37+48
 1151 0628 FFF7FEFF 		bl	sprintf
 1152              	.LVL169:
 599:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1153              		.loc 1 599 0
 1154 062c 5B46     		mov	r3, fp
 1155 062e 1B78     		ldrb	r3, [r3]
 1156 0630 2370     		strb	r3, [r4]
 600:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1157              		.loc 1 600 0
 1158 0632 0094     		str	r4, [sp]
 1159 0634 0195     		str	r5, [sp, #4]
 1160 0636 0296     		str	r6, [sp, #8]
 1161 0638 4448     		ldr	r0, .L37+28
 1162 063a 0599     		ldr	r1, [sp, #20]
 1163 063c 4246     		mov	r2, r8
 1164 063e 0223     		mov	r3, #2
 1165 0640 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1166              	.LVL170:
 601:Src/main.c    **** 	    				eeprom_debug_address++;
 1167              		.loc 1 601 0
 1168 0644 0520     		mov	r0, #5
 1169 0646 FFF7FEFF 		bl	HAL_Delay
 1170              	.LVL171:
 602:Src/main.c    **** 	    				b0 = message[1];
 1171              		.loc 1 602 0
 1172 064a 4346     		mov	r3, r8
 1173 064c 0133     		add	r3, r3, #1
 1174 064e 9BB2     		uxth	r3, r3
 1175 0650 9846     		mov	r8, r3
ARM GAS  /tmp/ccpZkpgN.s 			page 39


 1176              	.LVL172:
 603:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1177              		.loc 1 603 0
 1178 0652 5B46     		mov	r3, fp
 1179 0654 5B78     		ldrb	r3, [r3, #1]
 1180 0656 2370     		strb	r3, [r4]
 604:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1181              		.loc 1 604 0
 1182 0658 0094     		str	r4, [sp]
 1183 065a 0195     		str	r5, [sp, #4]
 1184 065c 0296     		str	r6, [sp, #8]
 1185 065e 3B48     		ldr	r0, .L37+28
 1186 0660 0599     		ldr	r1, [sp, #20]
 1187 0662 4246     		mov	r2, r8
 1188 0664 0223     		mov	r3, #2
 1189 0666 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1190              	.LVL173:
 605:Src/main.c    **** 	    				eeprom_debug_address++;
 1191              		.loc 1 605 0
 1192 066a 0520     		mov	r0, #5
 1193 066c FFF7FEFF 		bl	HAL_Delay
 1194              	.LVL174:
 606:Src/main.c    **** 	    				//b0 = message[2];
 1195              		.loc 1 606 0
 1196 0670 4346     		mov	r3, r8
 1197 0672 0133     		add	r3, r3, #1
 1198 0674 9BB2     		uxth	r3, r3
 1199 0676 9846     		mov	r8, r3
 1200              	.LVL175:
 611:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1201              		.loc 1 611 0
 1202 0678 5B46     		mov	r3, fp
 1203 067a DB78     		ldrb	r3, [r3, #3]
 1204 067c 2370     		strb	r3, [r4]
 612:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1205              		.loc 1 612 0
 1206 067e 0094     		str	r4, [sp]
 1207 0680 0195     		str	r5, [sp, #4]
 1208 0682 0296     		str	r6, [sp, #8]
 1209 0684 3148     		ldr	r0, .L37+28
 1210 0686 0599     		ldr	r1, [sp, #20]
 1211 0688 4246     		mov	r2, r8
 1212 068a 0223     		mov	r3, #2
 1213 068c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1214              	.LVL176:
 613:Src/main.c    **** 	    				eeprom_debug_address++;
 1215              		.loc 1 613 0
 1216 0690 0520     		mov	r0, #5
 1217 0692 FFF7FEFF 		bl	HAL_Delay
 1218              	.LVL177:
 614:Src/main.c    **** 	    				b0 = temperature_message[0];
 1219              		.loc 1 614 0
 1220 0696 4346     		mov	r3, r8
 1221 0698 5A1C     		add	r2, r3, #1
 1222 069a 93B2     		uxth	r3, r2
 1223 069c 9846     		mov	r8, r3
 1224              	.LVL178:
ARM GAS  /tmp/ccpZkpgN.s 			page 40


 615:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1225              		.loc 1 615 0
 1226 069e 3B78     		ldrb	r3, [r7]
 1227 06a0 2370     		strb	r3, [r4]
 616:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1228              		.loc 1 616 0
 1229 06a2 0094     		str	r4, [sp]
 1230 06a4 0195     		str	r5, [sp, #4]
 1231 06a6 0296     		str	r6, [sp, #8]
 1232 06a8 2848     		ldr	r0, .L37+28
 1233 06aa 0599     		ldr	r1, [sp, #20]
 1234 06ac 4246     		mov	r2, r8
 1235 06ae 0223     		mov	r3, #2
 1236 06b0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1237              	.LVL179:
 617:Src/main.c    **** 	    				eeprom_debug_address++;
 1238              		.loc 1 617 0
 1239 06b4 0520     		mov	r0, #5
 1240 06b6 FFF7FEFF 		bl	HAL_Delay
 1241              	.LVL180:
 618:Src/main.c    **** 	    				b0 = temperature_message[1];
 1242              		.loc 1 618 0
 1243 06ba 4346     		mov	r3, r8
 1244 06bc 5A1C     		add	r2, r3, #1
 1245 06be 93B2     		uxth	r3, r2
 1246 06c0 9846     		mov	r8, r3
 1247              	.LVL181:
 619:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1248              		.loc 1 619 0
 1249 06c2 7B78     		ldrb	r3, [r7, #1]
 1250 06c4 2370     		strb	r3, [r4]
 620:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1251              		.loc 1 620 0
 1252 06c6 0094     		str	r4, [sp]
 1253 06c8 0195     		str	r5, [sp, #4]
 1254 06ca 0296     		str	r6, [sp, #8]
 1255 06cc 1F48     		ldr	r0, .L37+28
 1256 06ce 0599     		ldr	r1, [sp, #20]
 1257 06d0 4246     		mov	r2, r8
 1258 06d2 0223     		mov	r3, #2
 1259 06d4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1260              	.LVL182:
 621:Src/main.c    **** 	    				eeprom_debug_address++;
 1261              		.loc 1 621 0
 1262 06d8 0520     		mov	r0, #5
 1263 06da FFF7FEFF 		bl	HAL_Delay
 1264              	.LVL183:
 622:Src/main.c    **** 	    				b0 = 0;
 1265              		.loc 1 622 0
 1266 06de 4346     		mov	r3, r8
 1267 06e0 5F1C     		add	r7, r3, #1
 1268 06e2 BFB2     		uxth	r7, r7
 1269              	.LVL184:
 623:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1270              		.loc 1 623 0
 1271 06e4 0023     		mov	r3, #0
 1272 06e6 9846     		mov	r8, r3
ARM GAS  /tmp/ccpZkpgN.s 			page 41


 1273 06e8 2370     		strb	r3, [r4]
 624:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1274              		.loc 1 624 0
 1275 06ea 0094     		str	r4, [sp]
 1276 06ec 0195     		str	r5, [sp, #4]
 1277 06ee 0296     		str	r6, [sp, #8]
 1278 06f0 1648     		ldr	r0, .L37+28
 1279 06f2 0599     		ldr	r1, [sp, #20]
 1280 06f4 3A1C     		mov	r2, r7
 1281 06f6 0223     		mov	r3, #2
 1282 06f8 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1283              	.LVL185:
 625:Src/main.c    **** 	    				eeprom_debug_address++;
 1284              		.loc 1 625 0
 1285 06fc 0520     		mov	r0, #5
 1286 06fe FFF7FEFF 		bl	HAL_Delay
 1287              	.LVL186:
 626:Src/main.c    **** 	    				b0 = 0;
 1288              		.loc 1 626 0
 1289 0702 0137     		add	r7, r7, #1
 1290              	.LVL187:
 1291 0704 BFB2     		uxth	r7, r7
 1292              	.LVL188:
 627:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1293              		.loc 1 627 0
 1294 0706 4346     		mov	r3, r8
 1295 0708 2370     		strb	r3, [r4]
 628:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1296              		.loc 1 628 0
 1297 070a 0094     		str	r4, [sp]
 1298 070c 0195     		str	r5, [sp, #4]
 1299 070e 0296     		str	r6, [sp, #8]
 1300 0710 0E48     		ldr	r0, .L37+28
 1301 0712 0599     		ldr	r1, [sp, #20]
 1302 0714 3A1C     		mov	r2, r7
 1303 0716 0223     		mov	r3, #2
 1304 0718 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1305              	.LVL189:
 629:Src/main.c    **** 	    				eeprom_debug_address--;
 1306              		.loc 1 629 0
 1307 071c 0520     		mov	r0, #5
 1308 071e FFF7FEFF 		bl	HAL_Delay
 1309              	.LVL190:
 630:Src/main.c    **** 	    				eeprom_number_of_records++;
 1310              		.loc 1 630 0
 1311 0722 013F     		sub	r7, r7, #1
 1312              	.LVL191:
 1313 0724 BBB2     		uxth	r3, r7
 1314 0726 9B46     		mov	fp, r3
 1315              	.LVL192:
 631:Src/main.c    ****                                                                                                    
 1316              		.loc 1 631 0
 1317 0728 0C9B     		ldr	r3, [sp, #48]
 1318 072a 0133     		add	r3, r3, #1
 1319 072c 0C93     		str	r3, [sp, #48]
 1320              	.LVL193:
 1321              	.LBE7:
ARM GAS  /tmp/ccpZkpgN.s 			page 42


 1322 072e CAE0     		b	.L23
 1323              	.L38:
 1324              		.align	2
 1325              	.L37:
 1326 0730 00000000 		.word	.LANCHOR1
 1327 0734 3C000000 		.word	.LC16
 1328 0738 00000000 		.word	Font_11x18
 1329 073c 00002440 		.word	1076101120
 1330 0740 00000000 		.word	.LANCHOR0
 1331 0744 70000000 		.word	.LC22
 1332 0748 60000000 		.word	.LC20
 1333 074c 00000000 		.word	hi2c2
 1334 0750 28000000 		.word	.LC14
 1335 0754 84000000 		.word	.LC25
 1336 0758 00005940 		.word	1079574528
 1337 075c 00000000 		.word	.LANCHOR2
 1338 0760 90000000 		.word	.LC28
 1339              	.LVL194:
 1340              	.L20:
 1341              	.LBB8:
 639:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 5, I
 1342              		.loc 1 639 0
 1343 0764 1724     		mov	r4, #23
 1344 0766 0AAB     		add	r3, sp, #40
 1345              	.LVL195:
 1346 0768 9C46     		mov	ip, r3
 1347 076a 6444     		add	r4, r4, ip
 1348 076c 0023     		mov	r3, #0
 1349              	.LVL196:
 1350 076e 2370     		strb	r3, [r4]
 640:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1351              		.loc 1 640 0
 1352 0770 6B46     		mov	r3, sp
 1353 0772 9B8E     		ldrh	r3, [r3, #52]
 1354 0774 5A46     		mov	r2, fp
 1355 0776 0532     		add	r2, r2, #5
 1356 0778 92B2     		uxth	r2, r2
 1357 077a 0094     		str	r4, [sp]
 1358 077c 0125     		mov	r5, #1
 1359 077e 0195     		str	r5, [sp, #4]
 1360 0780 6426     		mov	r6, #100
 1361              	.LVL197:
 1362 0782 0296     		str	r6, [sp, #8]
 1363 0784 F148     		ldr	r0, .L39
 1364 0786 1F1C     		mov	r7, r3
 1365 0788 191C     		mov	r1, r3
 1366 078a 0223     		mov	r3, #2
 1367 078c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1368              	.LVL198:
 641:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 6, I
 1369              		.loc 1 641 0
 1370 0790 0520     		mov	r0, #5
 1371 0792 FFF7FEFF 		bl	HAL_Delay
 1372              	.LVL199:
 642:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1373              		.loc 1 642 0
 1374 0796 5B46     		mov	r3, fp
ARM GAS  /tmp/ccpZkpgN.s 			page 43


 1375 0798 9A1D     		add	r2, r3, #6
 1376 079a 92B2     		uxth	r2, r2
 1377 079c 0094     		str	r4, [sp]
 1378 079e 0195     		str	r5, [sp, #4]
 1379 07a0 0296     		str	r6, [sp, #8]
 1380 07a2 EA48     		ldr	r0, .L39
 1381 07a4 0597     		str	r7, [sp, #20]
 1382 07a6 391C     		mov	r1, r7
 1383 07a8 0223     		mov	r3, #2
 1384 07aa FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1385              	.LVL200:
 643:Src/main.c    **** 	    				eeprom_number_of_records++;
 1386              		.loc 1 643 0
 1387 07ae 0520     		mov	r0, #5
 1388 07b0 FFF7FEFF 		bl	HAL_Delay
 1389              	.LVL201:
 644:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 1390              		.loc 1 644 0
 1391 07b4 0C9B     		ldr	r3, [sp, #48]
 1392 07b6 0133     		add	r3, r3, #1
 1393 07b8 0C93     		str	r3, [sp, #48]
 1394              	.LVL202:
 645:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 1395              		.loc 1 645 0
 1396 07ba 0698     		ldr	r0, [sp, #24]
 1397 07bc 0799     		ldr	r1, [sp, #28]
 1398 07be FFF7FEFF 		bl	__aeabi_d2iz
 1399              	.LVL203:
 1400 07c2 071C     		mov	r7, r0
 1401 07c4 FFF7FEFF 		bl	__aeabi_i2d
 1402              	.LVL204:
 1403 07c8 021C     		mov	r2, r0
 1404 07ca 0B1C     		mov	r3, r1
 1405 07cc 0698     		ldr	r0, [sp, #24]
 1406 07ce 0799     		ldr	r1, [sp, #28]
 1407 07d0 FFF7FEFF 		bl	__aeabi_dsub
 1408              	.LVL205:
 1409 07d4 0022     		mov	r2, #0
 1410 07d6 DE4B     		ldr	r3, .L39+4
 1411 07d8 FFF7FEFF 		bl	__aeabi_dmul
 1412              	.LVL206:
 1413 07dc DD4B     		ldr	r3, .L39+8
 1414 07de 9A46     		mov	r10, r3
 1415 07e0 FFF7FEFF 		bl	__aeabi_d2iz
 1416              	.LVL207:
 1417 07e4 031C     		mov	r3, r0
 1418 07e6 5046     		mov	r0, r10
 1419 07e8 DB49     		ldr	r1, .L39+12
 1420 07ea 3A1C     		mov	r2, r7
 1421 07ec FFF7FEFF 		bl	sprintf
 1422              	.LVL208:
 646:Src/main.c    **** 	    				b0 = message[0];
 1423              		.loc 1 646 0
 1424 07f0 0A98     		ldr	r0, [sp, #40]
 1425 07f2 0B99     		ldr	r1, [sp, #44]
 1426 07f4 0022     		mov	r2, #0
 1427 07f6 D94B     		ldr	r3, .L39+16
ARM GAS  /tmp/ccpZkpgN.s 			page 44


 1428 07f8 FFF7FEFF 		bl	__aeabi_ddiv
 1429              	.LVL209:
 1430 07fc D84F     		ldr	r7, .L39+20
 1431 07fe FFF7FEFF 		bl	__aeabi_d2iz
 1432              	.LVL210:
 1433 0802 021C     		mov	r2, r0
 1434 0804 381C     		mov	r0, r7
 1435 0806 D749     		ldr	r1, .L39+24
 1436 0808 FFF7FEFF 		bl	sprintf
 1437              	.LVL211:
 647:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1438              		.loc 1 647 0
 1439 080c 5346     		mov	r3, r10
 1440 080e 1B78     		ldrb	r3, [r3]
 1441 0810 2370     		strb	r3, [r4]
 648:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1442              		.loc 1 648 0
 1443 0812 0094     		str	r4, [sp]
 1444 0814 0195     		str	r5, [sp, #4]
 1445 0816 0296     		str	r6, [sp, #8]
 1446 0818 CC48     		ldr	r0, .L39
 1447 081a 0599     		ldr	r1, [sp, #20]
 1448 081c 5A46     		mov	r2, fp
 1449 081e 0223     		mov	r3, #2
 1450 0820 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1451              	.LVL212:
 649:Src/main.c    **** 	    				eeprom_debug_address++;
 1452              		.loc 1 649 0
 1453 0824 0520     		mov	r0, #5
 1454 0826 FFF7FEFF 		bl	HAL_Delay
 1455              	.LVL213:
 650:Src/main.c    **** 	    				b0 = message[1];
 1456              		.loc 1 650 0
 1457 082a 5B46     		mov	r3, fp
 1458 082c 0133     		add	r3, r3, #1
 1459 082e 9BB2     		uxth	r3, r3
 1460 0830 9B46     		mov	fp, r3
 1461              	.LVL214:
 651:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1462              		.loc 1 651 0
 1463 0832 5346     		mov	r3, r10
 1464 0834 5B78     		ldrb	r3, [r3, #1]
 1465 0836 2370     		strb	r3, [r4]
 652:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1466              		.loc 1 652 0
 1467 0838 0094     		str	r4, [sp]
 1468 083a 0195     		str	r5, [sp, #4]
 1469 083c 0296     		str	r6, [sp, #8]
 1470 083e C348     		ldr	r0, .L39
 1471 0840 0599     		ldr	r1, [sp, #20]
 1472 0842 5A46     		mov	r2, fp
 1473 0844 0223     		mov	r3, #2
 1474 0846 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1475              	.LVL215:
 653:Src/main.c    **** 	    				eeprom_debug_address++;
 1476              		.loc 1 653 0
 1477 084a 0520     		mov	r0, #5
ARM GAS  /tmp/ccpZkpgN.s 			page 45


 1478 084c FFF7FEFF 		bl	HAL_Delay
 1479              	.LVL216:
 654:Src/main.c    **** 	    				//b0 = message[2];
 1480              		.loc 1 654 0
 1481 0850 5B46     		mov	r3, fp
 1482 0852 0133     		add	r3, r3, #1
 1483 0854 9BB2     		uxth	r3, r3
 1484 0856 9B46     		mov	fp, r3
 1485              	.LVL217:
 659:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1486              		.loc 1 659 0
 1487 0858 5346     		mov	r3, r10
 1488 085a DB78     		ldrb	r3, [r3, #3]
 1489 085c 2370     		strb	r3, [r4]
 660:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1490              		.loc 1 660 0
 1491 085e 0094     		str	r4, [sp]
 1492 0860 0195     		str	r5, [sp, #4]
 1493 0862 0296     		str	r6, [sp, #8]
 1494 0864 B948     		ldr	r0, .L39
 1495 0866 0599     		ldr	r1, [sp, #20]
 1496 0868 5A46     		mov	r2, fp
 1497 086a 0223     		mov	r3, #2
 1498 086c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1499              	.LVL218:
 661:Src/main.c    **** 	    				eeprom_debug_address++;
 1500              		.loc 1 661 0
 1501 0870 0520     		mov	r0, #5
 1502 0872 FFF7FEFF 		bl	HAL_Delay
 1503              	.LVL219:
 662:Src/main.c    **** 	    				b0 = temperature_message[0];
 1504              		.loc 1 662 0
 1505 0876 5B46     		mov	r3, fp
 1506 0878 5A1C     		add	r2, r3, #1
 1507 087a 93B2     		uxth	r3, r2
 1508 087c 9B46     		mov	fp, r3
 1509              	.LVL220:
 663:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1510              		.loc 1 663 0
 1511 087e 3B78     		ldrb	r3, [r7]
 1512 0880 2370     		strb	r3, [r4]
 664:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1513              		.loc 1 664 0
 1514 0882 0094     		str	r4, [sp]
 1515 0884 0195     		str	r5, [sp, #4]
 1516 0886 0296     		str	r6, [sp, #8]
 1517 0888 B048     		ldr	r0, .L39
 1518 088a 0599     		ldr	r1, [sp, #20]
 1519 088c 5A46     		mov	r2, fp
 1520 088e 0223     		mov	r3, #2
 1521 0890 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1522              	.LVL221:
 665:Src/main.c    **** 	    				eeprom_debug_address++;
 1523              		.loc 1 665 0
 1524 0894 0520     		mov	r0, #5
 1525 0896 FFF7FEFF 		bl	HAL_Delay
 1526              	.LVL222:
ARM GAS  /tmp/ccpZkpgN.s 			page 46


 666:Src/main.c    **** 	    				b0 = temperature_message[1];
 1527              		.loc 1 666 0
 1528 089a 5B46     		mov	r3, fp
 1529 089c 5A1C     		add	r2, r3, #1
 1530 089e 93B2     		uxth	r3, r2
 1531 08a0 9846     		mov	r8, r3
 1532              	.LVL223:
 667:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1533              		.loc 1 667 0
 1534 08a2 7B78     		ldrb	r3, [r7, #1]
 1535 08a4 2370     		strb	r3, [r4]
 668:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1536              		.loc 1 668 0
 1537 08a6 0094     		str	r4, [sp]
 1538 08a8 0195     		str	r5, [sp, #4]
 1539 08aa 0296     		str	r6, [sp, #8]
 1540 08ac A748     		ldr	r0, .L39
 1541 08ae 0599     		ldr	r1, [sp, #20]
 1542 08b0 4246     		mov	r2, r8
 1543 08b2 0223     		mov	r3, #2
 1544 08b4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1545              	.LVL224:
 669:Src/main.c    **** 	    				eeprom_debug_address++;
 1546              		.loc 1 669 0
 1547 08b8 0520     		mov	r0, #5
 1548 08ba FFF7FEFF 		bl	HAL_Delay
 1549              	.LVL225:
 670:Src/main.c    ****                                                                                                    
 1550              		.loc 1 670 0
 1551 08be 4346     		mov	r3, r8
 1552 08c0 5A1C     		add	r2, r3, #1
 1553 08c2 93B2     		uxth	r3, r2
 1554 08c4 9B46     		mov	fp, r3
 1555              	.LVL226:
 1556              	.L23:
 1557              	.LBE8:
 680:Src/main.c    **** 	    			{
 1558              		.loc 1 680 0
 1559 08c6 4B46     		mov	r3, r9
 1560 08c8 013B     		sub	r3, r3, #1
 1561 08ca 622B     		cmp	r3, #98
 1562 08cc 0FD8     		bhi	.L24
 682:Src/main.c    **** 	    				{
 1563              		.loc 1 682 0
 1564 08ce 4B46     		mov	r3, r9
 1565 08d0 142B     		cmp	r3, #20
 1566 08d2 09DD     		ble	.L25
 1567              	.LVL227:
 685:Src/main.c    **** 	    					actuator_counter = 100;
 1568              		.loc 1 685 0
 1569 08d4 A020     		mov	r0, #160
 1570 08d6 C005     		lsl	r0, r0, #23
 1571 08d8 C021     		mov	r1, #192
 1572 08da 4901     		lsl	r1, r1, #5
 1573 08dc 0022     		mov	r2, #0
 1574 08de FFF7FEFF 		bl	HAL_GPIO_WritePin
 1575              	.LVL228:
ARM GAS  /tmp/ccpZkpgN.s 			page 47


 686:Src/main.c    **** 	    				}
 1576              		.loc 1 686 0
 1577 08e2 6423     		mov	r3, #100
 1578 08e4 9946     		mov	r9, r3
 1579 08e6 02E0     		b	.L24
 1580              	.LVL229:
 1581              	.L25:
 690:Src/main.c    **** 	    				}
 1582              		.loc 1 690 0
 1583 08e8 4B46     		mov	r3, r9
 1584              	.LVL230:
 1585 08ea 0133     		add	r3, r3, #1
 1586 08ec 9946     		mov	r9, r3
 1587              	.LVL231:
 1588              	.L24:
 695:Src/main.c    **** 	    			{
 1589              		.loc 1 695 0
 1590 08ee FFF7FEFF 		bl	depth_switch_get_current_depth
 1591              	.LVL232:
 1592 08f2 069A     		ldr	r2, [sp, #24]
 1593 08f4 079B     		ldr	r3, [sp, #28]
 1594 08f6 FFF7FEFF 		bl	__aeabi_dcmple
 1595              	.LVL233:
 1596 08fa 0028     		cmp	r0, #0
 1597 08fc 01D1     		bne	.LCB1470
 1598 08fe FFF711FC 		bl	.L7	@far jump
 1599              	.LCB1470:
 695:Src/main.c    **** 	    			{
 1600              		.loc 1 695 0 is_stmt 0 discriminator 1
 1601 0902 4B46     		mov	r3, r9
 1602 0904 002B     		cmp	r3, #0
 1603 0906 01D0     		beq	.LCB1473
 1604 0908 FFF70CFC 		bl	.L7	@far jump
 1605              	.LCB1473:
 1606              	.LBB9:
 698:Src/main.c    **** 	    				// switch on actuators
 1607              		.loc 1 698 0 is_stmt 1
 1608 090c 0133     		add	r3, r3, #1
 1609 090e 9946     		mov	r9, r3
 1610              	.LVL234:
 700:Src/main.c    ****                                                                                                    
 1611              		.loc 1 700 0
 1612 0910 A020     		mov	r0, #160
 1613 0912 C005     		lsl	r0, r0, #23
 1614 0914 C021     		mov	r1, #192
 1615 0916 4901     		lsl	r1, r1, #5
 1616 0918 0122     		mov	r2, #1
 1617 091a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1618              	.LVL235:
 703:Src/main.c    ****                                                                                                    
 1619              		.loc 1 703 0
 1620 091e 9248     		ldr	r0, .L39+28
 1621 0920 0F21     		mov	r1, #15
 1622 0922 0122     		mov	r2, #1
 1623 0924 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1624              	.LVL236:
 707:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
ARM GAS  /tmp/ccpZkpgN.s 			page 48


 1625              		.loc 1 707 0
 1626 0928 0020     		mov	r0, #0
 1627 092a FFF7FEFF 		bl	ssd1306_Fill
 1628              	.LVL237:
 708:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 1629              		.loc 1 708 0
 1630 092e 0020     		mov	r0, #0
 1631 0930 0021     		mov	r1, #0
 1632 0932 FFF7FEFF 		bl	ssd1306_SetCursor
 1633              	.LVL238:
 709:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 1634              		.loc 1 709 0
 1635 0936 8D4C     		ldr	r4, .L39+32
 1636 0938 1323     		mov	r3, #19
 1637 093a 0AAA     		add	r2, sp, #40
 1638              	.LVL239:
 1639 093c 9446     		mov	ip, r2
 1640 093e 6344     		add	r3, r3, ip
 1641 0940 1A78     		ldrb	r2, [r3]
 1642              	.LVL240:
 1643 0942 1223     		mov	r3, #18
 1644 0944 6344     		add	r3, r3, ip
 1645 0946 1B78     		ldrb	r3, [r3]
 1646 0948 0FA9     		add	r1, sp, #60
 1647 094a 0978     		ldrb	r1, [r1]
 1648 094c 0091     		str	r1, [sp]
 1649 094e 1521     		mov	r1, #21
 1650 0950 6144     		add	r1, r1, ip
 1651 0952 0978     		ldrb	r1, [r1]
 1652 0954 0191     		str	r1, [sp, #4]
 1653 0956 201C     		mov	r0, r4
 1654 0958 8549     		ldr	r1, .L39+36
 1655 095a FFF7FEFF 		bl	sprintf
 1656              	.LVL241:
 711:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 1657              		.loc 1 711 0
 1658 095e 854D     		ldr	r5, .L39+40
 1659 0960 201C     		mov	r0, r4
 1660 0962 2968     		ldr	r1, [r5]
 1661 0964 6A68     		ldr	r2, [r5, #4]
 1662 0966 0123     		mov	r3, #1
 1663 0968 FFF7FEFF 		bl	ssd1306_WriteString
 1664              	.LVL242:
 712:Src/main.c    **** 	    	        	sprintf(message, ">>>>> %02dm", (int)depth);
 1665              		.loc 1 712 0
 1666 096c 0020     		mov	r0, #0
 1667 096e 1621     		mov	r1, #22
 1668 0970 FFF7FEFF 		bl	ssd1306_SetCursor
 1669              	.LVL243:
 713:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 1670              		.loc 1 713 0
 1671 0974 0698     		ldr	r0, [sp, #24]
 1672 0976 0799     		ldr	r1, [sp, #28]
 1673 0978 FFF7FEFF 		bl	__aeabi_d2iz
 1674              	.LVL244:
 1675 097c 041C     		mov	r4, r0
 1676 097e 754F     		ldr	r7, .L39+8
ARM GAS  /tmp/ccpZkpgN.s 			page 49


 1677 0980 381C     		mov	r0, r7
 1678 0982 7D49     		ldr	r1, .L39+44
 1679 0984 221C     		mov	r2, r4
 1680 0986 FFF7FEFF 		bl	sprintf
 1681              	.LVL245:
 714:Src/main.c    ****   	    	        	//ssd1306_SetCursor(0,44);
 1682              		.loc 1 714 0
 1683 098a 381C     		mov	r0, r7
 1684 098c 2968     		ldr	r1, [r5]
 1685 098e 6A68     		ldr	r2, [r5, #4]
 1686 0990 0123     		mov	r3, #1
 1687 0992 FFF7FEFF 		bl	ssd1306_WriteString
 1688              	.LVL246:
 718:Src/main.c    ****                                                                                                    
 1689              		.loc 1 718 0
 1690 0996 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1691              	.LVL247:
 723:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 1692              		.loc 1 723 0
 1693 099a 201C     		mov	r0, r4
 1694 099c FFF7FEFF 		bl	__aeabi_i2d
 1695              	.LVL248:
 1696 09a0 021C     		mov	r2, r0
 1697 09a2 0B1C     		mov	r3, r1
 1698 09a4 0698     		ldr	r0, [sp, #24]
 1699 09a6 0799     		ldr	r1, [sp, #28]
 1700 09a8 FFF7FEFF 		bl	__aeabi_dsub
 1701              	.LVL249:
 1702 09ac 0022     		mov	r2, #0
 1703 09ae 684B     		ldr	r3, .L39+4
 1704 09b0 FFF7FEFF 		bl	__aeabi_dmul
 1705              	.LVL250:
 1706 09b4 FFF7FEFF 		bl	__aeabi_d2iz
 1707              	.LVL251:
 1708 09b8 031C     		mov	r3, r0
 1709 09ba 381C     		mov	r0, r7
 1710 09bc 6649     		ldr	r1, .L39+12
 1711 09be 221C     		mov	r2, r4
 1712 09c0 FFF7FEFF 		bl	sprintf
 1713              	.LVL252:
 724:Src/main.c    **** 	    				b0 = message[0];
 1714              		.loc 1 724 0
 1715 09c4 0A98     		ldr	r0, [sp, #40]
 1716 09c6 0B99     		ldr	r1, [sp, #44]
 1717 09c8 0022     		mov	r2, #0
 1718 09ca 644B     		ldr	r3, .L39+16
 1719 09cc FFF7FEFF 		bl	__aeabi_ddiv
 1720              	.LVL253:
 1721 09d0 634B     		ldr	r3, .L39+20
 1722 09d2 9A46     		mov	r10, r3
 1723 09d4 FFF7FEFF 		bl	__aeabi_d2iz
 1724              	.LVL254:
 1725 09d8 021C     		mov	r2, r0
 1726 09da 5046     		mov	r0, r10
 1727 09dc 6149     		ldr	r1, .L39+24
 1728 09de FFF7FEFF 		bl	sprintf
 1729              	.LVL255:
ARM GAS  /tmp/ccpZkpgN.s 			page 50


 725:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1730              		.loc 1 725 0
 1731 09e2 3B78     		ldrb	r3, [r7]
 1732 09e4 1724     		mov	r4, #23
 1733 09e6 0AAA     		add	r2, sp, #40
 1734              	.LVL256:
 1735 09e8 9446     		mov	ip, r2
 1736 09ea 6444     		add	r4, r4, ip
 1737 09ec 2370     		strb	r3, [r4]
 726:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1738              		.loc 1 726 0
 1739 09ee 6B46     		mov	r3, sp
 1740 09f0 9B8E     		ldrh	r3, [r3, #52]
 1741 09f2 0094     		str	r4, [sp]
 1742 09f4 0125     		mov	r5, #1
 1743 09f6 0195     		str	r5, [sp, #4]
 1744 09f8 6426     		mov	r6, #100
 1745 09fa 0296     		str	r6, [sp, #8]
 1746 09fc 5348     		ldr	r0, .L39
 1747 09fe 0593     		str	r3, [sp, #20]
 1748 0a00 191C     		mov	r1, r3
 1749 0a02 5A46     		mov	r2, fp
 1750              	.LVL257:
 1751 0a04 0223     		mov	r3, #2
 1752 0a06 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1753              	.LVL258:
 727:Src/main.c    **** 	    				eeprom_debug_address++;
 1754              		.loc 1 727 0
 1755 0a0a 0520     		mov	r0, #5
 1756 0a0c FFF7FEFF 		bl	HAL_Delay
 1757              	.LVL259:
 728:Src/main.c    **** 	    				b0 = message[1];
 1758              		.loc 1 728 0
 1759 0a10 5B46     		mov	r3, fp
 1760 0a12 0133     		add	r3, r3, #1
 1761 0a14 9AB2     		uxth	r2, r3
 1762 0a16 9346     		mov	fp, r2
 1763              	.LVL260:
 729:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1764              		.loc 1 729 0
 1765 0a18 7B78     		ldrb	r3, [r7, #1]
 1766 0a1a 2370     		strb	r3, [r4]
 730:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1767              		.loc 1 730 0
 1768 0a1c 0094     		str	r4, [sp]
 1769 0a1e 0195     		str	r5, [sp, #4]
 1770 0a20 0296     		str	r6, [sp, #8]
 1771 0a22 4A48     		ldr	r0, .L39
 1772 0a24 0599     		ldr	r1, [sp, #20]
 1773 0a26 0223     		mov	r3, #2
 1774 0a28 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1775              	.LVL261:
 731:Src/main.c    **** 	    				eeprom_debug_address++;
 1776              		.loc 1 731 0
 1777 0a2c 0520     		mov	r0, #5
 1778 0a2e FFF7FEFF 		bl	HAL_Delay
 1779              	.LVL262:
ARM GAS  /tmp/ccpZkpgN.s 			page 51


 732:Src/main.c    **** 	    				//b0 = message[2];
 1780              		.loc 1 732 0
 1781 0a32 5A46     		mov	r2, fp
 1782 0a34 531C     		add	r3, r2, #1
 1783 0a36 9AB2     		uxth	r2, r3
 1784 0a38 9346     		mov	fp, r2
 1785              	.LVL263:
 737:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1786              		.loc 1 737 0
 1787 0a3a FB78     		ldrb	r3, [r7, #3]
 1788 0a3c 2370     		strb	r3, [r4]
 738:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1789              		.loc 1 738 0
 1790 0a3e 0094     		str	r4, [sp]
 1791 0a40 0195     		str	r5, [sp, #4]
 1792 0a42 0296     		str	r6, [sp, #8]
 1793 0a44 4148     		ldr	r0, .L39
 1794 0a46 0599     		ldr	r1, [sp, #20]
 1795 0a48 0223     		mov	r3, #2
 1796 0a4a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1797              	.LVL264:
 739:Src/main.c    **** 	    				eeprom_debug_address++;
 1798              		.loc 1 739 0
 1799 0a4e 0520     		mov	r0, #5
 1800 0a50 FFF7FEFF 		bl	HAL_Delay
 1801              	.LVL265:
 740:Src/main.c    **** 	    				b0 = temperature_message[0];
 1802              		.loc 1 740 0
 1803 0a54 5A46     		mov	r2, fp
 1804 0a56 571C     		add	r7, r2, #1
 1805 0a58 BFB2     		uxth	r7, r7
 1806              	.LVL266:
 741:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1807              		.loc 1 741 0
 1808 0a5a 5246     		mov	r2, r10
 1809 0a5c 1378     		ldrb	r3, [r2]
 1810 0a5e 2370     		strb	r3, [r4]
 742:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1811              		.loc 1 742 0
 1812 0a60 0094     		str	r4, [sp]
 1813 0a62 0195     		str	r5, [sp, #4]
 1814 0a64 0296     		str	r6, [sp, #8]
 1815 0a66 3948     		ldr	r0, .L39
 1816 0a68 0599     		ldr	r1, [sp, #20]
 1817 0a6a 3A1C     		mov	r2, r7
 1818 0a6c 0223     		mov	r3, #2
 1819 0a6e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1820              	.LVL267:
 743:Src/main.c    **** 	    				eeprom_debug_address++;
 1821              		.loc 1 743 0
 1822 0a72 0520     		mov	r0, #5
 1823 0a74 FFF7FEFF 		bl	HAL_Delay
 1824              	.LVL268:
 744:Src/main.c    **** 	    				b0 = temperature_message[1];
 1825              		.loc 1 744 0
 1826 0a78 0137     		add	r7, r7, #1
 1827              	.LVL269:
ARM GAS  /tmp/ccpZkpgN.s 			page 52


 1828 0a7a BFB2     		uxth	r7, r7
 1829              	.LVL270:
 745:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1830              		.loc 1 745 0
 1831 0a7c 5246     		mov	r2, r10
 1832 0a7e 5378     		ldrb	r3, [r2, #1]
 1833 0a80 2370     		strb	r3, [r4]
 746:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1834              		.loc 1 746 0
 1835 0a82 0094     		str	r4, [sp]
 1836 0a84 0195     		str	r5, [sp, #4]
 1837 0a86 0296     		str	r6, [sp, #8]
 1838 0a88 3048     		ldr	r0, .L39
 1839 0a8a 0599     		ldr	r1, [sp, #20]
 1840 0a8c 3A1C     		mov	r2, r7
 1841 0a8e 0223     		mov	r3, #2
 1842 0a90 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1843              	.LVL271:
 747:Src/main.c    **** 	    				eeprom_debug_address++;
 1844              		.loc 1 747 0
 1845 0a94 0520     		mov	r0, #5
 1846 0a96 FFF7FEFF 		bl	HAL_Delay
 1847              	.LVL272:
 748:Src/main.c    **** 	    				b0 = '$';
 1848              		.loc 1 748 0
 1849 0a9a 0137     		add	r7, r7, #1
 1850              	.LVL273:
 1851 0a9c BFB2     		uxth	r7, r7
 1852              	.LVL274:
 749:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1853              		.loc 1 749 0
 1854 0a9e 2422     		mov	r2, #36
 1855 0aa0 9246     		mov	r10, r2
 1856 0aa2 2270     		strb	r2, [r4]
 750:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1857              		.loc 1 750 0
 1858 0aa4 0094     		str	r4, [sp]
 1859 0aa6 0195     		str	r5, [sp, #4]
 1860 0aa8 0296     		str	r6, [sp, #8]
 1861 0aaa 2848     		ldr	r0, .L39
 1862 0aac 0599     		ldr	r1, [sp, #20]
 1863 0aae 3A1C     		mov	r2, r7
 1864 0ab0 0223     		mov	r3, #2
 1865 0ab2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1866              	.LVL275:
 751:Src/main.c    **** 	    				eeprom_debug_address++;
 1867              		.loc 1 751 0
 1868 0ab6 0520     		mov	r0, #5
 1869 0ab8 FFF7FEFF 		bl	HAL_Delay
 1870              	.LVL276:
 752:Src/main.c    **** 	    				b0 = '$';
 1871              		.loc 1 752 0
 1872 0abc 0137     		add	r7, r7, #1
 1873              	.LVL277:
 1874 0abe BFB2     		uxth	r7, r7
 1875              	.LVL278:
 753:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
ARM GAS  /tmp/ccpZkpgN.s 			page 53


 1876              		.loc 1 753 0
 1877 0ac0 5246     		mov	r2, r10
 1878 0ac2 2270     		strb	r2, [r4]
 754:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1879              		.loc 1 754 0
 1880 0ac4 0094     		str	r4, [sp]
 1881 0ac6 0195     		str	r5, [sp, #4]
 1882 0ac8 0296     		str	r6, [sp, #8]
 1883 0aca 2048     		ldr	r0, .L39
 1884 0acc 0599     		ldr	r1, [sp, #20]
 1885 0ace 3A1C     		mov	r2, r7
 1886 0ad0 0223     		mov	r3, #2
 1887 0ad2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1888              	.LVL279:
 755:Src/main.c    **** 	    				eeprom_debug_address++;
 1889              		.loc 1 755 0
 1890 0ad6 0520     		mov	r0, #5
 1891 0ad8 FFF7FEFF 		bl	HAL_Delay
 1892              	.LVL280:
 756:Src/main.c    **** 	    				eeprom_number_of_records++;
 1893              		.loc 1 756 0
 1894 0adc 0137     		add	r7, r7, #1
 1895              	.LVL281:
 1896 0ade BFB2     		uxth	r7, r7
 1897              	.LVL282:
 758:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1898              		.loc 1 758 0
 1899 0ae0 5346     		mov	r3, r10
 1900 0ae2 2370     		strb	r3, [r4]
 759:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1901              		.loc 1 759 0
 1902 0ae4 0094     		str	r4, [sp]
 1903 0ae6 0195     		str	r5, [sp, #4]
 1904 0ae8 0296     		str	r6, [sp, #8]
 1905 0aea 1848     		ldr	r0, .L39
 1906 0aec 0599     		ldr	r1, [sp, #20]
 1907 0aee 3A1C     		mov	r2, r7
 1908 0af0 0223     		mov	r3, #2
 1909 0af2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1910              	.LVL283:
 760:Src/main.c    **** 	    				eeprom_debug_address++;
 1911              		.loc 1 760 0
 1912 0af6 0520     		mov	r0, #5
 1913 0af8 FFF7FEFF 		bl	HAL_Delay
 1914              	.LVL284:
 761:Src/main.c    **** 	    				eeprom_number_of_records++;
 1915              		.loc 1 761 0
 1916 0afc 0137     		add	r7, r7, #1
 1917              	.LVL285:
 1918 0afe BFB2     		uxth	r7, r7
 1919              	.LVL286:
 763:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1920              		.loc 1 763 0
 1921 0b00 5346     		mov	r3, r10
 1922 0b02 2370     		strb	r3, [r4]
 764:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1923              		.loc 1 764 0
ARM GAS  /tmp/ccpZkpgN.s 			page 54


 1924 0b04 0094     		str	r4, [sp]
 1925 0b06 0195     		str	r5, [sp, #4]
 1926 0b08 0296     		str	r6, [sp, #8]
 1927 0b0a 1048     		ldr	r0, .L39
 1928 0b0c 0599     		ldr	r1, [sp, #20]
 1929 0b0e 3A1C     		mov	r2, r7
 1930 0b10 0223     		mov	r3, #2
 1931 0b12 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1932              	.LVL287:
 765:Src/main.c    **** 	    				eeprom_debug_address++;
 1933              		.loc 1 765 0
 1934 0b16 0520     		mov	r0, #5
 1935 0b18 FFF7FEFF 		bl	HAL_Delay
 1936              	.LVL288:
 766:Src/main.c    **** 	    				eeprom_number_of_records++;
 1937              		.loc 1 766 0
 1938 0b1c 0137     		add	r7, r7, #1
 1939              	.LVL289:
 1940 0b1e BFB2     		uxth	r7, r7
 1941              	.LVL290:
 768:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1942              		.loc 1 768 0
 1943 0b20 5346     		mov	r3, r10
 1944 0b22 2370     		strb	r3, [r4]
 769:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1945              		.loc 1 769 0
 1946 0b24 0094     		str	r4, [sp]
 1947 0b26 0195     		str	r5, [sp, #4]
 1948 0b28 0296     		str	r6, [sp, #8]
 1949 0b2a 0848     		ldr	r0, .L39
 1950 0b2c 0599     		ldr	r1, [sp, #20]
 1951 0b2e 3A1C     		mov	r2, r7
 1952 0b30 0223     		mov	r3, #2
 1953 0b32 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1954              	.LVL291:
 770:Src/main.c    **** 	    				eeprom_debug_address++;
 1955              		.loc 1 770 0
 1956 0b36 0520     		mov	r0, #5
 1957 0b38 FFF7FEFF 		bl	HAL_Delay
 1958              	.LVL292:
 771:Src/main.c    **** 	    				eeprom_number_of_records++;
 1959              		.loc 1 771 0
 1960 0b3c 0137     		add	r7, r7, #1
 1961              	.LVL293:
 1962 0b3e BBB2     		uxth	r3, r7
 1963 0b40 9B46     		mov	fp, r3
 1964              	.LVL294:
 772:Src/main.c    ****                                                                                                    
 1965              		.loc 1 772 0
 1966 0b42 0C9B     		ldr	r3, [sp, #48]
 1967 0b44 0433     		add	r3, r3, #4
 1968 0b46 0C93     		str	r3, [sp, #48]
 1969              	.LVL295:
 1970 0b48 FFF7ECFA 		bl	.L7	@ far jump
 1971              	.L40:
 1972              		.align	2
 1973              	.L39:
ARM GAS  /tmp/ccpZkpgN.s 			page 55


 1974 0b4c 00000000 		.word	hi2c2
 1975 0b50 00002440 		.word	1076101120
 1976 0b54 00000000 		.word	.LANCHOR0
 1977 0b58 84000000 		.word	.LC25
 1978 0b5c 00005940 		.word	1079574528
 1979 0b60 00000000 		.word	.LANCHOR2
 1980 0b64 90000000 		.word	.LC28
 1981 0b68 00040050 		.word	1342178304
 1982 0b6c 00000000 		.word	.LANCHOR1
 1983 0b70 28000000 		.word	.LC14
 1984 0b74 00000000 		.word	Font_11x18
 1985 0b78 98000000 		.word	.LC30
 1986              	.LBE9:
 1987              	.LBE5:
 1988              	.LBE3:
 1989              		.cfi_endproc
 1990              	.LFE34:
 1992              		.section	.text.Error_Handler,"ax",%progbits
 1993              		.align	2
 1994              		.global	Error_Handler
 1995              		.code	16
 1996              		.thumb_func
 1998              	Error_Handler:
 1999              	.LFB36:
 856:Src/main.c    **** 
 857:Src/main.c    **** /* USER CODE BEGIN 4 */
 858:Src/main.c    **** 
 859:Src/main.c    **** /* USER CODE END 4 */
 860:Src/main.c    **** 
 861:Src/main.c    **** /**
 862:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 863:Src/main.c    ****   * @retval None
 864:Src/main.c    ****   */
 865:Src/main.c    **** void Error_Handler(void)
 866:Src/main.c    **** {
 2000              		.loc 1 866 0
 2001              		.cfi_startproc
 867:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 868:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 869:Src/main.c    **** 
 870:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 871:Src/main.c    **** }
 2002              		.loc 1 871 0
 2003              		@ sp needed
 2004 0000 7047     		bx	lr
 2005              		.cfi_endproc
 2006              	.LFE36:
 2008              		.comm	SSD1306_I2C_PORT,4,4
 2009 0002 C046     		.section	.bss.timestamp,"aw",%nobits
 2010              		.align	2
 2011              		.set	.LANCHOR1,. + 0
 2014              	timestamp:
 2015 0000 00000000 		.space	64
 2015      00000000 
 2015      00000000 
 2015      00000000 
 2015      00000000 
ARM GAS  /tmp/ccpZkpgN.s 			page 56


 2016              		.section	.rodata.str1.4,"aMS",%progbits,1
 2017              		.align	2
 2018              	.LC2:
 2019 0000 4C303731 		.ascii	"L071\000"
 2019      00
 2020 0005 000000   		.space	3
 2021              	.LC5:
 2022 0008 54455354 		.ascii	"TEST..\000"
 2022      2E2E00
 2023 000f 00       		.space	1
 2024              	.LC8:
 2025 0010 6C6F6720 		.ascii	"log mode\000"
 2025      6D6F6465 
 2025      00
 2026 0019 000000   		.space	3
 2027              	.LC11:
 2028 001c 646F776E 		.ascii	"download...\000"
 2028      6C6F6164 
 2028      2E2E2E00 
 2029              	.LC14:
 2030 0028 25303264 		.ascii	"%02d:%02d %02d.%02d\000"
 2030      3A253032 
 2030      64202530 
 2030      32642E25 
 2030      30326400 
 2031              	.LC16:
 2032 003c 25303264 		.ascii	"%02d %02d %02d %02d\000"
 2032      20253032 
 2032      64202530 
 2032      32642025 
 2032      30326400 
 2033              	.LC18:
 2034 0050 41564152 		.ascii	"AVAR GL %02dm\000"
 2034      20474C20 
 2034      25303264 
 2034      6D00
 2035 005e 0000     		.space	2
 2036              	.LC20:
 2037 0060 616B6B75 		.ascii	"akkum %02d%%\000"
 2037      6D202530 
 2037      32642525 
 2037      00
 2038 006d 000000   		.space	3
 2039              	.LC22:
 2040 0070 676C2D2D 		.ascii	"gl--> %02d.%01dm\000"
 2040      3E202530 
 2040      32642E25 
 2040      3031646D 
 2040      00
 2041 0081 000000   		.space	3
 2042              	.LC25:
 2043 0084 25303264 		.ascii	"%02d.%01d\000"
 2043      2E253031 
 2043      6400
 2044 008e 0000     		.space	2
 2045              	.LC28:
 2046 0090 25303264 		.ascii	"%02d\000"
ARM GAS  /tmp/ccpZkpgN.s 			page 57


 2046      00
 2047 0095 000000   		.space	3
 2048              	.LC30:
 2049 0098 3E3E3E3E 		.ascii	">>>>> %02dm\000"
 2049      3E202530 
 2049      32646D00 
 2050              		.section	.bss.message,"aw",%nobits
 2051              		.align	2
 2052              		.set	.LANCHOR0,. + 0
 2055              	message:
 2056 0000 00000000 		.space	64
 2056      00000000 
 2056      00000000 
 2056      00000000 
 2056      00000000 
 2057              		.section	.bss.temperature_message,"aw",%nobits
 2058              		.align	2
 2059              		.set	.LANCHOR2,. + 0
 2062              	temperature_message:
 2063 0000 00000000 		.space	64
 2063      00000000 
 2063      00000000 
 2063      00000000 
 2063      00000000 
 2064              		.text
 2065              	.Letext0:
 2066              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2067              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2068              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 2069              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2070              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 2071              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 2072              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 2073              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 2074              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 2075              		.file 11 "Inc/fonts.h"
 2076              		.file 12 "Inc/ssd1306.h"
 2077              		.file 13 "<built-in>"
 2078              		.file 14 "Inc/pressure_sensor_object.h"
 2079              		.file 15 "Inc/voltmeter_object.h"
 2080              		.file 16 "Inc/i2c.h"
 2081              		.file 17 "Inc/depth_switch_interface.h"
 2082              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 2083              		.file 19 "Inc/one_second_timer_interface.h"
 2084              		.file 20 "Inc/rtc_ds3231_interface.h"
 2085              		.file 21 "Inc/gpio.h"
 2086              		.file 22 "Inc/adc.h"
 2087              		.file 23 "Inc/spi.h"
 2088              		.file 24 "Inc/usart.h"
ARM GAS  /tmp/ccpZkpgN.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccpZkpgN.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccpZkpgN.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccpZkpgN.s:130    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccpZkpgN.s:147    .text.main:0000000000000000 $t
     /tmp/ccpZkpgN.s:152    .text.main:0000000000000000 main
     /tmp/ccpZkpgN.s:694    .text.main:0000000000000318 $d
     /tmp/ccpZkpgN.s:715    .text.main:0000000000000364 $t
     /tmp/ccpZkpgN.s:1326   .text.main:0000000000000730 $d
     /tmp/ccpZkpgN.s:1343   .text.main:0000000000000764 $t
     /tmp/ccpZkpgN.s:1974   .text.main:0000000000000b4c $d
     /tmp/ccpZkpgN.s:1993   .text.Error_Handler:0000000000000000 $t
     /tmp/ccpZkpgN.s:1998   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 SSD1306_I2C_PORT
     /tmp/ccpZkpgN.s:2010   .bss.timestamp:0000000000000000 $d
     /tmp/ccpZkpgN.s:2014   .bss.timestamp:0000000000000000 timestamp
     /tmp/ccpZkpgN.s:2017   .rodata.str1.4:0000000000000000 $d
     /tmp/ccpZkpgN.s:2051   .bss.message:0000000000000000 $d
     /tmp/ccpZkpgN.s:2055   .bss.message:0000000000000000 message
     /tmp/ccpZkpgN.s:2058   .bss.temperature_message:0000000000000000 $d
     /tmp/ccpZkpgN.s:2062   .bss.temperature_message:0000000000000000 temperature_message
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_ui2d
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_dcmplt
__aeabi_d2iz
__aeabi_dsub
__aeabi_ddiv
__aeabi_dcmpgt
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmple
HAL_Init
MX_GPIO_Init
MX_ADC_Init
MX_I2C1_Init
MX_I2C3_Init
MX_SPI1_Init
MX_USART1_UART_Init
rtc_ds3231_set_i2c_handle
ssd1306_set_i2c_port
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ssd1306_WriteString
one_second_timer_init
one_second_timer_start
pressure_sensor_object_init
ARM GAS  /tmp/ccpZkpgN.s 			page 59


depth_switch_turn_signal_led
rtc_ds3231_action
depth_switch_check_gpio
one_second_timer_get_flag
one_second_timer_reset_flag
pressure_sensor_measure_pressure_temperature
pressure_sensor_get_pressure
pressure_sensor_get_temperature
voltmeter_measure_voltage
voltmeter_get_voltage
voltmeter_get_percentage
rtc_ds3231_get_time
rtc_ds3231_get_date
depth_switch_action
sprintf
depth_switch_get_current_depth
hi2c3
hi2c1
Font_16x26
Font_11x18
HAL_I2C_Mem_Read
HAL_I2C_Mem_Write
hi2c2
HAL_GPIO_WritePin
