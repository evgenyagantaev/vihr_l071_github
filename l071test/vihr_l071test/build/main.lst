ARM GAS  /tmp/ccwr8m4c.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	2
  19              		.global	SystemClock_Config
  20              		.code	16
  21              		.thumb_func
  23              	SystemClock_Config:
  24              	.LFB35:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "math.h"
  24:Src/main.c    **** #include "tim.h"
  25:Src/main.c    **** #include "adc.h"
  26:Src/main.c    **** #include "i2c.h"
  27:Src/main.c    **** #include "spi.h"
  28:Src/main.c    **** #include "usart.h"
  29:Src/main.c    **** #include "gpio.h"
  30:Src/main.c    **** 
  31:Src/main.c    **** #include "ssd1306.h"
  32:Src/main.c    **** 
  33:Src/main.c    **** #include "one_second_timer_interface.h"
ARM GAS  /tmp/ccwr8m4c.s 			page 2


  34:Src/main.c    **** #include "pressure_sensor_object.h"
  35:Src/main.c    **** #include "depth_switch_interface.h"
  36:Src/main.c    **** #include "rtc_ds3231_interface.h"
  37:Src/main.c    **** #include "voltmeter_object.h"
  38:Src/main.c    **** //#include "at24c32_interface.h"
  39:Src/main.c    **** 
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** static char message[64];
  43:Src/main.c    **** static char timestamp[64];
  44:Src/main.c    **** static char temperature_message[64];
  45:Src/main.c    **** 
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  48:Src/main.c    **** void SystemClock_Config(void);
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** 
  53:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  54:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  55:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  56:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  57:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  58:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  59:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  60:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  61:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  62:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  63:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  64:Src/main.c    **** int main(void)
  65:Src/main.c    **** {
  66:Src/main.c    **** 
  67:Src/main.c    **** 
  68:Src/main.c    **** 
  69:Src/main.c    **** 
  70:Src/main.c    **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  71:Src/main.c    **** 	HAL_Init();
  72:Src/main.c    **** 
  73:Src/main.c    ****   
  74:Src/main.c    ****   
  75:Src/main.c    **** 	SystemClock_Config();
  76:Src/main.c    **** 
  77:Src/main.c    ****   
  78:Src/main.c    ****   
  79:Src/main.c    **** 	MX_GPIO_Init();
  80:Src/main.c    **** 	MX_ADC_Init();
  81:Src/main.c    **** 	MX_I2C1_Init();
  82:Src/main.c    **** 	//MX_I2C2_Init();
  83:Src/main.c    **** 	MX_I2C3_Init();
  84:Src/main.c    **** 	MX_SPI1_Init();
  85:Src/main.c    ****     // enable spi1
  86:Src/main.c    ****     SPI1->CR1 |= SPI_CR1_SPE;
  87:Src/main.c    **** 	MX_USART1_UART_Init();
  88:Src/main.c    ****   
  89:Src/main.c    **** 	rtc_ds3231_set_i2c_handle(&hi2c3);
  90:Src/main.c    **** 	//rtc_ds3231_set_time(16, 40, 0);
ARM GAS  /tmp/ccwr8m4c.s 			page 3


  91:Src/main.c    **** 	//rtc_ds3231_set_date(22, 11, 19);
  92:Src/main.c    **** 	//at24c32_set_i2c_handle(&hi2c2);
  93:Src/main.c    **** 
  94:Src/main.c    ****     ssd1306_set_i2c_port(&hi2c1, 1);
  95:Src/main.c    ****   	ssd1306_Init();
  96:Src/main.c    ****   	HAL_Delay(100);
  97:Src/main.c    ****   	ssd1306_Fill(White);
  98:Src/main.c    ****   	ssd1306_UpdateScreen();
  99:Src/main.c    ****   	HAL_Delay(100);
 100:Src/main.c    ****   	ssd1306_Fill(Black);
 101:Src/main.c    ****   	ssd1306_UpdateScreen();
 102:Src/main.c    **** 
 103:Src/main.c    ****   	HAL_Delay(100);
 104:Src/main.c    **** 
 105:Src/main.c    ****   	ssd1306_SetCursor(0,0);
 106:Src/main.c    ****   	ssd1306_WriteString("L071", Font_16x26, White);
 107:Src/main.c    ****   	ssd1306_SetCursor(0,30);
 108:Src/main.c    ****   	ssd1306_WriteString("TEST..", Font_16x26, White);
 109:Src/main.c    ****   	ssd1306_UpdateScreen();
 110:Src/main.c    ****   
 111:Src/main.c    **** 
 112:Src/main.c    **** 	one_second_timer_init();
 113:Src/main.c    **** 	one_second_timer_start();
 114:Src/main.c    **** 
 115:Src/main.c    **** 	pressure_sensor_object_init();
 116:Src/main.c    **** 	HAL_Delay(1000);
 117:Src/main.c    **** 	uint32_t surface_pressure = 101325;
 118:Src/main.c    **** 	depth_switch_turn_signal_led(1);
 119:Src/main.c    **** 
 120:Src/main.c    **** 	rtc_ds3231_action();
 121:Src/main.c    **** 	//atm_barometer_init();
 122:Src/main.c    **** 	int odd_even = 0;
 123:Src/main.c    **** 	int led_counter = 0;
 124:Src/main.c    **** 
 125:Src/main.c    **** 	int mem_test_base = 0;
 126:Src/main.c    **** 
 127:Src/main.c    **** 	uint8_t at24c32_shifted_address = 0x50 << 1;
 128:Src/main.c    **** 	uint16_t eeprom_address = 64;
 129:Src/main.c    **** 	uint16_t eeprom_debug_address = 64;
 130:Src/main.c    **** 	int eeprom_number_of_records = 0;
 131:Src/main.c    **** 	uint32_t log_counter = 0;
 132:Src/main.c    **** 
 133:Src/main.c    **** 	// log debug
 134:Src/main.c    **** 	//****************************************
 135:Src/main.c    **** 	//int sin_counter = 0;
 136:Src/main.c    **** 	//double dt = 2.0*3.14/30.0;
 137:Src/main.c    **** 	// log debug
 138:Src/main.c    **** 	//****************************************
 139:Src/main.c    **** 
 140:Src/main.c    **** 	int actuator_counter = 0;
 141:Src/main.c    **** 
 142:Src/main.c    **** 	// debug!!!
 143:Src/main.c    **** 	//double P_sym = surface_pressure;
 144:Src/main.c    **** 
 145:Src/main.c    **** 
 146:Src/main.c    **** 	if(!depth_switch_check_gpio())
 147:Src/main.c    **** 	{
ARM GAS  /tmp/ccwr8m4c.s 			page 4


 148:Src/main.c    **** 		// log mode
 149:Src/main.c    ****   		ssd1306_Fill(Black);
 150:Src/main.c    ****   	    ssd1306_SetCursor(0,0);
 151:Src/main.c    **** 	    sprintf(message, "log mode");
 152:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 153:Src/main.c    ****   	    ssd1306_SetCursor(0,22);
 154:Src/main.c    **** 	    sprintf(message, "download...");
 155:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 156:Src/main.c    ****   	    ssd1306_UpdateScreen();
 157:Src/main.c    **** 
 158:Src/main.c    **** 
 159:Src/main.c    **** 
 160:Src/main.c    **** 	//*
 161:Src/main.c    **** 	int end_of_log_reached = 0;
 162:Src/main.c    **** 	HAL_Delay(1000);
 163:Src/main.c    **** 	uint16_t eeprom_debug_address = 64;
 164:Src/main.c    **** 	uint8_t b0;
 165:Src/main.c    **** 	uint8_t at24c32_shifted_address = 0x50 << 1;
 166:Src/main.c    **** 	static I2C_HandleTypeDef *at24c32_i2c_handle = &hi2c2;
 167:Src/main.c    **** 
 168:Src/main.c    **** 	sprintf(message, "\r\n");
 169:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 170:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 171:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 172:Src/main.c    **** 
 173:Src/main.c    **** 	sprintf(message, "log bank 1 start\r\n***********\r\n");
 174:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 175:Src/main.c    **** 
 176:Src/main.c    **** 	// read timestamp time
 177:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 178:Src/main.c    **** 	message[0] = b0;                                                                                  
 179:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 180:Src/main.c    ****                                                                                                    
 181:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 182:Src/main.c    **** 	message[1] = b0;                                                                                  
 183:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 184:Src/main.c    ****                                                                                                    
 185:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 186:Src/main.c    **** 	message[2] = b0;                                                                                  
 187:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 188:Src/main.c    ****                                                                                                    
 189:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 190:Src/main.c    **** 	message[3] = b0;                                                                                  
 191:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 192:Src/main.c    ****                                                                                                    
 193:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 194:Src/main.c    **** 	{                                                                                                 
 195:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 196:Src/main.c    **** 	}                                                                                                 
 197:Src/main.c    **** 	else                                                                                              
 198:Src/main.c    **** 	{                                                                                                 
 199:Src/main.c    **** 		message[4] = '\r';                                                                               
 200:Src/main.c    **** 		message[5] = '\n';                                                                               
 201:Src/main.c    **** 		message[6] = 0;                                                                                  
 202:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 203:Src/main.c    **** 	}                                                                                                 
 204:Src/main.c    **** 	// read timestamp date
ARM GAS  /tmp/ccwr8m4c.s 			page 5


 205:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 206:Src/main.c    **** 	message[0] = b0;                                                                                  
 207:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 208:Src/main.c    ****                                                                                                    
 209:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 210:Src/main.c    **** 	message[1] = b0;                                                                                  
 211:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 212:Src/main.c    ****                                                                                                    
 213:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 214:Src/main.c    **** 	message[2] = b0;                                                                                  
 215:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 216:Src/main.c    ****                                                                                                    
 217:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 218:Src/main.c    **** 	message[3] = b0;                                                                                  
 219:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 220:Src/main.c    ****                                                                                                    
 221:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 222:Src/main.c    **** 	{                                                                                                 
 223:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 224:Src/main.c    **** 	}                                                                                                 
 225:Src/main.c    **** 	else                                                                                              
 226:Src/main.c    **** 	{                                                                                                 
 227:Src/main.c    **** 		message[4] = '\r';                                                                               
 228:Src/main.c    **** 		message[5] = '\n';                                                                               
 229:Src/main.c    **** 		message[6] = 0;                                                                                  
 230:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 231:Src/main.c    **** 	}                                                                                                 
 232:Src/main.c    **** 	
 233:Src/main.c    **** 	while(!end_of_log_reached)
 234:Src/main.c    **** 	{
 235:Src/main.c    **** 
 236:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 237:Src/main.c    **** 		message[0] = b0;                                                                                 
 238:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 239:Src/main.c    **** 		HAL_Delay(3);
 240:Src/main.c    **** 
 241:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 242:Src/main.c    **** 		message[1] = b0;                                                                                 
 243:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 244:Src/main.c    **** 
 245:Src/main.c    **** 		message[2] = '.';                                                                                
 246:Src/main.c    **** 
 247:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 248:Src/main.c    **** 		message[3] = b0;                                                                                 
 249:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 250:Src/main.c    **** 
 251:Src/main.c    **** 		message[4] = ' ';                                                                                
 252:Src/main.c    **** 
 253:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 254:Src/main.c    **** 		message[5] = b0;                                                                                 
 255:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 256:Src/main.c    **** 		
 257:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 258:Src/main.c    **** 		message[6] = b0;                                                                                 
 259:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 260:Src/main.c    **** 
 261:Src/main.c    **** 		if((message[0] == 0) && (message[1] == 0))
ARM GAS  /tmp/ccwr8m4c.s 			page 6


 262:Src/main.c    **** 		{
 263:Src/main.c    **** 			end_of_log_reached = 1;
 264:Src/main.c    **** 		}
 265:Src/main.c    **** 		else
 266:Src/main.c    **** 		{
 267:Src/main.c    **** 			message[7] = '\r';                                                                              
 268:Src/main.c    **** 			message[8] = '\n';                                                                              
 269:Src/main.c    **** 			message[9] = 0;                                                                                 
 270:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 271:Src/main.c    **** 		}
 272:Src/main.c    **** 	}
 273:Src/main.c    **** 	
 274:Src/main.c    **** 	sprintf(message, "\r\n");
 275:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 276:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 1 finish\r\n");
 277:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 278:Src/main.c    **** 
 279:Src/main.c    **** 
 280:Src/main.c    **** 	eeprom_debug_address = 64;
 281:Src/main.c    **** 	at24c32_shifted_address = 0x51 << 1;
 282:Src/main.c    **** 
 283:Src/main.c    **** 	sprintf(message, "\r\n");
 284:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 285:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 286:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 287:Src/main.c    **** 
 288:Src/main.c    **** 	sprintf(message, "log bank 2 start\r\n***********\r\n");
 289:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 290:Src/main.c    **** 
 291:Src/main.c    **** 	end_of_log_reached = 0;
 292:Src/main.c    **** 
 293:Src/main.c    **** 
 294:Src/main.c    **** 	// read timestamp time
 295:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 296:Src/main.c    **** 	message[0] = b0;                                                                                  
 297:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 298:Src/main.c    ****                                                                                                    
 299:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 300:Src/main.c    **** 	message[1] = b0;                                                                                  
 301:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 302:Src/main.c    ****                                                                                                    
 303:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 304:Src/main.c    **** 	message[2] = b0;                                                                                  
 305:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 306:Src/main.c    ****                                                                                                    
 307:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 308:Src/main.c    **** 	message[3] = b0;                                                                                  
 309:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 310:Src/main.c    ****                                                                                                    
 311:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 312:Src/main.c    **** 	{                                                                                                 
 313:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 314:Src/main.c    **** 	}                                                                                                 
 315:Src/main.c    **** 	else                                                                                              
 316:Src/main.c    **** 	{                                                                                                 
 317:Src/main.c    **** 		message[4] = '\r';                                                                               
 318:Src/main.c    **** 		message[5] = '\n';                                                                               
ARM GAS  /tmp/ccwr8m4c.s 			page 7


 319:Src/main.c    **** 		message[6] = 0;                                                                                  
 320:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 321:Src/main.c    **** 	}                                                                                                 
 322:Src/main.c    **** 	// read timestamp date
 323:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 324:Src/main.c    **** 	message[0] = b0;                                                                                  
 325:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 326:Src/main.c    ****                                                                                                    
 327:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 328:Src/main.c    **** 	message[1] = b0;                                                                                  
 329:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 330:Src/main.c    ****                                                                                                    
 331:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 332:Src/main.c    **** 	message[2] = b0;                                                                                  
 333:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 334:Src/main.c    ****                                                                                                    
 335:Src/main.c    **** 	HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SIZ
 336:Src/main.c    **** 	message[3] = b0;                                                                                  
 337:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 338:Src/main.c    ****                                                                                                    
 339:Src/main.c    **** 	if((message[0] == 0) && (message[1] == 0))                                                        
 340:Src/main.c    **** 	{                                                                                                 
 341:Src/main.c    **** 		end_of_log_reached = 1;                                                                          
 342:Src/main.c    **** 	}                                                                                                 
 343:Src/main.c    **** 	else                                                                                              
 344:Src/main.c    **** 	{                                                                                                 
 345:Src/main.c    **** 		message[4] = '\r';                                                                               
 346:Src/main.c    **** 		message[5] = '\n';                                                                               
 347:Src/main.c    **** 		message[6] = 0;                                                                                  
 348:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 349:Src/main.c    **** 	}                                                                                                 
 350:Src/main.c    **** 
 351:Src/main.c    **** 
 352:Src/main.c    **** 	while(!end_of_log_reached)
 353:Src/main.c    **** 	{
 354:Src/main.c    **** 
 355:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 356:Src/main.c    **** 		message[0] = b0;                                                                                 
 357:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 358:Src/main.c    **** 		HAL_Delay(3);
 359:Src/main.c    **** 
 360:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 361:Src/main.c    **** 		message[1] = b0;                                                                                 
 362:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 363:Src/main.c    **** 
 364:Src/main.c    **** 		message[2] = '.';                                                                                
 365:Src/main.c    **** 
 366:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 367:Src/main.c    **** 		message[3] = b0;                                                                                 
 368:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 369:Src/main.c    **** 
 370:Src/main.c    **** 		message[4] = ' ';                                                                                
 371:Src/main.c    **** 
 372:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 373:Src/main.c    **** 		message[5] = b0;                                                                                 
 374:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 375:Src/main.c    **** 		
ARM GAS  /tmp/ccwr8m4c.s 			page 8


 376:Src/main.c    **** 		HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_MEMADD_SI
 377:Src/main.c    **** 		message[6] = b0;                                                                                 
 378:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 379:Src/main.c    **** 
 380:Src/main.c    **** 		if((message[0] == 0) && (message[1] == 0))
 381:Src/main.c    **** 		{
 382:Src/main.c    **** 			end_of_log_reached = 1;
 383:Src/main.c    **** 		}
 384:Src/main.c    **** 		else
 385:Src/main.c    **** 		{
 386:Src/main.c    **** 			message[7] = '\r';                                                                              
 387:Src/main.c    **** 			message[8] = '\n';                                                                              
 388:Src/main.c    **** 			message[9] = 0;                                                                                 
 389:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 390:Src/main.c    **** 		}
 391:Src/main.c    **** 	}
 392:Src/main.c    **** 	
 393:Src/main.c    **** 	sprintf(message, "\r\n");
 394:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 395:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 2 finish\r\n");
 396:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 397:Src/main.c    **** 
 398:Src/main.c    **** 	//*/
 399:Src/main.c    **** 
 400:Src/main.c    **** 
 401:Src/main.c    **** 		while(1)
 402:Src/main.c    **** 		{
 403:Src/main.c    **** 		}
 404:Src/main.c    **** 
 405:Src/main.c    **** 
 406:Src/main.c    **** 
 407:Src/main.c    **** 
 408:Src/main.c    **** 
 409:Src/main.c    **** 
 410:Src/main.c    **** 
 411:Src/main.c    **** 	}
 412:Src/main.c    **** 	else
 413:Src/main.c    **** 	{
 414:Src/main.c    **** 
 415:Src/main.c    **** 		while (1)
 416:Src/main.c    **** 		{
 417:Src/main.c    **** 			
 418:Src/main.c    **** 			//*
 419:Src/main.c    **** 	    	if(one_second_timer_get_flag())
 420:Src/main.c    **** 	    	{
 421:Src/main.c    **** 	    		one_second_timer_reset_flag();
 422:Src/main.c    **** 	    		odd_even = (odd_even+1)%2;
 423:Src/main.c    ****   	    
 424:Src/main.c    **** 	    		pressure_sensor_measure_pressure_temperature();                                             
 425:Src/main.c    **** 	    	    double P = pressure_sensor_get_pressure();
 426:Src/main.c    **** 	    	    double actual_temperature = pressure_sensor_get_temperature();
 427:Src/main.c    ****                                                                                                    
 428:Src/main.c    **** 	    	    voltmeter_measure_voltage();
 429:Src/main.c    **** 	    	    double accu_voltage = voltmeter_get_voltage();
 430:Src/main.c    **** 	    	    double accu_percentage = voltmeter_get_percentage();
 431:Src/main.c    **** 	                                                                                                  
 432:Src/main.c    **** 	    		rtc_ds3231_action();
ARM GAS  /tmp/ccwr8m4c.s 			page 9


 433:Src/main.c    **** 	    		// time-date calculation ----------------------------------------
 434:Src/main.c    **** 	    		uint8_t seconds, minutes, hours;
 435:Src/main.c    **** 	    		rtc_ds3231_get_time(&hours, &minutes, &seconds);
 436:Src/main.c    **** 	    		uint8_t date, month, year;
 437:Src/main.c    **** 	    		rtc_ds3231_get_date(&date, &month, &year);
 438:Src/main.c    **** 	    		//--------------------------------------------------------------
 439:Src/main.c    ****               
 440:Src/main.c    ****                                                                                                    
 441:Src/main.c    **** 	    		// debug!!!
 442:Src/main.c    **** 	    	  	//P_sym += 980;
 443:Src/main.c    **** 	    		//P = P_sym;
 444:Src/main.c    ****                                                                                                    
 445:Src/main.c    ****                                                                                                    
 446:Src/main.c    **** 	    		if(P <= surface_pressure)
 447:Src/main.c    **** 	    			surface_pressure = P;
 448:Src/main.c    ****                                                                                                    
 449:Src/main.c    **** 	    		int we_are_under_water = 0;
 450:Src/main.c    ****                                                                                                    
 451:Src/main.c    **** 	    		if(P > (surface_pressure + 9800)) // underwater
 452:Src/main.c    **** 	    			we_are_under_water = 1;
 453:Src/main.c    ****                                                                                                    
 454:Src/main.c    **** 	    		if(!we_are_under_water)  // we are not under water
 455:Src/main.c    **** 	    		{
 456:Src/main.c    **** 	    			depth_switch_action();		    
 457:Src/main.c    ****                                                                                                    
 458:Src/main.c    **** 	    			
 459:Src/main.c    **** 	    			if(actuator_counter == 0)
 460:Src/main.c    **** 	    			{
 461:Src/main.c    **** 	    				//ssd1306_Fill(Black);                                                                    
 462:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 463:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 464:Src/main.c    **** 	    				if(odd_even)
 465:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 466:Src/main.c    **** 	    				else
 467:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d %02d %02d %02d", hours, minutes, date, month);
 468:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 469:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 470:Src/main.c    **** 	    	        	sprintf(message, "AVAR GL %02dm", (int)depth_switch_get_current_depth());
 471:Src/main.c    ****         
 472:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 473:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 474:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 475:Src/main.c    **** 	    	        	//sprintf(message, "akkum");
 476:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 477:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();                                                           
 478:Src/main.c    **** 	    
 479:Src/main.c    **** 	    			}
 480:Src/main.c    ****                                                                                                    
 481:Src/main.c    **** 	    			
 482:Src/main.c    ****                                                                                                    
 483:Src/main.c    **** 	    		}
 484:Src/main.c    **** 	    		else // we are under water
 485:Src/main.c    **** 	    		{
 486:Src/main.c    ****         
 487:Src/main.c    **** 	    			uint16_t data;
 488:Src/main.c    ****                                                                                                    
 489:Src/main.c    **** 	    			log_counter++;
ARM GAS  /tmp/ccwr8m4c.s 			page 10


 490:Src/main.c    ****                                                                                                    
 491:Src/main.c    **** 	    			// calculate depth
 492:Src/main.c    **** 	    			double depth = ((double)(P - surface_pressure))/9800.0;
 493:Src/main.c    **** 	    			if(depth > 1.0)
 494:Src/main.c    **** 	    				depth -= 1.0;
 495:Src/main.c    **** 	    			else
 496:Src/main.c    **** 	    				depth = 0.0;
 497:Src/main.c    ****                                                                                                    
 498:Src/main.c    **** 	    			if(actuator_counter == 0)
 499:Src/main.c    **** 	    			{
 500:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 501:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 502:Src/main.c    **** 	    				if(odd_even)
 503:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 504:Src/main.c    **** 	    				else
 505:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d %02d %02d %02d", hours, minutes, date, month);
 506:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 507:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 508:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 509:Src/main.c    **** 	    	        	//sprintf(message, "glubina %02dm", (int)depth);
 510:Src/main.c    **** 	    	        	sprintf(message, "gl--> %02d.%01dm", (int)depth, (int)((depth - (int)depth)*10.0));
 511:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 512:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 513:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 514:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 515:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();  
 516:Src/main.c    ****                                                                                                    
 517:Src/main.c    **** 	    			}
 518:Src/main.c    ****                                                                                                    
 519:Src/main.c    **** 	    			// log depth
 520:Src/main.c    **** 	    			//--------------------------------------------------------------------------
 521:Src/main.c    **** 	    			uint8_t b0;
 522:Src/main.c    **** 	    			int write_delay = 5;
 523:Src/main.c    **** 	    			static I2C_HandleTypeDef *at24c32_i2c_handle = &hi2c2;
 524:Src/main.c    ****                                                                                                    
 525:Src/main.c    **** 	    			if(eeprom_number_of_records == 0)
 526:Src/main.c    **** 	    			{
 527:Src/main.c    **** 	    				// no records yet
 528:Src/main.c    **** 	    				
 529:Src/main.c    **** 	    				// read memory bank id
 530:Src/main.c    **** 	    				HAL_I2C_Mem_Read(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, &b
 531:Src/main.c    ****                                                                                                    
 532:Src/main.c    **** 	    				if(b0 == 1)   // pishem v bank 1
 533:Src/main.c    **** 	    				{
 534:Src/main.c    **** 	    					// pri sleduyuschem zapuske budem pisat' v bank 0
 535:Src/main.c    **** 	    					b0 = 0;
 536:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 537:Src/main.c    **** 	    					HAL_Delay(write_delay);
 538:Src/main.c    ****                                                                                                    
 539:Src/main.c    **** 	    					// nastraivaem address i2c banka pamyati (nomer 1)
 540:Src/main.c    **** 	    					at24c32_shifted_address = 0x51 << 1;
 541:Src/main.c    **** 	    				}
 542:Src/main.c    **** 	    				else
 543:Src/main.c    **** 	    				{
 544:Src/main.c    **** 	    					// pri sleduyuschem zapuske budem pisat' v bank 1
 545:Src/main.c    **** 	    					b0 = 1;
 546:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
ARM GAS  /tmp/ccwr8m4c.s 			page 11


 547:Src/main.c    **** 	    					HAL_Delay(write_delay);
 548:Src/main.c    **** 	    				}
 549:Src/main.c    ****                                                                                                    
 550:Src/main.c    ****                                                                                                    
 551:Src/main.c    **** 	    				// write timestamp
 552:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 553:Src/main.c    **** 	    				b0 = timestamp[0];
 554:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 555:Src/main.c    **** 	    				HAL_Delay(write_delay);
 556:Src/main.c    **** 	    				eeprom_debug_address++;
 557:Src/main.c    **** 	    				b0 = timestamp[1];
 558:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 559:Src/main.c    **** 	    				HAL_Delay(write_delay);
 560:Src/main.c    **** 	    				eeprom_debug_address++;
 561:Src/main.c    **** 	    				b0 = timestamp[3];
 562:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 563:Src/main.c    **** 	    				HAL_Delay(write_delay);
 564:Src/main.c    **** 	    				eeprom_debug_address++;
 565:Src/main.c    **** 	    				b0 = timestamp[4];
 566:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 567:Src/main.c    **** 	    				HAL_Delay(write_delay);
 568:Src/main.c    **** 	    				eeprom_debug_address++;
 569:Src/main.c    **** 	    				//b0 = ' ';
 570:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 571:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 572:Src/main.c    **** 	    				//eeprom_debug_address++;
 573:Src/main.c    **** 	    				b0 = timestamp[6];
 574:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 575:Src/main.c    **** 	    				HAL_Delay(write_delay);
 576:Src/main.c    **** 	    				eeprom_debug_address++;
 577:Src/main.c    **** 	    				b0 = timestamp[7];
 578:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 579:Src/main.c    **** 	    				HAL_Delay(write_delay);
 580:Src/main.c    **** 	    				eeprom_debug_address++;
 581:Src/main.c    **** 	    				b0 = timestamp[9];
 582:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 583:Src/main.c    **** 	    				HAL_Delay(write_delay);
 584:Src/main.c    **** 	    				eeprom_debug_address++;
 585:Src/main.c    **** 	    				b0 = timestamp[10];
 586:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 587:Src/main.c    **** 	    				HAL_Delay(write_delay);
 588:Src/main.c    **** 	    				eeprom_debug_address++;
 589:Src/main.c    **** 	    				//b0 = ' ';
 590:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 591:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 592:Src/main.c    **** 	    				//eeprom_debug_address++;
 593:Src/main.c    ****                                                                                                    
 594:Src/main.c    ****                                                                                                    
 595:Src/main.c    ****                                                                                                    
 596:Src/main.c    **** 	    				// write first depth record
 597:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 598:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 599:Src/main.c    **** 	    				b0 = message[0];
 600:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 601:Src/main.c    **** 	    				HAL_Delay(write_delay);
 602:Src/main.c    **** 	    				eeprom_debug_address++;
 603:Src/main.c    **** 	    				b0 = message[1];
ARM GAS  /tmp/ccwr8m4c.s 			page 12


 604:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 605:Src/main.c    **** 	    				HAL_Delay(write_delay);
 606:Src/main.c    **** 	    				eeprom_debug_address++;
 607:Src/main.c    **** 	    				//b0 = message[2];
 608:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 609:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 610:Src/main.c    **** 	    				//eeprom_debug_address++;
 611:Src/main.c    **** 	    				b0 = message[3];
 612:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 613:Src/main.c    **** 	    				HAL_Delay(write_delay);
 614:Src/main.c    **** 	    				eeprom_debug_address++;
 615:Src/main.c    **** 	    				b0 = temperature_message[0];
 616:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 617:Src/main.c    **** 	    				HAL_Delay(write_delay);
 618:Src/main.c    **** 	    				eeprom_debug_address++;
 619:Src/main.c    **** 	    				b0 = temperature_message[1];
 620:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 621:Src/main.c    **** 	    				HAL_Delay(write_delay);
 622:Src/main.c    **** 	    				eeprom_debug_address++;
 623:Src/main.c    **** 	    				b0 = 0;
 624:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 625:Src/main.c    **** 	    				HAL_Delay(write_delay);
 626:Src/main.c    **** 	    				eeprom_debug_address++;
 627:Src/main.c    **** 	    				b0 = 0;
 628:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 629:Src/main.c    **** 	    				HAL_Delay(write_delay);
 630:Src/main.c    **** 	    				eeprom_debug_address--;
 631:Src/main.c    **** 	    				eeprom_number_of_records++;
 632:Src/main.c    ****                                                                                                    
 633:Src/main.c    **** 	    			}
 634:Src/main.c    **** 	    			else
 635:Src/main.c    **** 	    			{
 636:Src/main.c    **** 	    				// there are depth records
 637:Src/main.c    ****                                                                                                    
 638:Src/main.c    **** 	    				// write new record
 639:Src/main.c    **** 	    				b0 = 0;
 640:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 5, I
 641:Src/main.c    **** 	    				HAL_Delay(write_delay);
 642:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 6, I
 643:Src/main.c    **** 	    				HAL_Delay(write_delay);
 644:Src/main.c    **** 	    				eeprom_number_of_records++;
 645:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 646:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 647:Src/main.c    **** 	    				b0 = message[0];
 648:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 649:Src/main.c    **** 	    				HAL_Delay(write_delay);
 650:Src/main.c    **** 	    				eeprom_debug_address++;
 651:Src/main.c    **** 	    				b0 = message[1];
 652:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 653:Src/main.c    **** 	    				HAL_Delay(write_delay);
 654:Src/main.c    **** 	    				eeprom_debug_address++;
 655:Src/main.c    **** 	    				//b0 = message[2];
 656:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 657:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 658:Src/main.c    **** 	    				//eeprom_debug_address++;
 659:Src/main.c    **** 	    				b0 = message[3];
 660:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
ARM GAS  /tmp/ccwr8m4c.s 			page 13


 661:Src/main.c    **** 	    				HAL_Delay(write_delay);
 662:Src/main.c    **** 	    				eeprom_debug_address++;
 663:Src/main.c    **** 	    				b0 = temperature_message[0];
 664:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 665:Src/main.c    **** 	    				HAL_Delay(write_delay);
 666:Src/main.c    **** 	    				eeprom_debug_address++;
 667:Src/main.c    **** 	    				b0 = temperature_message[1];
 668:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 669:Src/main.c    **** 	    				HAL_Delay(write_delay);
 670:Src/main.c    **** 	    				eeprom_debug_address++;
 671:Src/main.c    ****                                                                                                    
 672:Src/main.c    **** 	    			}
 673:Src/main.c    ****                                                                                                    
 674:Src/main.c    ****                                                                                                    
 675:Src/main.c    ****                                                                                                    
 676:Src/main.c    ****                                                                                                    
 677:Src/main.c    ****                                                                                                    
 678:Src/main.c    **** 	    			//--------------------------------------------------------------------------
 679:Src/main.c    ****                                                                                                    
 680:Src/main.c    **** 	    			if((actuator_counter > 0) && (actuator_counter < 100))
 681:Src/main.c    **** 	    			{
 682:Src/main.c    **** 	    				if(actuator_counter >= 21)
 683:Src/main.c    **** 	    				{
 684:Src/main.c    **** 	    					// switch off actuators
 685:Src/main.c    ****   	    					HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_RESET);// turn actuators o
 686:Src/main.c    **** 	    					actuator_counter = 100;
 687:Src/main.c    **** 	    				}
 688:Src/main.c    **** 	    				else
 689:Src/main.c    **** 	    				{
 690:Src/main.c    **** 	    					actuator_counter++;
 691:Src/main.c    **** 	    				}
 692:Src/main.c    **** 	    			}
 693:Src/main.c    ****                                                                                                    
 694:Src/main.c    ****                                                                                                    
 695:Src/main.c    **** 	    			if((depth >= (depth_switch_get_current_depth())) && actuator_counter == 0)
 696:Src/main.c    **** 	    			{
 697:Src/main.c    ****                                                                                                    
 698:Src/main.c    **** 	    				actuator_counter++;
 699:Src/main.c    **** 	    				// switch on actuators
 700:Src/main.c    ****   	    				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_SET);// turn actuators on
 701:Src/main.c    ****                                                                                                    
 702:Src/main.c    **** 	    				// switch on signal leds
 703:Src/main.c    ****   	    				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3, GPIO_PIN_SET
 704:Src/main.c    ****                                                                                                    
 705:Src/main.c    ****                                                                                                    
 706:Src/main.c    **** 	    				// save info about activation conditions (time, depth, etc)
 707:Src/main.c    **** 	    				ssd1306_Fill(Black);
 708:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 709:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 710:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 711:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 712:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 713:Src/main.c    **** 	    	        	sprintf(message, ">>>>> %02dm", (int)depth);
 714:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 715:Src/main.c    ****   	    	        	//ssd1306_SetCursor(0,44);
 716:Src/main.c    **** 	    	        	//sprintf(message, "activated!!!");
 717:Src/main.c    ****   	    	        	//ssd1306_WriteString(message, Font_11x18, White);
ARM GAS  /tmp/ccwr8m4c.s 			page 14


 718:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();   
 719:Src/main.c    ****                                                                                                    
 720:Src/main.c    ****                                                                                                    
 721:Src/main.c    **** 	    				// write depth of activation 
 722:Src/main.c    **** 	    	        	//sprintf(message, "%02d", (int)depth);
 723:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 724:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 725:Src/main.c    **** 	    				b0 = message[0];
 726:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 727:Src/main.c    **** 	    				HAL_Delay(write_delay);
 728:Src/main.c    **** 	    				eeprom_debug_address++;
 729:Src/main.c    **** 	    				b0 = message[1];
 730:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 731:Src/main.c    **** 	    				HAL_Delay(write_delay);
 732:Src/main.c    **** 	    				eeprom_debug_address++;
 733:Src/main.c    **** 	    				//b0 = message[2];
 734:Src/main.c    **** 	    				//HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C
 735:Src/main.c    **** 	    				//HAL_Delay(write_delay);
 736:Src/main.c    **** 	    				//eeprom_debug_address++;
 737:Src/main.c    **** 	    				b0 = message[3];
 738:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 739:Src/main.c    **** 	    				HAL_Delay(write_delay);
 740:Src/main.c    **** 	    				eeprom_debug_address++;
 741:Src/main.c    **** 	    				b0 = temperature_message[0];
 742:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 743:Src/main.c    **** 	    				HAL_Delay(write_delay);
 744:Src/main.c    **** 	    				eeprom_debug_address++;
 745:Src/main.c    **** 	    				b0 = temperature_message[1];
 746:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 747:Src/main.c    **** 	    				HAL_Delay(write_delay);
 748:Src/main.c    **** 	    				eeprom_debug_address++;
 749:Src/main.c    **** 	    				b0 = '$';
 750:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 751:Src/main.c    **** 	    				HAL_Delay(write_delay);
 752:Src/main.c    **** 	    				eeprom_debug_address++;
 753:Src/main.c    **** 	    				b0 = '$';
 754:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 755:Src/main.c    **** 	    				HAL_Delay(write_delay);
 756:Src/main.c    **** 	    				eeprom_debug_address++;
 757:Src/main.c    **** 	    				eeprom_number_of_records++;
 758:Src/main.c    **** 	    				b0 = '$';
 759:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 760:Src/main.c    **** 	    				HAL_Delay(write_delay);
 761:Src/main.c    **** 	    				eeprom_debug_address++;
 762:Src/main.c    **** 	    				eeprom_number_of_records++;
 763:Src/main.c    **** 	    				b0 = '$';
 764:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 765:Src/main.c    **** 	    				HAL_Delay(write_delay);
 766:Src/main.c    **** 	    				eeprom_debug_address++;
 767:Src/main.c    **** 	    				eeprom_number_of_records++;
 768:Src/main.c    **** 	    				b0 = '$';
 769:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 770:Src/main.c    **** 	    				HAL_Delay(write_delay);
 771:Src/main.c    **** 	    				eeprom_debug_address++;
 772:Src/main.c    **** 	    				eeprom_number_of_records++;
 773:Src/main.c    ****                                                                                                    
 774:Src/main.c    **** 	    				// pause 21 sec
ARM GAS  /tmp/ccwr8m4c.s 			page 15


 775:Src/main.c    **** 	    				//HAL_Delay(21000);
 776:Src/main.c    ****                                                                                                    
 777:Src/main.c    ****                                                                                                    
 778:Src/main.c    **** 	    				// switch off actuators
 779:Src/main.c    ****   	    				//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_RESET);// turn actuators 
 780:Src/main.c    ****                                                                                                    
 781:Src/main.c    **** 	    				// stop
 782:Src/main.c    **** 	    				//while(1);
 783:Src/main.c    **** 	    			}
 784:Src/main.c    ****                                                                                                    
 785:Src/main.c    **** 	    
 786:Src/main.c    **** 	    		}// end if(!we_are_under_water)  // we are not under water
 787:Src/main.c    ****                 
 788:Src/main.c    **** 	    	}// end if(one_second_timer_get_flag())
 789:Src/main.c    ****             //*/                                                                                   
 790:Src/main.c    **** 
 791:Src/main.c    **** 
 792:Src/main.c    ****   
 793:Src/main.c    **** 	    }// end while   
 794:Src/main.c    **** 
 795:Src/main.c    **** 	}// end if
 796:Src/main.c    **** }
 797:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 798:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 799:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 800:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 801:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 802:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 803:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 804:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 805:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 806:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 807:Src/main.c    **** //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 808:Src/main.c    **** 
 809:Src/main.c    **** /**
 810:Src/main.c    ****   * @brief System Clock Configuration
 811:Src/main.c    ****   * @retval None
 812:Src/main.c    ****   */
 813:Src/main.c    **** void SystemClock_Config(void)
 814:Src/main.c    **** {
  26              		.loc 1 814 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  33 0002 9AB0     		sub	sp, sp, #104
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 112
 815:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  36              		.loc 1 815 0
  37 0004 0024     		mov	r4, #0
  38 0006 0D94     		str	r4, [sp, #52]
  39 0008 0E94     		str	r4, [sp, #56]
  40 000a 0F94     		str	r4, [sp, #60]
  41 000c 1094     		str	r4, [sp, #64]
ARM GAS  /tmp/ccwr8m4c.s 			page 16


  42 000e 1194     		str	r4, [sp, #68]
  43 0010 1294     		str	r4, [sp, #72]
  44 0012 1394     		str	r4, [sp, #76]
  45 0014 1494     		str	r4, [sp, #80]
  46 0016 1594     		str	r4, [sp, #84]
  47 0018 1694     		str	r4, [sp, #88]
  48 001a 1794     		str	r4, [sp, #92]
  49 001c 1894     		str	r4, [sp, #96]
  50 001e 1994     		str	r4, [sp, #100]
 816:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  51              		.loc 1 816 0
  52 0020 0894     		str	r4, [sp, #32]
  53 0022 0994     		str	r4, [sp, #36]
  54 0024 0A94     		str	r4, [sp, #40]
  55 0026 0B94     		str	r4, [sp, #44]
  56 0028 0C94     		str	r4, [sp, #48]
 817:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  57              		.loc 1 817 0
  58 002a 0094     		str	r4, [sp]
  59 002c 0194     		str	r4, [sp, #4]
  60 002e 0294     		str	r4, [sp, #8]
  61 0030 0394     		str	r4, [sp, #12]
  62 0032 0494     		str	r4, [sp, #16]
  63 0034 0594     		str	r4, [sp, #20]
  64 0036 0694     		str	r4, [sp, #24]
  65 0038 0794     		str	r4, [sp, #28]
 818:Src/main.c    **** 
 819:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 820:Src/main.c    ****   */
 821:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  66              		.loc 1 821 0
  67 003a 144A     		ldr	r2, .L2
  68 003c 1168     		ldr	r1, [r2]
  69 003e 144B     		ldr	r3, .L2+4
  70 0040 0B40     		and	r3, r1
  71 0042 8021     		mov	r1, #128
  72 0044 0901     		lsl	r1, r1, #4
  73 0046 0B43     		orr	r3, r1
  74 0048 1360     		str	r3, [r2]
 822:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 823:Src/main.c    ****   */
 824:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  75              		.loc 1 824 0
  76 004a 1023     		mov	r3, #16
  77 004c 0D93     		str	r3, [sp, #52]
 825:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  78              		.loc 1 825 0
  79 004e 0F3B     		sub	r3, r3, #15
  80 0050 1393     		str	r3, [sp, #76]
 826:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
  81              		.loc 1 826 0
  82 0052 1494     		str	r4, [sp, #80]
 827:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
  83              		.loc 1 827 0
  84 0054 A023     		mov	r3, #160
  85 0056 1B02     		lsl	r3, r3, #8
  86 0058 1593     		str	r3, [sp, #84]
ARM GAS  /tmp/ccwr8m4c.s 			page 17


 828:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  87              		.loc 1 828 0
  88 005a 1694     		str	r4, [sp, #88]
 829:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  89              		.loc 1 829 0
  90 005c 0DA8     		add	r0, sp, #52
  91 005e FFF7FEFF 		bl	HAL_RCC_OscConfig
  92              	.LVL0:
 830:Src/main.c    ****   {
 831:Src/main.c    ****     Error_Handler();
 832:Src/main.c    ****   }
 833:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 834:Src/main.c    ****   */
 835:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  93              		.loc 1 835 0
  94 0062 0F23     		mov	r3, #15
  95 0064 0893     		str	r3, [sp, #32]
 836:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 837:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
  96              		.loc 1 837 0
  97 0066 0994     		str	r4, [sp, #36]
 838:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 838 0
  99 0068 0A94     		str	r4, [sp, #40]
 839:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 100              		.loc 1 839 0
 101 006a 0B94     		str	r4, [sp, #44]
 840:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 840 0
 103 006c 0C94     		str	r4, [sp, #48]
 841:Src/main.c    **** 
 842:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 104              		.loc 1 842 0
 105 006e 08A8     		add	r0, sp, #32
 106 0070 0021     		mov	r1, #0
 107 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 108              	.LVL1:
 843:Src/main.c    ****   {
 844:Src/main.c    ****     Error_Handler();
 845:Src/main.c    ****   }
 846:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 109              		.loc 1 846 0
 110 0076 0A23     		mov	r3, #10
 111 0078 FF33     		add	r3, r3, #255
 112 007a 0093     		str	r3, [sp]
 847:Src/main.c    ****                               |RCC_PERIPHCLK_I2C3;
 848:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 113              		.loc 1 848 0
 114 007c 0294     		str	r4, [sp, #8]
 849:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 115              		.loc 1 849 0
 116 007e 0594     		str	r4, [sp, #20]
 850:Src/main.c    ****   PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 117              		.loc 1 850 0
 118 0080 0694     		str	r4, [sp, #24]
 851:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 119              		.loc 1 851 0
ARM GAS  /tmp/ccwr8m4c.s 			page 18


 120 0082 6846     		mov	r0, sp
 121 0084 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 122              	.LVL2:
 852:Src/main.c    ****   {
 853:Src/main.c    ****     Error_Handler();
 854:Src/main.c    ****   }
 855:Src/main.c    **** }
 123              		.loc 1 855 0
 124 0088 1AB0     		add	sp, sp, #104
 125              		@ sp needed
 126 008a 10BD     		pop	{r4, pc}
 127              	.L3:
 128              		.align	2
 129              	.L2:
 130 008c 00700040 		.word	1073770496
 131 0090 FFE7FFFF 		.word	-6145
 132              		.cfi_endproc
 133              	.LFE35:
 135              		.global	__aeabi_ui2d
 136              		.global	__aeabi_dcmpge
 137              		.global	__aeabi_d2uiz
 138              		.global	__aeabi_dcmplt
 139              		.global	__aeabi_d2iz
 140              		.global	__aeabi_dsub
 141              		.global	__aeabi_ddiv
 142              		.global	__aeabi_dcmpgt
 143              		.global	__aeabi_i2d
 144              		.global	__aeabi_dmul
 145              		.global	__aeabi_dcmple
 146              		.section	.text.main,"ax",%progbits
 147              		.align	2
 148              		.global	main
 149              		.code	16
 150              		.thumb_func
 152              	main:
 153              	.LFB34:
  65:Src/main.c    **** 
 154              		.loc 1 65 0
 155              		.cfi_startproc
 156 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 157              	.LCFI2:
 158              		.cfi_def_cfa_offset 20
 159              		.cfi_offset 4, -20
 160              		.cfi_offset 5, -16
 161              		.cfi_offset 6, -12
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 5F46     		mov	r7, fp
 165 0004 5646     		mov	r6, r10
 166 0006 4D46     		mov	r5, r9
 167 0008 4446     		mov	r4, r8
 168 000a F0B4     		push	{r4, r5, r6, r7}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 36
 171              		.cfi_offset 8, -36
 172              		.cfi_offset 9, -32
 173              		.cfi_offset 10, -28
ARM GAS  /tmp/ccwr8m4c.s 			page 19


 174              		.cfi_offset 11, -24
 175 000c 91B0     		sub	sp, sp, #68
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 104
  71:Src/main.c    **** 
 178              		.loc 1 71 0
 179 000e FFF7FEFF 		bl	HAL_Init
 180              	.LVL3:
  75:Src/main.c    **** 
 181              		.loc 1 75 0
 182 0012 FFF7FEFF 		bl	SystemClock_Config
 183              	.LVL4:
  79:Src/main.c    **** 	MX_ADC_Init();
 184              		.loc 1 79 0
 185 0016 FFF7FEFF 		bl	MX_GPIO_Init
 186              	.LVL5:
  80:Src/main.c    **** 	MX_I2C1_Init();
 187              		.loc 1 80 0
 188 001a FFF7FEFF 		bl	MX_ADC_Init
 189              	.LVL6:
  81:Src/main.c    **** 	//MX_I2C2_Init();
 190              		.loc 1 81 0
 191 001e FFF7FEFF 		bl	MX_I2C1_Init
 192              	.LVL7:
  83:Src/main.c    **** 	MX_SPI1_Init();
 193              		.loc 1 83 0
 194 0022 FFF7FEFF 		bl	MX_I2C3_Init
 195              	.LVL8:
  84:Src/main.c    ****     // enable spi1
 196              		.loc 1 84 0
 197 0026 FFF7FEFF 		bl	MX_SPI1_Init
 198              	.LVL9:
  86:Src/main.c    **** 	MX_USART1_UART_Init();
 199              		.loc 1 86 0
 200 002a DC4A     		ldr	r2, .L57
 201 002c 1168     		ldr	r1, [r2]
 202 002e 4023     		mov	r3, #64
 203 0030 0B43     		orr	r3, r1
 204 0032 1360     		str	r3, [r2]
  87:Src/main.c    ****   
 205              		.loc 1 87 0
 206 0034 FFF7FEFF 		bl	MX_USART1_UART_Init
 207              	.LVL10:
  89:Src/main.c    **** 	//rtc_ds3231_set_time(16, 40, 0);
 208              		.loc 1 89 0
 209 0038 D948     		ldr	r0, .L57+4
 210 003a FFF7FEFF 		bl	rtc_ds3231_set_i2c_handle
 211              	.LVL11:
  94:Src/main.c    ****   	ssd1306_Init();
 212              		.loc 1 94 0
 213 003e D948     		ldr	r0, .L57+8
 214 0040 0121     		mov	r1, #1
 215 0042 FFF7FEFF 		bl	ssd1306_set_i2c_port
 216              	.LVL12:
  95:Src/main.c    ****   	HAL_Delay(100);
 217              		.loc 1 95 0
 218 0046 FFF7FEFF 		bl	ssd1306_Init
ARM GAS  /tmp/ccwr8m4c.s 			page 20


 219              	.LVL13:
  96:Src/main.c    ****   	ssd1306_Fill(White);
 220              		.loc 1 96 0
 221 004a 6420     		mov	r0, #100
 222 004c FFF7FEFF 		bl	HAL_Delay
 223              	.LVL14:
  97:Src/main.c    ****   	ssd1306_UpdateScreen();
 224              		.loc 1 97 0
 225 0050 0120     		mov	r0, #1
 226 0052 FFF7FEFF 		bl	ssd1306_Fill
 227              	.LVL15:
  98:Src/main.c    ****   	HAL_Delay(100);
 228              		.loc 1 98 0
 229 0056 FFF7FEFF 		bl	ssd1306_UpdateScreen
 230              	.LVL16:
  99:Src/main.c    ****   	ssd1306_Fill(Black);
 231              		.loc 1 99 0
 232 005a 6420     		mov	r0, #100
 233 005c FFF7FEFF 		bl	HAL_Delay
 234              	.LVL17:
 100:Src/main.c    ****   	ssd1306_UpdateScreen();
 235              		.loc 1 100 0
 236 0060 0020     		mov	r0, #0
 237 0062 FFF7FEFF 		bl	ssd1306_Fill
 238              	.LVL18:
 101:Src/main.c    **** 
 239              		.loc 1 101 0
 240 0066 FFF7FEFF 		bl	ssd1306_UpdateScreen
 241              	.LVL19:
 103:Src/main.c    **** 
 242              		.loc 1 103 0
 243 006a 6420     		mov	r0, #100
 244 006c FFF7FEFF 		bl	HAL_Delay
 245              	.LVL20:
 105:Src/main.c    ****   	ssd1306_WriteString("L071", Font_16x26, White);
 246              		.loc 1 105 0
 247 0070 0020     		mov	r0, #0
 248 0072 0021     		mov	r1, #0
 249 0074 FFF7FEFF 		bl	ssd1306_SetCursor
 250              	.LVL21:
 106:Src/main.c    ****   	ssd1306_SetCursor(0,30);
 251              		.loc 1 106 0
 252 0078 CB4C     		ldr	r4, .L57+12
 253 007a CC48     		ldr	r0, .L57+16
 254 007c 2168     		ldr	r1, [r4]
 255 007e 6268     		ldr	r2, [r4, #4]
 256 0080 0123     		mov	r3, #1
 257 0082 FFF7FEFF 		bl	ssd1306_WriteString
 258              	.LVL22:
 107:Src/main.c    ****   	ssd1306_WriteString("TEST..", Font_16x26, White);
 259              		.loc 1 107 0
 260 0086 0020     		mov	r0, #0
 261 0088 1E21     		mov	r1, #30
 262 008a FFF7FEFF 		bl	ssd1306_SetCursor
 263              	.LVL23:
 108:Src/main.c    ****   	ssd1306_UpdateScreen();
 264              		.loc 1 108 0
ARM GAS  /tmp/ccwr8m4c.s 			page 21


 265 008e C848     		ldr	r0, .L57+20
 266 0090 2168     		ldr	r1, [r4]
 267 0092 6268     		ldr	r2, [r4, #4]
 268 0094 0123     		mov	r3, #1
 269 0096 FFF7FEFF 		bl	ssd1306_WriteString
 270              	.LVL24:
 109:Src/main.c    ****   
 271              		.loc 1 109 0
 272 009a FFF7FEFF 		bl	ssd1306_UpdateScreen
 273              	.LVL25:
 112:Src/main.c    **** 	one_second_timer_start();
 274              		.loc 1 112 0
 275 009e FFF7FEFF 		bl	one_second_timer_init
 276              	.LVL26:
 113:Src/main.c    **** 
 277              		.loc 1 113 0
 278 00a2 FFF7FEFF 		bl	one_second_timer_start
 279              	.LVL27:
 115:Src/main.c    **** 	HAL_Delay(1000);
 280              		.loc 1 115 0
 281 00a6 FFF7FEFF 		bl	pressure_sensor_object_init
 282              	.LVL28:
 116:Src/main.c    **** 	uint32_t surface_pressure = 101325;
 283              		.loc 1 116 0
 284 00aa FA20     		mov	r0, #250
 285 00ac 8000     		lsl	r0, r0, #2
 286 00ae FFF7FEFF 		bl	HAL_Delay
 287              	.LVL29:
 118:Src/main.c    **** 
 288              		.loc 1 118 0
 289 00b2 0120     		mov	r0, #1
 290 00b4 FFF7FEFF 		bl	depth_switch_turn_signal_led
 291              	.LVL30:
 120:Src/main.c    **** 	//atm_barometer_init();
 292              		.loc 1 120 0
 293 00b8 FFF7FEFF 		bl	rtc_ds3231_action
 294              	.LVL31:
 146:Src/main.c    **** 	{
 295              		.loc 1 146 0
 296 00bc FFF7FEFF 		bl	depth_switch_check_gpio
 297              	.LVL32:
 298 00c0 0028     		cmp	r0, #0
 299 00c2 00D0     		beq	.LCB222
 300 00c4 2AE3     		b	.L44	@long jump
 301              	.LCB222:
 302              	.LBB2:
 149:Src/main.c    ****   	    ssd1306_SetCursor(0,0);
 303              		.loc 1 149 0
 304 00c6 FFF7FEFF 		bl	ssd1306_Fill
 305              	.LVL33:
 150:Src/main.c    **** 	    sprintf(message, "log mode");
 306              		.loc 1 150 0
 307 00ca 0020     		mov	r0, #0
 308 00cc 0021     		mov	r1, #0
 309 00ce FFF7FEFF 		bl	ssd1306_SetCursor
 310              	.LVL34:
 151:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
ARM GAS  /tmp/ccwr8m4c.s 			page 22


 311              		.loc 1 151 0
 312 00d2 B84C     		ldr	r4, .L57+24
 313 00d4 B84B     		ldr	r3, .L57+28
 314 00d6 221C     		mov	r2, r4
 315 00d8 03CB     		ldmia	r3!, {r0, r1}
 316 00da 03C2     		stmia	r2!, {r0, r1}
 317 00dc 1B78     		ldrb	r3, [r3]
 318 00de 1370     		strb	r3, [r2]
 152:Src/main.c    ****   	    ssd1306_SetCursor(0,22);
 319              		.loc 1 152 0
 320 00e0 B64D     		ldr	r5, .L57+32
 321 00e2 201C     		mov	r0, r4
 322 00e4 2968     		ldr	r1, [r5]
 323 00e6 6A68     		ldr	r2, [r5, #4]
 324 00e8 0123     		mov	r3, #1
 325 00ea FFF7FEFF 		bl	ssd1306_WriteString
 326              	.LVL35:
 153:Src/main.c    **** 	    sprintf(message, "download...");
 327              		.loc 1 153 0
 328 00ee 0020     		mov	r0, #0
 329 00f0 1621     		mov	r1, #22
 330 00f2 FFF7FEFF 		bl	ssd1306_SetCursor
 331              	.LVL36:
 154:Src/main.c    ****   	    ssd1306_WriteString(message, Font_11x18, White);
 332              		.loc 1 154 0
 333 00f6 B24B     		ldr	r3, .L57+36
 334 00f8 271C     		mov	r7, r4
 335 00fa 07CB     		ldmia	r3!, {r0, r1, r2}
 336 00fc 07C7     		stmia	r7!, {r0, r1, r2}
 155:Src/main.c    ****   	    ssd1306_UpdateScreen();
 337              		.loc 1 155 0
 338 00fe 201C     		mov	r0, r4
 339 0100 2968     		ldr	r1, [r5]
 340 0102 6A68     		ldr	r2, [r5, #4]
 341 0104 0123     		mov	r3, #1
 342 0106 FFF7FEFF 		bl	ssd1306_WriteString
 343              	.LVL37:
 156:Src/main.c    **** 
 344              		.loc 1 156 0
 345 010a FFF7FEFF 		bl	ssd1306_UpdateScreen
 346              	.LVL38:
 162:Src/main.c    **** 	uint16_t eeprom_debug_address = 64;
 347              		.loc 1 162 0
 348 010e FA20     		mov	r0, #250
 349 0110 8000     		lsl	r0, r0, #2
 350 0112 FFF7FEFF 		bl	HAL_Delay
 351              	.LVL39:
 168:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 352              		.loc 1 168 0
 353 0116 AB4B     		ldr	r3, .L57+40
 354 0118 1A88     		ldrh	r2, [r3]
 355 011a 2280     		strh	r2, [r4]
 356 011c 9B78     		ldrb	r3, [r3, #2]
 357 011e A370     		strb	r3, [r4, #2]
 169:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 358              		.loc 1 169 0
 359 0120 201C     		mov	r0, r4
ARM GAS  /tmp/ccwr8m4c.s 			page 23


 360 0122 FFF7FEFF 		bl	strlen
 361              	.LVL40:
 362 0126 A84E     		ldr	r6, .L57+44
 363 0128 82B2     		uxth	r2, r0
 364 012a FA25     		mov	r5, #250
 365 012c 6D00     		lsl	r5, r5, #1
 366 012e 301C     		mov	r0, r6
 367 0130 211C     		mov	r1, r4
 368 0132 2B1C     		mov	r3, r5
 369 0134 FFF7FEFF 		bl	HAL_UART_Transmit
 370              	.LVL41:
 170:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 371              		.loc 1 170 0
 372 0138 201C     		mov	r0, r4
 373 013a FFF7FEFF 		bl	strlen
 374              	.LVL42:
 375 013e 82B2     		uxth	r2, r0
 376 0140 301C     		mov	r0, r6
 377 0142 211C     		mov	r1, r4
 378 0144 2B1C     		mov	r3, r5
 379 0146 FFF7FEFF 		bl	HAL_UART_Transmit
 380              	.LVL43:
 171:Src/main.c    **** 
 381              		.loc 1 171 0
 382 014a 201C     		mov	r0, r4
 383 014c FFF7FEFF 		bl	strlen
 384              	.LVL44:
 385 0150 82B2     		uxth	r2, r0
 386 0152 301C     		mov	r0, r6
 387 0154 211C     		mov	r1, r4
 388 0156 2B1C     		mov	r3, r5
 389 0158 FFF7FEFF 		bl	HAL_UART_Transmit
 390              	.LVL45:
 173:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 391              		.loc 1 173 0
 392 015c 9B49     		ldr	r1, .L57+48
 393 015e 221C     		mov	r2, r4
 394 0160 0B1C     		mov	r3, r1
 395 0162 83CB     		ldmia	r3!, {r0, r1, r7}
 396 0164 83C2     		stmia	r2!, {r0, r1, r7}
 397 0166 83CB     		ldmia	r3!, {r0, r1, r7}
 398 0168 83C2     		stmia	r2!, {r0, r1, r7}
 399 016a 03CB     		ldmia	r3!, {r0, r1}
 400 016c 03C2     		stmia	r2!, {r0, r1}
 174:Src/main.c    **** 
 401              		.loc 1 174 0
 402 016e 201C     		mov	r0, r4
 403 0170 FFF7FEFF 		bl	strlen
 404              	.LVL46:
 405 0174 82B2     		uxth	r2, r0
 406 0176 301C     		mov	r0, r6
 407 0178 211C     		mov	r1, r4
 408 017a 2B1C     		mov	r3, r5
 409 017c FFF7FEFF 		bl	HAL_UART_Transmit
 410              	.LVL47:
 177:Src/main.c    **** 	message[0] = b0;                                                                                  
 411              		.loc 1 177 0
ARM GAS  /tmp/ccwr8m4c.s 			page 24


 412 0180 DE3D     		sub	r5, r5, #222
 413 0182 FF3D     		sub	r5, r5, #255
 414 0184 0AAB     		add	r3, sp, #40
 415 0186 9C46     		mov	ip, r3
 416 0188 6544     		add	r5, r5, ip
 417 018a 0095     		str	r5, [sp]
 418 018c 0126     		mov	r6, #1
 419 018e 0196     		str	r6, [sp, #4]
 420 0190 6427     		mov	r7, #100
 421 0192 0297     		str	r7, [sp, #8]
 422 0194 8E48     		ldr	r0, .L57+52
 423 0196 A021     		mov	r1, #160
 424 0198 4022     		mov	r2, #64
 425 019a 0223     		mov	r3, #2
 426 019c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 427              	.LVL48:
 178:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 428              		.loc 1 178 0
 429 01a0 2B78     		ldrb	r3, [r5]
 430 01a2 2370     		strb	r3, [r4]
 431              	.LVL49:
 181:Src/main.c    **** 	message[1] = b0;                                                                                  
 432              		.loc 1 181 0
 433 01a4 0095     		str	r5, [sp]
 434 01a6 0196     		str	r6, [sp, #4]
 435 01a8 0297     		str	r7, [sp, #8]
 436 01aa 8948     		ldr	r0, .L57+52
 437 01ac A021     		mov	r1, #160
 438 01ae 4122     		mov	r2, #65
 439 01b0 0223     		mov	r3, #2
 440 01b2 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 441              	.LVL50:
 182:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 442              		.loc 1 182 0
 443 01b6 2B78     		ldrb	r3, [r5]
 444 01b8 6370     		strb	r3, [r4, #1]
 445              	.LVL51:
 185:Src/main.c    **** 	message[2] = b0;                                                                                  
 446              		.loc 1 185 0
 447 01ba 0095     		str	r5, [sp]
 448 01bc 0196     		str	r6, [sp, #4]
 449 01be 0297     		str	r7, [sp, #8]
 450 01c0 8348     		ldr	r0, .L57+52
 451 01c2 A021     		mov	r1, #160
 452 01c4 4222     		mov	r2, #66
 453 01c6 0223     		mov	r3, #2
 454 01c8 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 455              	.LVL52:
 186:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 456              		.loc 1 186 0
 457 01cc 2B78     		ldrb	r3, [r5]
 458 01ce A370     		strb	r3, [r4, #2]
 459              	.LVL53:
 189:Src/main.c    **** 	message[3] = b0;                                                                                  
 460              		.loc 1 189 0
 461 01d0 0095     		str	r5, [sp]
 462 01d2 0196     		str	r6, [sp, #4]
ARM GAS  /tmp/ccwr8m4c.s 			page 25


 463 01d4 0297     		str	r7, [sp, #8]
 464 01d6 7E48     		ldr	r0, .L57+52
 465 01d8 A021     		mov	r1, #160
 466 01da 4322     		mov	r2, #67
 467 01dc 0223     		mov	r3, #2
 468 01de FFF7FEFF 		bl	HAL_I2C_Mem_Read
 469              	.LVL54:
 190:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 470              		.loc 1 190 0
 471 01e2 2B78     		ldrb	r3, [r5]
 472 01e4 E370     		strb	r3, [r4, #3]
 473              	.LVL55:
 193:Src/main.c    **** 	{                                                                                                 
 474              		.loc 1 193 0
 475 01e6 2378     		ldrb	r3, [r4]
 476 01e8 002B     		cmp	r3, #0
 477 01ea 03D1     		bne	.L6
 193:Src/main.c    **** 	{                                                                                                 
 478              		.loc 1 193 0 is_stmt 0 discriminator 1
 479 01ec 714B     		ldr	r3, .L57+24
 480 01ee 5B78     		ldrb	r3, [r3, #1]
 481 01f0 002B     		cmp	r3, #0
 482 01f2 13D0     		beq	.L45
 483              	.L6:
 199:Src/main.c    **** 		message[5] = '\n';                                                                               
 484              		.loc 1 199 0 is_stmt 1
 485 01f4 6F4C     		ldr	r4, .L57+24
 486 01f6 0D23     		mov	r3, #13
 487 01f8 2371     		strb	r3, [r4, #4]
 200:Src/main.c    **** 		message[6] = 0;                                                                                  
 488              		.loc 1 200 0
 489 01fa 033B     		sub	r3, r3, #3
 490 01fc 6371     		strb	r3, [r4, #5]
 201:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 491              		.loc 1 201 0
 492 01fe 0023     		mov	r3, #0
 493 0200 A371     		strb	r3, [r4, #6]
 202:Src/main.c    **** 	}                                                                                                 
 494              		.loc 1 202 0
 495 0202 201C     		mov	r0, r4
 496 0204 FFF7FEFF 		bl	strlen
 497              	.LVL56:
 498 0208 82B2     		uxth	r2, r0
 499 020a 6F48     		ldr	r0, .L57+44
 500 020c 211C     		mov	r1, r4
 501 020e FA23     		mov	r3, #250
 502 0210 5B00     		lsl	r3, r3, #1
 503 0212 FFF7FEFF 		bl	HAL_UART_Transmit
 504              	.LVL57:
 161:Src/main.c    **** 	HAL_Delay(1000);
 505              		.loc 1 161 0
 506 0216 0023     		mov	r3, #0
 507 0218 9A46     		mov	r10, r3
 508 021a 01E0     		b	.L7
 509              	.L45:
 195:Src/main.c    **** 	}                                                                                                 
 510              		.loc 1 195 0
ARM GAS  /tmp/ccwr8m4c.s 			page 26


 511 021c 0123     		mov	r3, #1
 512 021e 9A46     		mov	r10, r3
 513              	.L7:
 514              	.LVL58:
 205:Src/main.c    **** 	message[0] = b0;                                                                                  
 515              		.loc 1 205 0
 516 0220 1724     		mov	r4, #23
 517 0222 0AAB     		add	r3, sp, #40
 518 0224 9C46     		mov	ip, r3
 519 0226 6444     		add	r4, r4, ip
 520 0228 0094     		str	r4, [sp]
 521 022a 0126     		mov	r6, #1
 522 022c 0196     		str	r6, [sp, #4]
 523 022e 6427     		mov	r7, #100
 524 0230 0297     		str	r7, [sp, #8]
 525 0232 6748     		ldr	r0, .L57+52
 526 0234 A021     		mov	r1, #160
 527 0236 4422     		mov	r2, #68
 528 0238 0223     		mov	r3, #2
 529 023a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 530              	.LVL59:
 206:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 531              		.loc 1 206 0
 532 023e 5D4D     		ldr	r5, .L57+24
 533 0240 2378     		ldrb	r3, [r4]
 534 0242 2B70     		strb	r3, [r5]
 535              	.LVL60:
 209:Src/main.c    **** 	message[1] = b0;                                                                                  
 536              		.loc 1 209 0
 537 0244 0094     		str	r4, [sp]
 538 0246 0196     		str	r6, [sp, #4]
 539 0248 0297     		str	r7, [sp, #8]
 540 024a 6148     		ldr	r0, .L57+52
 541 024c A021     		mov	r1, #160
 542 024e 4522     		mov	r2, #69
 543 0250 0223     		mov	r3, #2
 544 0252 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 545              	.LVL61:
 210:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 546              		.loc 1 210 0
 547 0256 2378     		ldrb	r3, [r4]
 548 0258 6B70     		strb	r3, [r5, #1]
 549              	.LVL62:
 213:Src/main.c    **** 	message[2] = b0;                                                                                  
 550              		.loc 1 213 0
 551 025a 0094     		str	r4, [sp]
 552 025c 0196     		str	r6, [sp, #4]
 553 025e 0297     		str	r7, [sp, #8]
 554 0260 5B48     		ldr	r0, .L57+52
 555 0262 A021     		mov	r1, #160
 556 0264 4622     		mov	r2, #70
 557 0266 0223     		mov	r3, #2
 558 0268 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 559              	.LVL63:
 214:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 560              		.loc 1 214 0
 561 026c 2378     		ldrb	r3, [r4]
ARM GAS  /tmp/ccwr8m4c.s 			page 27


 562 026e AB70     		strb	r3, [r5, #2]
 563              	.LVL64:
 217:Src/main.c    **** 	message[3] = b0;                                                                                  
 564              		.loc 1 217 0
 565 0270 0094     		str	r4, [sp]
 566 0272 0196     		str	r6, [sp, #4]
 567 0274 0297     		str	r7, [sp, #8]
 568 0276 5648     		ldr	r0, .L57+52
 569 0278 A021     		mov	r1, #160
 570 027a 4722     		mov	r2, #71
 571 027c 0223     		mov	r3, #2
 572 027e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 573              	.LVL65:
 218:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 574              		.loc 1 218 0
 575 0282 2378     		ldrb	r3, [r4]
 576 0284 EB70     		strb	r3, [r5, #3]
 577              	.LVL66:
 221:Src/main.c    **** 	{                                                                                                 
 578              		.loc 1 221 0
 579 0286 2B78     		ldrb	r3, [r5]
 580 0288 002B     		cmp	r3, #0
 581 028a 03D1     		bne	.L8
 221:Src/main.c    **** 	{                                                                                                 
 582              		.loc 1 221 0 is_stmt 0 discriminator 1
 583 028c 494B     		ldr	r3, .L57+24
 584 028e 5B78     		ldrb	r3, [r3, #1]
 585 0290 002B     		cmp	r3, #0
 586 0292 11D0     		beq	.L46
 587              	.L8:
 227:Src/main.c    **** 		message[5] = '\n';                                                                               
 588              		.loc 1 227 0 is_stmt 1
 589 0294 474C     		ldr	r4, .L57+24
 590 0296 0D23     		mov	r3, #13
 591 0298 2371     		strb	r3, [r4, #4]
 228:Src/main.c    **** 		message[6] = 0;                                                                                  
 592              		.loc 1 228 0
 593 029a 033B     		sub	r3, r3, #3
 594 029c 6371     		strb	r3, [r4, #5]
 229:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 595              		.loc 1 229 0
 596 029e 0023     		mov	r3, #0
 597 02a0 A371     		strb	r3, [r4, #6]
 230:Src/main.c    **** 	}                                                                                                 
 598              		.loc 1 230 0
 599 02a2 201C     		mov	r0, r4
 600 02a4 FFF7FEFF 		bl	strlen
 601              	.LVL67:
 602 02a8 82B2     		uxth	r2, r0
 603 02aa 4748     		ldr	r0, .L57+44
 604 02ac 211C     		mov	r1, r4
 605 02ae FA23     		mov	r3, #250
 606 02b0 5B00     		lsl	r3, r3, #1
 607 02b2 FFF7FEFF 		bl	HAL_UART_Transmit
 608              	.LVL68:
 609 02b6 01E0     		b	.L9
 610              	.L46:
ARM GAS  /tmp/ccwr8m4c.s 			page 28


 223:Src/main.c    **** 	}                                                                                                 
 611              		.loc 1 223 0
 612 02b8 0123     		mov	r3, #1
 613 02ba 9A46     		mov	r10, r3
 614              	.LVL69:
 615              	.L9:
 263:Src/main.c    **** 		}
 616              		.loc 1 263 0
 617 02bc 4824     		mov	r4, #72
 618 02be 8BE0     		b	.L10
 619              	.LVL70:
 620              	.L13:
 236:Src/main.c    **** 		message[0] = b0;                                                                                 
 621              		.loc 1 236 0
 622 02c0 1725     		mov	r5, #23
 623 02c2 0AAB     		add	r3, sp, #40
 624              	.LVL71:
 625 02c4 9C46     		mov	ip, r3
 626 02c6 6544     		add	r5, r5, ip
 627 02c8 0095     		str	r5, [sp]
 628 02ca 0123     		mov	r3, #1
 629 02cc 9946     		mov	r9, r3
 630 02ce 0193     		str	r3, [sp, #4]
 631 02d0 6426     		mov	r6, #100
 632 02d2 0296     		str	r6, [sp, #8]
 633 02d4 3E48     		ldr	r0, .L57+52
 634 02d6 A021     		mov	r1, #160
 635 02d8 221C     		mov	r2, r4
 636 02da 0133     		add	r3, r3, #1
 637 02dc FFF7FEFF 		bl	HAL_I2C_Mem_Read
 638              	.LVL72:
 237:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 639              		.loc 1 237 0
 640 02e0 344F     		ldr	r7, .L57+24
 641 02e2 2B78     		ldrb	r3, [r5]
 642 02e4 3B70     		strb	r3, [r7]
 238:Src/main.c    **** 		HAL_Delay(3);
 643              		.loc 1 238 0
 644 02e6 0134     		add	r4, r4, #1
 645              	.LVL73:
 646 02e8 A4B2     		uxth	r4, r4
 647              	.LVL74:
 239:Src/main.c    **** 
 648              		.loc 1 239 0
 649 02ea 0320     		mov	r0, #3
 650 02ec FFF7FEFF 		bl	HAL_Delay
 651              	.LVL75:
 241:Src/main.c    **** 		message[1] = b0;                                                                                 
 652              		.loc 1 241 0
 653 02f0 0095     		str	r5, [sp]
 654 02f2 4B46     		mov	r3, r9
 655 02f4 0193     		str	r3, [sp, #4]
 656 02f6 0296     		str	r6, [sp, #8]
 657 02f8 3548     		ldr	r0, .L57+52
 658 02fa A021     		mov	r1, #160
 659 02fc 221C     		mov	r2, r4
 660 02fe 0133     		add	r3, r3, #1
ARM GAS  /tmp/ccwr8m4c.s 			page 29


 661 0300 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 662              	.LVL76:
 242:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 663              		.loc 1 242 0
 664 0304 2B78     		ldrb	r3, [r5]
 665 0306 7B70     		strb	r3, [r7, #1]
 243:Src/main.c    **** 
 666              		.loc 1 243 0
 667 0308 0134     		add	r4, r4, #1
 668              	.LVL77:
 669 030a A4B2     		uxth	r4, r4
 670              	.LVL78:
 245:Src/main.c    **** 
 671              		.loc 1 245 0
 672 030c 2E23     		mov	r3, #46
 673 030e BB70     		strb	r3, [r7, #2]
 247:Src/main.c    **** 		message[3] = b0;                                                                                 
 674              		.loc 1 247 0
 675 0310 0095     		str	r5, [sp]
 676 0312 4B46     		mov	r3, r9
 677 0314 0193     		str	r3, [sp, #4]
 678 0316 0296     		str	r6, [sp, #8]
 679 0318 2D48     		ldr	r0, .L57+52
 680 031a A021     		mov	r1, #160
 681 031c 221C     		mov	r2, r4
 682 031e 0133     		add	r3, r3, #1
 683 0320 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 684              	.LVL79:
 248:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 685              		.loc 1 248 0
 686 0324 2B78     		ldrb	r3, [r5]
 687 0326 FB70     		strb	r3, [r7, #3]
 249:Src/main.c    **** 
 688              		.loc 1 249 0
 689 0328 0134     		add	r4, r4, #1
 690              	.LVL80:
 691 032a A4B2     		uxth	r4, r4
 692              	.LVL81:
 251:Src/main.c    **** 
 693              		.loc 1 251 0
 694 032c 2023     		mov	r3, #32
 695 032e 3B71     		strb	r3, [r7, #4]
 253:Src/main.c    **** 		message[5] = b0;                                                                                 
 696              		.loc 1 253 0
 697 0330 0095     		str	r5, [sp]
 698 0332 4B46     		mov	r3, r9
 699 0334 0193     		str	r3, [sp, #4]
 700 0336 0296     		str	r6, [sp, #8]
 701 0338 2548     		ldr	r0, .L57+52
 702 033a A021     		mov	r1, #160
 703 033c 221C     		mov	r2, r4
 704 033e 0133     		add	r3, r3, #1
 705 0340 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 706              	.LVL82:
 254:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 707              		.loc 1 254 0
 708 0344 2B78     		ldrb	r3, [r5]
ARM GAS  /tmp/ccwr8m4c.s 			page 30


 709 0346 7B71     		strb	r3, [r7, #5]
 255:Src/main.c    **** 		
 710              		.loc 1 255 0
 711 0348 0134     		add	r4, r4, #1
 712              	.LVL83:
 713 034a A4B2     		uxth	r4, r4
 714              	.LVL84:
 257:Src/main.c    **** 		message[6] = b0;                                                                                 
 715              		.loc 1 257 0
 716 034c 0095     		str	r5, [sp]
 717 034e 4B46     		mov	r3, r9
 718 0350 0193     		str	r3, [sp, #4]
 719 0352 0296     		str	r6, [sp, #8]
 720 0354 1E48     		ldr	r0, .L57+52
 721 0356 A021     		mov	r1, #160
 722 0358 221C     		mov	r2, r4
 723 035a 0133     		add	r3, r3, #1
 724 035c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 725              	.LVL85:
 258:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 726              		.loc 1 258 0
 727 0360 2B78     		ldrb	r3, [r5]
 728 0362 BB71     		strb	r3, [r7, #6]
 259:Src/main.c    **** 
 729              		.loc 1 259 0
 730 0364 0134     		add	r4, r4, #1
 731              	.LVL86:
 732 0366 A4B2     		uxth	r4, r4
 733              	.LVL87:
 261:Src/main.c    **** 		{
 734              		.loc 1 261 0
 735 0368 3B78     		ldrb	r3, [r7]
 736 036a 002B     		cmp	r3, #0
 737 036c 03D1     		bne	.L11
 261:Src/main.c    **** 		{
 738              		.loc 1 261 0 is_stmt 0 discriminator 1
 739 036e 114B     		ldr	r3, .L57+24
 740 0370 5B78     		ldrb	r3, [r3, #1]
 741 0372 002B     		cmp	r3, #0
 742 0374 2ED0     		beq	.L47
 743              	.L11:
 267:Src/main.c    **** 			message[8] = '\n';                                                                              
 744              		.loc 1 267 0 is_stmt 1
 745 0376 0F4D     		ldr	r5, .L57+24
 746 0378 0D23     		mov	r3, #13
 747 037a EB71     		strb	r3, [r5, #7]
 268:Src/main.c    **** 			message[9] = 0;                                                                                 
 748              		.loc 1 268 0
 749 037c 033B     		sub	r3, r3, #3
 750 037e 2B72     		strb	r3, [r5, #8]
 269:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 751              		.loc 1 269 0
 752 0380 0023     		mov	r3, #0
 753 0382 6B72     		strb	r3, [r5, #9]
 270:Src/main.c    **** 		}
 754              		.loc 1 270 0
 755 0384 281C     		mov	r0, r5
ARM GAS  /tmp/ccwr8m4c.s 			page 31


 756 0386 FFF7FEFF 		bl	strlen
 757              	.LVL88:
 758 038a 82B2     		uxth	r2, r0
 759 038c 0E48     		ldr	r0, .L57+44
 760 038e 291C     		mov	r1, r5
 761 0390 FA23     		mov	r3, #250
 762 0392 5B00     		lsl	r3, r3, #1
 763 0394 FFF7FEFF 		bl	HAL_UART_Transmit
 764              	.LVL89:
 765 0398 1EE0     		b	.L10
 766              	.L58:
 767 039a C046     		.align	2
 768              	.L57:
 769 039c 00300140 		.word	1073819648
 770 03a0 00000000 		.word	hi2c3
 771 03a4 00000000 		.word	hi2c1
 772 03a8 00000000 		.word	Font_16x26
 773 03ac 00000000 		.word	.LC2
 774 03b0 08000000 		.word	.LC5
 775 03b4 00000000 		.word	.LANCHOR0
 776 03b8 10000000 		.word	.LC8
 777 03bc 00000000 		.word	Font_11x18
 778 03c0 1C000000 		.word	.LC11
 779 03c4 28000000 		.word	.LC13
 780 03c8 00000000 		.word	huart1
 781 03cc 2C000000 		.word	.LC16
 782 03d0 00000000 		.word	hi2c2
 783              	.L47:
 263:Src/main.c    **** 		}
 784              		.loc 1 263 0
 785 03d4 0123     		mov	r3, #1
 786 03d6 9A46     		mov	r10, r3
 787              	.LVL90:
 788              	.L10:
 233:Src/main.c    **** 	{
 789              		.loc 1 233 0
 790 03d8 5346     		mov	r3, r10
 791 03da 002B     		cmp	r3, #0
 792 03dc 00D1     		bne	.LCB663
 793 03de 6FE7     		b	.L13	@long jump
 794              	.LCB663:
 274:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 795              		.loc 1 274 0
 796 03e0 C74C     		ldr	r4, .L59
 797              	.LVL91:
 798 03e2 C84B     		ldr	r3, .L59+4
 799 03e4 9846     		mov	r8, r3
 800 03e6 1B88     		ldrh	r3, [r3]
 801 03e8 2380     		strh	r3, [r4]
 802 03ea 4346     		mov	r3, r8
 803 03ec 9B78     		ldrb	r3, [r3, #2]
 804 03ee A370     		strb	r3, [r4, #2]
 275:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 1 finish\r\n");
 805              		.loc 1 275 0
 806 03f0 201C     		mov	r0, r4
 807 03f2 FFF7FEFF 		bl	strlen
 808              	.LVL92:
ARM GAS  /tmp/ccwr8m4c.s 			page 32


 809 03f6 C44E     		ldr	r6, .L59+8
 810 03f8 82B2     		uxth	r2, r0
 811 03fa FA25     		mov	r5, #250
 812 03fc 6D00     		lsl	r5, r5, #1
 813 03fe 301C     		mov	r0, r6
 814 0400 211C     		mov	r1, r4
 815 0402 2B1C     		mov	r3, r5
 816 0404 FFF7FEFF 		bl	HAL_UART_Transmit
 817              	.LVL93:
 276:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 818              		.loc 1 276 0
 819 0408 C049     		ldr	r1, .L59+12
 820 040a 231C     		mov	r3, r4
 821 040c 0A1C     		mov	r2, r1
 822 040e 83CA     		ldmia	r2!, {r0, r1, r7}
 823 0410 83C3     		stmia	r3!, {r0, r1, r7}
 824 0412 83CA     		ldmia	r2!, {r0, r1, r7}
 825 0414 83C3     		stmia	r3!, {r0, r1, r7}
 826 0416 03CA     		ldmia	r2!, {r0, r1}
 827 0418 03C3     		stmia	r3!, {r0, r1}
 277:Src/main.c    **** 
 828              		.loc 1 277 0
 829 041a 201C     		mov	r0, r4
 830 041c FFF7FEFF 		bl	strlen
 831              	.LVL94:
 832 0420 82B2     		uxth	r2, r0
 833 0422 301C     		mov	r0, r6
 834 0424 211C     		mov	r1, r4
 835 0426 2B1C     		mov	r3, r5
 836 0428 FFF7FEFF 		bl	HAL_UART_Transmit
 837              	.LVL95:
 283:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 838              		.loc 1 283 0
 839 042c 4346     		mov	r3, r8
 840 042e 1B88     		ldrh	r3, [r3]
 841 0430 2380     		strh	r3, [r4]
 842 0432 4346     		mov	r3, r8
 843 0434 9B78     		ldrb	r3, [r3, #2]
 844 0436 A370     		strb	r3, [r4, #2]
 284:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 845              		.loc 1 284 0
 846 0438 201C     		mov	r0, r4
 847 043a FFF7FEFF 		bl	strlen
 848              	.LVL96:
 849 043e 82B2     		uxth	r2, r0
 850 0440 301C     		mov	r0, r6
 851 0442 211C     		mov	r1, r4
 852 0444 2B1C     		mov	r3, r5
 853 0446 FFF7FEFF 		bl	HAL_UART_Transmit
 854              	.LVL97:
 285:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 855              		.loc 1 285 0
 856 044a 201C     		mov	r0, r4
 857 044c FFF7FEFF 		bl	strlen
 858              	.LVL98:
 859 0450 82B2     		uxth	r2, r0
 860 0452 301C     		mov	r0, r6
ARM GAS  /tmp/ccwr8m4c.s 			page 33


 861 0454 211C     		mov	r1, r4
 862 0456 2B1C     		mov	r3, r5
 863 0458 FFF7FEFF 		bl	HAL_UART_Transmit
 864              	.LVL99:
 286:Src/main.c    **** 
 865              		.loc 1 286 0
 866 045c 201C     		mov	r0, r4
 867 045e FFF7FEFF 		bl	strlen
 868              	.LVL100:
 869 0462 82B2     		uxth	r2, r0
 870 0464 301C     		mov	r0, r6
 871 0466 211C     		mov	r1, r4
 872 0468 2B1C     		mov	r3, r5
 873 046a FFF7FEFF 		bl	HAL_UART_Transmit
 874              	.LVL101:
 288:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 875              		.loc 1 288 0
 876 046e A849     		ldr	r1, .L59+16
 877 0470 231C     		mov	r3, r4
 878 0472 0A1C     		mov	r2, r1
 879 0474 83CA     		ldmia	r2!, {r0, r1, r7}
 880 0476 83C3     		stmia	r3!, {r0, r1, r7}
 881 0478 83CA     		ldmia	r2!, {r0, r1, r7}
 882 047a 83C3     		stmia	r3!, {r0, r1, r7}
 883 047c 03CA     		ldmia	r2!, {r0, r1}
 884 047e 03C3     		stmia	r3!, {r0, r1}
 289:Src/main.c    **** 
 885              		.loc 1 289 0
 886 0480 201C     		mov	r0, r4
 887 0482 FFF7FEFF 		bl	strlen
 888              	.LVL102:
 889 0486 82B2     		uxth	r2, r0
 890 0488 301C     		mov	r0, r6
 891 048a 211C     		mov	r1, r4
 892 048c 2B1C     		mov	r3, r5
 893 048e FFF7FEFF 		bl	HAL_UART_Transmit
 894              	.LVL103:
 295:Src/main.c    **** 	message[0] = b0;                                                                                  
 895              		.loc 1 295 0
 896 0492 DE3D     		sub	r5, r5, #222
 897 0494 FF3D     		sub	r5, r5, #255
 898 0496 0AAB     		add	r3, sp, #40
 899 0498 9C46     		mov	ip, r3
 900 049a 6544     		add	r5, r5, ip
 901 049c 0095     		str	r5, [sp]
 902 049e 0126     		mov	r6, #1
 903 04a0 0196     		str	r6, [sp, #4]
 904 04a2 6427     		mov	r7, #100
 905 04a4 0297     		str	r7, [sp, #8]
 906 04a6 9B48     		ldr	r0, .L59+20
 907 04a8 A221     		mov	r1, #162
 908 04aa 4022     		mov	r2, #64
 909 04ac 0223     		mov	r3, #2
 910 04ae FFF7FEFF 		bl	HAL_I2C_Mem_Read
 911              	.LVL104:
 296:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 912              		.loc 1 296 0
ARM GAS  /tmp/ccwr8m4c.s 			page 34


 913 04b2 2B78     		ldrb	r3, [r5]
 914 04b4 2370     		strb	r3, [r4]
 915              	.LVL105:
 299:Src/main.c    **** 	message[1] = b0;                                                                                  
 916              		.loc 1 299 0
 917 04b6 0095     		str	r5, [sp]
 918 04b8 0196     		str	r6, [sp, #4]
 919 04ba 0297     		str	r7, [sp, #8]
 920 04bc 9548     		ldr	r0, .L59+20
 921 04be A221     		mov	r1, #162
 922 04c0 4122     		mov	r2, #65
 923 04c2 0223     		mov	r3, #2
 924 04c4 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 925              	.LVL106:
 300:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 926              		.loc 1 300 0
 927 04c8 2B78     		ldrb	r3, [r5]
 928 04ca 6370     		strb	r3, [r4, #1]
 929              	.LVL107:
 303:Src/main.c    **** 	message[2] = b0;                                                                                  
 930              		.loc 1 303 0
 931 04cc 0095     		str	r5, [sp]
 932 04ce 0196     		str	r6, [sp, #4]
 933 04d0 0297     		str	r7, [sp, #8]
 934 04d2 9048     		ldr	r0, .L59+20
 935 04d4 A221     		mov	r1, #162
 936 04d6 4222     		mov	r2, #66
 937 04d8 0223     		mov	r3, #2
 938 04da FFF7FEFF 		bl	HAL_I2C_Mem_Read
 939              	.LVL108:
 304:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 940              		.loc 1 304 0
 941 04de 2B78     		ldrb	r3, [r5]
 942 04e0 A370     		strb	r3, [r4, #2]
 943              	.LVL109:
 307:Src/main.c    **** 	message[3] = b0;                                                                                  
 944              		.loc 1 307 0
 945 04e2 0095     		str	r5, [sp]
 946 04e4 0196     		str	r6, [sp, #4]
 947 04e6 0297     		str	r7, [sp, #8]
 948 04e8 8A48     		ldr	r0, .L59+20
 949 04ea A221     		mov	r1, #162
 950 04ec 4322     		mov	r2, #67
 951 04ee 0223     		mov	r3, #2
 952 04f0 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 953              	.LVL110:
 308:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 954              		.loc 1 308 0
 955 04f4 2B78     		ldrb	r3, [r5]
 956 04f6 E370     		strb	r3, [r4, #3]
 957              	.LVL111:
 311:Src/main.c    **** 	{                                                                                                 
 958              		.loc 1 311 0
 959 04f8 2378     		ldrb	r3, [r4]
 960 04fa 002B     		cmp	r3, #0
 961 04fc 03D1     		bne	.L14
 311:Src/main.c    **** 	{                                                                                                 
ARM GAS  /tmp/ccwr8m4c.s 			page 35


 962              		.loc 1 311 0 is_stmt 0 discriminator 1
 963 04fe 804B     		ldr	r3, .L59
 964 0500 5B78     		ldrb	r3, [r3, #1]
 965 0502 002B     		cmp	r3, #0
 966 0504 13D0     		beq	.L48
 967              	.L14:
 317:Src/main.c    **** 		message[5] = '\n';                                                                               
 968              		.loc 1 317 0 is_stmt 1
 969 0506 7E4C     		ldr	r4, .L59
 970 0508 0D23     		mov	r3, #13
 971 050a 2371     		strb	r3, [r4, #4]
 318:Src/main.c    **** 		message[6] = 0;                                                                                  
 972              		.loc 1 318 0
 973 050c 033B     		sub	r3, r3, #3
 974 050e 6371     		strb	r3, [r4, #5]
 319:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 975              		.loc 1 319 0
 976 0510 0023     		mov	r3, #0
 977 0512 A371     		strb	r3, [r4, #6]
 320:Src/main.c    **** 	}                                                                                                 
 978              		.loc 1 320 0
 979 0514 201C     		mov	r0, r4
 980 0516 FFF7FEFF 		bl	strlen
 981              	.LVL112:
 982 051a 82B2     		uxth	r2, r0
 983 051c 7A48     		ldr	r0, .L59+8
 984 051e 211C     		mov	r1, r4
 985 0520 FA23     		mov	r3, #250
 986 0522 5B00     		lsl	r3, r3, #1
 987 0524 FFF7FEFF 		bl	HAL_UART_Transmit
 988              	.LVL113:
 291:Src/main.c    **** 
 989              		.loc 1 291 0
 990 0528 0023     		mov	r3, #0
 991 052a 9A46     		mov	r10, r3
 992 052c 01E0     		b	.L15
 993              	.L48:
 313:Src/main.c    **** 	}                                                                                                 
 994              		.loc 1 313 0
 995 052e 0123     		mov	r3, #1
 996 0530 9A46     		mov	r10, r3
 997              	.L15:
 998              	.LVL114:
 323:Src/main.c    **** 	message[0] = b0;                                                                                  
 999              		.loc 1 323 0
 1000 0532 1724     		mov	r4, #23
 1001 0534 0AAB     		add	r3, sp, #40
 1002 0536 9C46     		mov	ip, r3
 1003 0538 6444     		add	r4, r4, ip
 1004 053a 0094     		str	r4, [sp]
 1005 053c 0126     		mov	r6, #1
 1006 053e 0196     		str	r6, [sp, #4]
 1007 0540 6427     		mov	r7, #100
 1008 0542 0297     		str	r7, [sp, #8]
 1009 0544 7348     		ldr	r0, .L59+20
 1010 0546 A221     		mov	r1, #162
 1011 0548 4422     		mov	r2, #68
ARM GAS  /tmp/ccwr8m4c.s 			page 36


 1012 054a 0223     		mov	r3, #2
 1013 054c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1014              	.LVL115:
 324:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 1015              		.loc 1 324 0
 1016 0550 6B4D     		ldr	r5, .L59
 1017 0552 2378     		ldrb	r3, [r4]
 1018 0554 2B70     		strb	r3, [r5]
 1019              	.LVL116:
 327:Src/main.c    **** 	message[1] = b0;                                                                                  
 1020              		.loc 1 327 0
 1021 0556 0094     		str	r4, [sp]
 1022 0558 0196     		str	r6, [sp, #4]
 1023 055a 0297     		str	r7, [sp, #8]
 1024 055c 6D48     		ldr	r0, .L59+20
 1025 055e A221     		mov	r1, #162
 1026 0560 4522     		mov	r2, #69
 1027 0562 0223     		mov	r3, #2
 1028 0564 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1029              	.LVL117:
 328:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 1030              		.loc 1 328 0
 1031 0568 2378     		ldrb	r3, [r4]
 1032 056a 6B70     		strb	r3, [r5, #1]
 1033              	.LVL118:
 331:Src/main.c    **** 	message[2] = b0;                                                                                  
 1034              		.loc 1 331 0
 1035 056c 0094     		str	r4, [sp]
 1036 056e 0196     		str	r6, [sp, #4]
 1037 0570 0297     		str	r7, [sp, #8]
 1038 0572 6848     		ldr	r0, .L59+20
 1039 0574 A221     		mov	r1, #162
 1040 0576 4622     		mov	r2, #70
 1041 0578 0223     		mov	r3, #2
 1042 057a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1043              	.LVL119:
 332:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 1044              		.loc 1 332 0
 1045 057e 2378     		ldrb	r3, [r4]
 1046 0580 AB70     		strb	r3, [r5, #2]
 1047              	.LVL120:
 335:Src/main.c    **** 	message[3] = b0;                                                                                  
 1048              		.loc 1 335 0
 1049 0582 0094     		str	r4, [sp]
 1050 0584 0196     		str	r6, [sp, #4]
 1051 0586 0297     		str	r7, [sp, #8]
 1052 0588 6248     		ldr	r0, .L59+20
 1053 058a A221     		mov	r1, #162
 1054 058c 4722     		mov	r2, #71
 1055 058e 0223     		mov	r3, #2
 1056 0590 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1057              	.LVL121:
 336:Src/main.c    **** 	eeprom_debug_address++;                                                                           
 1058              		.loc 1 336 0
 1059 0594 2378     		ldrb	r3, [r4]
 1060 0596 EB70     		strb	r3, [r5, #3]
 1061              	.LVL122:
ARM GAS  /tmp/ccwr8m4c.s 			page 37


 339:Src/main.c    **** 	{                                                                                                 
 1062              		.loc 1 339 0
 1063 0598 2B78     		ldrb	r3, [r5]
 1064 059a 002B     		cmp	r3, #0
 1065 059c 03D1     		bne	.L16
 339:Src/main.c    **** 	{                                                                                                 
 1066              		.loc 1 339 0 is_stmt 0 discriminator 1
 1067 059e 584B     		ldr	r3, .L59
 1068 05a0 5B78     		ldrb	r3, [r3, #1]
 1069 05a2 002B     		cmp	r3, #0
 1070 05a4 11D0     		beq	.L49
 1071              	.L16:
 345:Src/main.c    **** 		message[5] = '\n';                                                                               
 1072              		.loc 1 345 0 is_stmt 1
 1073 05a6 564C     		ldr	r4, .L59
 1074 05a8 0D23     		mov	r3, #13
 1075 05aa 2371     		strb	r3, [r4, #4]
 346:Src/main.c    **** 		message[6] = 0;                                                                                  
 1076              		.loc 1 346 0
 1077 05ac 033B     		sub	r3, r3, #3
 1078 05ae 6371     		strb	r3, [r4, #5]
 347:Src/main.c    **** 		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);              
 1079              		.loc 1 347 0
 1080 05b0 0023     		mov	r3, #0
 1081 05b2 A371     		strb	r3, [r4, #6]
 348:Src/main.c    **** 	}                                                                                                 
 1082              		.loc 1 348 0
 1083 05b4 201C     		mov	r0, r4
 1084 05b6 FFF7FEFF 		bl	strlen
 1085              	.LVL123:
 1086 05ba 82B2     		uxth	r2, r0
 1087 05bc 5248     		ldr	r0, .L59+8
 1088 05be 211C     		mov	r1, r4
 1089 05c0 FA23     		mov	r3, #250
 1090 05c2 5B00     		lsl	r3, r3, #1
 1091 05c4 FFF7FEFF 		bl	HAL_UART_Transmit
 1092              	.LVL124:
 1093 05c8 01E0     		b	.L17
 1094              	.L49:
 341:Src/main.c    **** 	}                                                                                                 
 1095              		.loc 1 341 0
 1096 05ca 0123     		mov	r3, #1
 1097 05cc 9A46     		mov	r10, r3
 1098              	.LVL125:
 1099              	.L17:
 382:Src/main.c    **** 		}
 1100              		.loc 1 382 0
 1101 05ce 4824     		mov	r4, #72
 1102 05d0 6EE0     		b	.L18
 1103              	.LVL126:
 1104              	.L21:
 355:Src/main.c    **** 		message[0] = b0;                                                                                 
 1105              		.loc 1 355 0
 1106 05d2 1725     		mov	r5, #23
 1107 05d4 0AAB     		add	r3, sp, #40
 1108              	.LVL127:
 1109 05d6 9C46     		mov	ip, r3
ARM GAS  /tmp/ccwr8m4c.s 			page 38


 1110 05d8 6544     		add	r5, r5, ip
 1111 05da 0095     		str	r5, [sp]
 1112 05dc 0123     		mov	r3, #1
 1113 05de 9946     		mov	r9, r3
 1114 05e0 0193     		str	r3, [sp, #4]
 1115 05e2 6426     		mov	r6, #100
 1116 05e4 0296     		str	r6, [sp, #8]
 1117 05e6 4B48     		ldr	r0, .L59+20
 1118 05e8 A221     		mov	r1, #162
 1119 05ea 221C     		mov	r2, r4
 1120 05ec 0133     		add	r3, r3, #1
 1121 05ee FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1122              	.LVL128:
 356:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 1123              		.loc 1 356 0
 1124 05f2 434F     		ldr	r7, .L59
 1125 05f4 2B78     		ldrb	r3, [r5]
 1126 05f6 3B70     		strb	r3, [r7]
 357:Src/main.c    **** 		HAL_Delay(3);
 1127              		.loc 1 357 0
 1128 05f8 0134     		add	r4, r4, #1
 1129              	.LVL129:
 1130 05fa A4B2     		uxth	r4, r4
 1131              	.LVL130:
 358:Src/main.c    **** 
 1132              		.loc 1 358 0
 1133 05fc 0320     		mov	r0, #3
 1134 05fe FFF7FEFF 		bl	HAL_Delay
 1135              	.LVL131:
 360:Src/main.c    **** 		message[1] = b0;                                                                                 
 1136              		.loc 1 360 0
 1137 0602 0095     		str	r5, [sp]
 1138 0604 4B46     		mov	r3, r9
 1139 0606 0193     		str	r3, [sp, #4]
 1140 0608 0296     		str	r6, [sp, #8]
 1141 060a 4248     		ldr	r0, .L59+20
 1142 060c A221     		mov	r1, #162
 1143 060e 221C     		mov	r2, r4
 1144 0610 0133     		add	r3, r3, #1
 1145 0612 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1146              	.LVL132:
 361:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 1147              		.loc 1 361 0
 1148 0616 2B78     		ldrb	r3, [r5]
 1149 0618 7B70     		strb	r3, [r7, #1]
 362:Src/main.c    **** 
 1150              		.loc 1 362 0
 1151 061a 0134     		add	r4, r4, #1
 1152              	.LVL133:
 1153 061c A4B2     		uxth	r4, r4
 1154              	.LVL134:
 364:Src/main.c    **** 
 1155              		.loc 1 364 0
 1156 061e 2E23     		mov	r3, #46
 1157 0620 BB70     		strb	r3, [r7, #2]
 366:Src/main.c    **** 		message[3] = b0;                                                                                 
 1158              		.loc 1 366 0
ARM GAS  /tmp/ccwr8m4c.s 			page 39


 1159 0622 0095     		str	r5, [sp]
 1160 0624 4B46     		mov	r3, r9
 1161 0626 0193     		str	r3, [sp, #4]
 1162 0628 0296     		str	r6, [sp, #8]
 1163 062a 3A48     		ldr	r0, .L59+20
 1164 062c A221     		mov	r1, #162
 1165 062e 221C     		mov	r2, r4
 1166 0630 0133     		add	r3, r3, #1
 1167 0632 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1168              	.LVL135:
 367:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 1169              		.loc 1 367 0
 1170 0636 2B78     		ldrb	r3, [r5]
 1171 0638 FB70     		strb	r3, [r7, #3]
 368:Src/main.c    **** 
 1172              		.loc 1 368 0
 1173 063a 0134     		add	r4, r4, #1
 1174              	.LVL136:
 1175 063c A4B2     		uxth	r4, r4
 1176              	.LVL137:
 370:Src/main.c    **** 
 1177              		.loc 1 370 0
 1178 063e 2023     		mov	r3, #32
 1179 0640 3B71     		strb	r3, [r7, #4]
 372:Src/main.c    **** 		message[5] = b0;                                                                                 
 1180              		.loc 1 372 0
 1181 0642 0095     		str	r5, [sp]
 1182 0644 4B46     		mov	r3, r9
 1183 0646 0193     		str	r3, [sp, #4]
 1184 0648 0296     		str	r6, [sp, #8]
 1185 064a 3248     		ldr	r0, .L59+20
 1186 064c A221     		mov	r1, #162
 1187 064e 221C     		mov	r2, r4
 1188 0650 0133     		add	r3, r3, #1
 1189 0652 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1190              	.LVL138:
 373:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 1191              		.loc 1 373 0
 1192 0656 2B78     		ldrb	r3, [r5]
 1193 0658 7B71     		strb	r3, [r7, #5]
 374:Src/main.c    **** 		
 1194              		.loc 1 374 0
 1195 065a 0134     		add	r4, r4, #1
 1196              	.LVL139:
 1197 065c A4B2     		uxth	r4, r4
 1198              	.LVL140:
 376:Src/main.c    **** 		message[6] = b0;                                                                                 
 1199              		.loc 1 376 0
 1200 065e 0095     		str	r5, [sp]
 1201 0660 4B46     		mov	r3, r9
 1202 0662 0193     		str	r3, [sp, #4]
 1203 0664 0296     		str	r6, [sp, #8]
 1204 0666 2B48     		ldr	r0, .L59+20
 1205 0668 A221     		mov	r1, #162
 1206 066a 221C     		mov	r2, r4
 1207 066c 0133     		add	r3, r3, #1
 1208 066e FFF7FEFF 		bl	HAL_I2C_Mem_Read
ARM GAS  /tmp/ccwr8m4c.s 			page 40


 1209              	.LVL141:
 377:Src/main.c    **** 		eeprom_debug_address++;                                                                          
 1210              		.loc 1 377 0
 1211 0672 2B78     		ldrb	r3, [r5]
 1212 0674 BB71     		strb	r3, [r7, #6]
 378:Src/main.c    **** 
 1213              		.loc 1 378 0
 1214 0676 0134     		add	r4, r4, #1
 1215              	.LVL142:
 1216 0678 A4B2     		uxth	r4, r4
 1217              	.LVL143:
 380:Src/main.c    **** 		{
 1218              		.loc 1 380 0
 1219 067a 3B78     		ldrb	r3, [r7]
 1220 067c 002B     		cmp	r3, #0
 1221 067e 03D1     		bne	.L19
 380:Src/main.c    **** 		{
 1222              		.loc 1 380 0 is_stmt 0 discriminator 1
 1223 0680 1F4B     		ldr	r3, .L59
 1224 0682 5B78     		ldrb	r3, [r3, #1]
 1225 0684 002B     		cmp	r3, #0
 1226 0686 11D0     		beq	.L50
 1227              	.L19:
 386:Src/main.c    **** 			message[8] = '\n';                                                                              
 1228              		.loc 1 386 0 is_stmt 1
 1229 0688 1D4D     		ldr	r5, .L59
 1230 068a 0D23     		mov	r3, #13
 1231 068c EB71     		strb	r3, [r5, #7]
 387:Src/main.c    **** 			message[9] = 0;                                                                                 
 1232              		.loc 1 387 0
 1233 068e 033B     		sub	r3, r3, #3
 1234 0690 2B72     		strb	r3, [r5, #8]
 388:Src/main.c    **** 			HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);             
 1235              		.loc 1 388 0
 1236 0692 0023     		mov	r3, #0
 1237 0694 6B72     		strb	r3, [r5, #9]
 389:Src/main.c    **** 		}
 1238              		.loc 1 389 0
 1239 0696 281C     		mov	r0, r5
 1240 0698 FFF7FEFF 		bl	strlen
 1241              	.LVL144:
 1242 069c 82B2     		uxth	r2, r0
 1243 069e 1A48     		ldr	r0, .L59+8
 1244 06a0 291C     		mov	r1, r5
 1245 06a2 FA23     		mov	r3, #250
 1246 06a4 5B00     		lsl	r3, r3, #1
 1247 06a6 FFF7FEFF 		bl	HAL_UART_Transmit
 1248              	.LVL145:
 1249 06aa 01E0     		b	.L18
 1250              	.L50:
 382:Src/main.c    **** 		}
 1251              		.loc 1 382 0
 1252 06ac 0123     		mov	r3, #1
 1253 06ae 9A46     		mov	r10, r3
 1254              	.LVL146:
 1255              	.L18:
 352:Src/main.c    **** 	{
ARM GAS  /tmp/ccwr8m4c.s 			page 41


 1256              		.loc 1 352 0
 1257 06b0 5346     		mov	r3, r10
 1258 06b2 002B     		cmp	r3, #0
 1259 06b4 8DD0     		beq	.L21
 393:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 1260              		.loc 1 393 0
 1261 06b6 124E     		ldr	r6, .L59
 1262 06b8 124B     		ldr	r3, .L59+4
 1263 06ba 1A88     		ldrh	r2, [r3]
 1264 06bc 3280     		strh	r2, [r6]
 1265 06be 9B78     		ldrb	r3, [r3, #2]
 1266 06c0 B370     		strb	r3, [r6, #2]
 394:Src/main.c    **** 	sprintf(message, "**********\r\nlog bank 2 finish\r\n");
 1267              		.loc 1 394 0
 1268 06c2 301C     		mov	r0, r6
 1269 06c4 FFF7FEFF 		bl	strlen
 1270              	.LVL147:
 1271 06c8 0F4D     		ldr	r5, .L59+8
 1272 06ca 82B2     		uxth	r2, r0
 1273 06cc FA24     		mov	r4, #250
 1274              	.LVL148:
 1275 06ce 6400     		lsl	r4, r4, #1
 1276 06d0 281C     		mov	r0, r5
 1277 06d2 311C     		mov	r1, r6
 1278 06d4 231C     		mov	r3, r4
 1279 06d6 FFF7FEFF 		bl	HAL_UART_Transmit
 1280              	.LVL149:
 395:Src/main.c    **** 	HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen((const char *)message), 500);
 1281              		.loc 1 395 0
 1282 06da 0F49     		ldr	r1, .L59+24
 1283 06dc 331C     		mov	r3, r6
 1284 06de 0A1C     		mov	r2, r1
 1285 06e0 83CA     		ldmia	r2!, {r0, r1, r7}
 1286 06e2 83C3     		stmia	r3!, {r0, r1, r7}
 1287 06e4 83CA     		ldmia	r2!, {r0, r1, r7}
 1288 06e6 83C3     		stmia	r3!, {r0, r1, r7}
 1289 06e8 03CA     		ldmia	r2!, {r0, r1}
 1290 06ea 03C3     		stmia	r3!, {r0, r1}
 396:Src/main.c    **** 
 1291              		.loc 1 396 0
 1292 06ec 301C     		mov	r0, r6
 1293 06ee FFF7FEFF 		bl	strlen
 1294              	.LVL150:
 1295 06f2 82B2     		uxth	r2, r0
 1296 06f4 281C     		mov	r0, r5
 1297 06f6 311C     		mov	r1, r6
 1298 06f8 231C     		mov	r3, r4
 1299 06fa FFF7FEFF 		bl	HAL_UART_Transmit
 1300              	.LVL151:
 1301              	.L22:
 403:Src/main.c    **** 
 1302              		.loc 1 403 0 discriminator 1
 1303 06fe FEE7     		b	.L22
 1304              	.L60:
 1305              		.align	2
 1306              	.L59:
 1307 0700 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccwr8m4c.s 			page 42


 1308 0704 28000000 		.word	.LC13
 1309 0708 00000000 		.word	huart1
 1310 070c 4C000000 		.word	.LC19
 1311 0710 6C000000 		.word	.LC21
 1312 0714 00000000 		.word	hi2c2
 1313 0718 8C000000 		.word	.LC23
 1314              	.LVL152:
 1315              	.L44:
 1316              	.LBE2:
 1317 071c 0023     		mov	r3, #0
 1318 071e 9946     		mov	r9, r3
 1319 0720 0C93     		str	r3, [sp, #48]
 1320 0722 4033     		add	r3, r3, #64
 1321 0724 9B46     		mov	fp, r3
 1322 0726 6033     		add	r3, r3, #96
 1323 0728 0D93     		str	r3, [sp, #52]
 1324 072a 0023     		mov	r3, #0
 1325 072c 0993     		str	r3, [sp, #36]
 1326 072e BE4B     		ldr	r3, .L61
 1327 0730 0893     		str	r3, [sp, #32]
 1328              	.LVL153:
 1329              	.L23:
 419:Src/main.c    **** 	    	{
 1330              		.loc 1 419 0
 1331 0732 FFF7FEFF 		bl	one_second_timer_get_flag
 1332              	.LVL154:
 1333 0736 0028     		cmp	r0, #0
 1334 0738 FBD0     		beq	.L23
 1335              	.LBB3:
 421:Src/main.c    **** 	    		odd_even = (odd_even+1)%2;
 1336              		.loc 1 421 0
 1337 073a FFF7FEFF 		bl	one_second_timer_reset_flag
 1338              	.LVL155:
 422:Src/main.c    ****   	    
 1339              		.loc 1 422 0
 1340 073e 099B     		ldr	r3, [sp, #36]
 1341 0740 0133     		add	r3, r3, #1
 1342 0742 DA0F     		lsr	r2, r3, #31
 1343 0744 9B18     		add	r3, r3, r2
 1344 0746 0121     		mov	r1, #1
 1345 0748 0B40     		and	r3, r1
 1346 074a 9B1A     		sub	r3, r3, r2
 1347 074c 0993     		str	r3, [sp, #36]
 1348              	.LVL156:
 424:Src/main.c    **** 	    	    double P = pressure_sensor_get_pressure();
 1349              		.loc 1 424 0
 1350 074e FFF7FEFF 		bl	pressure_sensor_measure_pressure_temperature
 1351              	.LVL157:
 425:Src/main.c    **** 	    	    double actual_temperature = pressure_sensor_get_temperature();
 1352              		.loc 1 425 0
 1353 0752 FFF7FEFF 		bl	pressure_sensor_get_pressure
 1354              	.LVL158:
 1355 0756 041C     		mov	r4, r0
 1356 0758 0D1C     		mov	r5, r1
 1357              	.LVL159:
 426:Src/main.c    ****                                                                                                    
 1358              		.loc 1 426 0
ARM GAS  /tmp/ccwr8m4c.s 			page 43


 1359 075a FFF7FEFF 		bl	pressure_sensor_get_temperature
 1360              	.LVL160:
 1361 075e 0A90     		str	r0, [sp, #40]
 1362 0760 0B91     		str	r1, [sp, #44]
 1363              	.LVL161:
 428:Src/main.c    **** 	    	    double accu_voltage = voltmeter_get_voltage();
 1364              		.loc 1 428 0
 1365 0762 FFF7FEFF 		bl	voltmeter_measure_voltage
 1366              	.LVL162:
 429:Src/main.c    **** 	    	    double accu_percentage = voltmeter_get_percentage();
 1367              		.loc 1 429 0
 1368 0766 FFF7FEFF 		bl	voltmeter_get_voltage
 1369              	.LVL163:
 430:Src/main.c    **** 	                                                                                                  
 1370              		.loc 1 430 0
 1371 076a FFF7FEFF 		bl	voltmeter_get_percentage
 1372              	.LVL164:
 1373 076e 061C     		mov	r6, r0
 1374 0770 0F1C     		mov	r7, r1
 1375              	.LVL165:
 432:Src/main.c    **** 	    		// time-date calculation ----------------------------------------
 1376              		.loc 1 432 0
 1377 0772 FFF7FEFF 		bl	rtc_ds3231_action
 1378              	.LVL166:
 435:Src/main.c    **** 	    		uint8_t date, month, year;
 1379              		.loc 1 435 0
 1380 0776 1320     		mov	r0, #19
 1381 0778 0AAB     		add	r3, sp, #40
 1382              	.LVL167:
 1383 077a 9C46     		mov	ip, r3
 1384 077c 6044     		add	r0, r0, ip
 1385 077e 1221     		mov	r1, #18
 1386 0780 6144     		add	r1, r1, ip
 1387 0782 1122     		mov	r2, #17
 1388 0784 6244     		add	r2, r2, ip
 1389 0786 FFF7FEFF 		bl	rtc_ds3231_get_time
 1390              	.LVL168:
 437:Src/main.c    **** 	    		//--------------------------------------------------------------
 1391              		.loc 1 437 0
 1392 078a 0FA8     		add	r0, sp, #60
 1393 078c 1521     		mov	r1, #21
 1394 078e 0AAB     		add	r3, sp, #40
 1395              	.LVL169:
 1396 0790 9C46     		mov	ip, r3
 1397 0792 6144     		add	r1, r1, ip
 1398 0794 1622     		mov	r2, #22
 1399 0796 6244     		add	r2, r2, ip
 1400 0798 FFF7FEFF 		bl	rtc_ds3231_get_date
 1401              	.LVL170:
 446:Src/main.c    **** 	    			surface_pressure = P;
 1402              		.loc 1 446 0
 1403 079c 0898     		ldr	r0, [sp, #32]
 1404 079e FFF7FEFF 		bl	__aeabi_ui2d
 1405              	.LVL171:
 1406 07a2 221C     		mov	r2, r4
 1407 07a4 2B1C     		mov	r3, r5
 1408 07a6 FFF7FEFF 		bl	__aeabi_dcmpge
ARM GAS  /tmp/ccwr8m4c.s 			page 44


 1409              	.LVL172:
 1410 07aa 0028     		cmp	r0, #0
 1411 07ac 04D0     		beq	.L24
 447:Src/main.c    ****                                                                                                    
 1412              		.loc 1 447 0
 1413 07ae 201C     		mov	r0, r4
 1414 07b0 291C     		mov	r1, r5
 1415 07b2 FFF7FEFF 		bl	__aeabi_d2uiz
 1416              	.LVL173:
 1417 07b6 0890     		str	r0, [sp, #32]
 1418              	.LVL174:
 1419              	.L24:
 451:Src/main.c    **** 	    			we_are_under_water = 1;
 1420              		.loc 1 451 0
 1421 07b8 089B     		ldr	r3, [sp, #32]
 1422 07ba 9C4A     		ldr	r2, .L61+4
 1423 07bc 9446     		mov	ip, r2
 1424 07be 6344     		add	r3, r3, ip
 1425 07c0 181C     		mov	r0, r3
 1426 07c2 FFF7FEFF 		bl	__aeabi_ui2d
 1427              	.LVL175:
 1428 07c6 221C     		mov	r2, r4
 1429 07c8 2B1C     		mov	r3, r5
 1430 07ca FFF7FEFF 		bl	__aeabi_dcmplt
 1431              	.LVL176:
 1432 07ce 0028     		cmp	r0, #0
 1433 07d0 01D1     		bne	.L51
 449:Src/main.c    ****                                                                                                    
 1434              		.loc 1 449 0
 1435 07d2 0023     		mov	r3, #0
 1436 07d4 00E0     		b	.L26
 1437              	.L51:
 452:Src/main.c    ****                                                                                                    
 1438              		.loc 1 452 0
 1439 07d6 0123     		mov	r3, #1
 1440              	.L26:
 1441              	.LVL177:
 454:Src/main.c    **** 	    		{
 1442              		.loc 1 454 0
 1443 07d8 002B     		cmp	r3, #0
 1444 07da 63D1     		bne	.L27
 456:Src/main.c    ****                                                                                                    
 1445              		.loc 1 456 0
 1446 07dc FFF7FEFF 		bl	depth_switch_action
 1447              	.LVL178:
 459:Src/main.c    **** 	    			{
 1448              		.loc 1 459 0
 1449 07e0 4B46     		mov	r3, r9
 1450 07e2 002B     		cmp	r3, #0
 1451 07e4 A5D1     		bne	.L23
 1452              	.LVL179:
 1453              	.LBB4:
 462:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 1454              		.loc 1 462 0
 1455 07e6 0020     		mov	r0, #0
 1456 07e8 0021     		mov	r1, #0
 1457 07ea FFF7FEFF 		bl	ssd1306_SetCursor
ARM GAS  /tmp/ccwr8m4c.s 			page 45


 1458              	.LVL180:
 464:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 1459              		.loc 1 464 0
 1460 07ee 099B     		ldr	r3, [sp, #36]
 1461 07f0 002B     		cmp	r3, #0
 1462 07f2 13D0     		beq	.L29
 465:Src/main.c    **** 	    				else
 1463              		.loc 1 465 0
 1464 07f4 1323     		mov	r3, #19
 1465 07f6 0AAA     		add	r2, sp, #40
 1466              	.LVL181:
 1467 07f8 9446     		mov	ip, r2
 1468 07fa 6344     		add	r3, r3, ip
 1469 07fc 1A78     		ldrb	r2, [r3]
 1470              	.LVL182:
 1471 07fe 1223     		mov	r3, #18
 1472 0800 6344     		add	r3, r3, ip
 1473 0802 1B78     		ldrb	r3, [r3]
 1474 0804 0FA9     		add	r1, sp, #60
 1475 0806 0978     		ldrb	r1, [r1]
 1476 0808 0091     		str	r1, [sp]
 1477 080a 1521     		mov	r1, #21
 1478 080c 6144     		add	r1, r1, ip
 1479 080e 0978     		ldrb	r1, [r1]
 1480 0810 0191     		str	r1, [sp, #4]
 1481 0812 8748     		ldr	r0, .L61+8
 1482 0814 8749     		ldr	r1, .L61+12
 1483 0816 FFF7FEFF 		bl	sprintf
 1484              	.LVL183:
 1485 081a 12E0     		b	.L30
 1486              	.L29:
 467:Src/main.c    ****   	    	        	ssd1306_WriteString(timestamp, Font_11x18, White);
 1487              		.loc 1 467 0
 1488 081c 1323     		mov	r3, #19
 1489 081e 0AAA     		add	r2, sp, #40
 1490              	.LVL184:
 1491 0820 9446     		mov	ip, r2
 1492 0822 6344     		add	r3, r3, ip
 1493 0824 1A78     		ldrb	r2, [r3]
 1494              	.LVL185:
 1495 0826 1223     		mov	r3, #18
 1496 0828 6344     		add	r3, r3, ip
 1497 082a 1B78     		ldrb	r3, [r3]
 1498 082c 0FA9     		add	r1, sp, #60
 1499 082e 0978     		ldrb	r1, [r1]
 1500 0830 0091     		str	r1, [sp]
 1501 0832 1521     		mov	r1, #21
 1502 0834 6144     		add	r1, r1, ip
 1503 0836 0978     		ldrb	r1, [r1]
 1504 0838 0191     		str	r1, [sp, #4]
 1505 083a 7D48     		ldr	r0, .L61+8
 1506 083c 7E49     		ldr	r1, .L61+16
 1507 083e FFF7FEFF 		bl	sprintf
 1508              	.LVL186:
 1509              	.L30:
 468:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 1510              		.loc 1 468 0
ARM GAS  /tmp/ccwr8m4c.s 			page 46


 1511 0842 7E4D     		ldr	r5, .L61+20
 1512 0844 7A48     		ldr	r0, .L61+8
 1513 0846 2968     		ldr	r1, [r5]
 1514 0848 6A68     		ldr	r2, [r5, #4]
 1515 084a 0123     		mov	r3, #1
 1516 084c FFF7FEFF 		bl	ssd1306_WriteString
 1517              	.LVL187:
 469:Src/main.c    **** 	    	        	sprintf(message, "AVAR GL %02dm", (int)depth_switch_get_current_depth());
 1518              		.loc 1 469 0
 1519 0850 0020     		mov	r0, #0
 1520 0852 1621     		mov	r1, #22
 1521 0854 FFF7FEFF 		bl	ssd1306_SetCursor
 1522              	.LVL188:
 470:Src/main.c    ****         
 1523              		.loc 1 470 0
 1524 0858 FFF7FEFF 		bl	depth_switch_get_current_depth
 1525              	.LVL189:
 1526 085c 784C     		ldr	r4, .L61+24
 1527              	.LVL190:
 1528 085e FFF7FEFF 		bl	__aeabi_d2iz
 1529              	.LVL191:
 1530 0862 021C     		mov	r2, r0
 1531 0864 201C     		mov	r0, r4
 1532 0866 7749     		ldr	r1, .L61+28
 1533 0868 FFF7FEFF 		bl	sprintf
 1534              	.LVL192:
 472:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 1535              		.loc 1 472 0
 1536 086c 201C     		mov	r0, r4
 1537 086e 2968     		ldr	r1, [r5]
 1538 0870 6A68     		ldr	r2, [r5, #4]
 1539 0872 0123     		mov	r3, #1
 1540 0874 FFF7FEFF 		bl	ssd1306_WriteString
 1541              	.LVL193:
 473:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 1542              		.loc 1 473 0
 1543 0878 0020     		mov	r0, #0
 1544 087a 2C21     		mov	r1, #44
 1545 087c FFF7FEFF 		bl	ssd1306_SetCursor
 1546              	.LVL194:
 474:Src/main.c    **** 	    	        	//sprintf(message, "akkum");
 1547              		.loc 1 474 0
 1548 0880 301C     		mov	r0, r6
 1549 0882 391C     		mov	r1, r7
 1550 0884 FFF7FEFF 		bl	__aeabi_d2iz
 1551              	.LVL195:
 1552 0888 021C     		mov	r2, r0
 1553 088a 201C     		mov	r0, r4
 1554 088c 6E49     		ldr	r1, .L61+32
 1555 088e FFF7FEFF 		bl	sprintf
 1556              	.LVL196:
 476:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();                                                           
 1557              		.loc 1 476 0
 1558 0892 201C     		mov	r0, r4
 1559 0894 2968     		ldr	r1, [r5]
 1560 0896 6A68     		ldr	r2, [r5, #4]
 1561 0898 0123     		mov	r3, #1
ARM GAS  /tmp/ccwr8m4c.s 			page 47


 1562 089a FFF7FEFF 		bl	ssd1306_WriteString
 1563              	.LVL197:
 477:Src/main.c    **** 	    
 1564              		.loc 1 477 0
 1565 089e FFF7FEFF 		bl	ssd1306_UpdateScreen
 1566              	.LVL198:
 1567 08a2 46E7     		b	.L23
 1568              	.LVL199:
 1569              	.L27:
 1570              	.LBE4:
 1571              	.LBB5:
 492:Src/main.c    **** 	    			if(depth > 1.0)
 1572              		.loc 1 492 0
 1573 08a4 0898     		ldr	r0, [sp, #32]
 1574 08a6 FFF7FEFF 		bl	__aeabi_ui2d
 1575              	.LVL200:
 1576 08aa 021C     		mov	r2, r0
 1577 08ac 0B1C     		mov	r3, r1
 1578 08ae 201C     		mov	r0, r4
 1579 08b0 291C     		mov	r1, r5
 1580 08b2 FFF7FEFF 		bl	__aeabi_dsub
 1581              	.LVL201:
 1582 08b6 0022     		mov	r2, #0
 1583 08b8 644B     		ldr	r3, .L61+36
 1584 08ba FFF7FEFF 		bl	__aeabi_ddiv
 1585              	.LVL202:
 1586 08be 041C     		mov	r4, r0
 1587              	.LVL203:
 1588 08c0 0D1C     		mov	r5, r1
 1589              	.LVL204:
 493:Src/main.c    **** 	    				depth -= 1.0;
 1590              		.loc 1 493 0
 1591 08c2 0022     		mov	r2, #0
 1592 08c4 624B     		ldr	r3, .L61+40
 1593 08c6 FFF7FEFF 		bl	__aeabi_dcmpgt
 1594              	.LVL205:
 1595 08ca 0028     		cmp	r0, #0
 1596 08cc 08D0     		beq	.L56
 494:Src/main.c    **** 	    			else
 1597              		.loc 1 494 0
 1598 08ce 201C     		mov	r0, r4
 1599 08d0 291C     		mov	r1, r5
 1600 08d2 0022     		mov	r2, #0
 1601 08d4 5E4B     		ldr	r3, .L61+40
 1602 08d6 FFF7FEFF 		bl	__aeabi_dsub
 1603              	.LVL206:
 1604 08da 0690     		str	r0, [sp, #24]
 1605 08dc 0791     		str	r1, [sp, #28]
 1606              	.LVL207:
 1607 08de 03E0     		b	.L31
 1608              	.LVL208:
 1609              	.L56:
 496:Src/main.c    ****                                                                                                    
 1610              		.loc 1 496 0
 1611 08e0 0023     		mov	r3, #0
 1612 08e2 0024     		mov	r4, #0
 1613              	.LVL209:
ARM GAS  /tmp/ccwr8m4c.s 			page 48


 1614 08e4 0693     		str	r3, [sp, #24]
 1615 08e6 0794     		str	r4, [sp, #28]
 1616              	.L31:
 1617              	.LVL210:
 498:Src/main.c    **** 	    			{
 1618              		.loc 1 498 0
 1619 08e8 4B46     		mov	r3, r9
 1620 08ea 002B     		cmp	r3, #0
 1621 08ec 6DD1     		bne	.L33
 1622              	.LVL211:
 1623              	.LBB6:
 500:Src/main.c    **** 	    	        	//sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 1624              		.loc 1 500 0
 1625 08ee 0020     		mov	r0, #0
 1626 08f0 0021     		mov	r1, #0
 1627 08f2 FFF7FEFF 		bl	ssd1306_SetCursor
 1628              	.LVL212:
 502:Src/main.c    **** 	    	        		sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 1629              		.loc 1 502 0
 1630 08f6 099B     		ldr	r3, [sp, #36]
 1631 08f8 002B     		cmp	r3, #0
 1632 08fa 13D0     		beq	.L34
 503:Src/main.c    **** 	    				else
 1633              		.loc 1 503 0
 1634 08fc 1323     		mov	r3, #19
 1635 08fe 0AAA     		add	r2, sp, #40
 1636              	.LVL213:
 1637 0900 9446     		mov	ip, r2
 1638 0902 6344     		add	r3, r3, ip
 1639 0904 1A78     		ldrb	r2, [r3]
 1640              	.LVL214:
 1641 0906 1223     		mov	r3, #18
 1642 0908 6344     		add	r3, r3, ip
 1643 090a 1B78     		ldrb	r3, [r3]
 1644 090c 0FA9     		add	r1, sp, #60
 1645 090e 0978     		ldrb	r1, [r1]
 1646 0910 0091     		str	r1, [sp]
 1647 0912 1521     		mov	r1, #21
 1648 0914 6144     		add	r1, r1, ip
 1649 0916 0978     		ldrb	r1, [r1]
 1650 0918 0191     		str	r1, [sp, #4]
 1651 091a 4548     		ldr	r0, .L61+8
 1652 091c 4549     		ldr	r1, .L61+12
 1653 091e FFF7FEFF 		bl	sprintf
 1654              	.LVL215:
 1655 0922 12E0     		b	.L35
 1656              	.L34:
 505:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 1657              		.loc 1 505 0
 1658 0924 1323     		mov	r3, #19
 1659 0926 0AAA     		add	r2, sp, #40
 1660              	.LVL216:
 1661 0928 9446     		mov	ip, r2
 1662 092a 6344     		add	r3, r3, ip
 1663 092c 1A78     		ldrb	r2, [r3]
 1664              	.LVL217:
 1665 092e 1223     		mov	r3, #18
ARM GAS  /tmp/ccwr8m4c.s 			page 49


 1666 0930 6344     		add	r3, r3, ip
 1667 0932 1B78     		ldrb	r3, [r3]
 1668 0934 0FA9     		add	r1, sp, #60
 1669 0936 0978     		ldrb	r1, [r1]
 1670 0938 0091     		str	r1, [sp]
 1671 093a 1521     		mov	r1, #21
 1672 093c 6144     		add	r1, r1, ip
 1673 093e 0978     		ldrb	r1, [r1]
 1674 0940 0191     		str	r1, [sp, #4]
 1675 0942 3B48     		ldr	r0, .L61+8
 1676 0944 3C49     		ldr	r1, .L61+16
 1677 0946 FFF7FEFF 		bl	sprintf
 1678              	.LVL218:
 1679              	.L35:
 507:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 1680              		.loc 1 507 0
 1681 094a 3C4D     		ldr	r5, .L61+20
 1682 094c 3848     		ldr	r0, .L61+8
 1683 094e 2968     		ldr	r1, [r5]
 1684 0950 6A68     		ldr	r2, [r5, #4]
 1685 0952 0123     		mov	r3, #1
 1686 0954 FFF7FEFF 		bl	ssd1306_WriteString
 1687              	.LVL219:
 508:Src/main.c    **** 	    	        	//sprintf(message, "glubina %02dm", (int)depth);
 1688              		.loc 1 508 0
 1689 0958 0020     		mov	r0, #0
 1690 095a 1621     		mov	r1, #22
 1691 095c FFF7FEFF 		bl	ssd1306_SetCursor
 1692              	.LVL220:
 510:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 1693              		.loc 1 510 0
 1694 0960 0698     		ldr	r0, [sp, #24]
 1695 0962 0799     		ldr	r1, [sp, #28]
 1696 0964 FFF7FEFF 		bl	__aeabi_d2iz
 1697              	.LVL221:
 1698 0968 0590     		str	r0, [sp, #20]
 1699 096a FFF7FEFF 		bl	__aeabi_i2d
 1700              	.LVL222:
 1701 096e 021C     		mov	r2, r0
 1702 0970 0B1C     		mov	r3, r1
 1703 0972 0698     		ldr	r0, [sp, #24]
 1704 0974 0799     		ldr	r1, [sp, #28]
 1705 0976 FFF7FEFF 		bl	__aeabi_dsub
 1706              	.LVL223:
 1707 097a 0022     		mov	r2, #0
 1708 097c 354B     		ldr	r3, .L61+44
 1709 097e FFF7FEFF 		bl	__aeabi_dmul
 1710              	.LVL224:
 1711 0982 2F4C     		ldr	r4, .L61+24
 1712 0984 FFF7FEFF 		bl	__aeabi_d2iz
 1713              	.LVL225:
 1714 0988 031C     		mov	r3, r0
 1715 098a 201C     		mov	r0, r4
 1716 098c 3249     		ldr	r1, .L61+48
 1717 098e 059A     		ldr	r2, [sp, #20]
 1718 0990 FFF7FEFF 		bl	sprintf
 1719              	.LVL226:
ARM GAS  /tmp/ccwr8m4c.s 			page 50


 511:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,44);
 1720              		.loc 1 511 0
 1721 0994 201C     		mov	r0, r4
 1722 0996 2968     		ldr	r1, [r5]
 1723 0998 6A68     		ldr	r2, [r5, #4]
 1724 099a 0123     		mov	r3, #1
 1725 099c FFF7FEFF 		bl	ssd1306_WriteString
 1726              	.LVL227:
 512:Src/main.c    **** 	    	        	sprintf(message, "akkum %02d%%", (int)accu_percentage);
 1727              		.loc 1 512 0
 1728 09a0 0020     		mov	r0, #0
 1729 09a2 2C21     		mov	r1, #44
 1730 09a4 FFF7FEFF 		bl	ssd1306_SetCursor
 1731              	.LVL228:
 513:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 1732              		.loc 1 513 0
 1733 09a8 301C     		mov	r0, r6
 1734 09aa 391C     		mov	r1, r7
 1735 09ac FFF7FEFF 		bl	__aeabi_d2iz
 1736              	.LVL229:
 1737 09b0 021C     		mov	r2, r0
 1738 09b2 201C     		mov	r0, r4
 1739 09b4 2449     		ldr	r1, .L61+32
 1740 09b6 FFF7FEFF 		bl	sprintf
 1741              	.LVL230:
 514:Src/main.c    ****   	    	        	ssd1306_UpdateScreen();  
 1742              		.loc 1 514 0
 1743 09ba 201C     		mov	r0, r4
 1744 09bc 2968     		ldr	r1, [r5]
 1745 09be 6A68     		ldr	r2, [r5, #4]
 1746 09c0 0123     		mov	r3, #1
 1747 09c2 FFF7FEFF 		bl	ssd1306_WriteString
 1748              	.LVL231:
 515:Src/main.c    ****                                                                                                    
 1749              		.loc 1 515 0
 1750 09c6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1751              	.LVL232:
 1752              	.L33:
 1753              	.LBE6:
 525:Src/main.c    **** 	    			{
 1754              		.loc 1 525 0
 1755 09ca 0C9B     		ldr	r3, [sp, #48]
 1756 09cc 002B     		cmp	r3, #0
 1757 09ce 00D0     		beq	.LCB1577
 1758 09d0 BEE1     		b	.L36	@long jump
 1759              	.LCB1577:
 1760              	.LBB7:
 530:Src/main.c    ****                                                                                                    
 1761              		.loc 1 530 0
 1762 09d2 6B46     		mov	r3, sp
 1763 09d4 9C8E     		ldrh	r4, [r3, #52]
 1764 09d6 1725     		mov	r5, #23
 1765 09d8 0AAB     		add	r3, sp, #40
 1766              	.LVL233:
 1767 09da 9C46     		mov	ip, r3
 1768 09dc 6544     		add	r5, r5, ip
 1769 09de 0095     		str	r5, [sp]
ARM GAS  /tmp/ccwr8m4c.s 			page 51


 1770 09e0 0123     		mov	r3, #1
 1771              	.LVL234:
 1772 09e2 0193     		str	r3, [sp, #4]
 1773 09e4 6333     		add	r3, r3, #99
 1774 09e6 0293     		str	r3, [sp, #8]
 1775 09e8 1C48     		ldr	r0, .L61+52
 1776 09ea 211C     		mov	r1, r4
 1777 09ec 0022     		mov	r2, #0
 1778 09ee 623B     		sub	r3, r3, #98
 1779 09f0 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1780              	.LVL235:
 532:Src/main.c    **** 	    				{
 1781              		.loc 1 532 0
 1782 09f4 2B78     		ldrb	r3, [r5]
 1783 09f6 012B     		cmp	r3, #1
 1784 09f8 32D1     		bne	.L37
 535:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 1785              		.loc 1 535 0
 1786 09fa 1633     		add	r3, r3, #22
 1787 09fc 0AAA     		add	r2, sp, #40
 1788              	.LVL236:
 1789 09fe 9446     		mov	ip, r2
 1790 0a00 6344     		add	r3, r3, ip
 1791 0a02 0022     		mov	r2, #0
 1792              	.LVL237:
 1793 0a04 1A70     		strb	r2, [r3]
 536:Src/main.c    **** 	    					HAL_Delay(write_delay);
 1794              		.loc 1 536 0
 1795 0a06 0093     		str	r3, [sp]
 1796 0a08 0123     		mov	r3, #1
 1797 0a0a 0193     		str	r3, [sp, #4]
 1798 0a0c 6333     		add	r3, r3, #99
 1799 0a0e 0293     		str	r3, [sp, #8]
 1800 0a10 1248     		ldr	r0, .L61+52
 1801 0a12 211C     		mov	r1, r4
 1802 0a14 623B     		sub	r3, r3, #98
 1803 0a16 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1804              	.LVL238:
 537:Src/main.c    ****                                                                                                    
 1805              		.loc 1 537 0
 1806 0a1a 0520     		mov	r0, #5
 1807 0a1c FFF7FEFF 		bl	HAL_Delay
 1808              	.LVL239:
 540:Src/main.c    **** 	    				}
 1809              		.loc 1 540 0
 1810 0a20 A223     		mov	r3, #162
 1811 0a22 0D93     		str	r3, [sp, #52]
 1812 0a24 2FE0     		b	.L38
 1813              	.L62:
 1814 0a26 C046     		.align	2
 1815              	.L61:
 1816 0a28 CD8B0100 		.word	101325
 1817 0a2c 48260000 		.word	9800
 1818 0a30 00000000 		.word	.LANCHOR1
 1819 0a34 AC000000 		.word	.LC26
 1820 0a38 C0000000 		.word	.LC28
 1821 0a3c 00000000 		.word	Font_11x18
ARM GAS  /tmp/ccwr8m4c.s 			page 52


 1822 0a40 00000000 		.word	.LANCHOR0
 1823 0a44 D4000000 		.word	.LC30
 1824 0a48 E4000000 		.word	.LC32
 1825 0a4c 0024C340 		.word	1086530560
 1826 0a50 0000F03F 		.word	1072693248
 1827 0a54 00002440 		.word	1076101120
 1828 0a58 F4000000 		.word	.LC34
 1829 0a5c 00000000 		.word	hi2c2
 1830              	.LVL240:
 1831              	.L37:
 545:Src/main.c    **** 	    					HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, 0, I2C_MEMADD_SIZE_16BIT, 
 1832              		.loc 1 545 0
 1833 0a60 1722     		mov	r2, #23
 1834 0a62 0AAB     		add	r3, sp, #40
 1835              	.LVL241:
 1836 0a64 9C46     		mov	ip, r3
 1837 0a66 6244     		add	r2, r2, ip
 1838 0a68 0123     		mov	r3, #1
 1839              	.LVL242:
 1840 0a6a 1370     		strb	r3, [r2]
 546:Src/main.c    **** 	    					HAL_Delay(write_delay);
 1841              		.loc 1 546 0
 1842 0a6c 0092     		str	r2, [sp]
 1843 0a6e 0193     		str	r3, [sp, #4]
 1844 0a70 6333     		add	r3, r3, #99
 1845 0a72 0293     		str	r3, [sp, #8]
 1846 0a74 AD48     		ldr	r0, .L63
 1847 0a76 211C     		mov	r1, r4
 1848 0a78 0022     		mov	r2, #0
 1849 0a7a 623B     		sub	r3, r3, #98
 1850 0a7c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1851              	.LVL243:
 547:Src/main.c    **** 	    				}
 1852              		.loc 1 547 0
 1853 0a80 0520     		mov	r0, #5
 1854 0a82 FFF7FEFF 		bl	HAL_Delay
 1855              	.LVL244:
 1856              	.L38:
 552:Src/main.c    **** 	    				b0 = timestamp[0];
 1857              		.loc 1 552 0
 1858 0a86 AA4F     		ldr	r7, .L63+4
 1859 0a88 1323     		mov	r3, #19
 1860 0a8a 0AAA     		add	r2, sp, #40
 1861              	.LVL245:
 1862 0a8c 9446     		mov	ip, r2
 1863 0a8e 6344     		add	r3, r3, ip
 1864 0a90 1A78     		ldrb	r2, [r3]
 1865              	.LVL246:
 1866 0a92 1223     		mov	r3, #18
 1867 0a94 6344     		add	r3, r3, ip
 1868 0a96 1B78     		ldrb	r3, [r3]
 1869 0a98 0FA9     		add	r1, sp, #60
 1870 0a9a 0978     		ldrb	r1, [r1]
 1871 0a9c 0091     		str	r1, [sp]
 1872 0a9e 1521     		mov	r1, #21
 1873 0aa0 6144     		add	r1, r1, ip
 1874 0aa2 0978     		ldrb	r1, [r1]
ARM GAS  /tmp/ccwr8m4c.s 			page 53


 1875 0aa4 0191     		str	r1, [sp, #4]
 1876 0aa6 381C     		mov	r0, r7
 1877 0aa8 A249     		ldr	r1, .L63+8
 1878 0aaa FFF7FEFF 		bl	sprintf
 1879              	.LVL247:
 553:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1880              		.loc 1 553 0
 1881 0aae 3B78     		ldrb	r3, [r7]
 1882 0ab0 1724     		mov	r4, #23
 1883 0ab2 0AAA     		add	r2, sp, #40
 1884              	.LVL248:
 1885 0ab4 9446     		mov	ip, r2
 1886 0ab6 6444     		add	r4, r4, ip
 1887 0ab8 2370     		strb	r3, [r4]
 554:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1888              		.loc 1 554 0
 1889 0aba 6B46     		mov	r3, sp
 1890 0abc 9B8E     		ldrh	r3, [r3, #52]
 1891 0abe 0094     		str	r4, [sp]
 1892 0ac0 0125     		mov	r5, #1
 1893 0ac2 0195     		str	r5, [sp, #4]
 1894 0ac4 6426     		mov	r6, #100
 1895              	.LVL249:
 1896 0ac6 0296     		str	r6, [sp, #8]
 1897 0ac8 9848     		ldr	r0, .L63
 1898 0aca 0593     		str	r3, [sp, #20]
 1899 0acc 191C     		mov	r1, r3
 1900 0ace 5A46     		mov	r2, fp
 1901              	.LVL250:
 1902 0ad0 0223     		mov	r3, #2
 1903 0ad2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1904              	.LVL251:
 555:Src/main.c    **** 	    				eeprom_debug_address++;
 1905              		.loc 1 555 0
 1906 0ad6 0520     		mov	r0, #5
 1907 0ad8 FFF7FEFF 		bl	HAL_Delay
 1908              	.LVL252:
 556:Src/main.c    **** 	    				b0 = timestamp[1];
 1909              		.loc 1 556 0
 1910 0adc 5A46     		mov	r2, fp
 1911 0ade 0132     		add	r2, r2, #1
 1912 0ae0 92B2     		uxth	r2, r2
 1913 0ae2 9346     		mov	fp, r2
 1914              	.LVL253:
 557:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1915              		.loc 1 557 0
 1916 0ae4 7B78     		ldrb	r3, [r7, #1]
 1917 0ae6 2370     		strb	r3, [r4]
 558:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1918              		.loc 1 558 0
 1919 0ae8 0094     		str	r4, [sp]
 1920 0aea 0195     		str	r5, [sp, #4]
 1921 0aec 0296     		str	r6, [sp, #8]
 1922 0aee 8F48     		ldr	r0, .L63
 1923 0af0 0599     		ldr	r1, [sp, #20]
 1924 0af2 0223     		mov	r3, #2
 1925 0af4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
ARM GAS  /tmp/ccwr8m4c.s 			page 54


 1926              	.LVL254:
 559:Src/main.c    **** 	    				eeprom_debug_address++;
 1927              		.loc 1 559 0
 1928 0af8 0520     		mov	r0, #5
 1929 0afa FFF7FEFF 		bl	HAL_Delay
 1930              	.LVL255:
 560:Src/main.c    **** 	    				b0 = timestamp[3];
 1931              		.loc 1 560 0
 1932 0afe 5A46     		mov	r2, fp
 1933 0b00 0132     		add	r2, r2, #1
 1934 0b02 92B2     		uxth	r2, r2
 1935 0b04 9046     		mov	r8, r2
 1936              	.LVL256:
 561:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1937              		.loc 1 561 0
 1938 0b06 FB78     		ldrb	r3, [r7, #3]
 1939 0b08 2370     		strb	r3, [r4]
 562:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1940              		.loc 1 562 0
 1941 0b0a 0094     		str	r4, [sp]
 1942 0b0c 0195     		str	r5, [sp, #4]
 1943 0b0e 0296     		str	r6, [sp, #8]
 1944 0b10 8648     		ldr	r0, .L63
 1945 0b12 0599     		ldr	r1, [sp, #20]
 1946 0b14 0223     		mov	r3, #2
 1947 0b16 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1948              	.LVL257:
 563:Src/main.c    **** 	    				eeprom_debug_address++;
 1949              		.loc 1 563 0
 1950 0b1a 0520     		mov	r0, #5
 1951 0b1c FFF7FEFF 		bl	HAL_Delay
 1952              	.LVL258:
 564:Src/main.c    **** 	    				b0 = timestamp[4];
 1953              		.loc 1 564 0
 1954 0b20 4246     		mov	r2, r8
 1955 0b22 0132     		add	r2, r2, #1
 1956 0b24 92B2     		uxth	r2, r2
 1957 0b26 9046     		mov	r8, r2
 1958              	.LVL259:
 565:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1959              		.loc 1 565 0
 1960 0b28 3B79     		ldrb	r3, [r7, #4]
 1961 0b2a 2370     		strb	r3, [r4]
 566:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1962              		.loc 1 566 0
 1963 0b2c 0094     		str	r4, [sp]
 1964 0b2e 0195     		str	r5, [sp, #4]
 1965 0b30 0296     		str	r6, [sp, #8]
 1966 0b32 7E48     		ldr	r0, .L63
 1967 0b34 0599     		ldr	r1, [sp, #20]
 1968 0b36 0223     		mov	r3, #2
 1969 0b38 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1970              	.LVL260:
 567:Src/main.c    **** 	    				eeprom_debug_address++;
 1971              		.loc 1 567 0
 1972 0b3c 0520     		mov	r0, #5
 1973 0b3e FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccwr8m4c.s 			page 55


 1974              	.LVL261:
 568:Src/main.c    **** 	    				//b0 = ' ';
 1975              		.loc 1 568 0
 1976 0b42 4246     		mov	r2, r8
 1977 0b44 531C     		add	r3, r2, #1
 1978 0b46 9AB2     		uxth	r2, r3
 1979 0b48 9046     		mov	r8, r2
 1980              	.LVL262:
 573:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 1981              		.loc 1 573 0
 1982 0b4a BB79     		ldrb	r3, [r7, #6]
 1983 0b4c 2370     		strb	r3, [r4]
 574:Src/main.c    **** 	    				HAL_Delay(write_delay);
 1984              		.loc 1 574 0
 1985 0b4e 0094     		str	r4, [sp]
 1986 0b50 0195     		str	r5, [sp, #4]
 1987 0b52 0296     		str	r6, [sp, #8]
 1988 0b54 7548     		ldr	r0, .L63
 1989 0b56 0599     		ldr	r1, [sp, #20]
 1990 0b58 0223     		mov	r3, #2
 1991 0b5a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1992              	.LVL263:
 575:Src/main.c    **** 	    				eeprom_debug_address++;
 1993              		.loc 1 575 0
 1994 0b5e 0520     		mov	r0, #5
 1995 0b60 FFF7FEFF 		bl	HAL_Delay
 1996              	.LVL264:
 576:Src/main.c    **** 	    				b0 = timestamp[7];
 1997              		.loc 1 576 0
 1998 0b64 4246     		mov	r2, r8
 1999 0b66 531C     		add	r3, r2, #1
 2000 0b68 9AB2     		uxth	r2, r3
 2001 0b6a 9046     		mov	r8, r2
 2002              	.LVL265:
 577:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2003              		.loc 1 577 0
 2004 0b6c FB79     		ldrb	r3, [r7, #7]
 2005 0b6e 2370     		strb	r3, [r4]
 578:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2006              		.loc 1 578 0
 2007 0b70 0094     		str	r4, [sp]
 2008 0b72 0195     		str	r5, [sp, #4]
 2009 0b74 0296     		str	r6, [sp, #8]
 2010 0b76 6D48     		ldr	r0, .L63
 2011 0b78 0599     		ldr	r1, [sp, #20]
 2012 0b7a 0223     		mov	r3, #2
 2013 0b7c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2014              	.LVL266:
 579:Src/main.c    **** 	    				eeprom_debug_address++;
 2015              		.loc 1 579 0
 2016 0b80 0520     		mov	r0, #5
 2017 0b82 FFF7FEFF 		bl	HAL_Delay
 2018              	.LVL267:
 580:Src/main.c    **** 	    				b0 = timestamp[9];
 2019              		.loc 1 580 0
 2020 0b86 4246     		mov	r2, r8
 2021 0b88 531C     		add	r3, r2, #1
ARM GAS  /tmp/ccwr8m4c.s 			page 56


 2022 0b8a 9AB2     		uxth	r2, r3
 2023 0b8c 9046     		mov	r8, r2
 2024              	.LVL268:
 581:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2025              		.loc 1 581 0
 2026 0b8e 7B7A     		ldrb	r3, [r7, #9]
 2027 0b90 2370     		strb	r3, [r4]
 582:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2028              		.loc 1 582 0
 2029 0b92 0094     		str	r4, [sp]
 2030 0b94 0195     		str	r5, [sp, #4]
 2031 0b96 0296     		str	r6, [sp, #8]
 2032 0b98 6448     		ldr	r0, .L63
 2033 0b9a 0599     		ldr	r1, [sp, #20]
 2034 0b9c 0223     		mov	r3, #2
 2035 0b9e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2036              	.LVL269:
 583:Src/main.c    **** 	    				eeprom_debug_address++;
 2037              		.loc 1 583 0
 2038 0ba2 0520     		mov	r0, #5
 2039 0ba4 FFF7FEFF 		bl	HAL_Delay
 2040              	.LVL270:
 584:Src/main.c    **** 	    				b0 = timestamp[10];
 2041              		.loc 1 584 0
 2042 0ba8 4346     		mov	r3, r8
 2043 0baa 0133     		add	r3, r3, #1
 2044 0bac 9BB2     		uxth	r3, r3
 2045 0bae 9846     		mov	r8, r3
 2046              	.LVL271:
 585:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2047              		.loc 1 585 0
 2048 0bb0 BB7A     		ldrb	r3, [r7, #10]
 2049 0bb2 2370     		strb	r3, [r4]
 586:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2050              		.loc 1 586 0
 2051 0bb4 0094     		str	r4, [sp]
 2052 0bb6 0195     		str	r5, [sp, #4]
 2053 0bb8 0296     		str	r6, [sp, #8]
 2054 0bba 5C48     		ldr	r0, .L63
 2055 0bbc 0599     		ldr	r1, [sp, #20]
 2056 0bbe 4246     		mov	r2, r8
 2057 0bc0 0223     		mov	r3, #2
 2058 0bc2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2059              	.LVL272:
 587:Src/main.c    **** 	    				eeprom_debug_address++;
 2060              		.loc 1 587 0
 2061 0bc6 0520     		mov	r0, #5
 2062 0bc8 FFF7FEFF 		bl	HAL_Delay
 2063              	.LVL273:
 588:Src/main.c    **** 	    				//b0 = ' ';
 2064              		.loc 1 588 0
 2065 0bcc 4346     		mov	r3, r8
 2066 0bce 0133     		add	r3, r3, #1
 2067 0bd0 9BB2     		uxth	r3, r3
 2068 0bd2 9846     		mov	r8, r3
 2069              	.LVL274:
 597:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
ARM GAS  /tmp/ccwr8m4c.s 			page 57


 2070              		.loc 1 597 0
 2071 0bd4 0698     		ldr	r0, [sp, #24]
 2072 0bd6 0799     		ldr	r1, [sp, #28]
 2073 0bd8 FFF7FEFF 		bl	__aeabi_d2iz
 2074              	.LVL275:
 2075 0bdc 071C     		mov	r7, r0
 2076 0bde FFF7FEFF 		bl	__aeabi_i2d
 2077              	.LVL276:
 2078 0be2 021C     		mov	r2, r0
 2079 0be4 0B1C     		mov	r3, r1
 2080 0be6 0698     		ldr	r0, [sp, #24]
 2081 0be8 0799     		ldr	r1, [sp, #28]
 2082 0bea FFF7FEFF 		bl	__aeabi_dsub
 2083              	.LVL277:
 2084 0bee 0022     		mov	r2, #0
 2085 0bf0 514B     		ldr	r3, .L63+12
 2086 0bf2 FFF7FEFF 		bl	__aeabi_dmul
 2087              	.LVL278:
 2088 0bf6 514B     		ldr	r3, .L63+16
 2089 0bf8 9B46     		mov	fp, r3
 2090 0bfa FFF7FEFF 		bl	__aeabi_d2iz
 2091              	.LVL279:
 2092 0bfe 031C     		mov	r3, r0
 2093 0c00 5846     		mov	r0, fp
 2094 0c02 4F49     		ldr	r1, .L63+20
 2095 0c04 3A1C     		mov	r2, r7
 2096 0c06 FFF7FEFF 		bl	sprintf
 2097              	.LVL280:
 598:Src/main.c    **** 	    				b0 = message[0];
 2098              		.loc 1 598 0
 2099 0c0a 0A98     		ldr	r0, [sp, #40]
 2100 0c0c 0B99     		ldr	r1, [sp, #44]
 2101 0c0e 0022     		mov	r2, #0
 2102 0c10 4C4B     		ldr	r3, .L63+24
 2103 0c12 FFF7FEFF 		bl	__aeabi_ddiv
 2104              	.LVL281:
 2105 0c16 4C4F     		ldr	r7, .L63+28
 2106 0c18 FFF7FEFF 		bl	__aeabi_d2iz
 2107              	.LVL282:
 2108 0c1c 021C     		mov	r2, r0
 2109 0c1e 381C     		mov	r0, r7
 2110 0c20 4A49     		ldr	r1, .L63+32
 2111 0c22 FFF7FEFF 		bl	sprintf
 2112              	.LVL283:
 599:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2113              		.loc 1 599 0
 2114 0c26 5B46     		mov	r3, fp
 2115 0c28 1B78     		ldrb	r3, [r3]
 2116 0c2a 2370     		strb	r3, [r4]
 600:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2117              		.loc 1 600 0
 2118 0c2c 0094     		str	r4, [sp]
 2119 0c2e 0195     		str	r5, [sp, #4]
 2120 0c30 0296     		str	r6, [sp, #8]
 2121 0c32 3E48     		ldr	r0, .L63
 2122 0c34 0599     		ldr	r1, [sp, #20]
 2123 0c36 4246     		mov	r2, r8
ARM GAS  /tmp/ccwr8m4c.s 			page 58


 2124 0c38 0223     		mov	r3, #2
 2125 0c3a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2126              	.LVL284:
 601:Src/main.c    **** 	    				eeprom_debug_address++;
 2127              		.loc 1 601 0
 2128 0c3e 0520     		mov	r0, #5
 2129 0c40 FFF7FEFF 		bl	HAL_Delay
 2130              	.LVL285:
 602:Src/main.c    **** 	    				b0 = message[1];
 2131              		.loc 1 602 0
 2132 0c44 4346     		mov	r3, r8
 2133 0c46 0133     		add	r3, r3, #1
 2134 0c48 9BB2     		uxth	r3, r3
 2135 0c4a 9846     		mov	r8, r3
 2136              	.LVL286:
 603:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2137              		.loc 1 603 0
 2138 0c4c 5B46     		mov	r3, fp
 2139 0c4e 5B78     		ldrb	r3, [r3, #1]
 2140 0c50 2370     		strb	r3, [r4]
 604:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2141              		.loc 1 604 0
 2142 0c52 0094     		str	r4, [sp]
 2143 0c54 0195     		str	r5, [sp, #4]
 2144 0c56 0296     		str	r6, [sp, #8]
 2145 0c58 3448     		ldr	r0, .L63
 2146 0c5a 0599     		ldr	r1, [sp, #20]
 2147 0c5c 4246     		mov	r2, r8
 2148 0c5e 0223     		mov	r3, #2
 2149 0c60 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2150              	.LVL287:
 605:Src/main.c    **** 	    				eeprom_debug_address++;
 2151              		.loc 1 605 0
 2152 0c64 0520     		mov	r0, #5
 2153 0c66 FFF7FEFF 		bl	HAL_Delay
 2154              	.LVL288:
 606:Src/main.c    **** 	    				//b0 = message[2];
 2155              		.loc 1 606 0
 2156 0c6a 4346     		mov	r3, r8
 2157 0c6c 0133     		add	r3, r3, #1
 2158 0c6e 9BB2     		uxth	r3, r3
 2159 0c70 9846     		mov	r8, r3
 2160              	.LVL289:
 611:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2161              		.loc 1 611 0
 2162 0c72 5B46     		mov	r3, fp
 2163 0c74 DB78     		ldrb	r3, [r3, #3]
 2164 0c76 2370     		strb	r3, [r4]
 612:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2165              		.loc 1 612 0
 2166 0c78 0094     		str	r4, [sp]
 2167 0c7a 0195     		str	r5, [sp, #4]
 2168 0c7c 0296     		str	r6, [sp, #8]
 2169 0c7e 2B48     		ldr	r0, .L63
 2170 0c80 0599     		ldr	r1, [sp, #20]
 2171 0c82 4246     		mov	r2, r8
 2172 0c84 0223     		mov	r3, #2
ARM GAS  /tmp/ccwr8m4c.s 			page 59


 2173 0c86 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2174              	.LVL290:
 613:Src/main.c    **** 	    				eeprom_debug_address++;
 2175              		.loc 1 613 0
 2176 0c8a 0520     		mov	r0, #5
 2177 0c8c FFF7FEFF 		bl	HAL_Delay
 2178              	.LVL291:
 614:Src/main.c    **** 	    				b0 = temperature_message[0];
 2179              		.loc 1 614 0
 2180 0c90 4346     		mov	r3, r8
 2181 0c92 5A1C     		add	r2, r3, #1
 2182 0c94 93B2     		uxth	r3, r2
 2183 0c96 9846     		mov	r8, r3
 2184              	.LVL292:
 615:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2185              		.loc 1 615 0
 2186 0c98 3B78     		ldrb	r3, [r7]
 2187 0c9a 2370     		strb	r3, [r4]
 616:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2188              		.loc 1 616 0
 2189 0c9c 0094     		str	r4, [sp]
 2190 0c9e 0195     		str	r5, [sp, #4]
 2191 0ca0 0296     		str	r6, [sp, #8]
 2192 0ca2 2248     		ldr	r0, .L63
 2193 0ca4 0599     		ldr	r1, [sp, #20]
 2194 0ca6 4246     		mov	r2, r8
 2195 0ca8 0223     		mov	r3, #2
 2196 0caa FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2197              	.LVL293:
 617:Src/main.c    **** 	    				eeprom_debug_address++;
 2198              		.loc 1 617 0
 2199 0cae 0520     		mov	r0, #5
 2200 0cb0 FFF7FEFF 		bl	HAL_Delay
 2201              	.LVL294:
 618:Src/main.c    **** 	    				b0 = temperature_message[1];
 2202              		.loc 1 618 0
 2203 0cb4 4346     		mov	r3, r8
 2204 0cb6 5A1C     		add	r2, r3, #1
 2205 0cb8 93B2     		uxth	r3, r2
 2206 0cba 9846     		mov	r8, r3
 2207              	.LVL295:
 619:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2208              		.loc 1 619 0
 2209 0cbc 7B78     		ldrb	r3, [r7, #1]
 2210 0cbe 2370     		strb	r3, [r4]
 620:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2211              		.loc 1 620 0
 2212 0cc0 0094     		str	r4, [sp]
 2213 0cc2 0195     		str	r5, [sp, #4]
 2214 0cc4 0296     		str	r6, [sp, #8]
 2215 0cc6 1948     		ldr	r0, .L63
 2216 0cc8 0599     		ldr	r1, [sp, #20]
 2217 0cca 4246     		mov	r2, r8
 2218 0ccc 0223     		mov	r3, #2
 2219 0cce FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2220              	.LVL296:
 621:Src/main.c    **** 	    				eeprom_debug_address++;
ARM GAS  /tmp/ccwr8m4c.s 			page 60


 2221              		.loc 1 621 0
 2222 0cd2 0520     		mov	r0, #5
 2223 0cd4 FFF7FEFF 		bl	HAL_Delay
 2224              	.LVL297:
 622:Src/main.c    **** 	    				b0 = 0;
 2225              		.loc 1 622 0
 2226 0cd8 4346     		mov	r3, r8
 2227 0cda 5F1C     		add	r7, r3, #1
 2228 0cdc BFB2     		uxth	r7, r7
 2229              	.LVL298:
 623:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2230              		.loc 1 623 0
 2231 0cde 0023     		mov	r3, #0
 2232 0ce0 9846     		mov	r8, r3
 2233 0ce2 2370     		strb	r3, [r4]
 624:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2234              		.loc 1 624 0
 2235 0ce4 0094     		str	r4, [sp]
 2236 0ce6 0195     		str	r5, [sp, #4]
 2237 0ce8 0296     		str	r6, [sp, #8]
 2238 0cea 1048     		ldr	r0, .L63
 2239 0cec 0599     		ldr	r1, [sp, #20]
 2240 0cee 3A1C     		mov	r2, r7
 2241 0cf0 0223     		mov	r3, #2
 2242 0cf2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2243              	.LVL299:
 625:Src/main.c    **** 	    				eeprom_debug_address++;
 2244              		.loc 1 625 0
 2245 0cf6 0520     		mov	r0, #5
 2246 0cf8 FFF7FEFF 		bl	HAL_Delay
 2247              	.LVL300:
 626:Src/main.c    **** 	    				b0 = 0;
 2248              		.loc 1 626 0
 2249 0cfc 0137     		add	r7, r7, #1
 2250              	.LVL301:
 2251 0cfe BFB2     		uxth	r7, r7
 2252              	.LVL302:
 627:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2253              		.loc 1 627 0
 2254 0d00 4346     		mov	r3, r8
 2255 0d02 2370     		strb	r3, [r4]
 628:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2256              		.loc 1 628 0
 2257 0d04 0094     		str	r4, [sp]
 2258 0d06 0195     		str	r5, [sp, #4]
 2259 0d08 0296     		str	r6, [sp, #8]
 2260 0d0a 0848     		ldr	r0, .L63
 2261 0d0c 0599     		ldr	r1, [sp, #20]
 2262 0d0e 3A1C     		mov	r2, r7
 2263 0d10 0223     		mov	r3, #2
 2264 0d12 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2265              	.LVL303:
 629:Src/main.c    **** 	    				eeprom_debug_address--;
 2266              		.loc 1 629 0
 2267 0d16 0520     		mov	r0, #5
 2268 0d18 FFF7FEFF 		bl	HAL_Delay
 2269              	.LVL304:
ARM GAS  /tmp/ccwr8m4c.s 			page 61


 630:Src/main.c    **** 	    				eeprom_number_of_records++;
 2270              		.loc 1 630 0
 2271 0d1c 013F     		sub	r7, r7, #1
 2272              	.LVL305:
 2273 0d1e BBB2     		uxth	r3, r7
 2274 0d20 9B46     		mov	fp, r3
 2275              	.LVL306:
 631:Src/main.c    ****                                                                                                    
 2276              		.loc 1 631 0
 2277 0d22 0C9B     		ldr	r3, [sp, #48]
 2278 0d24 0133     		add	r3, r3, #1
 2279 0d26 0C93     		str	r3, [sp, #48]
 2280              	.LVL307:
 2281              	.LBE7:
 2282 0d28 C3E0     		b	.L39
 2283              	.L64:
 2284 0d2a C046     		.align	2
 2285              	.L63:
 2286 0d2c 00000000 		.word	hi2c2
 2287 0d30 00000000 		.word	.LANCHOR1
 2288 0d34 AC000000 		.word	.LC26
 2289 0d38 00002440 		.word	1076101120
 2290 0d3c 00000000 		.word	.LANCHOR0
 2291 0d40 08010000 		.word	.LC36
 2292 0d44 00005940 		.word	1079574528
 2293 0d48 00000000 		.word	.LANCHOR2
 2294 0d4c 14010000 		.word	.LC39
 2295              	.LVL308:
 2296              	.L36:
 2297              	.LBB8:
 639:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 5, I
 2298              		.loc 1 639 0
 2299 0d50 1724     		mov	r4, #23
 2300 0d52 0AAB     		add	r3, sp, #40
 2301              	.LVL309:
 2302 0d54 9C46     		mov	ip, r3
 2303 0d56 6444     		add	r4, r4, ip
 2304 0d58 0023     		mov	r3, #0
 2305              	.LVL310:
 2306 0d5a 2370     		strb	r3, [r4]
 640:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2307              		.loc 1 640 0
 2308 0d5c 6B46     		mov	r3, sp
 2309 0d5e 9B8E     		ldrh	r3, [r3, #52]
 2310 0d60 5A46     		mov	r2, fp
 2311 0d62 0532     		add	r2, r2, #5
 2312 0d64 92B2     		uxth	r2, r2
 2313 0d66 0094     		str	r4, [sp]
 2314 0d68 0125     		mov	r5, #1
 2315 0d6a 0195     		str	r5, [sp, #4]
 2316 0d6c 6426     		mov	r6, #100
 2317              	.LVL311:
 2318 0d6e 0296     		str	r6, [sp, #8]
 2319 0d70 F048     		ldr	r0, .L65
 2320 0d72 1F1C     		mov	r7, r3
 2321 0d74 191C     		mov	r1, r3
 2322 0d76 0223     		mov	r3, #2
ARM GAS  /tmp/ccwr8m4c.s 			page 62


 2323 0d78 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2324              	.LVL312:
 641:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address + 6, I
 2325              		.loc 1 641 0
 2326 0d7c 0520     		mov	r0, #5
 2327 0d7e FFF7FEFF 		bl	HAL_Delay
 2328              	.LVL313:
 642:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2329              		.loc 1 642 0
 2330 0d82 5B46     		mov	r3, fp
 2331 0d84 9A1D     		add	r2, r3, #6
 2332 0d86 92B2     		uxth	r2, r2
 2333 0d88 0094     		str	r4, [sp]
 2334 0d8a 0195     		str	r5, [sp, #4]
 2335 0d8c 0296     		str	r6, [sp, #8]
 2336 0d8e E948     		ldr	r0, .L65
 2337 0d90 0597     		str	r7, [sp, #20]
 2338 0d92 391C     		mov	r1, r7
 2339 0d94 0223     		mov	r3, #2
 2340 0d96 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2341              	.LVL314:
 643:Src/main.c    **** 	    				eeprom_number_of_records++;
 2342              		.loc 1 643 0
 2343 0d9a 0520     		mov	r0, #5
 2344 0d9c FFF7FEFF 		bl	HAL_Delay
 2345              	.LVL315:
 644:Src/main.c    **** 	    	        	sprintf(message, "%02d.%01d", (int)depth, (int)((depth - (int)depth)*10.0));
 2346              		.loc 1 644 0
 2347 0da0 0C9B     		ldr	r3, [sp, #48]
 2348 0da2 0133     		add	r3, r3, #1
 2349 0da4 0C93     		str	r3, [sp, #48]
 2350              	.LVL316:
 645:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 2351              		.loc 1 645 0
 2352 0da6 0698     		ldr	r0, [sp, #24]
 2353 0da8 0799     		ldr	r1, [sp, #28]
 2354 0daa FFF7FEFF 		bl	__aeabi_d2iz
 2355              	.LVL317:
 2356 0dae 071C     		mov	r7, r0
 2357 0db0 FFF7FEFF 		bl	__aeabi_i2d
 2358              	.LVL318:
 2359 0db4 021C     		mov	r2, r0
 2360 0db6 0B1C     		mov	r3, r1
 2361 0db8 0698     		ldr	r0, [sp, #24]
 2362 0dba 0799     		ldr	r1, [sp, #28]
 2363 0dbc FFF7FEFF 		bl	__aeabi_dsub
 2364              	.LVL319:
 2365 0dc0 0022     		mov	r2, #0
 2366 0dc2 DD4B     		ldr	r3, .L65+4
 2367 0dc4 FFF7FEFF 		bl	__aeabi_dmul
 2368              	.LVL320:
 2369 0dc8 DC4B     		ldr	r3, .L65+8
 2370 0dca 9A46     		mov	r10, r3
 2371 0dcc FFF7FEFF 		bl	__aeabi_d2iz
 2372              	.LVL321:
 2373 0dd0 031C     		mov	r3, r0
 2374 0dd2 5046     		mov	r0, r10
ARM GAS  /tmp/ccwr8m4c.s 			page 63


 2375 0dd4 DA49     		ldr	r1, .L65+12
 2376 0dd6 3A1C     		mov	r2, r7
 2377 0dd8 FFF7FEFF 		bl	sprintf
 2378              	.LVL322:
 646:Src/main.c    **** 	    				b0 = message[0];
 2379              		.loc 1 646 0
 2380 0ddc 0A98     		ldr	r0, [sp, #40]
 2381 0dde 0B99     		ldr	r1, [sp, #44]
 2382 0de0 0022     		mov	r2, #0
 2383 0de2 D84B     		ldr	r3, .L65+16
 2384 0de4 FFF7FEFF 		bl	__aeabi_ddiv
 2385              	.LVL323:
 2386 0de8 D74F     		ldr	r7, .L65+20
 2387 0dea FFF7FEFF 		bl	__aeabi_d2iz
 2388              	.LVL324:
 2389 0dee 021C     		mov	r2, r0
 2390 0df0 381C     		mov	r0, r7
 2391 0df2 D649     		ldr	r1, .L65+24
 2392 0df4 FFF7FEFF 		bl	sprintf
 2393              	.LVL325:
 647:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2394              		.loc 1 647 0
 2395 0df8 5346     		mov	r3, r10
 2396 0dfa 1B78     		ldrb	r3, [r3]
 2397 0dfc 2370     		strb	r3, [r4]
 648:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2398              		.loc 1 648 0
 2399 0dfe 0094     		str	r4, [sp]
 2400 0e00 0195     		str	r5, [sp, #4]
 2401 0e02 0296     		str	r6, [sp, #8]
 2402 0e04 CB48     		ldr	r0, .L65
 2403 0e06 0599     		ldr	r1, [sp, #20]
 2404 0e08 5A46     		mov	r2, fp
 2405 0e0a 0223     		mov	r3, #2
 2406 0e0c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2407              	.LVL326:
 649:Src/main.c    **** 	    				eeprom_debug_address++;
 2408              		.loc 1 649 0
 2409 0e10 0520     		mov	r0, #5
 2410 0e12 FFF7FEFF 		bl	HAL_Delay
 2411              	.LVL327:
 650:Src/main.c    **** 	    				b0 = message[1];
 2412              		.loc 1 650 0
 2413 0e16 5B46     		mov	r3, fp
 2414 0e18 0133     		add	r3, r3, #1
 2415 0e1a 9BB2     		uxth	r3, r3
 2416 0e1c 9B46     		mov	fp, r3
 2417              	.LVL328:
 651:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2418              		.loc 1 651 0
 2419 0e1e 5346     		mov	r3, r10
 2420 0e20 5B78     		ldrb	r3, [r3, #1]
 2421 0e22 2370     		strb	r3, [r4]
 652:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2422              		.loc 1 652 0
 2423 0e24 0094     		str	r4, [sp]
 2424 0e26 0195     		str	r5, [sp, #4]
ARM GAS  /tmp/ccwr8m4c.s 			page 64


 2425 0e28 0296     		str	r6, [sp, #8]
 2426 0e2a C248     		ldr	r0, .L65
 2427 0e2c 0599     		ldr	r1, [sp, #20]
 2428 0e2e 5A46     		mov	r2, fp
 2429 0e30 0223     		mov	r3, #2
 2430 0e32 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2431              	.LVL329:
 653:Src/main.c    **** 	    				eeprom_debug_address++;
 2432              		.loc 1 653 0
 2433 0e36 0520     		mov	r0, #5
 2434 0e38 FFF7FEFF 		bl	HAL_Delay
 2435              	.LVL330:
 654:Src/main.c    **** 	    				//b0 = message[2];
 2436              		.loc 1 654 0
 2437 0e3c 5B46     		mov	r3, fp
 2438 0e3e 0133     		add	r3, r3, #1
 2439 0e40 9BB2     		uxth	r3, r3
 2440 0e42 9B46     		mov	fp, r3
 2441              	.LVL331:
 659:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2442              		.loc 1 659 0
 2443 0e44 5346     		mov	r3, r10
 2444 0e46 DB78     		ldrb	r3, [r3, #3]
 2445 0e48 2370     		strb	r3, [r4]
 660:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2446              		.loc 1 660 0
 2447 0e4a 0094     		str	r4, [sp]
 2448 0e4c 0195     		str	r5, [sp, #4]
 2449 0e4e 0296     		str	r6, [sp, #8]
 2450 0e50 B848     		ldr	r0, .L65
 2451 0e52 0599     		ldr	r1, [sp, #20]
 2452 0e54 5A46     		mov	r2, fp
 2453 0e56 0223     		mov	r3, #2
 2454 0e58 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2455              	.LVL332:
 661:Src/main.c    **** 	    				eeprom_debug_address++;
 2456              		.loc 1 661 0
 2457 0e5c 0520     		mov	r0, #5
 2458 0e5e FFF7FEFF 		bl	HAL_Delay
 2459              	.LVL333:
 662:Src/main.c    **** 	    				b0 = temperature_message[0];
 2460              		.loc 1 662 0
 2461 0e62 5B46     		mov	r3, fp
 2462 0e64 5A1C     		add	r2, r3, #1
 2463 0e66 93B2     		uxth	r3, r2
 2464 0e68 9B46     		mov	fp, r3
 2465              	.LVL334:
 663:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2466              		.loc 1 663 0
 2467 0e6a 3B78     		ldrb	r3, [r7]
 2468 0e6c 2370     		strb	r3, [r4]
 664:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2469              		.loc 1 664 0
 2470 0e6e 0094     		str	r4, [sp]
 2471 0e70 0195     		str	r5, [sp, #4]
 2472 0e72 0296     		str	r6, [sp, #8]
 2473 0e74 AF48     		ldr	r0, .L65
ARM GAS  /tmp/ccwr8m4c.s 			page 65


 2474 0e76 0599     		ldr	r1, [sp, #20]
 2475 0e78 5A46     		mov	r2, fp
 2476 0e7a 0223     		mov	r3, #2
 2477 0e7c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2478              	.LVL335:
 665:Src/main.c    **** 	    				eeprom_debug_address++;
 2479              		.loc 1 665 0
 2480 0e80 0520     		mov	r0, #5
 2481 0e82 FFF7FEFF 		bl	HAL_Delay
 2482              	.LVL336:
 666:Src/main.c    **** 	    				b0 = temperature_message[1];
 2483              		.loc 1 666 0
 2484 0e86 5B46     		mov	r3, fp
 2485 0e88 5A1C     		add	r2, r3, #1
 2486 0e8a 93B2     		uxth	r3, r2
 2487 0e8c 9846     		mov	r8, r3
 2488              	.LVL337:
 667:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2489              		.loc 1 667 0
 2490 0e8e 7B78     		ldrb	r3, [r7, #1]
 2491 0e90 2370     		strb	r3, [r4]
 668:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2492              		.loc 1 668 0
 2493 0e92 0094     		str	r4, [sp]
 2494 0e94 0195     		str	r5, [sp, #4]
 2495 0e96 0296     		str	r6, [sp, #8]
 2496 0e98 A648     		ldr	r0, .L65
 2497 0e9a 0599     		ldr	r1, [sp, #20]
 2498 0e9c 4246     		mov	r2, r8
 2499 0e9e 0223     		mov	r3, #2
 2500 0ea0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2501              	.LVL338:
 669:Src/main.c    **** 	    				eeprom_debug_address++;
 2502              		.loc 1 669 0
 2503 0ea4 0520     		mov	r0, #5
 2504 0ea6 FFF7FEFF 		bl	HAL_Delay
 2505              	.LVL339:
 670:Src/main.c    ****                                                                                                    
 2506              		.loc 1 670 0
 2507 0eaa 4346     		mov	r3, r8
 2508 0eac 5A1C     		add	r2, r3, #1
 2509 0eae 93B2     		uxth	r3, r2
 2510 0eb0 9B46     		mov	fp, r3
 2511              	.LVL340:
 2512              	.L39:
 2513              	.LBE8:
 680:Src/main.c    **** 	    			{
 2514              		.loc 1 680 0
 2515 0eb2 4B46     		mov	r3, r9
 2516 0eb4 013B     		sub	r3, r3, #1
 2517 0eb6 622B     		cmp	r3, #98
 2518 0eb8 0FD8     		bhi	.L40
 682:Src/main.c    **** 	    				{
 2519              		.loc 1 682 0
 2520 0eba 4B46     		mov	r3, r9
 2521 0ebc 142B     		cmp	r3, #20
 2522 0ebe 09DD     		ble	.L41
ARM GAS  /tmp/ccwr8m4c.s 			page 66


 2523              	.LVL341:
 685:Src/main.c    **** 	    					actuator_counter = 100;
 2524              		.loc 1 685 0
 2525 0ec0 A020     		mov	r0, #160
 2526 0ec2 C005     		lsl	r0, r0, #23
 2527 0ec4 C021     		mov	r1, #192
 2528 0ec6 4901     		lsl	r1, r1, #5
 2529 0ec8 0022     		mov	r2, #0
 2530 0eca FFF7FEFF 		bl	HAL_GPIO_WritePin
 2531              	.LVL342:
 686:Src/main.c    **** 	    				}
 2532              		.loc 1 686 0
 2533 0ece 6423     		mov	r3, #100
 2534 0ed0 9946     		mov	r9, r3
 2535 0ed2 02E0     		b	.L40
 2536              	.LVL343:
 2537              	.L41:
 690:Src/main.c    **** 	    				}
 2538              		.loc 1 690 0
 2539 0ed4 4B46     		mov	r3, r9
 2540              	.LVL344:
 2541 0ed6 0133     		add	r3, r3, #1
 2542 0ed8 9946     		mov	r9, r3
 2543              	.LVL345:
 2544              	.L40:
 695:Src/main.c    **** 	    			{
 2545              		.loc 1 695 0
 2546 0eda FFF7FEFF 		bl	depth_switch_get_current_depth
 2547              	.LVL346:
 2548 0ede 069A     		ldr	r2, [sp, #24]
 2549 0ee0 079B     		ldr	r3, [sp, #28]
 2550 0ee2 FFF7FEFF 		bl	__aeabi_dcmple
 2551              	.LVL347:
 2552 0ee6 0028     		cmp	r0, #0
 2553 0ee8 00D1     		bne	.LCB2356
 2554 0eea 22E4     		b	.L23	@long jump
 2555              	.LCB2356:
 695:Src/main.c    **** 	    			{
 2556              		.loc 1 695 0 is_stmt 0 discriminator 1
 2557 0eec 4B46     		mov	r3, r9
 2558 0eee 002B     		cmp	r3, #0
 2559 0ef0 00D0     		beq	.LCB2359
 2560 0ef2 1EE4     		b	.L23	@long jump
 2561              	.LCB2359:
 2562              	.LBB9:
 698:Src/main.c    **** 	    				// switch on actuators
 2563              		.loc 1 698 0 is_stmt 1
 2564 0ef4 0133     		add	r3, r3, #1
 2565 0ef6 9946     		mov	r9, r3
 2566              	.LVL348:
 700:Src/main.c    ****                                                                                                    
 2567              		.loc 1 700 0
 2568 0ef8 A020     		mov	r0, #160
 2569 0efa C005     		lsl	r0, r0, #23
 2570 0efc C021     		mov	r1, #192
 2571 0efe 4901     		lsl	r1, r1, #5
 2572 0f00 0122     		mov	r2, #1
ARM GAS  /tmp/ccwr8m4c.s 			page 67


 2573 0f02 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2574              	.LVL349:
 703:Src/main.c    ****                                                                                                    
 2575              		.loc 1 703 0
 2576 0f06 9248     		ldr	r0, .L65+28
 2577 0f08 0F21     		mov	r1, #15
 2578 0f0a 0122     		mov	r2, #1
 2579 0f0c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2580              	.LVL350:
 707:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,0);
 2581              		.loc 1 707 0
 2582 0f10 0020     		mov	r0, #0
 2583 0f12 FFF7FEFF 		bl	ssd1306_Fill
 2584              	.LVL351:
 708:Src/main.c    **** 	    	        	sprintf(timestamp, "%02d:%02d %02d.%02d", hours, minutes, date, month);
 2585              		.loc 1 708 0
 2586 0f16 0020     		mov	r0, #0
 2587 0f18 0021     		mov	r1, #0
 2588 0f1a FFF7FEFF 		bl	ssd1306_SetCursor
 2589              	.LVL352:
 709:Src/main.c    **** 	    	        	//sprintf(timestamp, "timestamp");
 2590              		.loc 1 709 0
 2591 0f1e 8D4C     		ldr	r4, .L65+32
 2592 0f20 1323     		mov	r3, #19
 2593 0f22 0AAA     		add	r2, sp, #40
 2594              	.LVL353:
 2595 0f24 9446     		mov	ip, r2
 2596 0f26 6344     		add	r3, r3, ip
 2597 0f28 1A78     		ldrb	r2, [r3]
 2598              	.LVL354:
 2599 0f2a 1223     		mov	r3, #18
 2600 0f2c 6344     		add	r3, r3, ip
 2601 0f2e 1B78     		ldrb	r3, [r3]
 2602 0f30 0FA9     		add	r1, sp, #60
 2603 0f32 0978     		ldrb	r1, [r1]
 2604 0f34 0091     		str	r1, [sp]
 2605 0f36 1521     		mov	r1, #21
 2606 0f38 6144     		add	r1, r1, ip
 2607 0f3a 0978     		ldrb	r1, [r1]
 2608 0f3c 0191     		str	r1, [sp, #4]
 2609 0f3e 201C     		mov	r0, r4
 2610 0f40 8549     		ldr	r1, .L65+36
 2611 0f42 FFF7FEFF 		bl	sprintf
 2612              	.LVL355:
 711:Src/main.c    ****   	    	        	ssd1306_SetCursor(0,22);
 2613              		.loc 1 711 0
 2614 0f46 854D     		ldr	r5, .L65+40
 2615 0f48 201C     		mov	r0, r4
 2616 0f4a 2968     		ldr	r1, [r5]
 2617 0f4c 6A68     		ldr	r2, [r5, #4]
 2618 0f4e 0123     		mov	r3, #1
 2619 0f50 FFF7FEFF 		bl	ssd1306_WriteString
 2620              	.LVL356:
 712:Src/main.c    **** 	    	        	sprintf(message, ">>>>> %02dm", (int)depth);
 2621              		.loc 1 712 0
 2622 0f54 0020     		mov	r0, #0
 2623 0f56 1621     		mov	r1, #22
ARM GAS  /tmp/ccwr8m4c.s 			page 68


 2624 0f58 FFF7FEFF 		bl	ssd1306_SetCursor
 2625              	.LVL357:
 713:Src/main.c    ****   	    	        	ssd1306_WriteString(message, Font_11x18, White);
 2626              		.loc 1 713 0
 2627 0f5c 0698     		ldr	r0, [sp, #24]
 2628 0f5e 0799     		ldr	r1, [sp, #28]
 2629 0f60 FFF7FEFF 		bl	__aeabi_d2iz
 2630              	.LVL358:
 2631 0f64 041C     		mov	r4, r0
 2632 0f66 754F     		ldr	r7, .L65+8
 2633 0f68 381C     		mov	r0, r7
 2634 0f6a 7D49     		ldr	r1, .L65+44
 2635 0f6c 221C     		mov	r2, r4
 2636 0f6e FFF7FEFF 		bl	sprintf
 2637              	.LVL359:
 714:Src/main.c    ****   	    	        	//ssd1306_SetCursor(0,44);
 2638              		.loc 1 714 0
 2639 0f72 381C     		mov	r0, r7
 2640 0f74 2968     		ldr	r1, [r5]
 2641 0f76 6A68     		ldr	r2, [r5, #4]
 2642 0f78 0123     		mov	r3, #1
 2643 0f7a FFF7FEFF 		bl	ssd1306_WriteString
 2644              	.LVL360:
 718:Src/main.c    ****                                                                                                    
 2645              		.loc 1 718 0
 2646 0f7e FFF7FEFF 		bl	ssd1306_UpdateScreen
 2647              	.LVL361:
 723:Src/main.c    **** 	    	       		sprintf(temperature_message, "%02d", (int)(actual_temperature/100.0));
 2648              		.loc 1 723 0
 2649 0f82 201C     		mov	r0, r4
 2650 0f84 FFF7FEFF 		bl	__aeabi_i2d
 2651              	.LVL362:
 2652 0f88 021C     		mov	r2, r0
 2653 0f8a 0B1C     		mov	r3, r1
 2654 0f8c 0698     		ldr	r0, [sp, #24]
 2655 0f8e 0799     		ldr	r1, [sp, #28]
 2656 0f90 FFF7FEFF 		bl	__aeabi_dsub
 2657              	.LVL363:
 2658 0f94 0022     		mov	r2, #0
 2659 0f96 684B     		ldr	r3, .L65+4
 2660 0f98 FFF7FEFF 		bl	__aeabi_dmul
 2661              	.LVL364:
 2662 0f9c FFF7FEFF 		bl	__aeabi_d2iz
 2663              	.LVL365:
 2664 0fa0 031C     		mov	r3, r0
 2665 0fa2 381C     		mov	r0, r7
 2666 0fa4 6649     		ldr	r1, .L65+12
 2667 0fa6 221C     		mov	r2, r4
 2668 0fa8 FFF7FEFF 		bl	sprintf
 2669              	.LVL366:
 724:Src/main.c    **** 	    				b0 = message[0];
 2670              		.loc 1 724 0
 2671 0fac 0A98     		ldr	r0, [sp, #40]
 2672 0fae 0B99     		ldr	r1, [sp, #44]
 2673 0fb0 0022     		mov	r2, #0
 2674 0fb2 644B     		ldr	r3, .L65+16
 2675 0fb4 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/ccwr8m4c.s 			page 69


 2676              	.LVL367:
 2677 0fb8 634B     		ldr	r3, .L65+20
 2678 0fba 9A46     		mov	r10, r3
 2679 0fbc FFF7FEFF 		bl	__aeabi_d2iz
 2680              	.LVL368:
 2681 0fc0 021C     		mov	r2, r0
 2682 0fc2 5046     		mov	r0, r10
 2683 0fc4 6149     		ldr	r1, .L65+24
 2684 0fc6 FFF7FEFF 		bl	sprintf
 2685              	.LVL369:
 725:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2686              		.loc 1 725 0
 2687 0fca 3B78     		ldrb	r3, [r7]
 2688 0fcc 1724     		mov	r4, #23
 2689 0fce 0AAA     		add	r2, sp, #40
 2690              	.LVL370:
 2691 0fd0 9446     		mov	ip, r2
 2692 0fd2 6444     		add	r4, r4, ip
 2693 0fd4 2370     		strb	r3, [r4]
 726:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2694              		.loc 1 726 0
 2695 0fd6 6B46     		mov	r3, sp
 2696 0fd8 9B8E     		ldrh	r3, [r3, #52]
 2697 0fda 0094     		str	r4, [sp]
 2698 0fdc 0125     		mov	r5, #1
 2699 0fde 0195     		str	r5, [sp, #4]
 2700 0fe0 6426     		mov	r6, #100
 2701 0fe2 0296     		str	r6, [sp, #8]
 2702 0fe4 5348     		ldr	r0, .L65
 2703 0fe6 0593     		str	r3, [sp, #20]
 2704 0fe8 191C     		mov	r1, r3
 2705 0fea 5A46     		mov	r2, fp
 2706              	.LVL371:
 2707 0fec 0223     		mov	r3, #2
 2708 0fee FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2709              	.LVL372:
 727:Src/main.c    **** 	    				eeprom_debug_address++;
 2710              		.loc 1 727 0
 2711 0ff2 0520     		mov	r0, #5
 2712 0ff4 FFF7FEFF 		bl	HAL_Delay
 2713              	.LVL373:
 728:Src/main.c    **** 	    				b0 = message[1];
 2714              		.loc 1 728 0
 2715 0ff8 5B46     		mov	r3, fp
 2716 0ffa 0133     		add	r3, r3, #1
 2717 0ffc 9AB2     		uxth	r2, r3
 2718 0ffe 9346     		mov	fp, r2
 2719              	.LVL374:
 729:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2720              		.loc 1 729 0
 2721 1000 7B78     		ldrb	r3, [r7, #1]
 2722 1002 2370     		strb	r3, [r4]
 730:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2723              		.loc 1 730 0
 2724 1004 0094     		str	r4, [sp]
 2725 1006 0195     		str	r5, [sp, #4]
 2726 1008 0296     		str	r6, [sp, #8]
ARM GAS  /tmp/ccwr8m4c.s 			page 70


 2727 100a 4A48     		ldr	r0, .L65
 2728 100c 0599     		ldr	r1, [sp, #20]
 2729 100e 0223     		mov	r3, #2
 2730 1010 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2731              	.LVL375:
 731:Src/main.c    **** 	    				eeprom_debug_address++;
 2732              		.loc 1 731 0
 2733 1014 0520     		mov	r0, #5
 2734 1016 FFF7FEFF 		bl	HAL_Delay
 2735              	.LVL376:
 732:Src/main.c    **** 	    				//b0 = message[2];
 2736              		.loc 1 732 0
 2737 101a 5A46     		mov	r2, fp
 2738 101c 531C     		add	r3, r2, #1
 2739 101e 9AB2     		uxth	r2, r3
 2740 1020 9346     		mov	fp, r2
 2741              	.LVL377:
 737:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2742              		.loc 1 737 0
 2743 1022 FB78     		ldrb	r3, [r7, #3]
 2744 1024 2370     		strb	r3, [r4]
 738:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2745              		.loc 1 738 0
 2746 1026 0094     		str	r4, [sp]
 2747 1028 0195     		str	r5, [sp, #4]
 2748 102a 0296     		str	r6, [sp, #8]
 2749 102c 4148     		ldr	r0, .L65
 2750 102e 0599     		ldr	r1, [sp, #20]
 2751 1030 0223     		mov	r3, #2
 2752 1032 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2753              	.LVL378:
 739:Src/main.c    **** 	    				eeprom_debug_address++;
 2754              		.loc 1 739 0
 2755 1036 0520     		mov	r0, #5
 2756 1038 FFF7FEFF 		bl	HAL_Delay
 2757              	.LVL379:
 740:Src/main.c    **** 	    				b0 = temperature_message[0];
 2758              		.loc 1 740 0
 2759 103c 5A46     		mov	r2, fp
 2760 103e 571C     		add	r7, r2, #1
 2761 1040 BFB2     		uxth	r7, r7
 2762              	.LVL380:
 741:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2763              		.loc 1 741 0
 2764 1042 5246     		mov	r2, r10
 2765 1044 1378     		ldrb	r3, [r2]
 2766 1046 2370     		strb	r3, [r4]
 742:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2767              		.loc 1 742 0
 2768 1048 0094     		str	r4, [sp]
 2769 104a 0195     		str	r5, [sp, #4]
 2770 104c 0296     		str	r6, [sp, #8]
 2771 104e 3948     		ldr	r0, .L65
 2772 1050 0599     		ldr	r1, [sp, #20]
 2773 1052 3A1C     		mov	r2, r7
 2774 1054 0223     		mov	r3, #2
 2775 1056 FFF7FEFF 		bl	HAL_I2C_Mem_Write
ARM GAS  /tmp/ccwr8m4c.s 			page 71


 2776              	.LVL381:
 743:Src/main.c    **** 	    				eeprom_debug_address++;
 2777              		.loc 1 743 0
 2778 105a 0520     		mov	r0, #5
 2779 105c FFF7FEFF 		bl	HAL_Delay
 2780              	.LVL382:
 744:Src/main.c    **** 	    				b0 = temperature_message[1];
 2781              		.loc 1 744 0
 2782 1060 0137     		add	r7, r7, #1
 2783              	.LVL383:
 2784 1062 BFB2     		uxth	r7, r7
 2785              	.LVL384:
 745:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2786              		.loc 1 745 0
 2787 1064 5246     		mov	r2, r10
 2788 1066 5378     		ldrb	r3, [r2, #1]
 2789 1068 2370     		strb	r3, [r4]
 746:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2790              		.loc 1 746 0
 2791 106a 0094     		str	r4, [sp]
 2792 106c 0195     		str	r5, [sp, #4]
 2793 106e 0296     		str	r6, [sp, #8]
 2794 1070 3048     		ldr	r0, .L65
 2795 1072 0599     		ldr	r1, [sp, #20]
 2796 1074 3A1C     		mov	r2, r7
 2797 1076 0223     		mov	r3, #2
 2798 1078 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2799              	.LVL385:
 747:Src/main.c    **** 	    				eeprom_debug_address++;
 2800              		.loc 1 747 0
 2801 107c 0520     		mov	r0, #5
 2802 107e FFF7FEFF 		bl	HAL_Delay
 2803              	.LVL386:
 748:Src/main.c    **** 	    				b0 = '$';
 2804              		.loc 1 748 0
 2805 1082 0137     		add	r7, r7, #1
 2806              	.LVL387:
 2807 1084 BFB2     		uxth	r7, r7
 2808              	.LVL388:
 749:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2809              		.loc 1 749 0
 2810 1086 2422     		mov	r2, #36
 2811 1088 9246     		mov	r10, r2
 2812 108a 2270     		strb	r2, [r4]
 750:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2813              		.loc 1 750 0
 2814 108c 0094     		str	r4, [sp]
 2815 108e 0195     		str	r5, [sp, #4]
 2816 1090 0296     		str	r6, [sp, #8]
 2817 1092 2848     		ldr	r0, .L65
 2818 1094 0599     		ldr	r1, [sp, #20]
 2819 1096 3A1C     		mov	r2, r7
 2820 1098 0223     		mov	r3, #2
 2821 109a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2822              	.LVL389:
 751:Src/main.c    **** 	    				eeprom_debug_address++;
 2823              		.loc 1 751 0
ARM GAS  /tmp/ccwr8m4c.s 			page 72


 2824 109e 0520     		mov	r0, #5
 2825 10a0 FFF7FEFF 		bl	HAL_Delay
 2826              	.LVL390:
 752:Src/main.c    **** 	    				b0 = '$';
 2827              		.loc 1 752 0
 2828 10a4 0137     		add	r7, r7, #1
 2829              	.LVL391:
 2830 10a6 BFB2     		uxth	r7, r7
 2831              	.LVL392:
 753:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2832              		.loc 1 753 0
 2833 10a8 5246     		mov	r2, r10
 2834 10aa 2270     		strb	r2, [r4]
 754:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2835              		.loc 1 754 0
 2836 10ac 0094     		str	r4, [sp]
 2837 10ae 0195     		str	r5, [sp, #4]
 2838 10b0 0296     		str	r6, [sp, #8]
 2839 10b2 2048     		ldr	r0, .L65
 2840 10b4 0599     		ldr	r1, [sp, #20]
 2841 10b6 3A1C     		mov	r2, r7
 2842 10b8 0223     		mov	r3, #2
 2843 10ba FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2844              	.LVL393:
 755:Src/main.c    **** 	    				eeprom_debug_address++;
 2845              		.loc 1 755 0
 2846 10be 0520     		mov	r0, #5
 2847 10c0 FFF7FEFF 		bl	HAL_Delay
 2848              	.LVL394:
 756:Src/main.c    **** 	    				eeprom_number_of_records++;
 2849              		.loc 1 756 0
 2850 10c4 0137     		add	r7, r7, #1
 2851              	.LVL395:
 2852 10c6 BFB2     		uxth	r7, r7
 2853              	.LVL396:
 758:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2854              		.loc 1 758 0
 2855 10c8 5346     		mov	r3, r10
 2856 10ca 2370     		strb	r3, [r4]
 759:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2857              		.loc 1 759 0
 2858 10cc 0094     		str	r4, [sp]
 2859 10ce 0195     		str	r5, [sp, #4]
 2860 10d0 0296     		str	r6, [sp, #8]
 2861 10d2 1848     		ldr	r0, .L65
 2862 10d4 0599     		ldr	r1, [sp, #20]
 2863 10d6 3A1C     		mov	r2, r7
 2864 10d8 0223     		mov	r3, #2
 2865 10da FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2866              	.LVL397:
 760:Src/main.c    **** 	    				eeprom_debug_address++;
 2867              		.loc 1 760 0
 2868 10de 0520     		mov	r0, #5
 2869 10e0 FFF7FEFF 		bl	HAL_Delay
 2870              	.LVL398:
 761:Src/main.c    **** 	    				eeprom_number_of_records++;
 2871              		.loc 1 761 0
ARM GAS  /tmp/ccwr8m4c.s 			page 73


 2872 10e4 0137     		add	r7, r7, #1
 2873              	.LVL399:
 2874 10e6 BFB2     		uxth	r7, r7
 2875              	.LVL400:
 763:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2876              		.loc 1 763 0
 2877 10e8 5346     		mov	r3, r10
 2878 10ea 2370     		strb	r3, [r4]
 764:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2879              		.loc 1 764 0
 2880 10ec 0094     		str	r4, [sp]
 2881 10ee 0195     		str	r5, [sp, #4]
 2882 10f0 0296     		str	r6, [sp, #8]
 2883 10f2 1048     		ldr	r0, .L65
 2884 10f4 0599     		ldr	r1, [sp, #20]
 2885 10f6 3A1C     		mov	r2, r7
 2886 10f8 0223     		mov	r3, #2
 2887 10fa FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2888              	.LVL401:
 765:Src/main.c    **** 	    				eeprom_debug_address++;
 2889              		.loc 1 765 0
 2890 10fe 0520     		mov	r0, #5
 2891 1100 FFF7FEFF 		bl	HAL_Delay
 2892              	.LVL402:
 766:Src/main.c    **** 	    				eeprom_number_of_records++;
 2893              		.loc 1 766 0
 2894 1104 0137     		add	r7, r7, #1
 2895              	.LVL403:
 2896 1106 BFB2     		uxth	r7, r7
 2897              	.LVL404:
 768:Src/main.c    **** 	    				HAL_I2C_Mem_Write(at24c32_i2c_handle, at24c32_shifted_address, eeprom_debug_address, I2C_M
 2898              		.loc 1 768 0
 2899 1108 5346     		mov	r3, r10
 2900 110a 2370     		strb	r3, [r4]
 769:Src/main.c    **** 	    				HAL_Delay(write_delay);
 2901              		.loc 1 769 0
 2902 110c 0094     		str	r4, [sp]
 2903 110e 0195     		str	r5, [sp, #4]
 2904 1110 0296     		str	r6, [sp, #8]
 2905 1112 0848     		ldr	r0, .L65
 2906 1114 0599     		ldr	r1, [sp, #20]
 2907 1116 3A1C     		mov	r2, r7
 2908 1118 0223     		mov	r3, #2
 2909 111a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2910              	.LVL405:
 770:Src/main.c    **** 	    				eeprom_debug_address++;
 2911              		.loc 1 770 0
 2912 111e 0520     		mov	r0, #5
 2913 1120 FFF7FEFF 		bl	HAL_Delay
 2914              	.LVL406:
 771:Src/main.c    **** 	    				eeprom_number_of_records++;
 2915              		.loc 1 771 0
 2916 1124 0137     		add	r7, r7, #1
 2917              	.LVL407:
 2918 1126 BBB2     		uxth	r3, r7
 2919 1128 9B46     		mov	fp, r3
 2920              	.LVL408:
ARM GAS  /tmp/ccwr8m4c.s 			page 74


 772:Src/main.c    ****                                                                                                    
 2921              		.loc 1 772 0
 2922 112a 0C9B     		ldr	r3, [sp, #48]
 2923 112c 0433     		add	r3, r3, #4
 2924 112e 0C93     		str	r3, [sp, #48]
 2925              	.LVL409:
 2926 1130 FFF7FFFA 		bl	.L23	@ far jump
 2927              	.L66:
 2928              		.align	2
 2929              	.L65:
 2930 1134 00000000 		.word	hi2c2
 2931 1138 00002440 		.word	1076101120
 2932 113c 00000000 		.word	.LANCHOR0
 2933 1140 08010000 		.word	.LC36
 2934 1144 00005940 		.word	1079574528
 2935 1148 00000000 		.word	.LANCHOR2
 2936 114c 14010000 		.word	.LC39
 2937 1150 00040050 		.word	1342178304
 2938 1154 00000000 		.word	.LANCHOR1
 2939 1158 AC000000 		.word	.LC26
 2940 115c 00000000 		.word	Font_11x18
 2941 1160 1C010000 		.word	.LC41
 2942              	.LBE9:
 2943              	.LBE5:
 2944              	.LBE3:
 2945              		.cfi_endproc
 2946              	.LFE34:
 2948              		.section	.text.Error_Handler,"ax",%progbits
 2949              		.align	2
 2950              		.global	Error_Handler
 2951              		.code	16
 2952              		.thumb_func
 2954              	Error_Handler:
 2955              	.LFB36:
 856:Src/main.c    **** 
 857:Src/main.c    **** /* USER CODE BEGIN 4 */
 858:Src/main.c    **** 
 859:Src/main.c    **** /* USER CODE END 4 */
 860:Src/main.c    **** 
 861:Src/main.c    **** /**
 862:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 863:Src/main.c    ****   * @retval None
 864:Src/main.c    ****   */
 865:Src/main.c    **** void Error_Handler(void)
 866:Src/main.c    **** {
 2956              		.loc 1 866 0
 2957              		.cfi_startproc
 867:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 868:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 869:Src/main.c    **** 
 870:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 871:Src/main.c    **** }
 2958              		.loc 1 871 0
 2959              		@ sp needed
 2960 0000 7047     		bx	lr
 2961              		.cfi_endproc
 2962              	.LFE36:
ARM GAS  /tmp/ccwr8m4c.s 			page 75


 2964              		.comm	SSD1306_I2C_PORT,4,4
 2965 0002 C046     		.section	.bss.timestamp,"aw",%nobits
 2966              		.align	2
 2967              		.set	.LANCHOR1,. + 0
 2970              	timestamp:
 2971 0000 00000000 		.space	64
 2971      00000000 
 2971      00000000 
 2971      00000000 
 2971      00000000 
 2972              		.section	.rodata.str1.4,"aMS",%progbits,1
 2973              		.align	2
 2974              	.LC2:
 2975 0000 4C303731 		.ascii	"L071\000"
 2975      00
 2976 0005 000000   		.space	3
 2977              	.LC5:
 2978 0008 54455354 		.ascii	"TEST..\000"
 2978      2E2E00
 2979 000f 00       		.space	1
 2980              	.LC8:
 2981 0010 6C6F6720 		.ascii	"log mode\000"
 2981      6D6F6465 
 2981      00
 2982 0019 000000   		.space	3
 2983              	.LC11:
 2984 001c 646F776E 		.ascii	"download...\000"
 2984      6C6F6164 
 2984      2E2E2E00 
 2985              	.LC13:
 2986 0028 0D0A00   		.ascii	"\015\012\000"
 2987 002b 00       		.space	1
 2988              	.LC16:
 2989 002c 6C6F6720 		.ascii	"log bank 1 start\015\012***********\015\012\000"
 2989      62616E6B 
 2989      20312073 
 2989      74617274 
 2989      0D0A2A2A 
 2990              	.LC19:
 2991 004c 2A2A2A2A 		.ascii	"**********\015\012log bank 1 finish\015\012\000"
 2991      2A2A2A2A 
 2991      2A2A0D0A 
 2991      6C6F6720 
 2991      62616E6B 
 2992              	.LC21:
 2993 006c 6C6F6720 		.ascii	"log bank 2 start\015\012***********\015\012\000"
 2993      62616E6B 
 2993      20322073 
 2993      74617274 
 2993      0D0A2A2A 
 2994              	.LC23:
 2995 008c 2A2A2A2A 		.ascii	"**********\015\012log bank 2 finish\015\012\000"
 2995      2A2A2A2A 
 2995      2A2A0D0A 
 2995      6C6F6720 
 2995      62616E6B 
 2996              	.LC26:
ARM GAS  /tmp/ccwr8m4c.s 			page 76


 2997 00ac 25303264 		.ascii	"%02d:%02d %02d.%02d\000"
 2997      3A253032 
 2997      64202530 
 2997      32642E25 
 2997      30326400 
 2998              	.LC28:
 2999 00c0 25303264 		.ascii	"%02d %02d %02d %02d\000"
 2999      20253032 
 2999      64202530 
 2999      32642025 
 2999      30326400 
 3000              	.LC30:
 3001 00d4 41564152 		.ascii	"AVAR GL %02dm\000"
 3001      20474C20 
 3001      25303264 
 3001      6D00
 3002 00e2 0000     		.space	2
 3003              	.LC32:
 3004 00e4 616B6B75 		.ascii	"akkum %02d%%\000"
 3004      6D202530 
 3004      32642525 
 3004      00
 3005 00f1 000000   		.space	3
 3006              	.LC34:
 3007 00f4 676C2D2D 		.ascii	"gl--> %02d.%01dm\000"
 3007      3E202530 
 3007      32642E25 
 3007      3031646D 
 3007      00
 3008 0105 000000   		.space	3
 3009              	.LC36:
 3010 0108 25303264 		.ascii	"%02d.%01d\000"
 3010      2E253031 
 3010      6400
 3011 0112 0000     		.space	2
 3012              	.LC39:
 3013 0114 25303264 		.ascii	"%02d\000"
 3013      00
 3014 0119 000000   		.space	3
 3015              	.LC41:
 3016 011c 3E3E3E3E 		.ascii	">>>>> %02dm\000"
 3016      3E202530 
 3016      32646D00 
 3017              		.section	.bss.message,"aw",%nobits
 3018              		.align	2
 3019              		.set	.LANCHOR0,. + 0
 3022              	message:
 3023 0000 00000000 		.space	64
 3023      00000000 
 3023      00000000 
 3023      00000000 
 3023      00000000 
 3024              		.section	.bss.temperature_message,"aw",%nobits
 3025              		.align	2
 3026              		.set	.LANCHOR2,. + 0
 3029              	temperature_message:
 3030 0000 00000000 		.space	64
ARM GAS  /tmp/ccwr8m4c.s 			page 77


 3030      00000000 
 3030      00000000 
 3030      00000000 
 3030      00000000 
 3031              		.text
 3032              	.Letext0:
 3033              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3034              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3035              		.file 4 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 3036              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 3037              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 3038              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 3039              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 3040              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 3041              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 3042              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 3043              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 3044              		.file 13 "Inc/fonts.h"
 3045              		.file 14 "Inc/ssd1306.h"
 3046              		.file 15 "<built-in>"
 3047              		.file 16 "Inc/pressure_sensor_object.h"
 3048              		.file 17 "Inc/voltmeter_object.h"
 3049              		.file 18 "Inc/i2c.h"
 3050              		.file 19 "Inc/usart.h"
 3051              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 3052              		.file 21 "/usr/include/newlib/string.h"
 3053              		.file 22 "Inc/depth_switch_interface.h"
 3054              		.file 23 "Inc/one_second_timer_interface.h"
 3055              		.file 24 "Inc/rtc_ds3231_interface.h"
 3056              		.file 25 "Inc/gpio.h"
 3057              		.file 26 "Inc/adc.h"
 3058              		.file 27 "Inc/spi.h"
ARM GAS  /tmp/ccwr8m4c.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwr8m4c.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwr8m4c.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwr8m4c.s:130    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccwr8m4c.s:147    .text.main:0000000000000000 $t
     /tmp/ccwr8m4c.s:152    .text.main:0000000000000000 main
     /tmp/ccwr8m4c.s:769    .text.main:000000000000039c $d
     /tmp/ccwr8m4c.s:785    .text.main:00000000000003d4 $t
     /tmp/ccwr8m4c.s:1307   .text.main:0000000000000700 $d
     /tmp/ccwr8m4c.s:1317   .text.main:000000000000071c $t
     /tmp/ccwr8m4c.s:1816   .text.main:0000000000000a28 $d
     /tmp/ccwr8m4c.s:1833   .text.main:0000000000000a60 $t
     /tmp/ccwr8m4c.s:2286   .text.main:0000000000000d2c $d
     /tmp/ccwr8m4c.s:2299   .text.main:0000000000000d50 $t
     /tmp/ccwr8m4c.s:2930   .text.main:0000000000001134 $d
     /tmp/ccwr8m4c.s:2949   .text.Error_Handler:0000000000000000 $t
     /tmp/ccwr8m4c.s:2954   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 SSD1306_I2C_PORT
     /tmp/ccwr8m4c.s:2966   .bss.timestamp:0000000000000000 $d
     /tmp/ccwr8m4c.s:2970   .bss.timestamp:0000000000000000 timestamp
     /tmp/ccwr8m4c.s:2973   .rodata.str1.4:0000000000000000 $d
     /tmp/ccwr8m4c.s:3018   .bss.message:0000000000000000 $d
     /tmp/ccwr8m4c.s:3022   .bss.message:0000000000000000 message
     /tmp/ccwr8m4c.s:3025   .bss.temperature_message:0000000000000000 $d
     /tmp/ccwr8m4c.s:3029   .bss.temperature_message:0000000000000000 temperature_message
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_ui2d
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_dcmplt
__aeabi_d2iz
__aeabi_dsub
__aeabi_ddiv
__aeabi_dcmpgt
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmple
HAL_Init
MX_GPIO_Init
MX_ADC_Init
MX_I2C1_Init
MX_I2C3_Init
MX_SPI1_Init
MX_USART1_UART_Init
rtc_ds3231_set_i2c_handle
ssd1306_set_i2c_port
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ARM GAS  /tmp/ccwr8m4c.s 			page 79


ssd1306_WriteString
one_second_timer_init
one_second_timer_start
pressure_sensor_object_init
depth_switch_turn_signal_led
rtc_ds3231_action
depth_switch_check_gpio
strlen
HAL_UART_Transmit
HAL_I2C_Mem_Read
hi2c3
hi2c1
Font_16x26
Font_11x18
huart1
hi2c2
one_second_timer_get_flag
one_second_timer_reset_flag
pressure_sensor_measure_pressure_temperature
pressure_sensor_get_pressure
pressure_sensor_get_temperature
voltmeter_measure_voltage
voltmeter_get_voltage
voltmeter_get_percentage
rtc_ds3231_get_time
rtc_ds3231_get_date
depth_switch_action
sprintf
depth_switch_get_current_depth
HAL_I2C_Mem_Write
HAL_GPIO_WritePin
