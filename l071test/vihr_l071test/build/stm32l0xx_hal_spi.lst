ARM GAS  /tmp/ccu3pZ5o.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_uidiv
  18              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  19              		.align	2
  20              		.code	16
  21              		.thumb_func
  23              	SPI_AbortRx_ISR:
  24              	.LFB87:
  25              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @file    stm32l0xx_hal_spi.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the DMAx clock
ARM GAS  /tmp/ccu3pZ5o.s 			page 2


  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Data buffer address alignment restriction:
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) In case more than 1 byte is requested to be transferred, the HAL SPI uses 16-bit access f
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           But there is no support for unaligned accesses on the Cortex-M0 processor.
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           So, if the user wants to transfer more than 1 byte, it shall ensure that 16-bit aligned a
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) pData parameter in HAL_SPI_Transmit(), HAL_SPI_Transmit_IT(), HAL_SPI_Receive() and 
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) pTxData and pRxData parameters in HAL_SPI_TransmitReceive() and HAL_SPI_TransmitRece
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) There is no such restriction when going through DMA by using HAL_SPI_Transmit_DMA(), HAL_
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           and HAL_SPI_TransmitReceive_DMA().
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Callback registration:
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           and a pointer to the user callback function.
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 3


  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           weak function.
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           and the Callback ID.
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           This function allows to reset following callbacks:
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        or HAL_SPI_Init() function.
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        not defined, the callback registering feature is not available
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   @endverbatim
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   Additional table :
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |===========================================================================================
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
ARM GAS  /tmp/ccu3pZ5o.s 			page 4


 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |===========================================================================================
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        @note
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @attention
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * All rights reserved.</center></h2>
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
ARM GAS  /tmp/ccu3pZ5o.s 			page 5


 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #include "stm32l0xx_hal.h"
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup STM32L0xx_HAL_Driver
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI SPI
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief SPI HAL module driver
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccu3pZ5o.s 			page 6


 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           the selected configuration:
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Mode
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Direction
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Data Size
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Clock Polarity and Phase
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) NSS Management
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) BaudRate Prescaler
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) FirstBit
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) TIMode
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) CRC Calculation
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           of the selected SPIx peripheral.
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/ccu3pZ5o.s 			page 7


 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi == NULL)
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the parameters */
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Init the SPI Callback settings */
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
ARM GAS  /tmp/ccu3pZ5o.s 			page 8


 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : NSS management, TI Mode */
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi == NULL)
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check SPI Instance parameter */
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 9


 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Release Lock */
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 10


 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (pCallback == NULL)
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update the error code */
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process locked */
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     switch (CallbackID)
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
ARM GAS  /tmp/ccu3pZ5o.s 			page 11


 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       default :
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Update the error code */
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Return error status */
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         status =  HAL_ERROR;
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     switch (CallbackID)
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       default :
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Update the error code */
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Return error status */
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         status =  HAL_ERROR;
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update the error code */
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Return error status */
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     status =  HAL_ERROR;
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Release Lock */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return status;
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
ARM GAS  /tmp/ccu3pZ5o.s 			page 12


 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process locked */
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     switch (CallbackID)
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 13


 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       default :
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Update the error code */
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Return error status */
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         status =  HAL_ERROR;
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     switch (CallbackID)
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       default :
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Update the error code */
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Return error status */
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         status =  HAL_ERROR;
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update the error code */
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Return error status */
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     status =  HAL_ERROR;
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Release Lock */
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return status;
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *  @brief   Data transfers functions
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                       ##### IO operation functions #####
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  [..]
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
ARM GAS  /tmp/ccu3pZ5o.s 			page 14


 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     data transfers.
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) There are two modes of transfer:
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             after finishing transfer.
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             The end of the data processing will be indicated through the
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             using DMA mode.
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   initial_TxXferCount = Size;
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
ARM GAS  /tmp/ccu3pZ5o.s 			page 15


 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*Init field not used in handle to zero */
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
ARM GAS  /tmp/ccu3pZ5o.s 			page 16


 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Timeout management */
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Timeout management */
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable CRC Transmission */
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
ARM GAS  /tmp/ccu3pZ5o.s 			page 17


 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error:
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be received
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 18


 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*Init field not used in handle to zero */
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount--;
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transfer loop */
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check the RXNE flag */
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
ARM GAS  /tmp/ccu3pZ5o.s 			page 19


1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* read the received data */
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Timeout management */
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transfer loop */
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check the RXNE flag */
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Timeout management */
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Handle the CRC Transmission */
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Read the latest data */
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* the latest data has not been received */
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       goto error;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
ARM GAS  /tmp/ccu3pZ5o.s 			page 20


1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait the CRC data */
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       goto error;
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if CRC error occurred */
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccu3pZ5o.s 			page 21


1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                           uint32_t Timeout)
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tmp_mode;
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tickstart;
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init temporary variables */
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_state           = hspi->State;
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   initial_TxXferCount = Size;
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccu3pZ5o.s 			page 22


1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check TXE flag */
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         txallowed = 0U;
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Enable CRC Transmission */
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check RXNE flag */
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
ARM GAS  /tmp/ccu3pZ5o.s 			page 23


1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         txallowed = 1U;
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         goto error;
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check TXE flag */
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         txallowed = 0U;
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Enable CRC Transmission */
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         txallowed = 1U;
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         goto error;
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
ARM GAS  /tmp/ccu3pZ5o.s 			page 24


1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until TXE flag */
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Error on the CRC reception */
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       goto error;
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Read CRC */
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if CRC error occurred */
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Clear CRC Flag */
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccu3pZ5o.s 			page 25


1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the function for IT treatment */
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
ARM GAS  /tmp/ccu3pZ5o.s 			page 26


1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccu3pZ5o.s 			page 27


1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the function for IT treatment */
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             process unlock */
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccu3pZ5o.s 			page 28


1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tmp_mode;
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process locked */
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init temporary variables */
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_state           = hspi->State;
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
ARM GAS  /tmp/ccu3pZ5o.s 			page 29


1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the function for IT treatment */
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccu3pZ5o.s 			page 30


1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check tx dma handle */
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 31


1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA error callback */
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update SPI error code */
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable Tx DMA Request */
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check rx dma handle */
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
ARM GAS  /tmp/ccu3pZ5o.s 			page 32


1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check tx dma handle */
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
ARM GAS  /tmp/ccu3pZ5o.s 			page 33


1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA error callback */
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update SPI error code */
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable Rx DMA Request */
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error:
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                               uint16_t Size)
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tmp_mode;
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check rx & tx dma handles */
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
ARM GAS  /tmp/ccu3pZ5o.s 			page 34


1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Direction parameter */
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process locked */
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init temporary variables */
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_state           = hspi->State;
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the transaction information */
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset CRC Calculation */
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
ARM GAS  /tmp/ccu3pZ5o.s 			page 35


1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA error callback */
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update SPI error code */
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable Rx DMA Request */
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Update SPI error code */
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable SPI peripheral */
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable Tx DMA Request */
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
ARM GAS  /tmp/ccu3pZ5o.s 			page 36


1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** error :
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi SPI handle.
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         This procedure performs following operations :
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Set handle State to READY
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** */
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count, resetcount;
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Initialized local variable  */
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   errorcode = HAL_OK;
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = resetcount;
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     do
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (count == 0U)
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       count--;
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count = resetcount;
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     do
ARM GAS  /tmp/ccu3pZ5o.s 			page 37


2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (count == 0U)
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       count--;
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count = resetcount;
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable Tx DMA Request */
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until TXE flag is set */
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       do
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if (count == 0U)
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           break;
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         count--;
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
ARM GAS  /tmp/ccu3pZ5o.s 			page 38


2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable peripheral */
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable Rx DMA Request */
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check error during Abort procedure */
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset errorCode */
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Restore hspi->state to ready */
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi SPI handle.
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         This procedure performs following operations :
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - Set handle State to READY
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** */
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t abortcplt ;
ARM GAS  /tmp/ccu3pZ5o.s 			page 39


2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Initialized local variable  */
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   errorcode = HAL_OK;
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   abortcplt = 1U;
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = resetcount;
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     do
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (count == 0U)
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       count--;
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count = resetcount;
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     do
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (count == 0U)
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       count--;
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count = resetcount;
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      before any call to DMA Abort functions */
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Otherwise, set it to NULL */
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccu3pZ5o.s 			page 40


2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Otherwise, set it to NULL */
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         abortcplt = 0U;
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         abortcplt = 0U;
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
ARM GAS  /tmp/ccu3pZ5o.s 			page 41


2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (abortcplt == 1U)
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check error during Abort procedure */
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Reset errorCode */
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
ARM GAS  /tmp/ccu3pZ5o.s 			page 42


2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      */
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
ARM GAS  /tmp/ccu3pZ5o.s 			page 43


2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR(hspi);
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR(hspi);
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return;
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
ARM GAS  /tmp/ccu3pZ5o.s 			page 44


2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable all interrupts */
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
2454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
2468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Call user error callback */
2470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccu3pZ5o.s 			page 45


2485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
ARM GAS  /tmp/ccu3pZ5o.s 			page 46


2542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  SPI error callback.
2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi SPI handle.
ARM GAS  /tmp/ccu3pZ5o.s 			page 47


2599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief   SPI control functions
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
2618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
2628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval SPI state
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Return SPI handle state */
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->State;
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Return the SPI error code.
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Return SPI ErrorCode */
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->ErrorCode;
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
ARM GAS  /tmp/ccu3pZ5o.s 			page 48


2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief   Private functions
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Normal Mode */
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable ERR interrupt */
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Tx DMA Request */
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the end of the transaction */
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccu3pZ5o.s 			page 49


2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
2714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Tx complete callback */
2717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Normal Mode */
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable ERR interrupt */
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* CRC handling */
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag */
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Error on the CRC reception */
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC */
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the end of the transaction */
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccu3pZ5o.s 			page 50


2770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if CRC error occurred */
2773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
2783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
2789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Rx complete callback */
2792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
2809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Normal Mode */
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable ERR interrupt */
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* CRC handling */
2821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait the CRC data */
2824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
ARM GAS  /tmp/ccu3pZ5o.s 			page 51


2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the end of the transaction */
2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if CRC error occurred */
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
2858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
2864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user TxRx complete callback */
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 52


2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Tx half complete callback */
2885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Rx half complete callback */
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 53


2941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user error callback */
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma DMA handle.
2955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user error callback */
2964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
2967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma DMA handle.
2977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count;
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable Tx DMA Request */
2988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until TXE flag is set */
2991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   do
2992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (count == 0U)
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
ARM GAS  /tmp/ccu3pZ5o.s 			page 54


2998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count--;
2999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset errorCode */
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Abort complete callback */
3030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma DMA handle.
3043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable Rx DMA Request */
ARM GAS  /tmp/ccu3pZ5o.s 			page 55


3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check Busy flag */
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset errorCode */
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user Abort complete callback */
3091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 8bit mode */
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check end of the reception */
ARM GAS  /tmp/ccu3pZ5o.s 			page 56


3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
3165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transmission */
3167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccu3pZ5o.s 			page 57


3169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable TXE interrupt */
3175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable TXE interrupt */
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable RXNE interrupt */
3214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
ARM GAS  /tmp/ccu3pZ5o.s 			page 58


3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE interrupt */
3236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
3254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable CRC Transmission */
3256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable TXE interrupt */
3264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable TXE interrupt */
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccu3pZ5o.s 			page 59


3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable CRC Transmission */
3309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 60


3340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
3358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable CRC Transmission */
3361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return;
3374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
3391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccu3pZ5o.s 			page 61


3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Transmission */
3398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
3417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Transmission */
3424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *              the configuration information for SPI module.
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Flag SPI flag to check
3436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  State flag state to check
3437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Tickstart tick start value
3439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
3440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
3449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         and slave for their respective CRC calculation */
3453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 62


3454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
3460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable SPI peripheral */
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
3463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Reset CRC Calculation */
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
3469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Process Unlocked */
3473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
3481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Tickstart tick start value
3489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
3490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable SPI peripheral */
3497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
3504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Control the BSY flag */
3506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
3510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
ARM GAS  /tmp/ccu3pZ5o.s 			page 63


3511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
3513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait the RXNE reset */
3515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
3519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
3520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
3523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait the RXNE reset */
3525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi SPI handle
3537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Tickstart tick start value
3539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
3540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Control the BSY flag */
3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
3551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
3554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Control RXNE flag in case of Full-Duplex transfer */
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
3557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait the RXNE reset */
3559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
3563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
3564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
3567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
ARM GAS  /tmp/ccu3pZ5o.s 			page 64


3568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
3578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable ERR interrupt */
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until TXE flag is set */
3587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   do
3588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (count == 0U)
3590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
3593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count--;
3595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
3599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if CRC error occurred */
3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call user error callback */
3618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
ARM GAS  /tmp/ccu3pZ5o.s 			page 65


3625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Call user Rx complete callback */
3633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
3639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
3640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Call user TxRx complete callback */
3643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
3649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
3651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
3654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
3677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 66


3682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if CRC error occurred */
3691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call user error callback */
3696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
3703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user Rx complete callback */
3708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
3715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
3717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
3736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
3737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 67


3739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until TXE flag is set */
3743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   do
3744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (count == 0U)
3746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
3749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count--;
3751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the end of the transaction */
3758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call user error callback */
3773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
3780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call user Rx complete callback */
3782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #else
3785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
3789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
3794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccu3pZ5o.s 			page 68


3796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
  26              		.loc 1 3797 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 10B5     		push	{r4, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37 0004 041C     		mov	r4, r0
3798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  38              		.loc 1 3798 0
  39 0006 144B     		ldr	r3, .L5
  40 0008 1868     		ldr	r0, [r3]
  41              	.LVL1:
  42 000a 1449     		ldr	r1, .L5+4
  43 000c FFF7FEFF 		bl	__aeabi_uidiv
  44              	.LVL2:
  45 0010 6423     		mov	r3, #100
  46 0012 5843     		mul	r0, r3
  47 0014 0190     		str	r0, [sp, #4]
  48              	.L4:
3799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until TXE flag is set */
3801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   do
3802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
3803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (count == 0U)
  49              		.loc 1 3803 0
  50 0016 019B     		ldr	r3, [sp, #4]
  51 0018 002B     		cmp	r3, #0
  52 001a 04D1     		bne	.L2
3804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
3805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
  53              		.loc 1 3805 0
  54 001c 626D     		ldr	r2, [r4, #84]
  55 001e 4033     		add	r3, r3, #64
  56 0020 1343     		orr	r3, r2
  57 0022 6365     		str	r3, [r4, #84]
3806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
  58              		.loc 1 3806 0
  59 0024 06E0     		b	.L3
  60              	.L2:
3807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
3808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     count--;
  61              		.loc 1 3808 0
  62 0026 019B     		ldr	r3, [sp, #4]
  63 0028 013B     		sub	r3, r3, #1
  64 002a 0193     		str	r3, [sp, #4]
3809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
3810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  65              		.loc 1 3810 0
  66 002c 2368     		ldr	r3, [r4]
  67 002e 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccu3pZ5o.s 			page 69


  68 0030 9B07     		lsl	r3, r3, #30
  69 0032 F0D5     		bpl	.L4
  70              	.L3:
3811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  71              		.loc 1 3813 0
  72 0034 2268     		ldr	r2, [r4]
  73 0036 1368     		ldr	r3, [r2]
  74 0038 4021     		mov	r1, #64
  75 003a 8B43     		bic	r3, r1
  76 003c 1360     		str	r3, [r2]
3814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  77              		.loc 1 3816 0
  78 003e 2268     		ldr	r2, [r4]
  79 0040 5368     		ldr	r3, [r2, #4]
  80 0042 A031     		add	r1, r1, #160
  81 0044 8B43     		bic	r3, r1
  82 0046 5360     		str	r3, [r2, #4]
3817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Read CRC to flush Data Register */
3819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
  83              		.loc 1 3819 0
  84 0048 2368     		ldr	r3, [r4]
  85 004a DB68     		ldr	r3, [r3, #12]
3820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  86              		.loc 1 3821 0
  87 004c 0722     		mov	r2, #7
  88 004e 5123     		mov	r3, #81
  89 0050 E254     		strb	r2, [r4, r3]
3822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
  90              		.loc 1 3822 0
  91 0052 02B0     		add	sp, sp, #8
  92              		@ sp needed
  93              	.LVL3:
  94 0054 10BD     		pop	{r4, pc}
  95              	.L6:
  96 0056 C046     		.align	2
  97              	.L5:
  98 0058 00000000 		.word	SystemCoreClock
  99 005c C05D0000 		.word	24000
 100              		.cfi_endproc
 101              	.LFE87:
 103              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 104              		.align	2
 105              		.code	16
 106              		.thumb_func
 108              	SPI_AbortTx_ISR:
 109              	.LFB88:
3823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
3825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccu3pZ5o.s 			page 70


3828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
3829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
3830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 110              		.loc 1 3831 0
 111              		.cfi_startproc
 112              	.LVL4:
3832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 113              		.loc 1 3833 0
 114 0000 0268     		ldr	r2, [r0]
 115 0002 5368     		ldr	r3, [r2, #4]
 116 0004 8021     		mov	r1, #128
 117 0006 8B43     		bic	r3, r1
 118 0008 5360     		str	r3, [r2, #4]
3834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 119              		.loc 1 3836 0
 120 000a 0268     		ldr	r2, [r0]
 121 000c 1368     		ldr	r3, [r2]
 122 000e 4039     		sub	r1, r1, #64
 123 0010 8B43     		bic	r3, r1
 124 0012 1360     		str	r3, [r2]
3837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
3838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 125              		.loc 1 3838 0
 126 0014 0722     		mov	r2, #7
 127 0016 5123     		mov	r3, #81
 128 0018 C254     		strb	r2, [r0, r3]
3839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 129              		.loc 1 3839 0
 130              		@ sp needed
 131 001a 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE88:
 135              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 136              		.align	2
 137              		.code	16
 138              		.thumb_func
 140              	SPI_WaitFlagStateUntilTimeout:
 141              	.LFB81:
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 142              		.loc 1 3443 0
 143              		.cfi_startproc
 144              	.LVL5:
 145 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 148              		.cfi_offset 3, -24
 149              		.cfi_offset 4, -20
 150              		.cfi_offset 5, -16
 151              		.cfi_offset 6, -12
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 061C     		mov	r6, r0
 155 0004 0C1C     		mov	r4, r1
ARM GAS  /tmp/ccu3pZ5o.s 			page 71


 156 0006 171C     		mov	r7, r2
 157 0008 1D1C     		mov	r5, r3
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 158              		.loc 1 3444 0
 159 000a 39E0     		b	.L10
 160              	.LVL6:
 161              	.L16:
3446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 162              		.loc 1 3446 0
 163 000c 6B1C     		add	r3, r5, #1
 164 000e 37D0     		beq	.L10
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 165              		.loc 1 3448 0
 166 0010 FFF7FEFF 		bl	HAL_GetTick
 167              	.LVL7:
 168 0014 069B     		ldr	r3, [sp, #24]
 169 0016 C01A     		sub	r0, r0, r3
 170 0018 A842     		cmp	r0, r5
 171 001a 01D2     		bcs	.L11
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 172              		.loc 1 3448 0 is_stmt 0 discriminator 1
 173 001c 002D     		cmp	r5, #0
 174 001e 2FD1     		bne	.L10
 175              	.L11:
3455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 176              		.loc 1 3455 0 is_stmt 1
 177 0020 3268     		ldr	r2, [r6]
 178 0022 5368     		ldr	r3, [r2, #4]
 179 0024 E021     		mov	r1, #224
 180 0026 8B43     		bic	r3, r1
 181 0028 5360     		str	r3, [r2, #4]
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 182              		.loc 1 3457 0
 183 002a 8223     		mov	r3, #130
 184 002c 5B00     		lsl	r3, r3, #1
 185 002e 7268     		ldr	r2, [r6, #4]
 186 0030 9A42     		cmp	r2, r3
 187 0032 0DD1     		bne	.L12
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 188              		.loc 1 3457 0 is_stmt 0 discriminator 1
 189 0034 B368     		ldr	r3, [r6, #8]
 190 0036 8022     		mov	r2, #128
 191 0038 1202     		lsl	r2, r2, #8
 192 003a 9342     		cmp	r3, r2
 193 003c 03D0     		beq	.L13
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 194              		.loc 1 3458 0 is_stmt 1
 195 003e 8022     		mov	r2, #128
 196 0040 D200     		lsl	r2, r2, #3
 197 0042 9342     		cmp	r3, r2
 198 0044 04D1     		bne	.L12
 199              	.L13:
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 200              		.loc 1 3461 0
 201 0046 3268     		ldr	r2, [r6]
 202 0048 1368     		ldr	r3, [r2]
 203 004a 4021     		mov	r1, #64
ARM GAS  /tmp/ccu3pZ5o.s 			page 72


 204 004c 8B43     		bic	r3, r1
 205 004e 1360     		str	r3, [r2]
 206              	.L12:
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 207              		.loc 1 3465 0
 208 0050 8023     		mov	r3, #128
 209 0052 9B01     		lsl	r3, r3, #6
 210 0054 B26A     		ldr	r2, [r6, #40]
 211 0056 9A42     		cmp	r2, r3
 212 0058 0AD1     		bne	.L14
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 213              		.loc 1 3467 0
 214 005a 3268     		ldr	r2, [r6]
 215 005c 1168     		ldr	r1, [r2]
 216 005e 0D4B     		ldr	r3, .L17
 217 0060 0B40     		and	r3, r1
 218 0062 1360     		str	r3, [r2]
 219 0064 3268     		ldr	r2, [r6]
 220 0066 1368     		ldr	r3, [r2]
 221 0068 8021     		mov	r1, #128
 222 006a 8901     		lsl	r1, r1, #6
 223 006c 0B43     		orr	r3, r1
 224 006e 1360     		str	r3, [r2]
 225              	.L14:
3470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 226              		.loc 1 3470 0
 227 0070 0122     		mov	r2, #1
 228 0072 5123     		mov	r3, #81
 229 0074 F254     		strb	r2, [r6, r3]
3473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 230              		.loc 1 3473 0
 231 0076 0022     		mov	r2, #0
 232 0078 013B     		sub	r3, r3, #1
 233 007a F254     		strb	r2, [r6, r3]
3475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 234              		.loc 1 3475 0
 235 007c 0320     		mov	r0, #3
 236 007e 08E0     		b	.L15
 237              	.L10:
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 238              		.loc 1 3444 0
 239 0080 3368     		ldr	r3, [r6]
 240 0082 9B68     		ldr	r3, [r3, #8]
 241 0084 2340     		and	r3, r4
 242 0086 1B1B     		sub	r3, r3, r4
 243 0088 5942     		neg	r1, r3
 244 008a 5941     		adc	r1, r1, r3
 245 008c B942     		cmp	r1, r7
 246 008e BDD1     		bne	.L16
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 247              		.loc 1 3480 0
 248 0090 0020     		mov	r0, #0
 249              	.L15:
3481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 250              		.loc 1 3481 0
 251              		@ sp needed
 252              	.LVL8:
ARM GAS  /tmp/ccu3pZ5o.s 			page 73


 253              	.LVL9:
 254              	.LVL10:
 255 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 256              	.L18:
 257              		.align	2
 258              	.L17:
 259 0094 FFDFFFFF 		.word	-8193
 260              		.cfi_endproc
 261              	.LFE81:
 263              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 264              		.align	2
 265              		.code	16
 266              		.thumb_func
 268              	SPI_EndRxTxTransaction:
 269              	.LFB83:
3542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
 270              		.loc 1 3542 0
 271              		.cfi_startproc
 272              	.LVL11:
 273 0000 10B5     		push	{r4, lr}
 274              	.LCFI3:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              	.LCFI4:
 280              		.cfi_def_cfa_offset 16
 281 0004 041C     		mov	r4, r0
 282 0006 0B1C     		mov	r3, r1
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 283              		.loc 1 3544 0
 284 0008 8221     		mov	r1, #130
 285              	.LVL12:
 286 000a 4900     		lsl	r1, r1, #1
 287 000c 4068     		ldr	r0, [r0, #4]
 288              	.LVL13:
 289 000e 8842     		cmp	r0, r1
 290 0010 0DD1     		bne	.L20
3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 291              		.loc 1 3547 0
 292 0012 0092     		str	r2, [sp]
 293 0014 201C     		mov	r0, r4
 294 0016 8439     		sub	r1, r1, #132
 295 0018 0022     		mov	r2, #0
 296              	.LVL14:
 297 001a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 298              	.LVL15:
 299 001e 0028     		cmp	r0, #0
 300 0020 18D0     		beq	.L21
3549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 301              		.loc 1 3549 0
 302 0022 626D     		ldr	r2, [r4, #84]
 303 0024 2023     		mov	r3, #32
 304 0026 1343     		orr	r3, r2
 305 0028 6365     		str	r3, [r4, #84]
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 306              		.loc 1 3550 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 74


 307 002a 0320     		mov	r0, #3
 308 002c 12E0     		b	.L21
 309              	.LVL16:
 310              	.L20:
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 311              		.loc 1 3556 0
 312 002e 5121     		mov	r1, #81
 313 0030 615C     		ldrb	r1, [r4, r1]
 314 0032 0529     		cmp	r1, #5
 315 0034 0DD1     		bne	.L22
3559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 316              		.loc 1 3559 0
 317 0036 0092     		str	r2, [sp]
 318 0038 201C     		mov	r0, r4
 319 003a 0439     		sub	r1, r1, #4
 320 003c 0022     		mov	r2, #0
 321              	.LVL17:
 322 003e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 323              	.LVL18:
 324 0042 0028     		cmp	r0, #0
 325 0044 06D0     		beq	.L21
3561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 326              		.loc 1 3561 0
 327 0046 626D     		ldr	r2, [r4, #84]
 328 0048 2023     		mov	r3, #32
 329 004a 1343     		orr	r3, r2
 330 004c 6365     		str	r3, [r4, #84]
3562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 331              		.loc 1 3562 0
 332 004e 0320     		mov	r0, #3
 333 0050 00E0     		b	.L21
 334              	.LVL19:
 335              	.L22:
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 336              		.loc 1 3566 0
 337 0052 0020     		mov	r0, #0
 338              	.LVL20:
 339              	.L21:
3567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 340              		.loc 1 3567 0
 341 0054 02B0     		add	sp, sp, #8
 342              		@ sp needed
 343              	.LVL21:
 344 0056 10BD     		pop	{r4, pc}
 345              		.cfi_endproc
 346              	.LFE83:
 348              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 349              		.align	2
 350              		.code	16
 351              		.thumb_func
 353              	SPI_EndRxTransaction:
 354              	.LFB82:
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 355              		.loc 1 3492 0
 356              		.cfi_startproc
 357              	.LVL22:
 358 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccu3pZ5o.s 			page 75


 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 12
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 24
 367 0004 041C     		mov	r4, r0
 368 0006 0B1C     		mov	r3, r1
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 369              		.loc 1 3493 0
 370 0008 8221     		mov	r1, #130
 371              	.LVL23:
 372 000a 4900     		lsl	r1, r1, #1
 373 000c 4068     		ldr	r0, [r0, #4]
 374              	.LVL24:
 375 000e 8842     		cmp	r0, r1
 376 0010 0DD1     		bne	.L24
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 377              		.loc 1 3493 0 is_stmt 0 discriminator 1
 378 0012 A168     		ldr	r1, [r4, #8]
 379 0014 8020     		mov	r0, #128
 380 0016 0002     		lsl	r0, r0, #8
 381 0018 8142     		cmp	r1, r0
 382 001a 03D0     		beq	.L25
3494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 383              		.loc 1 3494 0 is_stmt 1
 384 001c 8020     		mov	r0, #128
 385 001e C000     		lsl	r0, r0, #3
 386 0020 8142     		cmp	r1, r0
 387 0022 04D1     		bne	.L24
 388              	.L25:
3497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 389              		.loc 1 3497 0
 390 0024 2068     		ldr	r0, [r4]
 391 0026 0168     		ldr	r1, [r0]
 392 0028 4025     		mov	r5, #64
 393 002a A943     		bic	r1, r5
 394 002c 0160     		str	r1, [r0]
 395              	.L24:
3501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 396              		.loc 1 3501 0
 397 002e 8221     		mov	r1, #130
 398 0030 4900     		lsl	r1, r1, #1
 399 0032 6068     		ldr	r0, [r4, #4]
 400 0034 8842     		cmp	r0, r1
 401 0036 20D1     		bne	.L26
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 402              		.loc 1 3503 0
 403 0038 8021     		mov	r1, #128
 404 003a C900     		lsl	r1, r1, #3
 405 003c A068     		ldr	r0, [r4, #8]
 406 003e 8842     		cmp	r0, r1
 407 0040 0DD0     		beq	.L27
3506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 408              		.loc 1 3506 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 76


 409 0042 0092     		str	r2, [sp]
 410 0044 201C     		mov	r0, r4
 411 0046 8021     		mov	r1, #128
 412 0048 0022     		mov	r2, #0
 413              	.LVL25:
 414 004a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 415              	.LVL26:
 416 004e 0028     		cmp	r0, #0
 417 0050 20D0     		beq	.L28
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 418              		.loc 1 3508 0
 419 0052 626D     		ldr	r2, [r4, #84]
 420 0054 2023     		mov	r3, #32
 421 0056 1343     		orr	r3, r2
 422 0058 6365     		str	r3, [r4, #84]
3509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 423              		.loc 1 3509 0
 424 005a 0320     		mov	r0, #3
 425 005c 1AE0     		b	.L28
 426              	.LVL27:
 427              	.L27:
3515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 428              		.loc 1 3515 0
 429 005e 0092     		str	r2, [sp]
 430 0060 201C     		mov	r0, r4
 431 0062 0121     		mov	r1, #1
 432 0064 0022     		mov	r2, #0
 433              	.LVL28:
 434 0066 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 435              	.LVL29:
 436 006a 0028     		cmp	r0, #0
 437 006c 12D0     		beq	.L28
3517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 438              		.loc 1 3517 0
 439 006e 626D     		ldr	r2, [r4, #84]
 440 0070 2023     		mov	r3, #32
 441 0072 1343     		orr	r3, r2
 442 0074 6365     		str	r3, [r4, #84]
3518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 443              		.loc 1 3518 0
 444 0076 0320     		mov	r0, #3
 445 0078 0CE0     		b	.L28
 446              	.LVL30:
 447              	.L26:
3525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 448              		.loc 1 3525 0
 449 007a 0092     		str	r2, [sp]
 450 007c 201C     		mov	r0, r4
 451 007e 0121     		mov	r1, #1
 452 0080 0022     		mov	r2, #0
 453              	.LVL31:
 454 0082 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 455              	.LVL32:
 456 0086 0028     		cmp	r0, #0
 457 0088 04D0     		beq	.L28
3527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 458              		.loc 1 3527 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 77


 459 008a 626D     		ldr	r2, [r4, #84]
 460 008c 2023     		mov	r3, #32
 461 008e 1343     		orr	r3, r2
 462 0090 6365     		str	r3, [r4, #84]
3528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 463              		.loc 1 3528 0
 464 0092 0320     		mov	r0, #3
 465              	.L28:
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 466              		.loc 1 3532 0
 467 0094 03B0     		add	sp, sp, #12
 468              		@ sp needed
 469              	.LVL33:
 470 0096 30BD     		pop	{r4, r5, pc}
 471              		.cfi_endproc
 472              	.LFE82:
 474              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 475              		.align	2
 476              		.weak	HAL_SPI_MspInit
 477              		.code	16
 478              		.thumb_func
 480              	HAL_SPI_MspInit:
 481              	.LFB36:
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 482              		.loc 1 465 0
 483              		.cfi_startproc
 484              	.LVL34:
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 485              		.loc 1 472 0
 486              		@ sp needed
 487 0000 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE36:
 491 0002 C046     		.section	.text.HAL_SPI_Init,"ax",%progbits
 492              		.align	2
 493              		.global	HAL_SPI_Init
 494              		.code	16
 495              		.thumb_func
 497              	HAL_SPI_Init:
 498              	.LFB34:
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 499              		.loc 1 319 0
 500              		.cfi_startproc
 501              	.LVL35:
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              	.LCFI7:
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 3, -16
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 5, -8
 508              		.cfi_offset 14, -4
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 509              		.loc 1 321 0
 510 0002 0028     		cmp	r0, #0
 511 0004 3BD0     		beq	.L33
 512 0006 041C     		mov	r4, r0
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccu3pZ5o.s 			page 78


 513              		.loc 1 347 0
 514 0008 0023     		mov	r3, #0
 515 000a 8362     		str	r3, [r0, #40]
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 516              		.loc 1 350 0
 517 000c 5133     		add	r3, r3, #81
 518 000e C35C     		ldrb	r3, [r0, r3]
 519 0010 002B     		cmp	r3, #0
 520 0012 04D1     		bne	.L32
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 521              		.loc 1 353 0
 522 0014 0022     		mov	r2, #0
 523 0016 5033     		add	r3, r3, #80
 524 0018 C254     		strb	r2, [r0, r3]
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 525              		.loc 1 375 0
 526 001a FFF7FEFF 		bl	HAL_SPI_MspInit
 527              	.LVL36:
 528              	.L32:
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 529              		.loc 1 379 0
 530 001e 5121     		mov	r1, #81
 531 0020 0223     		mov	r3, #2
 532 0022 6354     		strb	r3, [r4, r1]
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 533              		.loc 1 382 0
 534 0024 2268     		ldr	r2, [r4]
 535 0026 1368     		ldr	r3, [r2]
 536 0028 4020     		mov	r0, #64
 537 002a 8343     		bic	r3, r0
 538 002c 1360     		str	r3, [r2]
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 539              		.loc 1 387 0
 540 002e 2068     		ldr	r0, [r4]
 541 0030 6368     		ldr	r3, [r4, #4]
 542 0032 A268     		ldr	r2, [r4, #8]
 543 0034 1343     		orr	r3, r2
 544 0036 E268     		ldr	r2, [r4, #12]
 545 0038 1343     		orr	r3, r2
 546 003a 2269     		ldr	r2, [r4, #16]
 547 003c 1343     		orr	r3, r2
 548 003e 6269     		ldr	r2, [r4, #20]
 549 0040 1343     		orr	r3, r2
 550 0042 8022     		mov	r2, #128
 551 0044 9200     		lsl	r2, r2, #2
 552 0046 A569     		ldr	r5, [r4, #24]
 553 0048 2A40     		and	r2, r5
 554 004a 1343     		orr	r3, r2
 555 004c E269     		ldr	r2, [r4, #28]
 556 004e 1343     		orr	r3, r2
 557 0050 226A     		ldr	r2, [r4, #32]
 558 0052 1343     		orr	r3, r2
 559 0054 A26A     		ldr	r2, [r4, #40]
 560 0056 1343     		orr	r3, r2
 561 0058 0360     		str	r3, [r0]
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 562              		.loc 1 392 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 79


 563 005a 2268     		ldr	r2, [r4]
 564 005c 638B     		ldrh	r3, [r4, #26]
 565 005e 0420     		mov	r0, #4
 566 0060 0340     		and	r3, r0
 567 0062 606A     		ldr	r0, [r4, #36]
 568 0064 0343     		orr	r3, r0
 569 0066 5360     		str	r3, [r2, #4]
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 570              		.loc 1 405 0
 571 0068 2268     		ldr	r2, [r4]
 572 006a D069     		ldr	r0, [r2, #28]
 573 006c 054B     		ldr	r3, .L34
 574 006e 0340     		and	r3, r0
 575 0070 D361     		str	r3, [r2, #28]
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 576              		.loc 1 408 0
 577 0072 0023     		mov	r3, #0
 578 0074 6365     		str	r3, [r4, #84]
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 579              		.loc 1 409 0
 580 0076 0133     		add	r3, r3, #1
 581 0078 6354     		strb	r3, [r4, r1]
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 582              		.loc 1 411 0
 583 007a 0020     		mov	r0, #0
 584 007c 00E0     		b	.L31
 585              	.LVL37:
 586              	.L33:
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 587              		.loc 1 323 0
 588 007e 0120     		mov	r0, #1
 589              	.LVL38:
 590              	.L31:
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 591              		.loc 1 412 0
 592              		@ sp needed
 593 0080 38BD     		pop	{r3, r4, r5, pc}
 594              	.L35:
 595 0082 C046     		.align	2
 596              	.L34:
 597 0084 FFF7FFFF 		.word	-2049
 598              		.cfi_endproc
 599              	.LFE34:
 601              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 602              		.align	2
 603              		.weak	HAL_SPI_MspDeInit
 604              		.code	16
 605              		.thumb_func
 607              	HAL_SPI_MspDeInit:
 608              	.LFB37:
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 609              		.loc 1 481 0
 610              		.cfi_startproc
 611              	.LVL39:
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 612              		.loc 1 488 0
 613              		@ sp needed
ARM GAS  /tmp/ccu3pZ5o.s 			page 80


 614 0000 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE37:
 618 0002 C046     		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 619              		.align	2
 620              		.global	HAL_SPI_DeInit
 621              		.code	16
 622              		.thumb_func
 624              	HAL_SPI_DeInit:
 625              	.LFB35:
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 626              		.loc 1 421 0
 627              		.cfi_startproc
 628              	.LVL40:
 629 0000 38B5     		push	{r3, r4, r5, lr}
 630              	.LCFI8:
 631              		.cfi_def_cfa_offset 16
 632              		.cfi_offset 3, -16
 633              		.cfi_offset 4, -12
 634              		.cfi_offset 5, -8
 635              		.cfi_offset 14, -4
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 636              		.loc 1 423 0
 637 0002 0028     		cmp	r0, #0
 638 0004 11D0     		beq	.L39
 639 0006 041C     		mov	r4, r0
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 640              		.loc 1 431 0
 641 0008 5125     		mov	r5, #81
 642 000a 0223     		mov	r3, #2
 643 000c 4355     		strb	r3, [r0, r5]
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 644              		.loc 1 434 0
 645 000e 0268     		ldr	r2, [r0]
 646 0010 1368     		ldr	r3, [r2]
 647 0012 4021     		mov	r1, #64
 648 0014 8B43     		bic	r3, r1
 649 0016 1360     		str	r3, [r2]
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 650              		.loc 1 446 0
 651 0018 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 652              	.LVL41:
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 653              		.loc 1 449 0
 654 001c 0023     		mov	r3, #0
 655 001e 6365     		str	r3, [r4, #84]
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 656              		.loc 1 450 0
 657 0020 6355     		strb	r3, [r4, r5]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 658              		.loc 1 453 0
 659 0022 5022     		mov	r2, #80
 660 0024 A354     		strb	r3, [r4, r2]
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 661              		.loc 1 455 0
 662 0026 0020     		mov	r0, #0
 663 0028 00E0     		b	.L38
ARM GAS  /tmp/ccu3pZ5o.s 			page 81


 664              	.LVL42:
 665              	.L39:
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 666              		.loc 1 425 0
 667 002a 0120     		mov	r0, #1
 668              	.LVL43:
 669              	.L38:
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 670              		.loc 1 456 0
 671              		@ sp needed
 672 002c 38BD     		pop	{r3, r4, r5, pc}
 673              		.cfi_endproc
 674              	.LFE35:
 676 002e C046     		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 677              		.align	2
 678              		.global	HAL_SPI_Transmit
 679              		.code	16
 680              		.thumb_func
 682              	HAL_SPI_Transmit:
 683              	.LFB38:
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 684              		.loc 1 752 0
 685              		.cfi_startproc
 686              	.LVL44:
 687 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 688              	.LCFI9:
 689              		.cfi_def_cfa_offset 20
 690              		.cfi_offset 4, -20
 691              		.cfi_offset 5, -16
 692              		.cfi_offset 6, -12
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 85B0     		sub	sp, sp, #20
 696              	.LCFI10:
 697              		.cfi_def_cfa_offset 40
 698 0004 061C     		mov	r6, r0
 699 0006 0191     		str	r1, [sp, #4]
 700 0008 151C     		mov	r5, r2
 701 000a 1C1C     		mov	r4, r3
 702              	.LVL45:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 703              		.loc 1 768 0
 704 000c 5023     		mov	r3, #80
 705              	.LVL46:
 706 000e C35C     		ldrb	r3, [r0, r3]
 707 0010 012B     		cmp	r3, #1
 708 0012 00D1     		bne	.LCB668
 709 0014 C0E0     		b	.L63	@long jump
 710              	.LCB668:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 711              		.loc 1 768 0 is_stmt 0 discriminator 2
 712 0016 0122     		mov	r2, #1
 713              	.LVL47:
 714 0018 5023     		mov	r3, #80
 715 001a C254     		strb	r2, [r0, r3]
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   initial_TxXferCount = Size;
 716              		.loc 1 771 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccu3pZ5o.s 			page 82


 717 001c FFF7FEFF 		bl	HAL_GetTick
 718              	.LVL48:
 719 0020 071C     		mov	r7, r0
 720              	.LVL49:
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 721              		.loc 1 774 0 discriminator 2
 722 0022 5123     		mov	r3, #81
 723 0024 F35C     		ldrb	r3, [r6, r3]
 724 0026 012B     		cmp	r3, #1
 725 0028 00D0     		beq	.LCB684
 726 002a 9FE0     		b	.L64	@long jump
 727              	.LCB684:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 728              		.loc 1 780 0
 729 002c 019B     		ldr	r3, [sp, #4]
 730 002e 002B     		cmp	r3, #0
 731 0030 00D1     		bne	.LCB687
 732 0032 9DE0     		b	.L65	@long jump
 733              	.LCB687:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 734              		.loc 1 780 0 is_stmt 0 discriminator 1
 735 0034 002D     		cmp	r5, #0
 736 0036 00D1     		bne	.LCB689
 737 0038 9CE0     		b	.L66	@long jump
 738              	.LCB689:
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 739              		.loc 1 787 0 is_stmt 1
 740 003a 0322     		mov	r2, #3
 741 003c 5123     		mov	r3, #81
 742 003e F254     		strb	r2, [r6, r3]
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 743              		.loc 1 788 0
 744 0040 0023     		mov	r3, #0
 745 0042 7365     		str	r3, [r6, #84]
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 746              		.loc 1 789 0
 747 0044 019A     		ldr	r2, [sp, #4]
 748 0046 3263     		str	r2, [r6, #48]
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 749              		.loc 1 790 0
 750 0048 B586     		strh	r5, [r6, #52]
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 751              		.loc 1 791 0
 752 004a F586     		strh	r5, [r6, #54]
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 753              		.loc 1 794 0
 754 004c B363     		str	r3, [r6, #56]
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 755              		.loc 1 795 0
 756 004e B387     		strh	r3, [r6, #60]
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 757              		.loc 1 796 0
 758 0050 F387     		strh	r3, [r6, #62]
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 759              		.loc 1 797 0
 760 0052 7364     		str	r3, [r6, #68]
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 83


 761              		.loc 1 798 0
 762 0054 3364     		str	r3, [r6, #64]
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 763              		.loc 1 801 0
 764 0056 8023     		mov	r3, #128
 765 0058 1B02     		lsl	r3, r3, #8
 766 005a B268     		ldr	r2, [r6, #8]
 767 005c 9A42     		cmp	r2, r3
 768 005e 05D1     		bne	.L43
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 769              		.loc 1 803 0
 770 0060 3268     		ldr	r2, [r6]
 771 0062 1368     		ldr	r3, [r2]
 772 0064 8021     		mov	r1, #128
 773 0066 C901     		lsl	r1, r1, #7
 774 0068 0B43     		orr	r3, r1
 775 006a 1360     		str	r3, [r2]
 776              	.L43:
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 777              		.loc 1 815 0
 778 006c 3368     		ldr	r3, [r6]
 779 006e 1A68     		ldr	r2, [r3]
 780 0070 5206     		lsl	r2, r2, #25
 781 0072 03D4     		bmi	.L44
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 782              		.loc 1 818 0
 783 0074 1968     		ldr	r1, [r3]
 784 0076 4022     		mov	r2, #64
 785 0078 0A43     		orr	r2, r1
 786 007a 1A60     		str	r2, [r3]
 787              	.L44:
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 788              		.loc 1 822 0
 789 007c 8023     		mov	r3, #128
 790 007e 1B01     		lsl	r3, r3, #4
 791 0080 F268     		ldr	r2, [r6, #12]
 792 0082 9A42     		cmp	r2, r3
 793 0084 2DD1     		bne	.L45
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 794              		.loc 1 824 0
 795 0086 7368     		ldr	r3, [r6, #4]
 796 0088 002B     		cmp	r3, #0
 797 008a 01D0     		beq	.L46
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 798              		.loc 1 824 0 is_stmt 0 discriminator 1
 799 008c 012D     		cmp	r5, #1
 800 008e 23D1     		bne	.L48
 801              	.L46:
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 802              		.loc 1 826 0 is_stmt 1
 803 0090 3368     		ldr	r3, [r6]
 804 0092 326B     		ldr	r2, [r6, #48]
 805 0094 1288     		ldrh	r2, [r2]
 806 0096 DA60     		str	r2, [r3, #12]
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 807              		.loc 1 827 0
 808 0098 336B     		ldr	r3, [r6, #48]
ARM GAS  /tmp/ccu3pZ5o.s 			page 84


 809 009a 0233     		add	r3, r3, #2
 810 009c 3363     		str	r3, [r6, #48]
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 811              		.loc 1 828 0
 812 009e F38E     		ldrh	r3, [r6, #54]
 813 00a0 013B     		sub	r3, r3, #1
 814 00a2 9BB2     		uxth	r3, r3
 815 00a4 F386     		strh	r3, [r6, #54]
 816 00a6 17E0     		b	.L48
 817              	.LVL50:
 818              	.L52:
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 819              		.loc 1 834 0
 820 00a8 3368     		ldr	r3, [r6]
 821 00aa 9A68     		ldr	r2, [r3, #8]
 822 00ac 9207     		lsl	r2, r2, #30
 823 00ae 0AD5     		bpl	.L49
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 824              		.loc 1 836 0
 825 00b0 326B     		ldr	r2, [r6, #48]
 826 00b2 1288     		ldrh	r2, [r2]
 827 00b4 DA60     		str	r2, [r3, #12]
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 828              		.loc 1 837 0
 829 00b6 336B     		ldr	r3, [r6, #48]
 830 00b8 0233     		add	r3, r3, #2
 831 00ba 3363     		str	r3, [r6, #48]
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 832              		.loc 1 838 0
 833 00bc F38E     		ldrh	r3, [r6, #54]
 834 00be 013B     		sub	r3, r3, #1
 835 00c0 9BB2     		uxth	r3, r3
 836 00c2 F386     		strh	r3, [r6, #54]
 837 00c4 08E0     		b	.L48
 838              	.L49:
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 839              		.loc 1 843 0
 840 00c6 FFF7FEFF 		bl	HAL_GetTick
 841              	.LVL51:
 842 00ca C01B     		sub	r0, r0, r7
 843 00cc A042     		cmp	r0, r4
 844 00ce 01D3     		bcc	.L51
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 845              		.loc 1 843 0 is_stmt 0 discriminator 1
 846 00d0 631C     		add	r3, r4, #1
 847 00d2 51D1     		bne	.L67
 848              	.L51:
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 849              		.loc 1 843 0 discriminator 3
 850 00d4 002C     		cmp	r4, #0
 851 00d6 51D0     		beq	.L68
 852              	.L48:
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 853              		.loc 1 831 0 is_stmt 1
 854 00d8 F38E     		ldrh	r3, [r6, #54]
 855 00da 9BB2     		uxth	r3, r3
 856 00dc 002B     		cmp	r3, #0
ARM GAS  /tmp/ccu3pZ5o.s 			page 85


 857 00de E3D1     		bne	.L52
 858 00e0 2CE0     		b	.L53
 859              	.LVL52:
 860              	.L45:
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 861              		.loc 1 854 0
 862 00e2 7368     		ldr	r3, [r6, #4]
 863 00e4 002B     		cmp	r3, #0
 864 00e6 01D0     		beq	.L54
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 865              		.loc 1 854 0 is_stmt 0 discriminator 1
 866 00e8 012D     		cmp	r5, #1
 867 00ea 23D1     		bne	.L56
 868              	.L54:
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 869              		.loc 1 856 0 is_stmt 1
 870 00ec 336B     		ldr	r3, [r6, #48]
 871 00ee 1B78     		ldrb	r3, [r3]
 872 00f0 3268     		ldr	r2, [r6]
 873 00f2 1373     		strb	r3, [r2, #12]
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 874              		.loc 1 857 0
 875 00f4 336B     		ldr	r3, [r6, #48]
 876 00f6 0133     		add	r3, r3, #1
 877 00f8 3363     		str	r3, [r6, #48]
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 878              		.loc 1 858 0
 879 00fa F38E     		ldrh	r3, [r6, #54]
 880 00fc 013B     		sub	r3, r3, #1
 881 00fe 9BB2     		uxth	r3, r3
 882 0100 F386     		strh	r3, [r6, #54]
 883 0102 17E0     		b	.L56
 884              	.LVL53:
 885              	.L60:
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 886              		.loc 1 863 0
 887 0104 3368     		ldr	r3, [r6]
 888 0106 9A68     		ldr	r2, [r3, #8]
 889 0108 9207     		lsl	r2, r2, #30
 890 010a 0AD5     		bpl	.L57
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 891              		.loc 1 865 0
 892 010c 326B     		ldr	r2, [r6, #48]
 893 010e 1278     		ldrb	r2, [r2]
 894 0110 1A73     		strb	r2, [r3, #12]
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 895              		.loc 1 866 0
 896 0112 336B     		ldr	r3, [r6, #48]
 897 0114 0133     		add	r3, r3, #1
 898 0116 3363     		str	r3, [r6, #48]
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 899              		.loc 1 867 0
 900 0118 F38E     		ldrh	r3, [r6, #54]
 901 011a 013B     		sub	r3, r3, #1
 902 011c 9BB2     		uxth	r3, r3
 903 011e F386     		strh	r3, [r6, #54]
 904 0120 08E0     		b	.L56
ARM GAS  /tmp/ccu3pZ5o.s 			page 86


 905              	.L57:
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 906              		.loc 1 872 0
 907 0122 FFF7FEFF 		bl	HAL_GetTick
 908              	.LVL54:
 909 0126 C01B     		sub	r0, r0, r7
 910 0128 A042     		cmp	r0, r4
 911 012a 01D3     		bcc	.L59
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 912              		.loc 1 872 0 is_stmt 0 discriminator 1
 913 012c 631C     		add	r3, r4, #1
 914 012e 27D1     		bne	.L69
 915              	.L59:
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 916              		.loc 1 872 0 discriminator 3
 917 0130 002C     		cmp	r4, #0
 918 0132 27D0     		beq	.L70
 919              	.L56:
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 920              		.loc 1 860 0 is_stmt 1
 921 0134 F38E     		ldrh	r3, [r6, #54]
 922 0136 9BB2     		uxth	r3, r3
 923 0138 002B     		cmp	r3, #0
 924 013a E3D1     		bne	.L60
 925              	.L53:
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 926              		.loc 1 889 0
 927 013c 301C     		mov	r0, r6
 928 013e 211C     		mov	r1, r4
 929 0140 3A1C     		mov	r2, r7
 930 0142 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 931              	.LVL55:
 932 0146 0028     		cmp	r0, #0
 933 0148 01D0     		beq	.L61
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 934              		.loc 1 891 0
 935 014a 2023     		mov	r3, #32
 936 014c 7365     		str	r3, [r6, #84]
 937              	.L61:
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 938              		.loc 1 895 0
 939 014e B368     		ldr	r3, [r6, #8]
 940 0150 002B     		cmp	r3, #0
 941 0152 06D1     		bne	.L62
 942              	.LBB2:
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 943              		.loc 1 897 0
 944 0154 0393     		str	r3, [sp, #12]
 945 0156 3368     		ldr	r3, [r6]
 946 0158 DA68     		ldr	r2, [r3, #12]
 947 015a 0392     		str	r2, [sp, #12]
 948 015c 9B68     		ldr	r3, [r3, #8]
 949 015e 0393     		str	r3, [sp, #12]
 950 0160 039B     		ldr	r3, [sp, #12]
 951              	.L62:
 952              	.LBE2:
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccu3pZ5o.s 			page 87


 953              		.loc 1 900 0
 954 0162 736D     		ldr	r3, [r6, #84]
 955 0164 002B     		cmp	r3, #0
 956 0166 0FD1     		bne	.L71
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 957              		.loc 1 754 0
 958 0168 0020     		mov	r0, #0
 959 016a 0EE0     		b	.L42
 960              	.LVL56:
 961              	.L64:
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 962              		.loc 1 776 0
 963 016c 0220     		mov	r0, #2
 964              	.LVL57:
 965 016e 0CE0     		b	.L42
 966              	.LVL58:
 967              	.L65:
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 968              		.loc 1 782 0
 969 0170 0120     		mov	r0, #1
 970              	.LVL59:
 971 0172 0AE0     		b	.L42
 972              	.LVL60:
 973              	.L66:
 974 0174 0120     		mov	r0, #1
 975              	.LVL61:
 976 0176 08E0     		b	.L42
 977              	.L67:
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 978              		.loc 1 845 0
 979 0178 0320     		mov	r0, #3
 980 017a 06E0     		b	.L42
 981              	.L68:
 982 017c 0320     		mov	r0, #3
 983 017e 04E0     		b	.L42
 984              	.L69:
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 985              		.loc 1 874 0
 986 0180 0320     		mov	r0, #3
 987 0182 02E0     		b	.L42
 988              	.L70:
 989 0184 0320     		mov	r0, #3
 990 0186 00E0     		b	.L42
 991              	.L71:
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 992              		.loc 1 902 0
 993 0188 0120     		mov	r0, #1
 994              	.L42:
 995              	.LVL62:
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
 996              		.loc 1 906 0
 997 018a 0122     		mov	r2, #1
 998 018c 5123     		mov	r3, #81
 999 018e F254     		strb	r2, [r6, r3]
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 1000              		.loc 1 908 0
 1001 0190 0022     		mov	r2, #0
ARM GAS  /tmp/ccu3pZ5o.s 			page 88


 1002 0192 013B     		sub	r3, r3, #1
 1003 0194 F254     		strb	r2, [r6, r3]
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1004              		.loc 1 909 0
 1005 0196 00E0     		b	.L41
 1006              	.LVL63:
 1007              	.L63:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1008              		.loc 1 768 0
 1009 0198 0220     		mov	r0, #2
 1010              	.LVL64:
 1011              	.L41:
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1012              		.loc 1 910 0
 1013 019a 05B0     		add	sp, sp, #20
 1014              		@ sp needed
 1015              	.LVL65:
 1016              	.LVL66:
 1017 019c F0BD     		pop	{r4, r5, r6, r7, pc}
 1018              		.cfi_endproc
 1019              	.LFE38:
 1021 019e C046     		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1022              		.align	2
 1023              		.global	HAL_SPI_TransmitReceive
 1024              		.code	16
 1025              		.thumb_func
 1027              	HAL_SPI_TransmitReceive:
 1028              	.LFB40:
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1029              		.loc 1 1121 0
 1030              		.cfi_startproc
 1031              	.LVL67:
 1032 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1033              	.LCFI11:
 1034              		.cfi_def_cfa_offset 20
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 1040 0002 85B0     		sub	sp, sp, #20
 1041              	.LCFI12:
 1042              		.cfi_def_cfa_offset 40
 1043 0004 041C     		mov	r4, r0
 1044 0006 0E1C     		mov	r6, r1
 1045 0008 0192     		str	r2, [sp, #4]
 1046 000a 1D1C     		mov	r5, r3
 1047              	.LVL68:
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1048              		.loc 1 1143 0
 1049 000c 5023     		mov	r3, #80
 1050              	.LVL69:
 1051 000e C35C     		ldrb	r3, [r0, r3]
 1052 0010 012B     		cmp	r3, #1
 1053 0012 00D1     		bne	.LCB1037
 1054 0014 0BE1     		b	.L94	@long jump
 1055              	.LCB1037:
ARM GAS  /tmp/ccu3pZ5o.s 			page 89


1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1056              		.loc 1 1143 0 is_stmt 0 discriminator 2
 1057 0016 0122     		mov	r2, #1
 1058              	.LVL70:
 1059 0018 5023     		mov	r3, #80
 1060 001a C254     		strb	r2, [r0, r3]
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1061              		.loc 1 1146 0 is_stmt 1 discriminator 2
 1062 001c FFF7FEFF 		bl	HAL_GetTick
 1063              	.LVL71:
 1064 0020 071C     		mov	r7, r0
 1065              	.LVL72:
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1066              		.loc 1 1149 0 discriminator 2
 1067 0022 5123     		mov	r3, #81
 1068 0024 E35C     		ldrb	r3, [r4, r3]
 1069 0026 DBB2     		uxtb	r3, r3
 1070              	.LVL73:
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1071              		.loc 1 1150 0 discriminator 2
 1072 0028 6268     		ldr	r2, [r4, #4]
 1073              	.LVL74:
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1074              		.loc 1 1153 0 discriminator 2
 1075 002a 012B     		cmp	r3, #1
 1076 002c 0BD0     		beq	.L74
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1077              		.loc 1 1153 0 is_stmt 0 discriminator 1
 1078 002e 8221     		mov	r1, #130
 1079 0030 4900     		lsl	r1, r1, #1
 1080 0032 8A42     		cmp	r2, r1
 1081 0034 00D0     		beq	.LCB1060
 1082 0036 E0E0     		b	.L95	@long jump
 1083              	.LCB1060:
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1084              		.loc 1 1154 0 is_stmt 1
 1085 0038 A268     		ldr	r2, [r4, #8]
 1086              	.LVL75:
 1087 003a 002A     		cmp	r2, #0
 1088 003c 00D0     		beq	.LCB1065
 1089 003e DEE0     		b	.L96	@long jump
 1090              	.LCB1065:
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1091              		.loc 1 1154 0 is_stmt 0 discriminator 1
 1092 0040 042B     		cmp	r3, #4
 1093 0042 00D0     		beq	.LCB1067
 1094 0044 DDE0     		b	.L97	@long jump
 1095              	.LCB1067:
 1096              	.L74:
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1097              		.loc 1 1160 0 is_stmt 1
 1098 0046 002E     		cmp	r6, #0
 1099 0048 00D1     		bne	.LCB1070
 1100 004a DCE0     		b	.L98	@long jump
 1101              	.LCB1070:
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1102              		.loc 1 1160 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccu3pZ5o.s 			page 90


 1103 004c 019B     		ldr	r3, [sp, #4]
 1104              	.LVL76:
 1105 004e 002B     		cmp	r3, #0
 1106 0050 00D1     		bne	.LCB1074
 1107 0052 DAE0     		b	.L99	@long jump
 1108              	.LCB1074:
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1109              		.loc 1 1160 0 discriminator 2
 1110 0054 002D     		cmp	r5, #0
 1111 0056 00D1     		bne	.LCB1076
 1112 0058 D9E0     		b	.L100	@long jump
 1113              	.LCB1076:
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1114              		.loc 1 1167 0 is_stmt 1
 1115 005a 5123     		mov	r3, #81
 1116 005c E35C     		ldrb	r3, [r4, r3]
 1117 005e 042B     		cmp	r3, #4
 1118 0060 02D0     		beq	.L76
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1119              		.loc 1 1169 0
 1120 0062 0522     		mov	r2, #5
 1121 0064 5123     		mov	r3, #81
 1122 0066 E254     		strb	r2, [r4, r3]
 1123              	.LVL77:
 1124              	.L76:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1125              		.loc 1 1173 0
 1126 0068 0023     		mov	r3, #0
 1127 006a 6365     		str	r3, [r4, #84]
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1128              		.loc 1 1174 0
 1129 006c 019A     		ldr	r2, [sp, #4]
 1130 006e A263     		str	r2, [r4, #56]
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1131              		.loc 1 1175 0
 1132 0070 E587     		strh	r5, [r4, #62]
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1133              		.loc 1 1176 0
 1134 0072 A587     		strh	r5, [r4, #60]
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1135              		.loc 1 1177 0
 1136 0074 2663     		str	r6, [r4, #48]
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1137              		.loc 1 1178 0
 1138 0076 E586     		strh	r5, [r4, #54]
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1139              		.loc 1 1179 0
 1140 0078 A586     		strh	r5, [r4, #52]
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1141              		.loc 1 1182 0
 1142 007a 2364     		str	r3, [r4, #64]
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1143              		.loc 1 1183 0
 1144 007c 6364     		str	r3, [r4, #68]
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1145              		.loc 1 1194 0
 1146 007e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccu3pZ5o.s 			page 91


 1147 0080 1A68     		ldr	r2, [r3]
 1148 0082 5206     		lsl	r2, r2, #25
 1149 0084 03D4     		bmi	.L77
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1150              		.loc 1 1197 0
 1151 0086 1968     		ldr	r1, [r3]
 1152 0088 4022     		mov	r2, #64
 1153 008a 0A43     		orr	r2, r1
 1154 008c 1A60     		str	r2, [r3]
 1155              	.L77:
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1156              		.loc 1 1201 0
 1157 008e 8023     		mov	r3, #128
 1158 0090 1B01     		lsl	r3, r3, #4
 1159 0092 E268     		ldr	r2, [r4, #12]
 1160 0094 9A42     		cmp	r2, r3
 1161 0096 4BD1     		bne	.L78
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1162              		.loc 1 1203 0
 1163 0098 6368     		ldr	r3, [r4, #4]
 1164 009a 002B     		cmp	r3, #0
 1165 009c 01D0     		beq	.L79
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1166              		.loc 1 1203 0 is_stmt 0 discriminator 1
 1167 009e 012D     		cmp	r5, #1
 1168 00a0 0AD1     		bne	.L80
 1169              	.L79:
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1170              		.loc 1 1205 0 is_stmt 1
 1171 00a2 2368     		ldr	r3, [r4]
 1172 00a4 226B     		ldr	r2, [r4, #48]
 1173 00a6 1288     		ldrh	r2, [r2]
 1174 00a8 DA60     		str	r2, [r3, #12]
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 1175              		.loc 1 1206 0
 1176 00aa 236B     		ldr	r3, [r4, #48]
 1177 00ac 0233     		add	r3, r3, #2
 1178 00ae 2363     		str	r3, [r4, #48]
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 1179              		.loc 1 1207 0
 1180 00b0 E38E     		ldrh	r3, [r4, #54]
 1181 00b2 013B     		sub	r3, r3, #1
 1182 00b4 9BB2     		uxth	r3, r3
 1183 00b6 E386     		strh	r3, [r4, #54]
 1184              	.L80:
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1185              		.loc 1 1236 0
 1186 00b8 0125     		mov	r5, #1
 1187              	.LVL78:
 1188 00ba 30E0     		b	.L81
 1189              	.LVL79:
 1190              	.L84:
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1191              		.loc 1 1212 0
 1192 00bc 2368     		ldr	r3, [r4]
 1193 00be 9A68     		ldr	r2, [r3, #8]
 1194 00c0 9207     		lsl	r2, r2, #30
ARM GAS  /tmp/ccu3pZ5o.s 			page 92


 1195 00c2 10D5     		bpl	.L82
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1196              		.loc 1 1212 0 is_stmt 0 discriminator 1
 1197 00c4 E28E     		ldrh	r2, [r4, #54]
 1198 00c6 92B2     		uxth	r2, r2
 1199 00c8 002A     		cmp	r2, #0
 1200 00ca 0CD0     		beq	.L82
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1201              		.loc 1 1212 0 discriminator 2
 1202 00cc 012D     		cmp	r5, #1
 1203 00ce 0AD1     		bne	.L82
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1204              		.loc 1 1214 0 is_stmt 1
 1205 00d0 226B     		ldr	r2, [r4, #48]
 1206 00d2 1288     		ldrh	r2, [r2]
 1207 00d4 DA60     		str	r2, [r3, #12]
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 1208              		.loc 1 1215 0
 1209 00d6 236B     		ldr	r3, [r4, #48]
 1210 00d8 0233     		add	r3, r3, #2
 1211 00da 2363     		str	r3, [r4, #48]
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1212              		.loc 1 1216 0
 1213 00dc E38E     		ldrh	r3, [r4, #54]
 1214 00de 013B     		sub	r3, r3, #1
 1215 00e0 9BB2     		uxth	r3, r3
 1216 00e2 E386     		strh	r3, [r4, #54]
 1217              	.LVL80:
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1218              		.loc 1 1218 0
 1219 00e4 0025     		mov	r5, #0
 1220              	.LVL81:
 1221              	.L82:
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1222              		.loc 1 1230 0
 1223 00e6 2368     		ldr	r3, [r4]
 1224 00e8 9A68     		ldr	r2, [r3, #8]
 1225 00ea D207     		lsl	r2, r2, #31
 1226 00ec 0ED5     		bpl	.L83
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1227              		.loc 1 1230 0 is_stmt 0 discriminator 1
 1228 00ee E28F     		ldrh	r2, [r4, #62]
 1229 00f0 92B2     		uxth	r2, r2
 1230 00f2 002A     		cmp	r2, #0
 1231 00f4 0AD0     		beq	.L83
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1232              		.loc 1 1232 0 is_stmt 1
 1233 00f6 DB68     		ldr	r3, [r3, #12]
 1234 00f8 A26B     		ldr	r2, [r4, #56]
 1235 00fa 1380     		strh	r3, [r2]
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1236              		.loc 1 1233 0
 1237 00fc A36B     		ldr	r3, [r4, #56]
 1238 00fe 0233     		add	r3, r3, #2
 1239 0100 A363     		str	r3, [r4, #56]
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1240              		.loc 1 1234 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 93


 1241 0102 E38F     		ldrh	r3, [r4, #62]
 1242 0104 013B     		sub	r3, r3, #1
 1243 0106 9BB2     		uxth	r3, r3
 1244 0108 E387     		strh	r3, [r4, #62]
 1245              	.LVL82:
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1246              		.loc 1 1236 0
 1247 010a 0125     		mov	r5, #1
 1248              	.LVL83:
 1249              	.L83:
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1250              		.loc 1 1238 0
 1251 010c FFF7FEFF 		bl	HAL_GetTick
 1252              	.LVL84:
 1253 0110 C01B     		sub	r0, r0, r7
 1254 0112 0A9B     		ldr	r3, [sp, #40]
 1255 0114 9842     		cmp	r0, r3
 1256 0116 02D3     		bcc	.L81
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1257              		.loc 1 1238 0 is_stmt 0 discriminator 1
 1258 0118 0133     		add	r3, r3, #1
 1259 011a 00D0     		beq	.LCB1220
 1260 011c 79E0     		b	.L101	@long jump
 1261              	.LCB1220:
 1262              	.LVL85:
 1263              	.L81:
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1264              		.loc 1 1209 0 is_stmt 1
 1265 011e E38E     		ldrh	r3, [r4, #54]
 1266 0120 9BB2     		uxth	r3, r3
 1267 0122 002B     		cmp	r3, #0
 1268 0124 CAD1     		bne	.L84
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1269              		.loc 1 1209 0 is_stmt 0 discriminator 1
 1270 0126 E38F     		ldrh	r3, [r4, #62]
 1271 0128 9BB2     		uxth	r3, r3
 1272 012a 002B     		cmp	r3, #0
 1273 012c C6D1     		bne	.L84
 1274 012e 4DE0     		b	.L85
 1275              	.LVL86:
 1276              	.L78:
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1277              		.loc 1 1248 0 is_stmt 1
 1278 0130 6368     		ldr	r3, [r4, #4]
 1279 0132 002B     		cmp	r3, #0
 1280 0134 01D0     		beq	.L86
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1281              		.loc 1 1248 0 is_stmt 0 discriminator 1
 1282 0136 012D     		cmp	r5, #1
 1283 0138 3FD1     		bne	.L87
 1284              	.L86:
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1285              		.loc 1 1250 0 is_stmt 1
 1286 013a 236B     		ldr	r3, [r4, #48]
 1287 013c 1B78     		ldrb	r3, [r3]
 1288 013e 2268     		ldr	r2, [r4]
 1289 0140 1373     		strb	r3, [r2, #12]
ARM GAS  /tmp/ccu3pZ5o.s 			page 94


1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->TxXferCount--;
 1290              		.loc 1 1251 0
 1291 0142 236B     		ldr	r3, [r4, #48]
 1292 0144 0133     		add	r3, r3, #1
 1293 0146 2363     		str	r3, [r4, #48]
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 1294              		.loc 1 1252 0
 1295 0148 E38E     		ldrh	r3, [r4, #54]
 1296 014a 013B     		sub	r3, r3, #1
 1297 014c 9BB2     		uxth	r3, r3
 1298 014e E386     		strh	r3, [r4, #54]
 1299 0150 33E0     		b	.L87
 1300              	.LVL87:
 1301              	.L92:
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1302              		.loc 1 1257 0
 1303 0152 2368     		ldr	r3, [r4]
 1304 0154 9A68     		ldr	r2, [r3, #8]
 1305 0156 9207     		lsl	r2, r2, #30
 1306 0158 10D5     		bpl	.L88
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1307              		.loc 1 1257 0 is_stmt 0 discriminator 1
 1308 015a E28E     		ldrh	r2, [r4, #54]
 1309 015c 92B2     		uxth	r2, r2
 1310 015e 002A     		cmp	r2, #0
 1311 0160 0CD0     		beq	.L88
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1312              		.loc 1 1257 0 discriminator 2
 1313 0162 012D     		cmp	r5, #1
 1314 0164 0AD1     		bne	.L88
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1315              		.loc 1 1259 0 is_stmt 1
 1316 0166 226B     		ldr	r2, [r4, #48]
 1317 0168 1278     		ldrb	r2, [r2]
 1318 016a 1A73     		strb	r2, [r3, #12]
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 1319              		.loc 1 1260 0
 1320 016c 236B     		ldr	r3, [r4, #48]
 1321 016e 0133     		add	r3, r3, #1
 1322 0170 2363     		str	r3, [r4, #48]
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1323              		.loc 1 1261 0
 1324 0172 E38E     		ldrh	r3, [r4, #54]
 1325 0174 013B     		sub	r3, r3, #1
 1326 0176 9BB2     		uxth	r3, r3
 1327 0178 E386     		strh	r3, [r4, #54]
 1328              	.LVL88:
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1329              		.loc 1 1263 0
 1330 017a 0025     		mov	r5, #0
 1331              	.LVL89:
 1332              	.L88:
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1333              		.loc 1 1275 0
 1334 017c 2368     		ldr	r3, [r4]
 1335 017e 9A68     		ldr	r2, [r3, #8]
 1336 0180 D207     		lsl	r2, r2, #31
ARM GAS  /tmp/ccu3pZ5o.s 			page 95


 1337 0182 0ED5     		bpl	.L89
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1338              		.loc 1 1275 0 is_stmt 0 discriminator 1
 1339 0184 E28F     		ldrh	r2, [r4, #62]
 1340 0186 92B2     		uxth	r2, r2
 1341 0188 002A     		cmp	r2, #0
 1342 018a 0AD0     		beq	.L89
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1343              		.loc 1 1277 0 is_stmt 1
 1344 018c DB68     		ldr	r3, [r3, #12]
 1345 018e A26B     		ldr	r2, [r4, #56]
 1346 0190 1370     		strb	r3, [r2]
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1347              		.loc 1 1278 0
 1348 0192 A36B     		ldr	r3, [r4, #56]
 1349 0194 0133     		add	r3, r3, #1
 1350 0196 A363     		str	r3, [r4, #56]
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1351              		.loc 1 1279 0
 1352 0198 E38F     		ldrh	r3, [r4, #62]
 1353 019a 013B     		sub	r3, r3, #1
 1354 019c 9BB2     		uxth	r3, r3
 1355 019e E387     		strh	r3, [r4, #62]
 1356              	.LVL90:
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1357              		.loc 1 1281 0
 1358 01a0 0125     		mov	r5, #1
 1359              	.LVL91:
 1360              	.L89:
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1361              		.loc 1 1283 0
 1362 01a2 FFF7FEFF 		bl	HAL_GetTick
 1363              	.LVL92:
 1364 01a6 C01B     		sub	r0, r0, r7
 1365 01a8 0A9B     		ldr	r3, [sp, #40]
 1366 01aa 9842     		cmp	r0, r3
 1367 01ac 01D3     		bcc	.L90
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1368              		.loc 1 1283 0 is_stmt 0 discriminator 1
 1369 01ae 0133     		add	r3, r3, #1
 1370 01b0 31D1     		bne	.L102
 1371              	.L90:
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1372              		.loc 1 1283 0 discriminator 3
 1373 01b2 0A9B     		ldr	r3, [sp, #40]
 1374 01b4 002B     		cmp	r3, #0
 1375 01b6 01D1     		bne	.L91
 1376 01b8 2FE0     		b	.L103
 1377              	.LVL93:
 1378              	.L87:
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1379              		.loc 1 1281 0 is_stmt 1
 1380 01ba 0125     		mov	r5, #1
 1381              	.LVL94:
 1382              	.L91:
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1383              		.loc 1 1254 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 96


 1384 01bc E38E     		ldrh	r3, [r4, #54]
 1385 01be 9BB2     		uxth	r3, r3
 1386 01c0 002B     		cmp	r3, #0
 1387 01c2 C6D1     		bne	.L92
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1388              		.loc 1 1254 0 is_stmt 0 discriminator 1
 1389 01c4 E38F     		ldrh	r3, [r4, #62]
 1390 01c6 9BB2     		uxth	r3, r3
 1391 01c8 002B     		cmp	r3, #0
 1392 01ca C2D1     		bne	.L92
 1393              	.L85:
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1394              		.loc 1 1319 0 is_stmt 1
 1395 01cc 201C     		mov	r0, r4
 1396 01ce 0A99     		ldr	r1, [sp, #40]
 1397 01d0 3A1C     		mov	r2, r7
 1398 01d2 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1399              	.LVL95:
 1400 01d6 0028     		cmp	r0, #0
 1401 01d8 03D0     		beq	.L93
 1402              	.LVL96:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1403              		.loc 1 1322 0
 1404 01da 2023     		mov	r3, #32
 1405 01dc 6365     		str	r3, [r4, #84]
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1406              		.loc 1 1321 0
 1407 01de 0120     		mov	r0, #1
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1408              		.loc 1 1323 0
 1409 01e0 1EE0     		b	.L75
 1410              	.LVL97:
 1411              	.L93:
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1412              		.loc 1 1327 0
 1413 01e2 A368     		ldr	r3, [r4, #8]
 1414 01e4 002B     		cmp	r3, #0
 1415 01e6 1AD1     		bne	.L104
 1416              	.LBB3:
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1417              		.loc 1 1329 0
 1418 01e8 0393     		str	r3, [sp, #12]
 1419 01ea 2368     		ldr	r3, [r4]
 1420 01ec DA68     		ldr	r2, [r3, #12]
 1421 01ee 0392     		str	r2, [sp, #12]
 1422 01f0 9B68     		ldr	r3, [r3, #8]
 1423 01f2 0393     		str	r3, [sp, #12]
 1424 01f4 039B     		ldr	r3, [sp, #12]
 1425              	.LBE3:
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1426              		.loc 1 1129 0
 1427 01f6 0020     		mov	r0, #0
 1428 01f8 12E0     		b	.L75
 1429              	.LVL98:
 1430              	.L95:
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1431              		.loc 1 1156 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 97


 1432 01fa 0220     		mov	r0, #2
 1433              	.LVL99:
 1434 01fc 10E0     		b	.L75
 1435              	.LVL100:
 1436              	.L96:
 1437 01fe 0220     		mov	r0, #2
 1438              	.LVL101:
 1439 0200 0EE0     		b	.L75
 1440              	.LVL102:
 1441              	.L97:
 1442 0202 0220     		mov	r0, #2
 1443              	.LVL103:
 1444 0204 0CE0     		b	.L75
 1445              	.LVL104:
 1446              	.L98:
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1447              		.loc 1 1162 0
 1448 0206 0120     		mov	r0, #1
 1449              	.LVL105:
 1450 0208 0AE0     		b	.L75
 1451              	.LVL106:
 1452              	.L99:
 1453 020a 0120     		mov	r0, #1
 1454              	.LVL107:
 1455 020c 08E0     		b	.L75
 1456              	.LVL108:
 1457              	.L100:
 1458 020e 0120     		mov	r0, #1
 1459              	.LVL109:
 1460 0210 06E0     		b	.L75
 1461              	.LVL110:
 1462              	.L101:
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         goto error;
 1463              		.loc 1 1240 0
 1464 0212 0320     		mov	r0, #3
 1465 0214 04E0     		b	.L75
 1466              	.L102:
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         goto error;
 1467              		.loc 1 1285 0
 1468 0216 0320     		mov	r0, #3
 1469 0218 02E0     		b	.L75
 1470              	.L103:
 1471 021a 0320     		mov	r0, #3
 1472 021c 00E0     		b	.L75
 1473              	.L104:
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1474              		.loc 1 1129 0
 1475 021e 0020     		mov	r0, #0
 1476              	.LVL111:
 1477              	.L75:
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1478              		.loc 1 1333 0
 1479 0220 0122     		mov	r2, #1
 1480 0222 5123     		mov	r3, #81
 1481 0224 E254     		strb	r2, [r4, r3]
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 1482              		.loc 1 1334 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 98


 1483 0226 0022     		mov	r2, #0
 1484 0228 013B     		sub	r3, r3, #1
 1485 022a E254     		strb	r2, [r4, r3]
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1486              		.loc 1 1335 0
 1487 022c 00E0     		b	.L73
 1488              	.LVL112:
 1489              	.L94:
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1490              		.loc 1 1143 0
 1491 022e 0220     		mov	r0, #2
 1492              	.LVL113:
 1493              	.L73:
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1494              		.loc 1 1336 0
 1495 0230 05B0     		add	sp, sp, #20
 1496              		@ sp needed
 1497              	.LVL114:
 1498              	.LVL115:
 1499 0232 F0BD     		pop	{r4, r5, r6, r7, pc}
 1500              		.cfi_endproc
 1501              	.LFE40:
 1503              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1504              		.align	2
 1505              		.global	HAL_SPI_Receive
 1506              		.code	16
 1507              		.thumb_func
 1509              	HAL_SPI_Receive:
 1510              	.LFB39:
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 1511              		.loc 1 922 0
 1512              		.cfi_startproc
 1513              	.LVL116:
 1514 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1515              	.LCFI13:
 1516              		.cfi_def_cfa_offset 20
 1517              		.cfi_offset 4, -20
 1518              		.cfi_offset 5, -16
 1519              		.cfi_offset 6, -12
 1520              		.cfi_offset 7, -8
 1521              		.cfi_offset 14, -4
 1522 0002 85B0     		sub	sp, sp, #20
 1523              	.LCFI14:
 1524              		.cfi_def_cfa_offset 40
 1525 0004 051C     		mov	r5, r0
 1526 0006 0391     		str	r1, [sp, #12]
 1527 0008 161C     		mov	r6, r2
 1528 000a 1C1C     		mov	r4, r3
 1529              	.LVL117:
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1530              		.loc 1 933 0
 1531 000c 8223     		mov	r3, #130
 1532              	.LVL118:
 1533 000e 5B00     		lsl	r3, r3, #1
 1534 0010 4268     		ldr	r2, [r0, #4]
 1535              	.LVL119:
 1536 0012 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccu3pZ5o.s 			page 99


 1537 0014 0BD1     		bne	.L106
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1538              		.loc 1 933 0 is_stmt 0 discriminator 1
 1539 0016 8368     		ldr	r3, [r0, #8]
 1540 0018 002B     		cmp	r3, #0
 1541 001a 08D1     		bne	.L106
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1542              		.loc 1 935 0 is_stmt 1
 1543 001c 0422     		mov	r2, #4
 1544 001e 5133     		add	r3, r3, #81
 1545 0020 C254     		strb	r2, [r0, r3]
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1546              		.loc 1 937 0
 1547 0022 0094     		str	r4, [sp]
 1548 0024 0A1C     		mov	r2, r1
 1549 0026 331C     		mov	r3, r6
 1550 0028 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1551              	.LVL120:
 1552 002c 95E0     		b	.L107
 1553              	.LVL121:
 1554              	.L106:
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1555              		.loc 1 941 0
 1556 002e 5023     		mov	r3, #80
 1557 0030 EB5C     		ldrb	r3, [r5, r3]
 1558 0032 012B     		cmp	r3, #1
 1559 0034 00D1     		bne	.LCB1588
 1560 0036 8FE0     		b	.L123	@long jump
 1561              	.LCB1588:
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1562              		.loc 1 941 0 is_stmt 0 discriminator 2
 1563 0038 0122     		mov	r2, #1
 1564 003a 5023     		mov	r3, #80
 1565 003c EA54     		strb	r2, [r5, r3]
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1566              		.loc 1 944 0 is_stmt 1 discriminator 2
 1567 003e FFF7FEFF 		bl	HAL_GetTick
 1568              	.LVL122:
 1569 0042 071C     		mov	r7, r0
 1570              	.LVL123:
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1571              		.loc 1 946 0 discriminator 2
 1572 0044 5123     		mov	r3, #81
 1573 0046 EB5C     		ldrb	r3, [r5, r3]
 1574 0048 012B     		cmp	r3, #1
 1575 004a 6FD1     		bne	.L124
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1576              		.loc 1 952 0
 1577 004c 039B     		ldr	r3, [sp, #12]
 1578 004e 002B     		cmp	r3, #0
 1579 0050 6ED0     		beq	.L125
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1580              		.loc 1 952 0 is_stmt 0 discriminator 1
 1581 0052 002E     		cmp	r6, #0
 1582 0054 6ED0     		beq	.L126
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1583              		.loc 1 959 0 is_stmt 1
ARM GAS  /tmp/ccu3pZ5o.s 			page 100


 1584 0056 0422     		mov	r2, #4
 1585 0058 5123     		mov	r3, #81
 1586 005a EA54     		strb	r2, [r5, r3]
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1587              		.loc 1 960 0
 1588 005c 0023     		mov	r3, #0
 1589 005e 6B65     		str	r3, [r5, #84]
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1590              		.loc 1 961 0
 1591 0060 039A     		ldr	r2, [sp, #12]
 1592 0062 AA63     		str	r2, [r5, #56]
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1593              		.loc 1 962 0
 1594 0064 AE87     		strh	r6, [r5, #60]
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1595              		.loc 1 963 0
 1596 0066 EE87     		strh	r6, [r5, #62]
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1597              		.loc 1 966 0
 1598 0068 2B63     		str	r3, [r5, #48]
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1599              		.loc 1 967 0
 1600 006a AB86     		strh	r3, [r5, #52]
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1601              		.loc 1 968 0
 1602 006c EB86     		strh	r3, [r5, #54]
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1603              		.loc 1 969 0
 1604 006e 2B64     		str	r3, [r5, #64]
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1605              		.loc 1 970 0
 1606 0070 6B64     		str	r3, [r5, #68]
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1607              		.loc 1 983 0
 1608 0072 8023     		mov	r3, #128
 1609 0074 1B02     		lsl	r3, r3, #8
 1610 0076 AA68     		ldr	r2, [r5, #8]
 1611 0078 9A42     		cmp	r2, r3
 1612 007a 04D1     		bne	.L109
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1613              		.loc 1 985 0
 1614 007c 2A68     		ldr	r2, [r5]
 1615 007e 1168     		ldr	r1, [r2]
 1616 0080 374B     		ldr	r3, .L132
 1617 0082 0B40     		and	r3, r1
 1618 0084 1360     		str	r3, [r2]
 1619              	.L109:
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1620              		.loc 1 989 0
 1621 0086 2B68     		ldr	r3, [r5]
 1622 0088 1A68     		ldr	r2, [r3]
 1623 008a 5206     		lsl	r2, r2, #25
 1624 008c 03D4     		bmi	.L110
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1625              		.loc 1 992 0
 1626 008e 1968     		ldr	r1, [r3]
 1627 0090 4022     		mov	r2, #64
ARM GAS  /tmp/ccu3pZ5o.s 			page 101


 1628 0092 0A43     		orr	r2, r1
 1629 0094 1A60     		str	r2, [r3]
 1630              	.L110:
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1631              		.loc 1 996 0
 1632 0096 EB68     		ldr	r3, [r5, #12]
 1633 0098 002B     		cmp	r3, #0
 1634 009a 18D0     		beq	.L111
 1635 009c 34E0     		b	.L112
 1636              	.LVL124:
 1637              	.L116:
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1638              		.loc 1 1002 0
 1639 009e 2B68     		ldr	r3, [r5]
 1640 00a0 9A68     		ldr	r2, [r3, #8]
 1641 00a2 D207     		lsl	r2, r2, #31
 1642 00a4 0AD5     		bpl	.L113
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1643              		.loc 1 1005 0
 1644 00a6 1B7B     		ldrb	r3, [r3, #12]
 1645 00a8 AA6B     		ldr	r2, [r5, #56]
 1646 00aa 1370     		strb	r3, [r2]
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1647              		.loc 1 1006 0
 1648 00ac AB6B     		ldr	r3, [r5, #56]
 1649 00ae 0133     		add	r3, r3, #1
 1650 00b0 AB63     		str	r3, [r5, #56]
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1651              		.loc 1 1007 0
 1652 00b2 EB8F     		ldrh	r3, [r5, #62]
 1653 00b4 013B     		sub	r3, r3, #1
 1654 00b6 9BB2     		uxth	r3, r3
 1655 00b8 EB87     		strh	r3, [r5, #62]
 1656 00ba 08E0     		b	.L111
 1657              	.L113:
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1658              		.loc 1 1012 0
 1659 00bc FFF7FEFF 		bl	HAL_GetTick
 1660              	.LVL125:
 1661 00c0 C01B     		sub	r0, r0, r7
 1662 00c2 A042     		cmp	r0, r4
 1663 00c4 01D3     		bcc	.L115
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1664              		.loc 1 1012 0 is_stmt 0 discriminator 1
 1665 00c6 631C     		add	r3, r4, #1
 1666 00c8 36D1     		bne	.L127
 1667              	.L115:
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1668              		.loc 1 1012 0 discriminator 3
 1669 00ca 002C     		cmp	r4, #0
 1670 00cc 36D0     		beq	.L128
 1671              	.L111:
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1672              		.loc 1 999 0 is_stmt 1
 1673 00ce EB8F     		ldrh	r3, [r5, #62]
 1674 00d0 9BB2     		uxth	r3, r3
 1675 00d2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccu3pZ5o.s 			page 102


 1676 00d4 E3D1     		bne	.L116
 1677 00d6 1BE0     		b	.L117
 1678              	.L121:
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 1679              		.loc 1 1026 0
 1680 00d8 2B68     		ldr	r3, [r5]
 1681 00da 9A68     		ldr	r2, [r3, #8]
 1682 00dc D207     		lsl	r2, r2, #31
 1683 00de 0AD5     		bpl	.L118
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1684              		.loc 1 1028 0
 1685 00e0 DB68     		ldr	r3, [r3, #12]
 1686 00e2 AA6B     		ldr	r2, [r5, #56]
 1687 00e4 1380     		strh	r3, [r2]
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1688              		.loc 1 1029 0
 1689 00e6 AB6B     		ldr	r3, [r5, #56]
 1690 00e8 0233     		add	r3, r3, #2
 1691 00ea AB63     		str	r3, [r5, #56]
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 1692              		.loc 1 1030 0
 1693 00ec EB8F     		ldrh	r3, [r5, #62]
 1694 00ee 013B     		sub	r3, r3, #1
 1695 00f0 9BB2     		uxth	r3, r3
 1696 00f2 EB87     		strh	r3, [r5, #62]
 1697 00f4 08E0     		b	.L112
 1698              	.L118:
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1699              		.loc 1 1035 0
 1700 00f6 FFF7FEFF 		bl	HAL_GetTick
 1701              	.LVL126:
 1702 00fa C01B     		sub	r0, r0, r7
 1703 00fc A042     		cmp	r0, r4
 1704 00fe 01D3     		bcc	.L120
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1705              		.loc 1 1035 0 is_stmt 0 discriminator 1
 1706 0100 631C     		add	r3, r4, #1
 1707 0102 1DD1     		bne	.L129
 1708              	.L120:
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 1709              		.loc 1 1035 0 discriminator 3
 1710 0104 002C     		cmp	r4, #0
 1711 0106 1DD0     		beq	.L130
 1712              	.L112:
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 1713              		.loc 1 1023 0 is_stmt 1
 1714 0108 EB8F     		ldrh	r3, [r5, #62]
 1715 010a 9BB2     		uxth	r3, r3
 1716 010c 002B     		cmp	r3, #0
 1717 010e E3D1     		bne	.L121
 1718              	.L117:
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1719              		.loc 1 1084 0
 1720 0110 281C     		mov	r0, r5
 1721 0112 211C     		mov	r1, r4
 1722 0114 3A1C     		mov	r2, r7
 1723 0116 FFF7FEFF 		bl	SPI_EndRxTransaction
ARM GAS  /tmp/ccu3pZ5o.s 			page 103


 1724              	.LVL127:
 1725 011a 0028     		cmp	r0, #0
 1726 011c 01D0     		beq	.L122
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1727              		.loc 1 1086 0
 1728 011e 2023     		mov	r3, #32
 1729 0120 6B65     		str	r3, [r5, #84]
 1730              	.L122:
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1731              		.loc 1 1098 0
 1732 0122 6B6D     		ldr	r3, [r5, #84]
 1733 0124 002B     		cmp	r3, #0
 1734 0126 0FD1     		bne	.L131
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1735              		.loc 1 924 0
 1736 0128 0020     		mov	r0, #0
 1737 012a 0EE0     		b	.L108
 1738              	.LVL128:
 1739              	.L124:
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1740              		.loc 1 948 0
 1741 012c 0220     		mov	r0, #2
 1742              	.LVL129:
 1743 012e 0CE0     		b	.L108
 1744              	.LVL130:
 1745              	.L125:
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1746              		.loc 1 954 0
 1747 0130 0120     		mov	r0, #1
 1748              	.LVL131:
 1749 0132 0AE0     		b	.L108
 1750              	.LVL132:
 1751              	.L126:
 1752 0134 0120     		mov	r0, #1
 1753              	.LVL133:
 1754 0136 08E0     		b	.L108
 1755              	.L127:
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 1756              		.loc 1 1014 0
 1757 0138 0320     		mov	r0, #3
 1758 013a 06E0     		b	.L108
 1759              	.L128:
 1760 013c 0320     		mov	r0, #3
 1761 013e 04E0     		b	.L108
 1762              	.L129:
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           goto error;
 1763              		.loc 1 1037 0
 1764 0140 0320     		mov	r0, #3
 1765 0142 02E0     		b	.L108
 1766              	.L130:
 1767 0144 0320     		mov	r0, #3
 1768 0146 00E0     		b	.L108
 1769              	.L131:
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1770              		.loc 1 1100 0
 1771 0148 0120     		mov	r0, #1
 1772              	.L108:
ARM GAS  /tmp/ccu3pZ5o.s 			page 104


 1773              	.LVL134:
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1774              		.loc 1 1104 0
 1775 014a 0122     		mov	r2, #1
 1776 014c 5123     		mov	r3, #81
 1777 014e EA54     		strb	r2, [r5, r3]
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 1778              		.loc 1 1105 0
 1779 0150 0022     		mov	r2, #0
 1780 0152 013B     		sub	r3, r3, #1
 1781 0154 EA54     		strb	r2, [r5, r3]
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1782              		.loc 1 1106 0
 1783 0156 00E0     		b	.L107
 1784              	.LVL135:
 1785              	.L123:
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1786              		.loc 1 941 0
 1787 0158 0220     		mov	r0, #2
 1788              	.LVL136:
 1789              	.L107:
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1790              		.loc 1 1107 0
 1791 015a 05B0     		add	sp, sp, #20
 1792              		@ sp needed
 1793              	.LVL137:
 1794              	.LVL138:
 1795 015c F0BD     		pop	{r4, r5, r6, r7, pc}
 1796              	.L133:
 1797 015e C046     		.align	2
 1798              	.L132:
 1799 0160 FFBFFFFF 		.word	-16385
 1800              		.cfi_endproc
 1801              	.LFE39:
 1803              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1804              		.align	2
 1805              		.global	HAL_SPI_Transmit_IT
 1806              		.code	16
 1807              		.thumb_func
 1809              	HAL_SPI_Transmit_IT:
 1810              	.LFB41:
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1811              		.loc 1 1347 0
 1812              		.cfi_startproc
 1813              	.LVL139:
 1814 0000 10B5     		push	{r4, lr}
 1815              	.LCFI15:
 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 4, -8
 1818              		.cfi_offset 14, -4
 1819              	.LVL140:
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1820              		.loc 1 1361 0
 1821 0002 5023     		mov	r3, #80
 1822 0004 C35C     		ldrb	r3, [r0, r3]
 1823 0006 012B     		cmp	r3, #1
 1824 0008 44D0     		beq	.L140
ARM GAS  /tmp/ccu3pZ5o.s 			page 105


1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1825              		.loc 1 1361 0 is_stmt 0 discriminator 2
 1826 000a 0124     		mov	r4, #1
 1827 000c 5023     		mov	r3, #80
 1828 000e C454     		strb	r4, [r0, r3]
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1829              		.loc 1 1363 0 is_stmt 1 discriminator 2
 1830 0010 0029     		cmp	r1, #0
 1831 0012 33D0     		beq	.L141
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1832              		.loc 1 1363 0 is_stmt 0 discriminator 1
 1833 0014 002A     		cmp	r2, #0
 1834 0016 33D0     		beq	.L142
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1835              		.loc 1 1369 0 is_stmt 1
 1836 0018 0133     		add	r3, r3, #1
 1837 001a C35C     		ldrb	r3, [r0, r3]
 1838 001c 012B     		cmp	r3, #1
 1839 001e 31D1     		bne	.L143
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1840              		.loc 1 1376 0
 1841 0020 0234     		add	r4, r4, #2
 1842 0022 5033     		add	r3, r3, #80
 1843 0024 C454     		strb	r4, [r0, r3]
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1844              		.loc 1 1377 0
 1845 0026 0023     		mov	r3, #0
 1846 0028 4365     		str	r3, [r0, #84]
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1847              		.loc 1 1378 0
 1848 002a 0163     		str	r1, [r0, #48]
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1849              		.loc 1 1379 0
 1850 002c 8286     		strh	r2, [r0, #52]
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1851              		.loc 1 1380 0
 1852 002e C286     		strh	r2, [r0, #54]
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1853              		.loc 1 1383 0
 1854 0030 8363     		str	r3, [r0, #56]
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1855              		.loc 1 1384 0
 1856 0032 8387     		strh	r3, [r0, #60]
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1857              		.loc 1 1385 0
 1858 0034 C387     		strh	r3, [r0, #62]
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1859              		.loc 1 1386 0
 1860 0036 0364     		str	r3, [r0, #64]
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1861              		.loc 1 1389 0
 1862 0038 C368     		ldr	r3, [r0, #12]
 1863 003a 002B     		cmp	r3, #0
 1864 003c 02D0     		beq	.L137
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1865              		.loc 1 1391 0
 1866 003e 164B     		ldr	r3, .L145
ARM GAS  /tmp/ccu3pZ5o.s 			page 106


 1867 0040 4364     		str	r3, [r0, #68]
 1868 0042 01E0     		b	.L138
 1869              	.L137:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1870              		.loc 1 1395 0
 1871 0044 154B     		ldr	r3, .L145+4
 1872 0046 4364     		str	r3, [r0, #68]
 1873              	.L138:
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1874              		.loc 1 1399 0
 1875 0048 8023     		mov	r3, #128
 1876 004a 1B02     		lsl	r3, r3, #8
 1877 004c 8268     		ldr	r2, [r0, #8]
 1878              	.LVL141:
 1879 004e 9A42     		cmp	r2, r3
 1880 0050 05D1     		bne	.L139
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1881              		.loc 1 1401 0
 1882 0052 0268     		ldr	r2, [r0]
 1883 0054 1368     		ldr	r3, [r2]
 1884 0056 8021     		mov	r1, #128
 1885              	.LVL142:
 1886 0058 C901     		lsl	r1, r1, #7
 1887 005a 0B43     		orr	r3, r1
 1888 005c 1360     		str	r3, [r2]
 1889              	.LVL143:
 1890              	.L139:
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1891              		.loc 1 1413 0
 1892 005e 0268     		ldr	r2, [r0]
 1893 0060 5168     		ldr	r1, [r2, #4]
 1894 0062 A023     		mov	r3, #160
 1895 0064 0B43     		orr	r3, r1
 1896 0066 5360     		str	r3, [r2, #4]
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1897              		.loc 1 1417 0
 1898 0068 0368     		ldr	r3, [r0]
 1899 006a 1A68     		ldr	r2, [r3]
 1900 006c 5206     		lsl	r2, r2, #25
 1901 006e 0BD4     		bmi	.L144
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 1902              		.loc 1 1420 0
 1903 0070 1968     		ldr	r1, [r3]
 1904 0072 4022     		mov	r2, #64
 1905 0074 0A43     		orr	r2, r1
 1906 0076 1A60     		str	r2, [r3]
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1907              		.loc 1 1348 0
 1908 0078 0023     		mov	r3, #0
 1909 007a 06E0     		b	.L136
 1910              	.LVL144:
 1911              	.L141:
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1912              		.loc 1 1365 0
 1913 007c 0123     		mov	r3, #1
 1914 007e 04E0     		b	.L136
 1915              	.L142:
ARM GAS  /tmp/ccu3pZ5o.s 			page 107


 1916 0080 0123     		mov	r3, #1
 1917 0082 02E0     		b	.L136
 1918              	.L143:
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 1919              		.loc 1 1371 0
 1920 0084 0223     		mov	r3, #2
 1921 0086 00E0     		b	.L136
 1922              	.LVL145:
 1923              	.L144:
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1924              		.loc 1 1348 0
 1925 0088 0023     		mov	r3, #0
 1926              	.L136:
 1927              	.LVL146:
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 1928              		.loc 1 1424 0
 1929 008a 0021     		mov	r1, #0
 1930 008c 5022     		mov	r2, #80
 1931 008e 8154     		strb	r1, [r0, r2]
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1932              		.loc 1 1425 0
 1933 0090 181C     		mov	r0, r3
 1934              	.LVL147:
 1935 0092 00E0     		b	.L135
 1936              	.LVL148:
 1937              	.L140:
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1938              		.loc 1 1361 0
 1939 0094 0220     		mov	r0, #2
 1940              	.LVL149:
 1941              	.L135:
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1942              		.loc 1 1426 0
 1943              		@ sp needed
 1944 0096 10BD     		pop	{r4, pc}
 1945              	.L146:
 1946              		.align	2
 1947              	.L145:
 1948 0098 00000000 		.word	SPI_TxISR_16BIT
 1949 009c 00000000 		.word	SPI_TxISR_8BIT
 1950              		.cfi_endproc
 1951              	.LFE41:
 1953              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1954              		.align	2
 1955              		.global	HAL_SPI_TransmitReceive_IT
 1956              		.code	16
 1957              		.thumb_func
 1959              	HAL_SPI_TransmitReceive_IT:
 1960              	.LFB43:
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tmp_mode;
 1961              		.loc 1 1536 0
 1962              		.cfi_startproc
 1963              	.LVL150:
 1964 0000 70B5     		push	{r4, r5, r6, lr}
 1965              	.LCFI16:
 1966              		.cfi_def_cfa_offset 16
 1967              		.cfi_offset 4, -16
ARM GAS  /tmp/ccu3pZ5o.s 			page 108


 1968              		.cfi_offset 5, -12
 1969              		.cfi_offset 6, -8
 1970              		.cfi_offset 14, -4
 1971              	.LVL151:
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1972              		.loc 1 1553 0
 1973 0002 5024     		mov	r4, #80
 1974 0004 045D     		ldrb	r4, [r0, r4]
 1975 0006 012C     		cmp	r4, #1
 1976 0008 53D0     		beq	.L154
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1977              		.loc 1 1553 0 is_stmt 0 discriminator 2
 1978 000a 0125     		mov	r5, #1
 1979 000c 5024     		mov	r4, #80
 1980 000e 0555     		strb	r5, [r0, r4]
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1981              		.loc 1 1556 0 is_stmt 1 discriminator 2
 1982 0010 0134     		add	r4, r4, #1
 1983 0012 045D     		ldrb	r4, [r0, r4]
 1984 0014 E4B2     		uxtb	r4, r4
 1985              	.LVL152:
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 1986              		.loc 1 1557 0 discriminator 2
 1987 0016 4568     		ldr	r5, [r0, #4]
 1988              	.LVL153:
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1989              		.loc 1 1559 0 discriminator 2
 1990 0018 012C     		cmp	r4, #1
 1991 001a 08D0     		beq	.L149
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1992              		.loc 1 1559 0 is_stmt 0 discriminator 1
 1993 001c 8226     		mov	r6, #130
 1994 001e 7600     		lsl	r6, r6, #1
 1995 0020 B542     		cmp	r5, r6
 1996 0022 34D1     		bne	.L155
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 1997              		.loc 1 1560 0 is_stmt 1
 1998 0024 8568     		ldr	r5, [r0, #8]
 1999              	.LVL154:
 2000 0026 002D     		cmp	r5, #0
 2001 0028 33D1     		bne	.L156
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2002              		.loc 1 1560 0 is_stmt 0 discriminator 1
 2003 002a 042C     		cmp	r4, #4
 2004 002c 33D1     		bne	.L157
 2005              	.L149:
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2006              		.loc 1 1566 0 is_stmt 1
 2007 002e 0029     		cmp	r1, #0
 2008 0030 33D0     		beq	.L158
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2009              		.loc 1 1566 0 is_stmt 0 discriminator 1
 2010 0032 002A     		cmp	r2, #0
 2011 0034 33D0     		beq	.L159
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2012              		.loc 1 1566 0 discriminator 2
 2013 0036 002B     		cmp	r3, #0
ARM GAS  /tmp/ccu3pZ5o.s 			page 109


 2014 0038 33D0     		beq	.L160
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2015              		.loc 1 1573 0 is_stmt 1
 2016 003a 5124     		mov	r4, #81
 2017              	.LVL155:
 2018 003c 045D     		ldrb	r4, [r0, r4]
 2019 003e 042C     		cmp	r4, #4
 2020 0040 02D0     		beq	.L151
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2021              		.loc 1 1575 0
 2022 0042 0525     		mov	r5, #5
 2023 0044 5124     		mov	r4, #81
 2024 0046 0555     		strb	r5, [r0, r4]
 2025              	.LVL156:
 2026              	.L151:
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2027              		.loc 1 1579 0
 2028 0048 0024     		mov	r4, #0
 2029 004a 4465     		str	r4, [r0, #84]
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2030              		.loc 1 1580 0
 2031 004c 0163     		str	r1, [r0, #48]
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2032              		.loc 1 1581 0
 2033 004e 8386     		strh	r3, [r0, #52]
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2034              		.loc 1 1582 0
 2035 0050 C386     		strh	r3, [r0, #54]
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2036              		.loc 1 1583 0
 2037 0052 8263     		str	r2, [r0, #56]
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2038              		.loc 1 1584 0
 2039 0054 8387     		strh	r3, [r0, #60]
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2040              		.loc 1 1585 0
 2041 0056 C387     		strh	r3, [r0, #62]
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2042              		.loc 1 1588 0
 2043 0058 C368     		ldr	r3, [r0, #12]
 2044              	.LVL157:
 2045 005a 002B     		cmp	r3, #0
 2046 005c 04D0     		beq	.L152
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2047              		.loc 1 1590 0
 2048 005e 164B     		ldr	r3, .L162
 2049 0060 0364     		str	r3, [r0, #64]
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2050              		.loc 1 1591 0
 2051 0062 164B     		ldr	r3, .L162+4
 2052 0064 4364     		str	r3, [r0, #68]
 2053 0066 03E0     		b	.L153
 2054              	.L152:
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2055              		.loc 1 1595 0
 2056 0068 154B     		ldr	r3, .L162+8
 2057 006a 0364     		str	r3, [r0, #64]
ARM GAS  /tmp/ccu3pZ5o.s 			page 110


1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2058              		.loc 1 1596 0
 2059 006c 154B     		ldr	r3, .L162+12
 2060 006e 4364     		str	r3, [r0, #68]
 2061              	.L153:
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2062              		.loc 1 1608 0
 2063 0070 0268     		ldr	r2, [r0]
 2064              	.LVL158:
 2065 0072 5168     		ldr	r1, [r2, #4]
 2066              	.LVL159:
 2067 0074 E023     		mov	r3, #224
 2068 0076 0B43     		orr	r3, r1
 2069 0078 5360     		str	r3, [r2, #4]
 2070              	.LVL160:
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2071              		.loc 1 1611 0
 2072 007a 0368     		ldr	r3, [r0]
 2073 007c 1A68     		ldr	r2, [r3]
 2074 007e 5206     		lsl	r2, r2, #25
 2075 0080 11D4     		bmi	.L161
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2076              		.loc 1 1614 0
 2077 0082 1968     		ldr	r1, [r3]
 2078 0084 4022     		mov	r2, #64
 2079 0086 0A43     		orr	r2, r1
 2080 0088 1A60     		str	r2, [r3]
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2081              		.loc 1 1539 0
 2082 008a 0023     		mov	r3, #0
 2083 008c 0CE0     		b	.L150
 2084              	.LVL161:
 2085              	.L155:
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2086              		.loc 1 1562 0
 2087 008e 0223     		mov	r3, #2
 2088              	.LVL162:
 2089 0090 0AE0     		b	.L150
 2090              	.LVL163:
 2091              	.L156:
 2092 0092 0223     		mov	r3, #2
 2093              	.LVL164:
 2094 0094 08E0     		b	.L150
 2095              	.LVL165:
 2096              	.L157:
 2097 0096 0223     		mov	r3, #2
 2098              	.LVL166:
 2099 0098 06E0     		b	.L150
 2100              	.LVL167:
 2101              	.L158:
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2102              		.loc 1 1568 0
 2103 009a 0123     		mov	r3, #1
 2104              	.LVL168:
 2105 009c 04E0     		b	.L150
 2106              	.LVL169:
 2107              	.L159:
ARM GAS  /tmp/ccu3pZ5o.s 			page 111


 2108 009e 0123     		mov	r3, #1
 2109              	.LVL170:
 2110 00a0 02E0     		b	.L150
 2111              	.LVL171:
 2112              	.L160:
 2113 00a2 0123     		mov	r3, #1
 2114              	.LVL172:
 2115 00a4 00E0     		b	.L150
 2116              	.LVL173:
 2117              	.L161:
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2118              		.loc 1 1539 0
 2119 00a6 0023     		mov	r3, #0
 2120              	.L150:
 2121              	.LVL174:
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 2122              		.loc 1 1619 0
 2123 00a8 0021     		mov	r1, #0
 2124 00aa 5022     		mov	r2, #80
 2125 00ac 8154     		strb	r1, [r0, r2]
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2126              		.loc 1 1620 0
 2127 00ae 181C     		mov	r0, r3
 2128              	.LVL175:
 2129 00b0 00E0     		b	.L148
 2130              	.LVL176:
 2131              	.L154:
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2132              		.loc 1 1553 0
 2133 00b2 0220     		mov	r0, #2
 2134              	.LVL177:
 2135              	.L148:
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2136              		.loc 1 1621 0
 2137              		@ sp needed
 2138 00b4 70BD     		pop	{r4, r5, r6, pc}
 2139              	.L163:
 2140 00b6 C046     		.align	2
 2141              	.L162:
 2142 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 2143 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 2144 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 2145 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 2146              		.cfi_endproc
 2147              	.LFE43:
 2149              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2150              		.align	2
 2151              		.global	HAL_SPI_Receive_IT
 2152              		.code	16
 2153              		.thumb_func
 2155              	HAL_SPI_Receive_IT:
 2156              	.LFB42:
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2157              		.loc 1 1437 0
 2158              		.cfi_startproc
 2159              	.LVL178:
 2160 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccu3pZ5o.s 			page 112


 2161              	.LCFI17:
 2162              		.cfi_def_cfa_offset 16
 2163              		.cfi_offset 3, -16
 2164              		.cfi_offset 4, -12
 2165              		.cfi_offset 5, -8
 2166              		.cfi_offset 14, -4
 2167 0002 0C1C     		mov	r4, r1
 2168 0004 131C     		mov	r3, r2
 2169              	.LVL179:
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2170              		.loc 1 1447 0
 2171 0006 8268     		ldr	r2, [r0, #8]
 2172              	.LVL180:
 2173 0008 002A     		cmp	r2, #0
 2174 000a 0DD1     		bne	.L165
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2175              		.loc 1 1447 0 is_stmt 0 discriminator 1
 2176 000c 8221     		mov	r1, #130
 2177              	.LVL181:
 2178 000e 4900     		lsl	r1, r1, #1
 2179 0010 4568     		ldr	r5, [r0, #4]
 2180 0012 8D42     		cmp	r5, r1
 2181 0014 08D1     		bne	.L165
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2182              		.loc 1 1449 0 is_stmt 1
 2183 0016 0139     		sub	r1, r1, #1
 2184 0018 FF39     		sub	r1, r1, #255
 2185 001a 5132     		add	r2, r2, #81
 2186 001c 8154     		strb	r1, [r0, r2]
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2187              		.loc 1 1451 0
 2188 001e 211C     		mov	r1, r4
 2189 0020 221C     		mov	r2, r4
 2190 0022 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2191              	.LVL182:
 2192 0026 47E0     		b	.L166
 2193              	.LVL183:
 2194              	.L165:
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2195              		.loc 1 1455 0
 2196 0028 5021     		mov	r1, #80
 2197 002a 415C     		ldrb	r1, [r0, r1]
 2198 002c 0129     		cmp	r1, #1
 2199 002e 42D0     		beq	.L171
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2200              		.loc 1 1455 0 is_stmt 0 discriminator 2
 2201 0030 0125     		mov	r5, #1
 2202 0032 5021     		mov	r1, #80
 2203 0034 4554     		strb	r5, [r0, r1]
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2204              		.loc 1 1457 0 is_stmt 1 discriminator 2
 2205 0036 0131     		add	r1, r1, #1
 2206 0038 415C     		ldrb	r1, [r0, r1]
 2207 003a 0129     		cmp	r1, #1
 2208 003c 2FD1     		bne	.L172
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2209              		.loc 1 1463 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 113


 2210 003e 002C     		cmp	r4, #0
 2211 0040 2FD0     		beq	.L173
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2212              		.loc 1 1463 0 is_stmt 0 discriminator 1
 2213 0042 002B     		cmp	r3, #0
 2214 0044 2FD0     		beq	.L174
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2215              		.loc 1 1470 0 is_stmt 1
 2216 0046 0335     		add	r5, r5, #3
 2217 0048 5031     		add	r1, r1, #80
 2218 004a 4554     		strb	r5, [r0, r1]
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2219              		.loc 1 1471 0
 2220 004c 0021     		mov	r1, #0
 2221 004e 4165     		str	r1, [r0, #84]
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2222              		.loc 1 1472 0
 2223 0050 8463     		str	r4, [r0, #56]
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2224              		.loc 1 1473 0
 2225 0052 8387     		strh	r3, [r0, #60]
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2226              		.loc 1 1474 0
 2227 0054 C387     		strh	r3, [r0, #62]
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2228              		.loc 1 1477 0
 2229 0056 0163     		str	r1, [r0, #48]
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2230              		.loc 1 1478 0
 2231 0058 8186     		strh	r1, [r0, #52]
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2232              		.loc 1 1479 0
 2233 005a C186     		strh	r1, [r0, #54]
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2234              		.loc 1 1480 0
 2235 005c 4164     		str	r1, [r0, #68]
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2236              		.loc 1 1483 0
 2237 005e C368     		ldr	r3, [r0, #12]
 2238 0060 002B     		cmp	r3, #0
 2239 0062 02D0     		beq	.L168
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2240              		.loc 1 1485 0
 2241 0064 154B     		ldr	r3, .L176
 2242 0066 0364     		str	r3, [r0, #64]
 2243 0068 01E0     		b	.L169
 2244              	.L168:
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2245              		.loc 1 1489 0
 2246 006a 154B     		ldr	r3, .L176+4
 2247 006c 0364     		str	r3, [r0, #64]
 2248              	.L169:
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2249              		.loc 1 1493 0
 2250 006e 8023     		mov	r3, #128
 2251 0070 1B02     		lsl	r3, r3, #8
 2252 0072 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccu3pZ5o.s 			page 114


 2253 0074 04D1     		bne	.L170
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2254              		.loc 1 1495 0
 2255 0076 0268     		ldr	r2, [r0]
 2256 0078 1168     		ldr	r1, [r2]
 2257 007a 124B     		ldr	r3, .L176+8
 2258 007c 0B40     		and	r3, r1
 2259 007e 1360     		str	r3, [r2]
 2260              	.L170:
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2261              		.loc 1 1507 0
 2262 0080 0268     		ldr	r2, [r0]
 2263 0082 5168     		ldr	r1, [r2, #4]
 2264 0084 6023     		mov	r3, #96
 2265 0086 0B43     		orr	r3, r1
 2266 0088 5360     		str	r3, [r2, #4]
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2267              		.loc 1 1514 0
 2268 008a 0368     		ldr	r3, [r0]
 2269 008c 1A68     		ldr	r2, [r3]
 2270 008e 5206     		lsl	r2, r2, #25
 2271 0090 0BD4     		bmi	.L175
1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2272              		.loc 1 1517 0
 2273 0092 1968     		ldr	r1, [r3]
 2274 0094 4022     		mov	r2, #64
 2275 0096 0A43     		orr	r2, r1
 2276 0098 1A60     		str	r2, [r3]
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2277              		.loc 1 1438 0
 2278 009a 0023     		mov	r3, #0
 2279 009c 06E0     		b	.L167
 2280              	.L172:
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2281              		.loc 1 1459 0
 2282 009e 0223     		mov	r3, #2
 2283 00a0 04E0     		b	.L167
 2284              	.L173:
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2285              		.loc 1 1465 0
 2286 00a2 0123     		mov	r3, #1
 2287 00a4 02E0     		b	.L167
 2288              	.L174:
 2289 00a6 0123     		mov	r3, #1
 2290 00a8 00E0     		b	.L167
 2291              	.L175:
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2292              		.loc 1 1438 0
 2293 00aa 0023     		mov	r3, #0
 2294              	.L167:
 2295              	.LVL184:
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 2296              		.loc 1 1522 0
 2297 00ac 0021     		mov	r1, #0
 2298 00ae 5022     		mov	r2, #80
 2299 00b0 8154     		strb	r1, [r0, r2]
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
ARM GAS  /tmp/ccu3pZ5o.s 			page 115


 2300              		.loc 1 1523 0
 2301 00b2 181C     		mov	r0, r3
 2302              	.LVL185:
 2303 00b4 00E0     		b	.L166
 2304              	.LVL186:
 2305              	.L171:
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2306              		.loc 1 1455 0
 2307 00b6 0220     		mov	r0, #2
 2308              	.LVL187:
 2309              	.L166:
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2310              		.loc 1 1524 0
 2311              		@ sp needed
 2312              	.LVL188:
 2313 00b8 38BD     		pop	{r3, r4, r5, pc}
 2314              	.L177:
 2315 00ba C046     		.align	2
 2316              	.L176:
 2317 00bc 00000000 		.word	SPI_RxISR_16BIT
 2318 00c0 00000000 		.word	SPI_RxISR_8BIT
 2319 00c4 FFBFFFFF 		.word	-16385
 2320              		.cfi_endproc
 2321              	.LFE42:
 2323              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2324              		.align	2
 2325              		.global	HAL_SPI_Transmit_DMA
 2326              		.code	16
 2327              		.thumb_func
 2329              	HAL_SPI_Transmit_DMA:
 2330              	.LFB44:
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2331              		.loc 1 1632 0
 2332              		.cfi_startproc
 2333              	.LVL189:
 2334 0000 10B5     		push	{r4, lr}
 2335              	.LCFI18:
 2336              		.cfi_def_cfa_offset 8
 2337              		.cfi_offset 4, -8
 2338              		.cfi_offset 14, -4
 2339 0002 041C     		mov	r4, r0
 2340              	.LVL190:
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2341              		.loc 1 1642 0
 2342 0004 5023     		mov	r3, #80
 2343 0006 C35C     		ldrb	r3, [r0, r3]
 2344 0008 012B     		cmp	r3, #1
 2345 000a 5ED0     		beq	.L184
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2346              		.loc 1 1642 0 is_stmt 0 discriminator 2
 2347 000c 0120     		mov	r0, #1
 2348              	.LVL191:
 2349 000e 5023     		mov	r3, #80
 2350 0010 E054     		strb	r0, [r4, r3]
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2351              		.loc 1 1644 0 is_stmt 1 discriminator 2
 2352 0012 0133     		add	r3, r3, #1
ARM GAS  /tmp/ccu3pZ5o.s 			page 116


 2353 0014 E35C     		ldrb	r3, [r4, r3]
 2354 0016 012B     		cmp	r3, #1
 2355 0018 4ED1     		bne	.L185
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2356              		.loc 1 1650 0
 2357 001a 0029     		cmp	r1, #0
 2358 001c 4ED0     		beq	.L186
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2359              		.loc 1 1650 0 is_stmt 0 discriminator 1
 2360 001e 002A     		cmp	r2, #0
 2361 0020 4ED0     		beq	.L187
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2362              		.loc 1 1657 0 is_stmt 1
 2363 0022 0230     		add	r0, r0, #2
 2364 0024 5033     		add	r3, r3, #80
 2365 0026 E054     		strb	r0, [r4, r3]
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2366              		.loc 1 1658 0
 2367 0028 0023     		mov	r3, #0
 2368 002a 6365     		str	r3, [r4, #84]
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2369              		.loc 1 1659 0
 2370 002c 2163     		str	r1, [r4, #48]
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2371              		.loc 1 1660 0
 2372 002e A286     		strh	r2, [r4, #52]
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2373              		.loc 1 1661 0
 2374 0030 E286     		strh	r2, [r4, #54]
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2375              		.loc 1 1664 0
 2376 0032 A363     		str	r3, [r4, #56]
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2377              		.loc 1 1665 0
 2378 0034 6364     		str	r3, [r4, #68]
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2379              		.loc 1 1666 0
 2380 0036 2364     		str	r3, [r4, #64]
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2381              		.loc 1 1667 0
 2382 0038 A387     		strh	r3, [r4, #60]
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2383              		.loc 1 1668 0
 2384 003a E387     		strh	r3, [r4, #62]
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2385              		.loc 1 1671 0
 2386 003c 8023     		mov	r3, #128
 2387 003e 1B02     		lsl	r3, r3, #8
 2388 0040 A268     		ldr	r2, [r4, #8]
 2389              	.LVL192:
 2390 0042 9A42     		cmp	r2, r3
 2391 0044 05D1     		bne	.L181
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2392              		.loc 1 1673 0
 2393 0046 2268     		ldr	r2, [r4]
 2394 0048 1368     		ldr	r3, [r2]
 2395 004a 8021     		mov	r1, #128
ARM GAS  /tmp/ccu3pZ5o.s 			page 117


 2396              	.LVL193:
 2397 004c C901     		lsl	r1, r1, #7
 2398 004e 0B43     		orr	r3, r1
 2399 0050 1360     		str	r3, [r2]
 2400              	.LVL194:
 2401              	.L181:
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2402              		.loc 1 1685 0
 2403 0052 A36C     		ldr	r3, [r4, #72]
 2404 0054 1E4A     		ldr	r2, .L188
 2405 0056 1A63     		str	r2, [r3, #48]
1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2406              		.loc 1 1688 0
 2407 0058 A36C     		ldr	r3, [r4, #72]
 2408 005a 1E4A     		ldr	r2, .L188+4
 2409 005c DA62     		str	r2, [r3, #44]
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2410              		.loc 1 1691 0
 2411 005e A36C     		ldr	r3, [r4, #72]
 2412 0060 1D4A     		ldr	r2, .L188+8
 2413 0062 5A63     		str	r2, [r3, #52]
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2414              		.loc 1 1694 0
 2415 0064 A36C     		ldr	r3, [r4, #72]
 2416 0066 0022     		mov	r2, #0
 2417 0068 9A63     		str	r2, [r3, #56]
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2418              		.loc 1 1697 0
 2419 006a 2268     		ldr	r2, [r4]
 2420 006c 0C32     		add	r2, r2, #12
 2421 006e E38E     		ldrh	r3, [r4, #54]
 2422 0070 9BB2     		uxth	r3, r3
 2423 0072 A06C     		ldr	r0, [r4, #72]
 2424 0074 216B     		ldr	r1, [r4, #48]
 2425 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2426              	.LVL195:
 2427 007a 0028     		cmp	r0, #0
 2428 007c 08D0     		beq	.L182
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2429              		.loc 1 1700 0
 2430 007e 626D     		ldr	r2, [r4, #84]
 2431 0080 1023     		mov	r3, #16
 2432 0082 1343     		orr	r3, r2
 2433 0084 6365     		str	r3, [r4, #84]
 2434              	.LVL196:
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2435              		.loc 1 1703 0
 2436 0086 0122     		mov	r2, #1
 2437 0088 5123     		mov	r3, #81
 2438 008a E254     		strb	r2, [r4, r3]
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2439              		.loc 1 1701 0
 2440 008c 0120     		mov	r0, #1
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2441              		.loc 1 1704 0
 2442 008e 18E0     		b	.L180
 2443              	.LVL197:
ARM GAS  /tmp/ccu3pZ5o.s 			page 118


 2444              	.L182:
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2445              		.loc 1 1708 0
 2446 0090 2368     		ldr	r3, [r4]
 2447 0092 1A68     		ldr	r2, [r3]
 2448 0094 5206     		lsl	r2, r2, #25
 2449 0096 03D4     		bmi	.L183
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2450              		.loc 1 1711 0
 2451 0098 1968     		ldr	r1, [r3]
 2452 009a 4022     		mov	r2, #64
 2453 009c 0A43     		orr	r2, r1
 2454 009e 1A60     		str	r2, [r3]
 2455              	.L183:
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2456              		.loc 1 1715 0
 2457 00a0 2268     		ldr	r2, [r4]
 2458 00a2 5168     		ldr	r1, [r2, #4]
 2459 00a4 2023     		mov	r3, #32
 2460 00a6 0B43     		orr	r3, r1
 2461 00a8 5360     		str	r3, [r2, #4]
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2462              		.loc 1 1718 0
 2463 00aa 2268     		ldr	r2, [r4]
 2464 00ac 5168     		ldr	r1, [r2, #4]
 2465 00ae 0223     		mov	r3, #2
 2466 00b0 0B43     		orr	r3, r1
 2467 00b2 5360     		str	r3, [r2, #4]
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2468              		.loc 1 1633 0
 2469 00b4 0020     		mov	r0, #0
 2470 00b6 04E0     		b	.L180
 2471              	.LVL198:
 2472              	.L185:
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2473              		.loc 1 1646 0
 2474 00b8 0220     		mov	r0, #2
 2475 00ba 02E0     		b	.L180
 2476              	.L186:
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2477              		.loc 1 1652 0
 2478 00bc 0120     		mov	r0, #1
 2479 00be 00E0     		b	.L180
 2480              	.L187:
 2481 00c0 0120     		mov	r0, #1
 2482              	.LVL199:
 2483              	.L180:
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 2484              		.loc 1 1722 0
 2485 00c2 0022     		mov	r2, #0
 2486 00c4 5023     		mov	r3, #80
 2487 00c6 E254     		strb	r2, [r4, r3]
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2488              		.loc 1 1723 0
 2489 00c8 00E0     		b	.L179
 2490              	.LVL200:
 2491              	.L184:
ARM GAS  /tmp/ccu3pZ5o.s 			page 119


1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2492              		.loc 1 1642 0
 2493 00ca 0220     		mov	r0, #2
 2494              	.LVL201:
 2495              	.L179:
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2496              		.loc 1 1724 0
 2497              		@ sp needed
 2498              	.LVL202:
 2499 00cc 10BD     		pop	{r4, pc}
 2500              	.L189:
 2501 00ce C046     		.align	2
 2502              	.L188:
 2503 00d0 00000000 		.word	SPI_DMAHalfTransmitCplt
 2504 00d4 00000000 		.word	SPI_DMATransmitCplt
 2505 00d8 00000000 		.word	SPI_DMAError
 2506              		.cfi_endproc
 2507              	.LFE44:
 2509              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2510              		.align	2
 2511              		.global	HAL_SPI_TransmitReceive_DMA
 2512              		.code	16
 2513              		.thumb_func
 2515              	HAL_SPI_TransmitReceive_DMA:
 2516              	.LFB46:
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t             tmp_mode;
 2517              		.loc 1 1850 0
 2518              		.cfi_startproc
 2519              	.LVL203:
 2520 0000 70B5     		push	{r4, r5, r6, lr}
 2521              	.LCFI19:
 2522              		.cfi_def_cfa_offset 16
 2523              		.cfi_offset 4, -16
 2524              		.cfi_offset 5, -12
 2525              		.cfi_offset 6, -8
 2526              		.cfi_offset 14, -4
 2527 0002 041C     		mov	r4, r0
 2528              	.LVL204:
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2529              		.loc 1 1863 0
 2530 0004 5020     		mov	r0, #80
 2531              	.LVL205:
 2532 0006 205C     		ldrb	r0, [r4, r0]
 2533 0008 0128     		cmp	r0, #1
 2534 000a 00D1     		bne	.LCB2619
 2535 000c 96E0     		b	.L200	@long jump
 2536              	.LCB2619:
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2537              		.loc 1 1863 0 is_stmt 0 discriminator 2
 2538 000e 0125     		mov	r5, #1
 2539 0010 5020     		mov	r0, #80
 2540 0012 2554     		strb	r5, [r4, r0]
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2541              		.loc 1 1866 0 is_stmt 1 discriminator 2
 2542 0014 0130     		add	r0, r0, #1
 2543 0016 205C     		ldrb	r0, [r4, r0]
 2544 0018 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/ccu3pZ5o.s 			page 120


 2545              	.LVL206:
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2546              		.loc 1 1867 0 discriminator 2
 2547 001a 6568     		ldr	r5, [r4, #4]
 2548              	.LVL207:
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2549              		.loc 1 1869 0 discriminator 2
 2550 001c 0128     		cmp	r0, #1
 2551 001e 08D0     		beq	.L192
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2552              		.loc 1 1869 0 is_stmt 0 discriminator 1
 2553 0020 8226     		mov	r6, #130
 2554 0022 7600     		lsl	r6, r6, #1
 2555 0024 B542     		cmp	r5, r6
 2556 0026 7AD1     		bne	.L201
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2557              		.loc 1 1870 0 is_stmt 1
 2558 0028 A568     		ldr	r5, [r4, #8]
 2559              	.LVL208:
 2560 002a 002D     		cmp	r5, #0
 2561 002c 79D1     		bne	.L202
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2562              		.loc 1 1870 0 is_stmt 0 discriminator 1
 2563 002e 0428     		cmp	r0, #4
 2564 0030 79D1     		bne	.L203
 2565              	.L192:
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2566              		.loc 1 1876 0 is_stmt 1
 2567 0032 0029     		cmp	r1, #0
 2568 0034 79D0     		beq	.L204
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2569              		.loc 1 1876 0 is_stmt 0 discriminator 1
 2570 0036 002A     		cmp	r2, #0
 2571 0038 79D0     		beq	.L205
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2572              		.loc 1 1876 0 discriminator 2
 2573 003a 002B     		cmp	r3, #0
 2574 003c 79D0     		beq	.L206
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2575              		.loc 1 1883 0 is_stmt 1
 2576 003e 5120     		mov	r0, #81
 2577              	.LVL209:
 2578 0040 205C     		ldrb	r0, [r4, r0]
 2579 0042 0428     		cmp	r0, #4
 2580 0044 02D0     		beq	.L194
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2581              		.loc 1 1885 0
 2582 0046 0525     		mov	r5, #5
 2583 0048 5120     		mov	r0, #81
 2584 004a 2554     		strb	r5, [r4, r0]
 2585              	.LVL210:
 2586              	.L194:
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2587              		.loc 1 1889 0
 2588 004c 0020     		mov	r0, #0
 2589 004e 6065     		str	r0, [r4, #84]
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/ccu3pZ5o.s 			page 121


 2590              		.loc 1 1890 0
 2591 0050 2163     		str	r1, [r4, #48]
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2592              		.loc 1 1891 0
 2593 0052 A386     		strh	r3, [r4, #52]
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2594              		.loc 1 1892 0
 2595 0054 E386     		strh	r3, [r4, #54]
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2596              		.loc 1 1893 0
 2597 0056 A263     		str	r2, [r4, #56]
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2598              		.loc 1 1894 0
 2599 0058 A387     		strh	r3, [r4, #60]
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2600              		.loc 1 1895 0
 2601 005a E387     		strh	r3, [r4, #62]
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2602              		.loc 1 1898 0
 2603 005c 2064     		str	r0, [r4, #64]
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2604              		.loc 1 1899 0
 2605 005e 6064     		str	r0, [r4, #68]
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2606              		.loc 1 1910 0
 2607 0060 5123     		mov	r3, #81
 2608              	.LVL211:
 2609 0062 E35C     		ldrb	r3, [r4, r3]
 2610 0064 042B     		cmp	r3, #4
 2611 0066 06D1     		bne	.L195
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2612              		.loc 1 1913 0
 2613 0068 E36C     		ldr	r3, [r4, #76]
 2614 006a 354A     		ldr	r2, .L207
 2615              	.LVL212:
 2616 006c 1A63     		str	r2, [r3, #48]
 2617              	.LVL213:
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2618              		.loc 1 1914 0
 2619 006e E36C     		ldr	r3, [r4, #76]
 2620 0070 344A     		ldr	r2, .L207+4
 2621 0072 DA62     		str	r2, [r3, #44]
 2622 0074 05E0     		b	.L196
 2623              	.LVL214:
 2624              	.L195:
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2625              		.loc 1 1919 0
 2626 0076 E36C     		ldr	r3, [r4, #76]
 2627 0078 334A     		ldr	r2, .L207+8
 2628              	.LVL215:
 2629 007a 1A63     		str	r2, [r3, #48]
 2630              	.LVL216:
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2631              		.loc 1 1920 0
 2632 007c E36C     		ldr	r3, [r4, #76]
 2633 007e 334A     		ldr	r2, .L207+12
 2634 0080 DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccu3pZ5o.s 			page 122


 2635              	.L196:
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2636              		.loc 1 1924 0
 2637 0082 E36C     		ldr	r3, [r4, #76]
 2638 0084 324A     		ldr	r2, .L207+16
 2639 0086 5A63     		str	r2, [r3, #52]
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2640              		.loc 1 1927 0
 2641 0088 E36C     		ldr	r3, [r4, #76]
 2642 008a 0022     		mov	r2, #0
 2643 008c 9A63     		str	r2, [r3, #56]
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2644              		.loc 1 1930 0
 2645 008e 2168     		ldr	r1, [r4]
 2646              	.LVL217:
 2647 0090 0C31     		add	r1, r1, #12
 2648 0092 E38F     		ldrh	r3, [r4, #62]
 2649 0094 9BB2     		uxth	r3, r3
 2650 0096 E06C     		ldr	r0, [r4, #76]
 2651 0098 A26B     		ldr	r2, [r4, #56]
 2652 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 2653              	.LVL218:
 2654 009e 0028     		cmp	r0, #0
 2655 00a0 08D0     		beq	.L197
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2656              		.loc 1 1933 0
 2657 00a2 626D     		ldr	r2, [r4, #84]
 2658 00a4 1023     		mov	r3, #16
 2659 00a6 1343     		orr	r3, r2
 2660 00a8 6365     		str	r3, [r4, #84]
 2661              	.LVL219:
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2662              		.loc 1 1936 0
 2663 00aa 0122     		mov	r2, #1
 2664 00ac 5123     		mov	r3, #81
 2665 00ae E254     		strb	r2, [r4, r3]
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2666              		.loc 1 1934 0
 2667 00b0 0120     		mov	r0, #1
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2668              		.loc 1 1937 0
 2669 00b2 3FE0     		b	.L193
 2670              	.LVL220:
 2671              	.L197:
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2672              		.loc 1 1941 0
 2673 00b4 2268     		ldr	r2, [r4]
 2674 00b6 5168     		ldr	r1, [r2, #4]
 2675 00b8 0123     		mov	r3, #1
 2676 00ba 0B43     		orr	r3, r1
 2677 00bc 5360     		str	r3, [r2, #4]
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2678              		.loc 1 1945 0
 2679 00be A26C     		ldr	r2, [r4, #72]
 2680 00c0 0023     		mov	r3, #0
 2681 00c2 1363     		str	r3, [r2, #48]
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
ARM GAS  /tmp/ccu3pZ5o.s 			page 123


 2682              		.loc 1 1946 0
 2683 00c4 A26C     		ldr	r2, [r4, #72]
 2684 00c6 D362     		str	r3, [r2, #44]
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2685              		.loc 1 1947 0
 2686 00c8 A26C     		ldr	r2, [r4, #72]
 2687 00ca 5363     		str	r3, [r2, #52]
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2688              		.loc 1 1948 0
 2689 00cc A26C     		ldr	r2, [r4, #72]
 2690 00ce 9363     		str	r3, [r2, #56]
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2691              		.loc 1 1951 0
 2692 00d0 2268     		ldr	r2, [r4]
 2693 00d2 0C32     		add	r2, r2, #12
 2694 00d4 E38E     		ldrh	r3, [r4, #54]
 2695 00d6 9BB2     		uxth	r3, r3
 2696 00d8 A06C     		ldr	r0, [r4, #72]
 2697 00da 216B     		ldr	r1, [r4, #48]
 2698 00dc FFF7FEFF 		bl	HAL_DMA_Start_IT
 2699              	.LVL221:
 2700 00e0 0028     		cmp	r0, #0
 2701 00e2 08D0     		beq	.L198
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2702              		.loc 1 1954 0
 2703 00e4 626D     		ldr	r2, [r4, #84]
 2704 00e6 1023     		mov	r3, #16
 2705 00e8 1343     		orr	r3, r2
 2706 00ea 6365     		str	r3, [r4, #84]
 2707              	.LVL222:
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2708              		.loc 1 1957 0
 2709 00ec 0122     		mov	r2, #1
 2710 00ee 5123     		mov	r3, #81
 2711 00f0 E254     		strb	r2, [r4, r3]
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2712              		.loc 1 1955 0
 2713 00f2 0120     		mov	r0, #1
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2714              		.loc 1 1958 0
 2715 00f4 1EE0     		b	.L193
 2716              	.LVL223:
 2717              	.L198:
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2718              		.loc 1 1962 0
 2719 00f6 2368     		ldr	r3, [r4]
 2720 00f8 1A68     		ldr	r2, [r3]
 2721 00fa 5206     		lsl	r2, r2, #25
 2722 00fc 03D4     		bmi	.L199
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2723              		.loc 1 1965 0
 2724 00fe 1968     		ldr	r1, [r3]
 2725 0100 4022     		mov	r2, #64
 2726 0102 0A43     		orr	r2, r1
 2727 0104 1A60     		str	r2, [r3]
 2728              	.L199:
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/ccu3pZ5o.s 			page 124


 2729              		.loc 1 1968 0
 2730 0106 2268     		ldr	r2, [r4]
 2731 0108 5168     		ldr	r1, [r2, #4]
 2732 010a 2023     		mov	r3, #32
 2733 010c 0B43     		orr	r3, r1
 2734 010e 5360     		str	r3, [r2, #4]
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2735              		.loc 1 1971 0
 2736 0110 2268     		ldr	r2, [r4]
 2737 0112 5168     		ldr	r1, [r2, #4]
 2738 0114 0223     		mov	r3, #2
 2739 0116 0B43     		orr	r3, r1
 2740 0118 5360     		str	r3, [r2, #4]
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2741              		.loc 1 1853 0
 2742 011a 0020     		mov	r0, #0
 2743 011c 0AE0     		b	.L193
 2744              	.LVL224:
 2745              	.L201:
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2746              		.loc 1 1872 0
 2747 011e 0220     		mov	r0, #2
 2748              	.LVL225:
 2749 0120 08E0     		b	.L193
 2750              	.LVL226:
 2751              	.L202:
 2752 0122 0220     		mov	r0, #2
 2753              	.LVL227:
 2754 0124 06E0     		b	.L193
 2755              	.LVL228:
 2756              	.L203:
 2757 0126 0220     		mov	r0, #2
 2758              	.LVL229:
 2759 0128 04E0     		b	.L193
 2760              	.LVL230:
 2761              	.L204:
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2762              		.loc 1 1878 0
 2763 012a 0120     		mov	r0, #1
 2764              	.LVL231:
 2765 012c 02E0     		b	.L193
 2766              	.LVL232:
 2767              	.L205:
 2768 012e 0120     		mov	r0, #1
 2769              	.LVL233:
 2770 0130 00E0     		b	.L193
 2771              	.LVL234:
 2772              	.L206:
 2773 0132 0120     		mov	r0, #1
 2774              	.LVL235:
 2775              	.L193:
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 2776              		.loc 1 1975 0
 2777 0134 0022     		mov	r2, #0
 2778 0136 5023     		mov	r3, #80
 2779 0138 E254     		strb	r2, [r4, r3]
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
ARM GAS  /tmp/ccu3pZ5o.s 			page 125


 2780              		.loc 1 1976 0
 2781 013a 00E0     		b	.L191
 2782              	.LVL236:
 2783              	.L200:
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2784              		.loc 1 1863 0
 2785 013c 0220     		mov	r0, #2
 2786              	.LVL237:
 2787              	.L191:
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2788              		.loc 1 1977 0
 2789              		@ sp needed
 2790              	.LVL238:
 2791 013e 70BD     		pop	{r4, r5, r6, pc}
 2792              	.L208:
 2793              		.align	2
 2794              	.L207:
 2795 0140 00000000 		.word	SPI_DMAHalfReceiveCplt
 2796 0144 00000000 		.word	SPI_DMAReceiveCplt
 2797 0148 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2798 014c 00000000 		.word	SPI_DMATransmitReceiveCplt
 2799 0150 00000000 		.word	SPI_DMAError
 2800              		.cfi_endproc
 2801              	.LFE46:
 2803              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2804              		.align	2
 2805              		.global	HAL_SPI_Receive_DMA
 2806              		.code	16
 2807              		.thumb_func
 2809              	HAL_SPI_Receive_DMA:
 2810              	.LFB45:
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2811              		.loc 1 1737 0
 2812              		.cfi_startproc
 2813              	.LVL239:
 2814 0000 38B5     		push	{r3, r4, r5, lr}
 2815              	.LCFI20:
 2816              		.cfi_def_cfa_offset 16
 2817              		.cfi_offset 3, -16
 2818              		.cfi_offset 4, -12
 2819              		.cfi_offset 5, -8
 2820              		.cfi_offset 14, -4
 2821 0002 041C     		mov	r4, r0
 2822 0004 0D1C     		mov	r5, r1
 2823 0006 131C     		mov	r3, r2
 2824              	.LVL240:
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2825              		.loc 1 1743 0
 2826 0008 8268     		ldr	r2, [r0, #8]
 2827              	.LVL241:
 2828 000a 002A     		cmp	r2, #0
 2829 000c 0ED1     		bne	.L210
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2830              		.loc 1 1743 0 is_stmt 0 discriminator 1
 2831 000e 8221     		mov	r1, #130
 2832              	.LVL242:
 2833 0010 4900     		lsl	r1, r1, #1
ARM GAS  /tmp/ccu3pZ5o.s 			page 126


 2834 0012 4068     		ldr	r0, [r0, #4]
 2835              	.LVL243:
 2836 0014 8842     		cmp	r0, r1
 2837 0016 09D1     		bne	.L210
1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2838              		.loc 1 1745 0 is_stmt 1
 2839 0018 0139     		sub	r1, r1, #1
 2840 001a FF39     		sub	r1, r1, #255
 2841 001c 5132     		add	r2, r2, #81
 2842 001e A154     		strb	r1, [r4, r2]
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2843              		.loc 1 1751 0
 2844 0020 201C     		mov	r0, r4
 2845 0022 291C     		mov	r1, r5
 2846 0024 2A1C     		mov	r2, r5
 2847 0026 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2848              	.LVL244:
 2849 002a 60E0     		b	.L211
 2850              	.L210:
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2851              		.loc 1 1755 0
 2852 002c 5021     		mov	r1, #80
 2853 002e 615C     		ldrb	r1, [r4, r1]
 2854 0030 0129     		cmp	r1, #1
 2855 0032 5BD0     		beq	.L216
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2856              		.loc 1 1755 0 is_stmt 0 discriminator 2
 2857 0034 0120     		mov	r0, #1
 2858 0036 5021     		mov	r1, #80
 2859 0038 6054     		strb	r0, [r4, r1]
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2860              		.loc 1 1757 0 is_stmt 1 discriminator 2
 2861 003a 0131     		add	r1, r1, #1
 2862 003c 615C     		ldrb	r1, [r4, r1]
 2863 003e 0129     		cmp	r1, #1
 2864 0040 4BD1     		bne	.L217
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2865              		.loc 1 1763 0
 2866 0042 002D     		cmp	r5, #0
 2867 0044 4BD0     		beq	.L218
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2868              		.loc 1 1763 0 is_stmt 0 discriminator 1
 2869 0046 002B     		cmp	r3, #0
 2870 0048 4BD0     		beq	.L219
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2871              		.loc 1 1770 0 is_stmt 1
 2872 004a 0330     		add	r0, r0, #3
 2873 004c 5031     		add	r1, r1, #80
 2874 004e 6054     		strb	r0, [r4, r1]
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2875              		.loc 1 1771 0
 2876 0050 0021     		mov	r1, #0
 2877 0052 6165     		str	r1, [r4, #84]
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2878              		.loc 1 1772 0
 2879 0054 A563     		str	r5, [r4, #56]
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = Size;
ARM GAS  /tmp/ccu3pZ5o.s 			page 127


 2880              		.loc 1 1773 0
 2881 0056 A387     		strh	r3, [r4, #60]
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2882              		.loc 1 1774 0
 2883 0058 E387     		strh	r3, [r4, #62]
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2884              		.loc 1 1777 0
 2885 005a 2164     		str	r1, [r4, #64]
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2886              		.loc 1 1778 0
 2887 005c 6164     		str	r1, [r4, #68]
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2888              		.loc 1 1779 0
 2889 005e A186     		strh	r1, [r4, #52]
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2890              		.loc 1 1780 0
 2891 0060 E186     		strh	r1, [r4, #54]
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2892              		.loc 1 1783 0
 2893 0062 8023     		mov	r3, #128
 2894 0064 1B02     		lsl	r3, r3, #8
 2895 0066 9A42     		cmp	r2, r3
 2896 0068 04D1     		bne	.L213
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2897              		.loc 1 1785 0
 2898 006a 2268     		ldr	r2, [r4]
 2899 006c 1168     		ldr	r1, [r2]
 2900 006e 204B     		ldr	r3, .L220
 2901 0070 0B40     		and	r3, r1
 2902 0072 1360     		str	r3, [r2]
 2903              	.L213:
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2904              		.loc 1 1797 0
 2905 0074 E36C     		ldr	r3, [r4, #76]
 2906 0076 1F4A     		ldr	r2, .L220+4
 2907 0078 1A63     		str	r2, [r3, #48]
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2908              		.loc 1 1800 0
 2909 007a E36C     		ldr	r3, [r4, #76]
 2910 007c 1E4A     		ldr	r2, .L220+8
 2911 007e DA62     		str	r2, [r3, #44]
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2912              		.loc 1 1803 0
 2913 0080 E36C     		ldr	r3, [r4, #76]
 2914 0082 1E4A     		ldr	r2, .L220+12
 2915 0084 5A63     		str	r2, [r3, #52]
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2916              		.loc 1 1806 0
 2917 0086 E36C     		ldr	r3, [r4, #76]
 2918 0088 0022     		mov	r2, #0
 2919 008a 9A63     		str	r2, [r3, #56]
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2920              		.loc 1 1809 0
 2921 008c 2168     		ldr	r1, [r4]
 2922 008e 0C31     		add	r1, r1, #12
 2923 0090 E38F     		ldrh	r3, [r4, #62]
 2924 0092 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu3pZ5o.s 			page 128


 2925 0094 E06C     		ldr	r0, [r4, #76]
 2926 0096 A26B     		ldr	r2, [r4, #56]
 2927 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2928              	.LVL245:
 2929 009c 0028     		cmp	r0, #0
 2930 009e 08D0     		beq	.L214
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2931              		.loc 1 1812 0
 2932 00a0 626D     		ldr	r2, [r4, #84]
 2933 00a2 1023     		mov	r3, #16
 2934 00a4 1343     		orr	r3, r2
 2935 00a6 6365     		str	r3, [r4, #84]
 2936              	.LVL246:
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2937              		.loc 1 1815 0
 2938 00a8 0122     		mov	r2, #1
 2939 00aa 5123     		mov	r3, #81
 2940 00ac E254     		strb	r2, [r4, r3]
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2941              		.loc 1 1813 0
 2942 00ae 0120     		mov	r0, #1
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2943              		.loc 1 1816 0
 2944 00b0 18E0     		b	.L212
 2945              	.LVL247:
 2946              	.L214:
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 2947              		.loc 1 1820 0
 2948 00b2 2368     		ldr	r3, [r4]
 2949 00b4 1A68     		ldr	r2, [r3]
 2950 00b6 5206     		lsl	r2, r2, #25
 2951 00b8 03D4     		bmi	.L215
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 2952              		.loc 1 1823 0
 2953 00ba 1968     		ldr	r1, [r3]
 2954 00bc 4022     		mov	r2, #64
 2955 00be 0A43     		orr	r2, r1
 2956 00c0 1A60     		str	r2, [r3]
 2957              	.L215:
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2958              		.loc 1 1827 0
 2959 00c2 2268     		ldr	r2, [r4]
 2960 00c4 5168     		ldr	r1, [r2, #4]
 2961 00c6 2023     		mov	r3, #32
 2962 00c8 0B43     		orr	r3, r1
 2963 00ca 5360     		str	r3, [r2, #4]
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2964              		.loc 1 1830 0
 2965 00cc 2268     		ldr	r2, [r4]
 2966 00ce 5168     		ldr	r1, [r2, #4]
 2967 00d0 0123     		mov	r3, #1
 2968 00d2 0B43     		orr	r3, r1
 2969 00d4 5360     		str	r3, [r2, #4]
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2970              		.loc 1 1738 0
 2971 00d6 0020     		mov	r0, #0
 2972 00d8 04E0     		b	.L212
ARM GAS  /tmp/ccu3pZ5o.s 			page 129


 2973              	.L217:
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2974              		.loc 1 1759 0
 2975 00da 0220     		mov	r0, #2
 2976 00dc 02E0     		b	.L212
 2977              	.L218:
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     goto error;
 2978              		.loc 1 1765 0
 2979 00de 0120     		mov	r0, #1
 2980 00e0 00E0     		b	.L212
 2981              	.L219:
 2982 00e2 0120     		mov	r0, #1
 2983              	.LVL248:
 2984              	.L212:
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 2985              		.loc 1 1834 0
 2986 00e4 0022     		mov	r2, #0
 2987 00e6 5023     		mov	r3, #80
 2988 00e8 E254     		strb	r2, [r4, r3]
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2989              		.loc 1 1835 0
 2990 00ea 00E0     		b	.L211
 2991              	.LVL249:
 2992              	.L216:
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2993              		.loc 1 1755 0
 2994 00ec 0220     		mov	r0, #2
 2995              	.LVL250:
 2996              	.L211:
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 2997              		.loc 1 1836 0
 2998              		@ sp needed
 2999              	.LVL251:
 3000              	.LVL252:
 3001 00ee 38BD     		pop	{r3, r4, r5, pc}
 3002              	.L221:
 3003              		.align	2
 3004              	.L220:
 3005 00f0 FFBFFFFF 		.word	-16385
 3006 00f4 00000000 		.word	SPI_DMAHalfReceiveCplt
 3007 00f8 00000000 		.word	SPI_DMAReceiveCplt
 3008 00fc 00000000 		.word	SPI_DMAError
 3009              		.cfi_endproc
 3010              	.LFE45:
 3012              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3013              		.align	2
 3014              		.global	HAL_SPI_Abort
 3015              		.code	16
 3016              		.thumb_func
 3018              	HAL_SPI_Abort:
 3019              	.LFB47:
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3020              		.loc 1 1993 0
 3021              		.cfi_startproc
 3022              	.LVL253:
 3023 0000 10B5     		push	{r4, lr}
 3024              	.LCFI21:
ARM GAS  /tmp/ccu3pZ5o.s 			page 130


 3025              		.cfi_def_cfa_offset 8
 3026              		.cfi_offset 4, -8
 3027              		.cfi_offset 14, -4
 3028 0002 84B0     		sub	sp, sp, #16
 3029              	.LCFI22:
 3030              		.cfi_def_cfa_offset 24
 3031 0004 041C     		mov	r4, r0
 3032              	.LVL254:
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = resetcount;
 3033              		.loc 1 1999 0
 3034 0006 4A4B     		ldr	r3, .L239
 3035 0008 1868     		ldr	r0, [r3]
 3036              	.LVL255:
 3037 000a 4A49     		ldr	r1, .L239+4
 3038 000c FFF7FEFF 		bl	__aeabi_uidiv
 3039              	.LVL256:
 3040 0010 6423     		mov	r3, #100
 3041 0012 5843     		mul	r0, r3
 3042 0014 0290     		str	r0, [sp, #8]
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3043              		.loc 1 2000 0
 3044 0016 029B     		ldr	r3, [sp, #8]
 3045 0018 0393     		str	r3, [sp, #12]
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3046              		.loc 1 2003 0
 3047 001a 2268     		ldr	r2, [r4]
 3048 001c 5368     		ldr	r3, [r2, #4]
 3049 001e 2021     		mov	r1, #32
 3050 0020 8B43     		bic	r3, r1
 3051 0022 5360     		str	r3, [r2, #4]
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3052              		.loc 1 2006 0
 3053 0024 2268     		ldr	r2, [r4]
 3054 0026 5368     		ldr	r3, [r2, #4]
 3055 0028 1B06     		lsl	r3, r3, #24
 3056 002a 12D5     		bpl	.L223
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3057              		.loc 1 2008 0
 3058 002c 424B     		ldr	r3, .L239+8
 3059 002e 6364     		str	r3, [r4, #68]
 3060              	.L226:
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 3061              		.loc 1 2012 0
 3062 0030 039B     		ldr	r3, [sp, #12]
 3063 0032 002B     		cmp	r3, #0
 3064 0034 04D1     		bne	.L224
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 3065              		.loc 1 2014 0
 3066 0036 616D     		ldr	r1, [r4, #84]
 3067 0038 4033     		add	r3, r3, #64
 3068 003a 0B43     		orr	r3, r1
 3069 003c 6365     		str	r3, [r4, #84]
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 3070              		.loc 1 2015 0
 3071 003e 06E0     		b	.L225
 3072              	.L224:
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
ARM GAS  /tmp/ccu3pZ5o.s 			page 131


 3073              		.loc 1 2017 0
 3074 0040 039B     		ldr	r3, [sp, #12]
 3075 0042 013B     		sub	r3, r3, #1
 3076 0044 0393     		str	r3, [sp, #12]
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
 3077              		.loc 1 2019 0
 3078 0046 5123     		mov	r3, #81
 3079 0048 E35C     		ldrb	r3, [r4, r3]
 3080 004a 072B     		cmp	r3, #7
 3081 004c F0D1     		bne	.L226
 3082              	.L225:
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3083              		.loc 1 2021 0
 3084 004e 029B     		ldr	r3, [sp, #8]
 3085 0050 0393     		str	r3, [sp, #12]
 3086              	.L223:
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3087              		.loc 1 2024 0
 3088 0052 5368     		ldr	r3, [r2, #4]
 3089 0054 5B06     		lsl	r3, r3, #25
 3090 0056 12D5     		bpl	.L227
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3091              		.loc 1 2026 0
 3092 0058 384B     		ldr	r3, .L239+12
 3093 005a 2364     		str	r3, [r4, #64]
 3094              	.L230:
2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 3095              		.loc 1 2030 0
 3096 005c 039B     		ldr	r3, [sp, #12]
 3097 005e 002B     		cmp	r3, #0
 3098 0060 04D1     		bne	.L228
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 3099              		.loc 1 2032 0
 3100 0062 616D     		ldr	r1, [r4, #84]
 3101 0064 4033     		add	r3, r3, #64
 3102 0066 0B43     		orr	r3, r1
 3103 0068 6365     		str	r3, [r4, #84]
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 3104              		.loc 1 2033 0
 3105 006a 06E0     		b	.L229
 3106              	.L228:
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3107              		.loc 1 2035 0
 3108 006c 039B     		ldr	r3, [sp, #12]
 3109 006e 013B     		sub	r3, r3, #1
 3110 0070 0393     		str	r3, [sp, #12]
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
 3111              		.loc 1 2037 0
 3112 0072 5123     		mov	r3, #81
 3113 0074 E35C     		ldrb	r3, [r4, r3]
 3114 0076 072B     		cmp	r3, #7
 3115 0078 F0D1     		bne	.L230
 3116              	.L229:
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3117              		.loc 1 2039 0
 3118 007a 029B     		ldr	r3, [sp, #8]
 3119 007c 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccu3pZ5o.s 			page 132


 3120              	.L227:
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3121              		.loc 1 2043 0
 3122 007e 5368     		ldr	r3, [r2, #4]
 3123 0080 9B07     		lsl	r3, r3, #30
 3124 0082 1FD5     		bpl	.L231
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3125              		.loc 1 2046 0
 3126 0084 A36C     		ldr	r3, [r4, #72]
 3127 0086 002B     		cmp	r3, #0
 3128 0088 1CD0     		beq	.L231
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3129              		.loc 1 2050 0
 3130 008a 0022     		mov	r2, #0
 3131 008c 9A63     		str	r2, [r3, #56]
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 3132              		.loc 1 2053 0
 3133 008e A06C     		ldr	r0, [r4, #72]
 3134 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 3135              	.LVL257:
 3136 0094 0028     		cmp	r0, #0
 3137 0096 01D0     		beq	.L232
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 3138              		.loc 1 2055 0
 3139 0098 4023     		mov	r3, #64
 3140 009a 6365     		str	r3, [r4, #84]
 3141              	.L232:
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3142              		.loc 1 2059 0
 3143 009c 2268     		ldr	r2, [r4]
 3144 009e 5368     		ldr	r3, [r2, #4]
 3145 00a0 0221     		mov	r1, #2
 3146 00a2 8B43     		bic	r3, r1
 3147 00a4 5360     		str	r3, [r2, #4]
 3148              	.L234:
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 3149              		.loc 1 2064 0
 3150 00a6 039B     		ldr	r3, [sp, #12]
 3151 00a8 002B     		cmp	r3, #0
 3152 00aa 04D1     		bne	.L233
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           break;
 3153              		.loc 1 2066 0
 3154 00ac 626D     		ldr	r2, [r4, #84]
 3155 00ae 4033     		add	r3, r3, #64
 3156 00b0 1343     		orr	r3, r2
 3157 00b2 6365     		str	r3, [r4, #84]
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 3158              		.loc 1 2067 0
 3159 00b4 06E0     		b	.L231
 3160              	.L233:
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 3161              		.loc 1 2069 0
 3162 00b6 039B     		ldr	r3, [sp, #12]
 3163 00b8 013B     		sub	r3, r3, #1
 3164 00ba 0393     		str	r3, [sp, #12]
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3165              		.loc 1 2071 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 133


 3166 00bc 2368     		ldr	r3, [r4]
 3167 00be 9B68     		ldr	r3, [r3, #8]
 3168 00c0 9B07     		lsl	r3, r3, #30
 3169 00c2 F0D5     		bpl	.L234
 3170              	.L231:
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3171              		.loc 1 2076 0
 3172 00c4 2368     		ldr	r3, [r4]
 3173 00c6 5B68     		ldr	r3, [r3, #4]
 3174 00c8 DB07     		lsl	r3, r3, #31
 3175 00ca 15D5     		bpl	.L235
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3176              		.loc 1 2079 0
 3177 00cc E36C     		ldr	r3, [r4, #76]
 3178 00ce 002B     		cmp	r3, #0
 3179 00d0 12D0     		beq	.L235
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3180              		.loc 1 2083 0
 3181 00d2 0022     		mov	r2, #0
 3182 00d4 9A63     		str	r2, [r3, #56]
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 3183              		.loc 1 2086 0
 3184 00d6 E06C     		ldr	r0, [r4, #76]
 3185 00d8 FFF7FEFF 		bl	HAL_DMA_Abort
 3186              	.LVL258:
 3187 00dc 0028     		cmp	r0, #0
 3188 00de 01D0     		beq	.L236
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 3189              		.loc 1 2088 0
 3190 00e0 4023     		mov	r3, #64
 3191 00e2 6365     		str	r3, [r4, #84]
 3192              	.L236:
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3193              		.loc 1 2092 0
 3194 00e4 2268     		ldr	r2, [r4]
 3195 00e6 1368     		ldr	r3, [r2]
 3196 00e8 4021     		mov	r1, #64
 3197 00ea 8B43     		bic	r3, r1
 3198 00ec 1360     		str	r3, [r2]
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3199              		.loc 1 2095 0
 3200 00ee 2268     		ldr	r2, [r4]
 3201 00f0 5368     		ldr	r3, [r2, #4]
 3202 00f2 3F39     		sub	r1, r1, #63
 3203 00f4 8B43     		bic	r3, r1
 3204 00f6 5360     		str	r3, [r2, #4]
 3205              	.L235:
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3206              		.loc 1 2099 0
 3207 00f8 0023     		mov	r3, #0
 3208 00fa E387     		strh	r3, [r4, #62]
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3209              		.loc 1 2100 0
 3210 00fc E386     		strh	r3, [r4, #54]
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3211              		.loc 1 2103 0
 3212 00fe 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/ccu3pZ5o.s 			page 134


 3213 0100 402B     		cmp	r3, #64
 3214 0102 03D0     		beq	.L238
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3215              		.loc 1 2111 0
 3216 0104 0023     		mov	r3, #0
 3217 0106 6365     		str	r3, [r4, #84]
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3218              		.loc 1 1998 0
 3219 0108 0020     		mov	r0, #0
 3220 010a 00E0     		b	.L237
 3221              	.L238:
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3222              		.loc 1 2106 0
 3223 010c 0120     		mov	r0, #1
 3224              	.L237:
 3225              	.LVL259:
 3226              	.LBB4:
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 3227              		.loc 1 2115 0
 3228 010e 0022     		mov	r2, #0
 3229 0110 0092     		str	r2, [sp]
 3230 0112 2368     		ldr	r3, [r4]
 3231 0114 D968     		ldr	r1, [r3, #12]
 3232 0116 0091     		str	r1, [sp]
 3233 0118 9968     		ldr	r1, [r3, #8]
 3234 011a 0091     		str	r1, [sp]
 3235 011c 0099     		ldr	r1, [sp]
 3236              	.LBE4:
 3237              	.LBB5:
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3238              		.loc 1 2116 0
 3239 011e 0192     		str	r2, [sp, #4]
 3240 0120 9B68     		ldr	r3, [r3, #8]
 3241 0122 0193     		str	r3, [sp, #4]
 3242 0124 019B     		ldr	r3, [sp, #4]
 3243              	.LBE5:
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3244              		.loc 1 2119 0
 3245 0126 0132     		add	r2, r2, #1
 3246 0128 5123     		mov	r3, #81
 3247 012a E254     		strb	r2, [r4, r3]
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3248              		.loc 1 2122 0
 3249 012c 04B0     		add	sp, sp, #16
 3250              		@ sp needed
 3251              	.LVL260:
 3252 012e 10BD     		pop	{r4, pc}
 3253              	.L240:
 3254              		.align	2
 3255              	.L239:
 3256 0130 00000000 		.word	SystemCoreClock
 3257 0134 C05D0000 		.word	24000
 3258 0138 00000000 		.word	SPI_AbortTx_ISR
 3259 013c 00000000 		.word	SPI_AbortRx_ISR
 3260              		.cfi_endproc
 3261              	.LFE47:
 3263              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
ARM GAS  /tmp/ccu3pZ5o.s 			page 135


 3264              		.align	2
 3265              		.global	HAL_SPI_DMAPause
 3266              		.code	16
 3267              		.thumb_func
 3269              	HAL_SPI_DMAPause:
 3270              	.LFB49:
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
 3271              		.loc 1 2302 0
 3272              		.cfi_startproc
 3273              	.LVL261:
 3274 0000 10B5     		push	{r4, lr}
 3275              	.LCFI23:
 3276              		.cfi_def_cfa_offset 8
 3277              		.cfi_offset 4, -8
 3278              		.cfi_offset 14, -4
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3279              		.loc 1 2304 0
 3280 0002 5023     		mov	r3, #80
 3281 0004 C35C     		ldrb	r3, [r0, r3]
 3282 0006 012B     		cmp	r3, #1
 3283 0008 0BD0     		beq	.L243
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3284              		.loc 1 2304 0 is_stmt 0 discriminator 2
 3285 000a 5022     		mov	r2, #80
 3286 000c 0123     		mov	r3, #1
 3287 000e 8354     		strb	r3, [r0, r2]
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3288              		.loc 1 2307 0 is_stmt 1 discriminator 2
 3289 0010 0168     		ldr	r1, [r0]
 3290 0012 4B68     		ldr	r3, [r1, #4]
 3291 0014 0324     		mov	r4, #3
 3292 0016 A343     		bic	r3, r4
 3293 0018 4B60     		str	r3, [r1, #4]
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3294              		.loc 1 2310 0 discriminator 2
 3295 001a 0023     		mov	r3, #0
 3296 001c 8354     		strb	r3, [r0, r2]
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3297              		.loc 1 2312 0 discriminator 2
 3298 001e 0020     		mov	r0, #0
 3299              	.LVL262:
 3300 0020 00E0     		b	.L242
 3301              	.LVL263:
 3302              	.L243:
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3303              		.loc 1 2304 0
 3304 0022 0220     		mov	r0, #2
 3305              	.LVL264:
 3306              	.L242:
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3307              		.loc 1 2313 0
 3308              		@ sp needed
 3309 0024 10BD     		pop	{r4, pc}
 3310              		.cfi_endproc
 3311              	.LFE49:
 3313 0026 C046     		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3314              		.align	2
ARM GAS  /tmp/ccu3pZ5o.s 			page 136


 3315              		.global	HAL_SPI_DMAResume
 3316              		.code	16
 3317              		.thumb_func
 3319              	HAL_SPI_DMAResume:
 3320              	.LFB50:
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
 3321              		.loc 1 2322 0
 3322              		.cfi_startproc
 3323              	.LVL265:
 3324 0000 10B5     		push	{r4, lr}
 3325              	.LCFI24:
 3326              		.cfi_def_cfa_offset 8
 3327              		.cfi_offset 4, -8
 3328              		.cfi_offset 14, -4
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3329              		.loc 1 2324 0
 3330 0002 5023     		mov	r3, #80
 3331 0004 C35C     		ldrb	r3, [r0, r3]
 3332 0006 012B     		cmp	r3, #1
 3333 0008 0BD0     		beq	.L246
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3334              		.loc 1 2324 0 is_stmt 0 discriminator 2
 3335 000a 5022     		mov	r2, #80
 3336 000c 0123     		mov	r3, #1
 3337 000e 8354     		strb	r3, [r0, r2]
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3338              		.loc 1 2327 0 is_stmt 1 discriminator 2
 3339 0010 0168     		ldr	r1, [r0]
 3340 0012 4C68     		ldr	r4, [r1, #4]
 3341 0014 0233     		add	r3, r3, #2
 3342 0016 2343     		orr	r3, r4
 3343 0018 4B60     		str	r3, [r1, #4]
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3344              		.loc 1 2330 0 discriminator 2
 3345 001a 0023     		mov	r3, #0
 3346 001c 8354     		strb	r3, [r0, r2]
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3347              		.loc 1 2332 0 discriminator 2
 3348 001e 0020     		mov	r0, #0
 3349              	.LVL266:
 3350 0020 00E0     		b	.L245
 3351              	.LVL267:
 3352              	.L246:
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3353              		.loc 1 2324 0
 3354 0022 0220     		mov	r0, #2
 3355              	.LVL268:
 3356              	.L245:
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3357              		.loc 1 2333 0
 3358              		@ sp needed
 3359 0024 10BD     		pop	{r4, pc}
 3360              		.cfi_endproc
 3361              	.LFE50:
 3363 0026 C046     		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3364              		.align	2
 3365              		.global	HAL_SPI_DMAStop
ARM GAS  /tmp/ccu3pZ5o.s 			page 137


 3366              		.code	16
 3367              		.thumb_func
 3369              	HAL_SPI_DMAStop:
 3370              	.LFB51:
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3371              		.loc 1 2342 0
 3372              		.cfi_startproc
 3373              	.LVL269:
 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              	.LCFI25:
 3376              		.cfi_def_cfa_offset 16
 3377              		.cfi_offset 3, -16
 3378              		.cfi_offset 4, -12
 3379              		.cfi_offset 5, -8
 3380              		.cfi_offset 14, -4
 3381 0002 041C     		mov	r4, r0
 3382              	.LVL270:
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3383              		.loc 1 2351 0
 3384 0004 806C     		ldr	r0, [r0, #72]
 3385              	.LVL271:
 3386 0006 0028     		cmp	r0, #0
 3387 0008 09D0     		beq	.L250
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3388              		.loc 1 2353 0
 3389 000a FFF7FEFF 		bl	HAL_DMA_Abort
 3390              	.LVL272:
 3391 000e 0028     		cmp	r0, #0
 3392 0010 07D0     		beq	.L251
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3393              		.loc 1 2355 0
 3394 0012 626D     		ldr	r2, [r4, #84]
 3395 0014 1023     		mov	r3, #16
 3396 0016 1343     		orr	r3, r2
 3397 0018 6365     		str	r3, [r4, #84]
 3398              	.LVL273:
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3399              		.loc 1 2356 0
 3400 001a 0125     		mov	r5, #1
 3401 001c 02E0     		b	.L248
 3402              	.LVL274:
 3403              	.L250:
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3404              		.loc 1 2343 0
 3405 001e 0025     		mov	r5, #0
 3406 0020 00E0     		b	.L248
 3407              	.L251:
 3408 0022 0025     		mov	r5, #0
 3409              	.LVL275:
 3410              	.L248:
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3411              		.loc 1 2360 0
 3412 0024 E06C     		ldr	r0, [r4, #76]
 3413 0026 0028     		cmp	r0, #0
 3414 0028 08D0     		beq	.L249
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3415              		.loc 1 2362 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 138


 3416 002a FFF7FEFF 		bl	HAL_DMA_Abort
 3417              	.LVL276:
 3418 002e 0028     		cmp	r0, #0
 3419 0030 04D0     		beq	.L249
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3420              		.loc 1 2364 0
 3421 0032 626D     		ldr	r2, [r4, #84]
 3422 0034 1023     		mov	r3, #16
 3423 0036 1343     		orr	r3, r2
 3424 0038 6365     		str	r3, [r4, #84]
 3425              	.LVL277:
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3426              		.loc 1 2365 0
 3427 003a 0125     		mov	r5, #1
 3428              	.LVL278:
 3429              	.L249:
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3430              		.loc 1 2370 0
 3431 003c 2268     		ldr	r2, [r4]
 3432 003e 5368     		ldr	r3, [r2, #4]
 3433 0040 0321     		mov	r1, #3
 3434 0042 8B43     		bic	r3, r1
 3435 0044 5360     		str	r3, [r2, #4]
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return errorcode;
 3436              		.loc 1 2371 0
 3437 0046 0122     		mov	r2, #1
 3438 0048 5123     		mov	r3, #81
 3439 004a E254     		strb	r2, [r4, r3]
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3440              		.loc 1 2373 0
 3441 004c 281C     		mov	r0, r5
 3442              		@ sp needed
 3443              	.LVL279:
 3444              	.LVL280:
 3445 004e 38BD     		pop	{r3, r4, r5, pc}
 3446              		.cfi_endproc
 3447              	.LFE51:
 3449              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3450              		.align	2
 3451              		.weak	HAL_SPI_TxCpltCallback
 3452              		.code	16
 3453              		.thumb_func
 3455              	HAL_SPI_TxCpltCallback:
 3456              	.LFB53:
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3457              		.loc 1 2488 0
 3458              		.cfi_startproc
 3459              	.LVL281:
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3460              		.loc 1 2495 0
 3461              		@ sp needed
 3462 0000 7047     		bx	lr
 3463              		.cfi_endproc
 3464              	.LFE53:
 3466 0002 C046     		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3467              		.align	2
 3468              		.weak	HAL_SPI_RxCpltCallback
ARM GAS  /tmp/ccu3pZ5o.s 			page 139


 3469              		.code	16
 3470              		.thumb_func
 3472              	HAL_SPI_RxCpltCallback:
 3473              	.LFB54:
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3474              		.loc 1 2504 0
 3475              		.cfi_startproc
 3476              	.LVL282:
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3477              		.loc 1 2511 0
 3478              		@ sp needed
 3479 0000 7047     		bx	lr
 3480              		.cfi_endproc
 3481              	.LFE54:
 3483 0002 C046     		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3484              		.align	2
 3485              		.weak	HAL_SPI_TxRxCpltCallback
 3486              		.code	16
 3487              		.thumb_func
 3489              	HAL_SPI_TxRxCpltCallback:
 3490              	.LFB55:
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3491              		.loc 1 2520 0
 3492              		.cfi_startproc
 3493              	.LVL283:
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3494              		.loc 1 2527 0
 3495              		@ sp needed
 3496 0000 7047     		bx	lr
 3497              		.cfi_endproc
 3498              	.LFE55:
 3500 0002 C046     		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3501              		.align	2
 3502              		.weak	HAL_SPI_TxHalfCpltCallback
 3503              		.code	16
 3504              		.thumb_func
 3506              	HAL_SPI_TxHalfCpltCallback:
 3507              	.LFB56:
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3508              		.loc 1 2536 0
 3509              		.cfi_startproc
 3510              	.LVL284:
2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3511              		.loc 1 2543 0
 3512              		@ sp needed
 3513 0000 7047     		bx	lr
 3514              		.cfi_endproc
 3515              	.LFE56:
 3517 0002 C046     		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3518              		.align	2
 3519              		.code	16
 3520              		.thumb_func
 3522              	SPI_DMAHalfTransmitCplt:
 3523              	.LFB66:
2881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3524              		.loc 1 2881 0
 3525              		.cfi_startproc
ARM GAS  /tmp/ccu3pZ5o.s 			page 140


 3526              	.LVL285:
 3527 0000 08B5     		push	{r3, lr}
 3528              	.LCFI26:
 3529              		.cfi_def_cfa_offset 8
 3530              		.cfi_offset 3, -8
 3531              		.cfi_offset 14, -4
2882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3532              		.loc 1 2882 0
 3533 0002 806A     		ldr	r0, [r0, #40]
 3534              	.LVL286:
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3535              		.loc 1 2888 0
 3536 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3537              	.LVL287:
2890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3538              		.loc 1 2890 0
 3539              		@ sp needed
 3540 0008 08BD     		pop	{r3, pc}
 3541              		.cfi_endproc
 3542              	.LFE66:
 3544 000a C046     		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3545              		.align	2
 3546              		.weak	HAL_SPI_RxHalfCpltCallback
 3547              		.code	16
 3548              		.thumb_func
 3550              	HAL_SPI_RxHalfCpltCallback:
 3551              	.LFB57:
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3552              		.loc 1 2552 0
 3553              		.cfi_startproc
 3554              	.LVL288:
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3555              		.loc 1 2559 0
 3556              		@ sp needed
 3557 0000 7047     		bx	lr
 3558              		.cfi_endproc
 3559              	.LFE57:
 3561 0002 C046     		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3562              		.align	2
 3563              		.code	16
 3564              		.thumb_func
 3566              	SPI_DMAHalfReceiveCplt:
 3567              	.LFB67:
2899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3568              		.loc 1 2899 0
 3569              		.cfi_startproc
 3570              	.LVL289:
 3571 0000 08B5     		push	{r3, lr}
 3572              	.LCFI27:
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 3, -8
 3575              		.cfi_offset 14, -4
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3576              		.loc 1 2900 0
 3577 0002 806A     		ldr	r0, [r0, #40]
 3578              	.LVL290:
2906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccu3pZ5o.s 			page 141


 3579              		.loc 1 2906 0
 3580 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3581              	.LVL291:
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3582              		.loc 1 2908 0
 3583              		@ sp needed
 3584 0008 08BD     		pop	{r3, pc}
 3585              		.cfi_endproc
 3586              	.LFE67:
 3588 000a C046     		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3589              		.align	2
 3590              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3591              		.code	16
 3592              		.thumb_func
 3594              	HAL_SPI_TxRxHalfCpltCallback:
 3595              	.LFB58:
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3596              		.loc 1 2568 0
 3597              		.cfi_startproc
 3598              	.LVL292:
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3599              		.loc 1 2575 0
 3600              		@ sp needed
 3601 0000 7047     		bx	lr
 3602              		.cfi_endproc
 3603              	.LFE58:
 3605 0002 C046     		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3606              		.align	2
 3607              		.code	16
 3608              		.thumb_func
 3610              	SPI_DMAHalfTransmitReceiveCplt:
 3611              	.LFB68:
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3612              		.loc 1 2917 0
 3613              		.cfi_startproc
 3614              	.LVL293:
 3615 0000 08B5     		push	{r3, lr}
 3616              	.LCFI28:
 3617              		.cfi_def_cfa_offset 8
 3618              		.cfi_offset 3, -8
 3619              		.cfi_offset 14, -4
2918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3620              		.loc 1 2918 0
 3621 0002 806A     		ldr	r0, [r0, #40]
 3622              	.LVL294:
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3623              		.loc 1 2924 0
 3624 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3625              	.LVL295:
2926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3626              		.loc 1 2926 0
 3627              		@ sp needed
 3628 0008 08BD     		pop	{r3, pc}
 3629              		.cfi_endproc
 3630              	.LFE68:
 3632 000a C046     		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3633              		.align	2
ARM GAS  /tmp/ccu3pZ5o.s 			page 142


 3634              		.weak	HAL_SPI_ErrorCallback
 3635              		.code	16
 3636              		.thumb_func
 3638              	HAL_SPI_ErrorCallback:
 3639              	.LFB59:
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3640              		.loc 1 2584 0
 3641              		.cfi_startproc
 3642              	.LVL296:
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3643              		.loc 1 2594 0
 3644              		@ sp needed
 3645 0000 7047     		bx	lr
 3646              		.cfi_endproc
 3647              	.LFE59:
 3649 0002 C046     		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3650              		.align	2
 3651              		.code	16
 3652              		.thumb_func
 3654              	SPI_CloseTx_ISR:
 3655              	.LFB86:
3735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 3656              		.loc 1 3735 0
 3657              		.cfi_startproc
 3658              	.LVL297:
 3659 0000 10B5     		push	{r4, lr}
 3660              	.LCFI29:
 3661              		.cfi_def_cfa_offset 8
 3662              		.cfi_offset 4, -8
 3663              		.cfi_offset 14, -4
 3664 0002 82B0     		sub	sp, sp, #8
 3665              	.LCFI30:
 3666              		.cfi_def_cfa_offset 16
 3667 0004 041C     		mov	r4, r0
3737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3668              		.loc 1 3737 0
 3669 0006 214B     		ldr	r3, .L270
 3670 0008 1868     		ldr	r0, [r3]
 3671              	.LVL298:
 3672 000a 2149     		ldr	r1, .L270+4
 3673 000c FFF7FEFF 		bl	__aeabi_uidiv
 3674              	.LVL299:
 3675 0010 6423     		mov	r3, #100
 3676 0012 5843     		mul	r0, r3
 3677 0014 0190     		str	r0, [sp, #4]
3740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3678              		.loc 1 3740 0
 3679 0016 FFF7FEFF 		bl	HAL_GetTick
 3680              	.LVL300:
 3681 001a 021C     		mov	r2, r0
 3682              	.LVL301:
 3683              	.L265:
3745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3684              		.loc 1 3745 0
 3685 001c 019B     		ldr	r3, [sp, #4]
 3686 001e 002B     		cmp	r3, #0
 3687 0020 04D1     		bne	.L263
ARM GAS  /tmp/ccu3pZ5o.s 			page 143


3747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
 3688              		.loc 1 3747 0
 3689 0022 616D     		ldr	r1, [r4, #84]
 3690 0024 2033     		add	r3, r3, #32
 3691 0026 0B43     		orr	r3, r1
 3692 0028 6365     		str	r3, [r4, #84]
3748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 3693              		.loc 1 3748 0
 3694 002a 06E0     		b	.L264
 3695              	.L263:
3750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3696              		.loc 1 3750 0
 3697 002c 019B     		ldr	r3, [sp, #4]
 3698 002e 013B     		sub	r3, r3, #1
 3699 0030 0193     		str	r3, [sp, #4]
3752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3700              		.loc 1 3752 0
 3701 0032 2368     		ldr	r3, [r4]
 3702 0034 9B68     		ldr	r3, [r3, #8]
 3703 0036 9B07     		lsl	r3, r3, #30
 3704 0038 F0D5     		bpl	.L265
 3705              	.L264:
3755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3706              		.loc 1 3755 0
 3707 003a 2168     		ldr	r1, [r4]
 3708 003c 4B68     		ldr	r3, [r1, #4]
 3709 003e A020     		mov	r0, #160
 3710              	.LVL302:
 3711 0040 8343     		bic	r3, r0
 3712 0042 4B60     		str	r3, [r1, #4]
3758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3713              		.loc 1 3758 0
 3714 0044 201C     		mov	r0, r4
 3715 0046 6421     		mov	r1, #100
 3716 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3717              	.LVL303:
 3718 004c 0028     		cmp	r0, #0
 3719 004e 03D0     		beq	.L266
3760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3720              		.loc 1 3760 0
 3721 0050 626D     		ldr	r2, [r4, #84]
 3722 0052 2023     		mov	r3, #32
 3723 0054 1343     		orr	r3, r2
 3724 0056 6365     		str	r3, [r4, #84]
 3725              	.L266:
3764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3726              		.loc 1 3764 0
 3727 0058 A368     		ldr	r3, [r4, #8]
 3728 005a 002B     		cmp	r3, #0
 3729 005c 06D1     		bne	.L267
 3730              	.LBB6:
3766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3731              		.loc 1 3766 0
 3732 005e 0093     		str	r3, [sp]
 3733 0060 2368     		ldr	r3, [r4]
 3734 0062 DA68     		ldr	r2, [r3, #12]
 3735 0064 0092     		str	r2, [sp]
ARM GAS  /tmp/ccu3pZ5o.s 			page 144


 3736 0066 9B68     		ldr	r3, [r3, #8]
 3737 0068 0093     		str	r3, [sp]
 3738 006a 009B     		ldr	r3, [sp]
 3739              	.L267:
 3740              	.LBE6:
3769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3741              		.loc 1 3769 0
 3742 006c 0122     		mov	r2, #1
 3743 006e 5123     		mov	r3, #81
 3744 0070 E254     		strb	r2, [r4, r3]
3770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3745              		.loc 1 3770 0
 3746 0072 636D     		ldr	r3, [r4, #84]
 3747 0074 002B     		cmp	r3, #0
 3748 0076 03D0     		beq	.L268
3776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3749              		.loc 1 3776 0
 3750 0078 201C     		mov	r0, r4
 3751 007a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3752              	.LVL304:
 3753 007e 02E0     		b	.L262
 3754              	.L268:
3785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3755              		.loc 1 3785 0
 3756 0080 201C     		mov	r0, r4
 3757 0082 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3758              	.LVL305:
 3759              	.L262:
3788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3760              		.loc 1 3788 0
 3761 0086 02B0     		add	sp, sp, #8
 3762              		@ sp needed
 3763              	.LVL306:
 3764 0088 10BD     		pop	{r4, pc}
 3765              	.L271:
 3766 008a C046     		.align	2
 3767              	.L270:
 3768 008c 00000000 		.word	SystemCoreClock
 3769 0090 C05D0000 		.word	24000
 3770              		.cfi_endproc
 3771              	.LFE86:
 3773              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3774              		.align	2
 3775              		.code	16
 3776              		.thumb_func
 3778              	SPI_TxISR_8BIT:
 3779              	.LFB79:
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3780              		.loc 1 3387 0
 3781              		.cfi_startproc
 3782              	.LVL307:
 3783 0000 08B5     		push	{r3, lr}
 3784              	.LCFI31:
 3785              		.cfi_def_cfa_offset 8
 3786              		.cfi_offset 3, -8
 3787              		.cfi_offset 14, -4
3388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
ARM GAS  /tmp/ccu3pZ5o.s 			page 145


 3788              		.loc 1 3388 0
 3789 0002 036B     		ldr	r3, [r0, #48]
 3790 0004 1B78     		ldrb	r3, [r3]
 3791 0006 0268     		ldr	r2, [r0]
 3792 0008 1373     		strb	r3, [r2, #12]
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
 3793              		.loc 1 3389 0
 3794 000a 036B     		ldr	r3, [r0, #48]
 3795 000c 0133     		add	r3, r3, #1
 3796 000e 0363     		str	r3, [r0, #48]
3390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3797              		.loc 1 3390 0
 3798 0010 C38E     		ldrh	r3, [r0, #54]
 3799 0012 013B     		sub	r3, r3, #1
 3800 0014 9BB2     		uxth	r3, r3
 3801 0016 C386     		strh	r3, [r0, #54]
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3802              		.loc 1 3392 0
 3803 0018 C38E     		ldrh	r3, [r0, #54]
 3804 001a 9BB2     		uxth	r3, r3
 3805 001c 002B     		cmp	r3, #0
 3806 001e 01D1     		bne	.L272
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3807              		.loc 1 3401 0
 3808 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3809              	.LVL308:
 3810              	.L272:
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3811              		.loc 1 3403 0
 3812              		@ sp needed
 3813 0024 08BD     		pop	{r3, pc}
 3814              		.cfi_endproc
 3815              	.LFE79:
 3817 0026 C046     		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3818              		.align	2
 3819              		.code	16
 3820              		.thumb_func
 3822              	SPI_TxISR_16BIT:
 3823              	.LFB80:
3412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3824              		.loc 1 3412 0
 3825              		.cfi_startproc
 3826              	.LVL309:
 3827 0000 08B5     		push	{r3, lr}
 3828              	.LCFI32:
 3829              		.cfi_def_cfa_offset 8
 3830              		.cfi_offset 3, -8
 3831              		.cfi_offset 14, -4
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3832              		.loc 1 3414 0
 3833 0002 0368     		ldr	r3, [r0]
 3834 0004 026B     		ldr	r2, [r0, #48]
 3835 0006 1288     		ldrh	r2, [r2]
 3836 0008 DA60     		str	r2, [r3, #12]
3415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
 3837              		.loc 1 3415 0
 3838 000a 036B     		ldr	r3, [r0, #48]
ARM GAS  /tmp/ccu3pZ5o.s 			page 146


 3839 000c 0233     		add	r3, r3, #2
 3840 000e 0363     		str	r3, [r0, #48]
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3841              		.loc 1 3416 0
 3842 0010 C38E     		ldrh	r3, [r0, #54]
 3843 0012 013B     		sub	r3, r3, #1
 3844 0014 9BB2     		uxth	r3, r3
 3845 0016 C386     		strh	r3, [r0, #54]
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3846              		.loc 1 3418 0
 3847 0018 C38E     		ldrh	r3, [r0, #54]
 3848 001a 9BB2     		uxth	r3, r3
 3849 001c 002B     		cmp	r3, #0
 3850 001e 01D1     		bne	.L274
3427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3851              		.loc 1 3427 0
 3852 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3853              	.LVL310:
 3854              	.L274:
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3855              		.loc 1 3429 0
 3856              		@ sp needed
 3857 0024 08BD     		pop	{r3, pc}
 3858              		.cfi_endproc
 3859              	.LFE80:
 3861 0026 C046     		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3862              		.align	2
 3863              		.code	16
 3864              		.thumb_func
 3866              	SPI_CloseRx_ISR:
 3867              	.LFB85:
3672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3868              		.loc 1 3672 0
 3869              		.cfi_startproc
 3870              	.LVL311:
 3871 0000 10B5     		push	{r4, lr}
 3872              	.LCFI33:
 3873              		.cfi_def_cfa_offset 8
 3874              		.cfi_offset 4, -8
 3875              		.cfi_offset 14, -4
 3876 0002 82B0     		sub	sp, sp, #8
 3877              	.LCFI34:
 3878              		.cfi_def_cfa_offset 16
 3879 0004 041C     		mov	r4, r0
3674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3880              		.loc 1 3674 0
 3881 0006 0268     		ldr	r2, [r0]
 3882 0008 5368     		ldr	r3, [r2, #4]
 3883 000a 6021     		mov	r1, #96
 3884 000c 8B43     		bic	r3, r1
 3885 000e 5360     		str	r3, [r2, #4]
3677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3886              		.loc 1 3677 0
 3887 0010 FFF7FEFF 		bl	HAL_GetTick
 3888              	.LVL312:
 3889 0014 021C     		mov	r2, r0
 3890 0016 201C     		mov	r0, r4
ARM GAS  /tmp/ccu3pZ5o.s 			page 147


 3891 0018 6421     		mov	r1, #100
 3892 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3893              	.LVL313:
 3894 001e 0028     		cmp	r0, #0
 3895 0020 03D0     		beq	.L277
3679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3896              		.loc 1 3679 0
 3897 0022 626D     		ldr	r2, [r4, #84]
 3898 0024 2023     		mov	r3, #32
 3899 0026 1343     		orr	r3, r2
 3900 0028 6365     		str	r3, [r4, #84]
 3901              	.L277:
3683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3902              		.loc 1 3683 0
 3903 002a A368     		ldr	r3, [r4, #8]
 3904 002c 002B     		cmp	r3, #0
 3905 002e 06D1     		bne	.L278
 3906              	.LBB7:
3685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3907              		.loc 1 3685 0
 3908 0030 0193     		str	r3, [sp, #4]
 3909 0032 2368     		ldr	r3, [r4]
 3910 0034 DA68     		ldr	r2, [r3, #12]
 3911 0036 0192     		str	r2, [sp, #4]
 3912 0038 9B68     		ldr	r3, [r3, #8]
 3913 003a 0193     		str	r3, [sp, #4]
 3914 003c 019B     		ldr	r3, [sp, #4]
 3915              	.L278:
 3916              	.LBE7:
3687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3917              		.loc 1 3687 0
 3918 003e 0122     		mov	r2, #1
 3919 0040 5123     		mov	r3, #81
 3920 0042 E254     		strb	r2, [r4, r3]
3705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 3921              		.loc 1 3705 0
 3922 0044 636D     		ldr	r3, [r4, #84]
 3923 0046 002B     		cmp	r3, #0
 3924 0048 03D1     		bne	.L279
3711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3925              		.loc 1 3711 0
 3926 004a 201C     		mov	r0, r4
 3927 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3928              	.LVL314:
 3929 0050 02E0     		b	.L276
 3930              	.L279:
3720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3931              		.loc 1 3720 0
 3932 0052 201C     		mov	r0, r4
 3933 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3934              	.LVL315:
 3935              	.L276:
3726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3936              		.loc 1 3726 0
 3937 0058 02B0     		add	sp, sp, #8
 3938              		@ sp needed
 3939              	.LVL316:
ARM GAS  /tmp/ccu3pZ5o.s 			page 148


 3940 005a 10BD     		pop	{r4, pc}
 3941              		.cfi_endproc
 3942              	.LFE85:
 3944              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3945              		.align	2
 3946              		.code	16
 3947              		.thumb_func
 3949              	SPI_RxISR_8BIT:
 3950              	.LFB77:
3302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3951              		.loc 1 3302 0
 3952              		.cfi_startproc
 3953              	.LVL317:
 3954 0000 08B5     		push	{r3, lr}
 3955              	.LCFI35:
 3956              		.cfi_def_cfa_offset 8
 3957              		.cfi_offset 3, -8
 3958              		.cfi_offset 14, -4
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3959              		.loc 1 3303 0
 3960 0002 0368     		ldr	r3, [r0]
 3961 0004 1B7B     		ldrb	r3, [r3, #12]
 3962 0006 826B     		ldr	r2, [r0, #56]
 3963 0008 1370     		strb	r3, [r2]
3304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
 3964              		.loc 1 3304 0
 3965 000a 836B     		ldr	r3, [r0, #56]
 3966 000c 0133     		add	r3, r3, #1
 3967 000e 8363     		str	r3, [r0, #56]
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3968              		.loc 1 3305 0
 3969 0010 C38F     		ldrh	r3, [r0, #62]
 3970 0012 013B     		sub	r3, r3, #1
 3971 0014 9BB2     		uxth	r3, r3
 3972 0016 C387     		strh	r3, [r0, #62]
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 3973              		.loc 1 3315 0
 3974 0018 C38F     		ldrh	r3, [r0, #62]
 3975 001a 9BB2     		uxth	r3, r3
 3976 001c 002B     		cmp	r3, #0
 3977 001e 01D1     		bne	.L281
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 3978              		.loc 1 3324 0
 3979 0020 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3980              	.LVL318:
 3981              	.L281:
3326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 3982              		.loc 1 3326 0
 3983              		@ sp needed
 3984 0024 08BD     		pop	{r3, pc}
 3985              		.cfi_endproc
 3986              	.LFE77:
 3988 0026 C046     		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3989              		.align	2
 3990              		.code	16
 3991              		.thumb_func
 3993              	SPI_RxISR_16BIT:
ARM GAS  /tmp/ccu3pZ5o.s 			page 149


 3994              	.LFB78:
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3995              		.loc 1 3354 0
 3996              		.cfi_startproc
 3997              	.LVL319:
 3998 0000 08B5     		push	{r3, lr}
 3999              	.LCFI36:
 4000              		.cfi_def_cfa_offset 8
 4001              		.cfi_offset 3, -8
 4002              		.cfi_offset 14, -4
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4003              		.loc 1 3355 0
 4004 0002 0368     		ldr	r3, [r0]
 4005 0004 DB68     		ldr	r3, [r3, #12]
 4006 0006 826B     		ldr	r2, [r0, #56]
 4007 0008 1380     		strh	r3, [r2]
3356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
 4008              		.loc 1 3356 0
 4009 000a 836B     		ldr	r3, [r0, #56]
 4010 000c 0233     		add	r3, r3, #2
 4011 000e 8363     		str	r3, [r0, #56]
3357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4012              		.loc 1 3357 0
 4013 0010 C38F     		ldrh	r3, [r0, #62]
 4014 0012 013B     		sub	r3, r3, #1
 4015 0014 9BB2     		uxth	r3, r3
 4016 0016 C387     		strh	r3, [r0, #62]
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4017              		.loc 1 3367 0
 4018 0018 C38F     		ldrh	r3, [r0, #62]
 4019 001a 9BB2     		uxth	r3, r3
 4020 001c 002B     		cmp	r3, #0
 4021 001e 01D1     		bne	.L283
3376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4022              		.loc 1 3376 0
 4023 0020 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4024              	.LVL320:
 4025              	.L283:
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4026              		.loc 1 3378 0
 4027              		@ sp needed
 4028 0024 08BD     		pop	{r3, pc}
 4029              		.cfi_endproc
 4030              	.LFE78:
 4032 0026 C046     		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 4033              		.align	2
 4034              		.code	16
 4035              		.thumb_func
 4037              	SPI_CloseRxTx_ISR:
 4038              	.LFB84:
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 4039              		.loc 1 3576 0
 4040              		.cfi_startproc
 4041              	.LVL321:
 4042 0000 10B5     		push	{r4, lr}
 4043              	.LCFI37:
 4044              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccu3pZ5o.s 			page 150


 4045              		.cfi_offset 4, -8
 4046              		.cfi_offset 14, -4
 4047 0002 82B0     		sub	sp, sp, #8
 4048              	.LCFI38:
 4049              		.cfi_def_cfa_offset 16
 4050 0004 041C     		mov	r4, r0
3578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4051              		.loc 1 3578 0
 4052 0006 284B     		ldr	r3, .L294
 4053 0008 1868     		ldr	r0, [r3]
 4054              	.LVL322:
 4055 000a 2849     		ldr	r1, .L294+4
 4056 000c FFF7FEFF 		bl	__aeabi_uidiv
 4057              	.LVL323:
 4058 0010 6423     		mov	r3, #100
 4059 0012 5843     		mul	r0, r3
 4060 0014 0190     		str	r0, [sp, #4]
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4061              		.loc 1 3581 0
 4062 0016 FFF7FEFF 		bl	HAL_GetTick
 4063              	.LVL324:
 4064 001a 021C     		mov	r2, r0
 4065              	.LVL325:
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4066              		.loc 1 3584 0
 4067 001c 2168     		ldr	r1, [r4]
 4068 001e 4B68     		ldr	r3, [r1, #4]
 4069 0020 2020     		mov	r0, #32
 4070              	.LVL326:
 4071 0022 8343     		bic	r3, r0
 4072 0024 4B60     		str	r3, [r1, #4]
 4073              	.L288:
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4074              		.loc 1 3589 0
 4075 0026 019B     		ldr	r3, [sp, #4]
 4076 0028 002B     		cmp	r3, #0
 4077 002a 04D1     		bne	.L286
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
 4078              		.loc 1 3591 0
 4079 002c 616D     		ldr	r1, [r4, #84]
 4080 002e 2033     		add	r3, r3, #32
 4081 0030 0B43     		orr	r3, r1
 4082 0032 6365     		str	r3, [r4, #84]
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4083              		.loc 1 3592 0
 4084 0034 06E0     		b	.L287
 4085              	.L286:
3594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4086              		.loc 1 3594 0
 4087 0036 019B     		ldr	r3, [sp, #4]
 4088 0038 013B     		sub	r3, r3, #1
 4089 003a 0193     		str	r3, [sp, #4]
3596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4090              		.loc 1 3596 0
 4091 003c 2368     		ldr	r3, [r4]
 4092 003e 9B68     		ldr	r3, [r3, #8]
 4093 0040 9B07     		lsl	r3, r3, #30
ARM GAS  /tmp/ccu3pZ5o.s 			page 151


 4094 0042 F0D5     		bpl	.L288
 4095              	.L287:
3599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4096              		.loc 1 3599 0
 4097 0044 201C     		mov	r0, r4
 4098 0046 6421     		mov	r1, #100
 4099 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4100              	.LVL327:
 4101 004c 0028     		cmp	r0, #0
 4102 004e 03D0     		beq	.L289
3601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4103              		.loc 1 3601 0
 4104 0050 626D     		ldr	r2, [r4, #84]
 4105 0052 2023     		mov	r3, #32
 4106 0054 1343     		orr	r3, r2
 4107 0056 6365     		str	r3, [r4, #84]
 4108              	.L289:
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4109              		.loc 1 3605 0
 4110 0058 A368     		ldr	r3, [r4, #8]
 4111 005a 002B     		cmp	r3, #0
 4112 005c 06D1     		bne	.L290
 4113              	.LBB8:
3607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4114              		.loc 1 3607 0
 4115 005e 0093     		str	r3, [sp]
 4116 0060 2368     		ldr	r3, [r4]
 4117 0062 DA68     		ldr	r2, [r3, #12]
 4118 0064 0092     		str	r2, [sp]
 4119 0066 9B68     		ldr	r3, [r3, #8]
 4120 0068 0093     		str	r3, [sp]
 4121 006a 009B     		ldr	r3, [sp]
 4122              	.L290:
 4123              	.LBE8:
3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4124              		.loc 1 3627 0
 4125 006c 636D     		ldr	r3, [r4, #84]
 4126 006e 002B     		cmp	r3, #0
 4127 0070 11D1     		bne	.L291
3629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 4128              		.loc 1 3629 0
 4129 0072 5133     		add	r3, r3, #81
 4130 0074 E35C     		ldrb	r3, [r4, r3]
 4131 0076 042B     		cmp	r3, #4
 4132 0078 06D1     		bne	.L292
3631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Call user Rx complete callback */
 4133              		.loc 1 3631 0
 4134 007a 0122     		mov	r2, #1
 4135 007c 4D33     		add	r3, r3, #77
 4136 007e E254     		strb	r2, [r4, r3]
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4137              		.loc 1 3636 0
 4138 0080 201C     		mov	r0, r4
 4139 0082 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4140              	.LVL328:
 4141 0086 0CE0     		b	.L285
 4142              	.L292:
ARM GAS  /tmp/ccu3pZ5o.s 			page 152


3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4143              		.loc 1 3641 0
 4144 0088 0122     		mov	r2, #1
 4145 008a 5123     		mov	r3, #81
 4146 008c E254     		strb	r2, [r4, r3]
3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4147              		.loc 1 3646 0
 4148 008e 201C     		mov	r0, r4
 4149 0090 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4150              	.LVL329:
 4151 0094 05E0     		b	.L285
 4152              	.L291:
3652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call user error callback */
 4153              		.loc 1 3652 0
 4154 0096 0122     		mov	r2, #1
 4155 0098 5123     		mov	r3, #81
 4156 009a E254     		strb	r2, [r4, r3]
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4157              		.loc 1 3657 0
 4158 009c 201C     		mov	r0, r4
 4159 009e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4160              	.LVL330:
 4161              	.L285:
3663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4162              		.loc 1 3663 0
 4163 00a2 02B0     		add	sp, sp, #8
 4164              		@ sp needed
 4165              	.LVL331:
 4166 00a4 10BD     		pop	{r4, pc}
 4167              	.L295:
 4168 00a6 C046     		.align	2
 4169              	.L294:
 4170 00a8 00000000 		.word	SystemCoreClock
 4171 00ac C05D0000 		.word	24000
 4172              		.cfi_endproc
 4173              	.LFE84:
 4175              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4176              		.align	2
 4177              		.code	16
 4178              		.thumb_func
 4180              	SPI_2linesTxISR_8BIT:
 4181              	.LFB74:
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4182              		.loc 1 3161 0
 4183              		.cfi_startproc
 4184              	.LVL332:
 4185 0000 08B5     		push	{r3, lr}
 4186              	.LCFI39:
 4187              		.cfi_def_cfa_offset 8
 4188              		.cfi_offset 3, -8
 4189              		.cfi_offset 14, -4
3162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4190              		.loc 1 3162 0
 4191 0002 036B     		ldr	r3, [r0, #48]
 4192 0004 1B78     		ldrb	r3, [r3]
 4193 0006 0268     		ldr	r2, [r0]
 4194 0008 1373     		strb	r3, [r2, #12]
ARM GAS  /tmp/ccu3pZ5o.s 			page 153


3163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
 4195              		.loc 1 3163 0
 4196 000a 036B     		ldr	r3, [r0, #48]
 4197 000c 0133     		add	r3, r3, #1
 4198 000e 0363     		str	r3, [r0, #48]
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4199              		.loc 1 3164 0
 4200 0010 C38E     		ldrh	r3, [r0, #54]
 4201 0012 013B     		sub	r3, r3, #1
 4202 0014 9BB2     		uxth	r3, r3
 4203 0016 C386     		strh	r3, [r0, #54]
3167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4204              		.loc 1 3167 0
 4205 0018 C38E     		ldrh	r3, [r0, #54]
 4206 001a 9BB2     		uxth	r3, r3
 4207 001c 002B     		cmp	r3, #0
 4208 001e 0AD1     		bne	.L296
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4209              		.loc 1 3181 0
 4210 0020 0268     		ldr	r2, [r0]
 4211 0022 5368     		ldr	r3, [r2, #4]
 4212 0024 8021     		mov	r1, #128
 4213 0026 8B43     		bic	r3, r1
 4214 0028 5360     		str	r3, [r2, #4]
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4215              		.loc 1 3183 0
 4216 002a C38F     		ldrh	r3, [r0, #62]
 4217 002c 9BB2     		uxth	r3, r3
 4218 002e 002B     		cmp	r3, #0
 4219 0030 01D1     		bne	.L296
3185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4220              		.loc 1 3185 0
 4221 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4222              	.LVL333:
 4223              	.L296:
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4224              		.loc 1 3188 0
 4225              		@ sp needed
 4226 0036 08BD     		pop	{r3, pc}
 4227              		.cfi_endproc
 4228              	.LFE74:
 4230              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4231              		.align	2
 4232              		.code	16
 4233              		.thumb_func
 4235              	SPI_2linesRxISR_8BIT:
 4236              	.LFB73:
3105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 8bit mode */
 4237              		.loc 1 3105 0
 4238              		.cfi_startproc
 4239              	.LVL334:
 4240 0000 08B5     		push	{r3, lr}
 4241              	.LCFI40:
 4242              		.cfi_def_cfa_offset 8
 4243              		.cfi_offset 3, -8
 4244              		.cfi_offset 14, -4
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
ARM GAS  /tmp/ccu3pZ5o.s 			page 154


 4245              		.loc 1 3107 0
 4246 0002 0368     		ldr	r3, [r0]
 4247 0004 1B7B     		ldrb	r3, [r3, #12]
 4248 0006 826B     		ldr	r2, [r0, #56]
 4249 0008 1370     		strb	r3, [r2]
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
 4250              		.loc 1 3108 0
 4251 000a 836B     		ldr	r3, [r0, #56]
 4252 000c 0133     		add	r3, r3, #1
 4253 000e 8363     		str	r3, [r0, #56]
3109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4254              		.loc 1 3109 0
 4255 0010 C38F     		ldrh	r3, [r0, #62]
 4256 0012 013B     		sub	r3, r3, #1
 4257 0014 9BB2     		uxth	r3, r3
 4258 0016 C387     		strh	r3, [r0, #62]
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4259              		.loc 1 3112 0
 4260 0018 C38F     		ldrh	r3, [r0, #62]
 4261 001a 9BB2     		uxth	r3, r3
 4262 001c 002B     		cmp	r3, #0
 4263 001e 0AD1     		bne	.L298
3123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4264              		.loc 1 3123 0
 4265 0020 0268     		ldr	r2, [r0]
 4266 0022 5368     		ldr	r3, [r2, #4]
 4267 0024 6021     		mov	r1, #96
 4268 0026 8B43     		bic	r3, r1
 4269 0028 5360     		str	r3, [r2, #4]
3125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4270              		.loc 1 3125 0
 4271 002a C38E     		ldrh	r3, [r0, #54]
 4272 002c 9BB2     		uxth	r3, r3
 4273 002e 002B     		cmp	r3, #0
 4274 0030 01D1     		bne	.L298
3127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4275              		.loc 1 3127 0
 4276 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4277              	.LVL335:
 4278              	.L298:
3130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4279              		.loc 1 3130 0
 4280              		@ sp needed
 4281 0036 08BD     		pop	{r3, pc}
 4282              		.cfi_endproc
 4283              	.LFE73:
 4285              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4286              		.align	2
 4287              		.code	16
 4288              		.thumb_func
 4290              	SPI_2linesTxISR_16BIT:
 4291              	.LFB76:
3249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4292              		.loc 1 3249 0
 4293              		.cfi_startproc
 4294              	.LVL336:
 4295 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccu3pZ5o.s 			page 155


 4296              	.LCFI41:
 4297              		.cfi_def_cfa_offset 8
 4298              		.cfi_offset 3, -8
 4299              		.cfi_offset 14, -4
3251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4300              		.loc 1 3251 0
 4301 0002 0368     		ldr	r3, [r0]
 4302 0004 026B     		ldr	r2, [r0, #48]
 4303 0006 1288     		ldrh	r2, [r2]
 4304 0008 DA60     		str	r2, [r3, #12]
3252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
 4305              		.loc 1 3252 0
 4306 000a 036B     		ldr	r3, [r0, #48]
 4307 000c 0233     		add	r3, r3, #2
 4308 000e 0363     		str	r3, [r0, #48]
3253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4309              		.loc 1 3253 0
 4310 0010 C38E     		ldrh	r3, [r0, #54]
 4311 0012 013B     		sub	r3, r3, #1
 4312 0014 9BB2     		uxth	r3, r3
 4313 0016 C386     		strh	r3, [r0, #54]
3256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4314              		.loc 1 3256 0
 4315 0018 C38E     		ldrh	r3, [r0, #54]
 4316 001a 9BB2     		uxth	r3, r3
 4317 001c 002B     		cmp	r3, #0
 4318 001e 0AD1     		bne	.L300
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4319              		.loc 1 3270 0
 4320 0020 0268     		ldr	r2, [r0]
 4321 0022 5368     		ldr	r3, [r2, #4]
 4322 0024 8021     		mov	r1, #128
 4323 0026 8B43     		bic	r3, r1
 4324 0028 5360     		str	r3, [r2, #4]
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4325              		.loc 1 3272 0
 4326 002a C38F     		ldrh	r3, [r0, #62]
 4327 002c 9BB2     		uxth	r3, r3
 4328 002e 002B     		cmp	r3, #0
 4329 0030 01D1     		bne	.L300
3274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4330              		.loc 1 3274 0
 4331 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4332              	.LVL337:
 4333              	.L300:
3277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4334              		.loc 1 3277 0
 4335              		@ sp needed
 4336 0036 08BD     		pop	{r3, pc}
 4337              		.cfi_endproc
 4338              	.LFE76:
 4340              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4341              		.align	2
 4342              		.code	16
 4343              		.thumb_func
 4345              	SPI_2linesRxISR_16BIT:
 4346              	.LFB75:
ARM GAS  /tmp/ccu3pZ5o.s 			page 156


3197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4347              		.loc 1 3197 0
 4348              		.cfi_startproc
 4349              	.LVL338:
 4350 0000 08B5     		push	{r3, lr}
 4351              	.LCFI42:
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 3, -8
 4354              		.cfi_offset 14, -4
3199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4355              		.loc 1 3199 0
 4356 0002 0368     		ldr	r3, [r0]
 4357 0004 DB68     		ldr	r3, [r3, #12]
 4358 0006 826B     		ldr	r2, [r0, #56]
 4359 0008 1380     		strh	r3, [r2]
3200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
 4360              		.loc 1 3200 0
 4361 000a 836B     		ldr	r3, [r0, #56]
 4362 000c 0233     		add	r3, r3, #2
 4363 000e 8363     		str	r3, [r0, #56]
3201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4364              		.loc 1 3201 0
 4365 0010 C38F     		ldrh	r3, [r0, #62]
 4366 0012 013B     		sub	r3, r3, #1
 4367 0014 9BB2     		uxth	r3, r3
 4368 0016 C387     		strh	r3, [r0, #62]
3203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4369              		.loc 1 3203 0
 4370 0018 C38F     		ldrh	r3, [r0, #62]
 4371 001a 9BB2     		uxth	r3, r3
 4372 001c 002B     		cmp	r3, #0
 4373 001e 0AD1     		bne	.L302
3214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4374              		.loc 1 3214 0
 4375 0020 0268     		ldr	r2, [r0]
 4376 0022 5368     		ldr	r3, [r2, #4]
 4377 0024 4021     		mov	r1, #64
 4378 0026 8B43     		bic	r3, r1
 4379 0028 5360     		str	r3, [r2, #4]
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4380              		.loc 1 3216 0
 4381 002a C38E     		ldrh	r3, [r0, #54]
 4382 002c 9BB2     		uxth	r3, r3
 4383 002e 002B     		cmp	r3, #0
 4384 0030 01D1     		bne	.L302
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4385              		.loc 1 3218 0
 4386 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4387              	.LVL339:
 4388              	.L302:
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4389              		.loc 1 3221 0
 4390              		@ sp needed
 4391 0036 08BD     		pop	{r3, pc}
 4392              		.cfi_endproc
 4393              	.LFE75:
 4395              		.section	.text.SPI_DMAError,"ax",%progbits
ARM GAS  /tmp/ccu3pZ5o.s 			page 157


 4396              		.align	2
 4397              		.code	16
 4398              		.thumb_func
 4400              	SPI_DMAError:
 4401              	.LFB69:
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4402              		.loc 1 2935 0
 4403              		.cfi_startproc
 4404              	.LVL340:
 4405 0000 08B5     		push	{r3, lr}
 4406              	.LCFI43:
 4407              		.cfi_def_cfa_offset 8
 4408              		.cfi_offset 3, -8
 4409              		.cfi_offset 14, -4
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4410              		.loc 1 2936 0
 4411 0002 806A     		ldr	r0, [r0, #40]
 4412              	.LVL341:
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4413              		.loc 1 2939 0
 4414 0004 0268     		ldr	r2, [r0]
 4415 0006 5368     		ldr	r3, [r2, #4]
 4416 0008 0321     		mov	r1, #3
 4417 000a 8B43     		bic	r3, r1
 4418 000c 5360     		str	r3, [r2, #4]
2941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4419              		.loc 1 2941 0
 4420 000e 426D     		ldr	r2, [r0, #84]
 4421 0010 1023     		mov	r3, #16
 4422 0012 1343     		orr	r3, r2
 4423 0014 4365     		str	r3, [r0, #84]
2942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Call user error callback */
 4424              		.loc 1 2942 0
 4425 0016 0122     		mov	r2, #1
 4426 0018 5123     		mov	r3, #81
 4427 001a C254     		strb	r2, [r0, r3]
2947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4428              		.loc 1 2947 0
 4429 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4430              	.LVL342:
2949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4431              		.loc 1 2949 0
 4432              		@ sp needed
 4433 0020 08BD     		pop	{r3, pc}
 4434              		.cfi_endproc
 4435              	.LFE69:
 4437 0022 C046     		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4438              		.align	2
 4439              		.code	16
 4440              		.thumb_func
 4442              	SPI_DMATransmitCplt:
 4443              	.LFB63:
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4444              		.loc 1 2674 0
 4445              		.cfi_startproc
 4446              	.LVL343:
 4447 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccu3pZ5o.s 			page 158


 4448              	.LCFI44:
 4449              		.cfi_def_cfa_offset 12
 4450              		.cfi_offset 4, -12
 4451              		.cfi_offset 5, -8
 4452              		.cfi_offset 14, -4
 4453 0002 83B0     		sub	sp, sp, #12
 4454              	.LCFI45:
 4455              		.cfi_def_cfa_offset 24
 4456 0004 051C     		mov	r5, r0
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 4457              		.loc 1 2675 0
 4458 0006 846A     		ldr	r4, [r0, #40]
 4459              	.LVL344:
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4460              		.loc 1 2679 0
 4461 0008 FFF7FEFF 		bl	HAL_GetTick
 4462              	.LVL345:
 4463 000c 021C     		mov	r2, r0
 4464              	.LVL346:
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4465              		.loc 1 2682 0
 4466 000e 2B68     		ldr	r3, [r5]
 4467 0010 1B68     		ldr	r3, [r3]
 4468 0012 9B06     		lsl	r3, r3, #26
 4469 0014 29D4     		bmi	.L306
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4470              		.loc 1 2685 0
 4471 0016 2168     		ldr	r1, [r4]
 4472 0018 4B68     		ldr	r3, [r1, #4]
 4473 001a 2020     		mov	r0, #32
 4474              	.LVL347:
 4475 001c 8343     		bic	r3, r0
 4476 001e 4B60     		str	r3, [r1, #4]
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4477              		.loc 1 2688 0
 4478 0020 2168     		ldr	r1, [r4]
 4479 0022 4B68     		ldr	r3, [r1, #4]
 4480 0024 1E38     		sub	r0, r0, #30
 4481 0026 8343     		bic	r3, r0
 4482 0028 4B60     		str	r3, [r1, #4]
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4483              		.loc 1 2691 0
 4484 002a 201C     		mov	r0, r4
 4485 002c 6421     		mov	r1, #100
 4486 002e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4487              	.LVL348:
 4488 0032 0028     		cmp	r0, #0
 4489 0034 03D0     		beq	.L307
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4490              		.loc 1 2693 0
 4491 0036 626D     		ldr	r2, [r4, #84]
 4492 0038 2023     		mov	r3, #32
 4493 003a 1343     		orr	r3, r2
 4494 003c 6365     		str	r3, [r4, #84]
 4495              	.L307:
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4496              		.loc 1 2697 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 159


 4497 003e A368     		ldr	r3, [r4, #8]
 4498 0040 002B     		cmp	r3, #0
 4499 0042 06D1     		bne	.L308
 4500              	.LBB9:
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4501              		.loc 1 2699 0
 4502 0044 0193     		str	r3, [sp, #4]
 4503 0046 2368     		ldr	r3, [r4]
 4504 0048 DA68     		ldr	r2, [r3, #12]
 4505 004a 0192     		str	r2, [sp, #4]
 4506 004c 9B68     		ldr	r3, [r3, #8]
 4507 004e 0193     		str	r3, [sp, #4]
 4508 0050 019B     		ldr	r3, [sp, #4]
 4509              	.L308:
 4510              	.LBE9:
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4511              		.loc 1 2702 0
 4512 0052 0023     		mov	r3, #0
 4513 0054 E386     		strh	r3, [r4, #54]
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4514              		.loc 1 2703 0
 4515 0056 0122     		mov	r2, #1
 4516 0058 5133     		add	r3, r3, #81
 4517 005a E254     		strb	r2, [r4, r3]
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4518              		.loc 1 2705 0
 4519 005c 636D     		ldr	r3, [r4, #84]
 4520 005e 002B     		cmp	r3, #0
 4521 0060 03D0     		beq	.L306
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4522              		.loc 1 2711 0
 4523 0062 201C     		mov	r0, r4
 4524 0064 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4525              	.LVL349:
2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4526              		.loc 1 2713 0
 4527 0068 02E0     		b	.L305
 4528              	.L306:
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4529              		.loc 1 2720 0
 4530 006a 201C     		mov	r0, r4
 4531 006c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4532              	.LVL350:
 4533              	.L305:
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4534              		.loc 1 2722 0
 4535 0070 03B0     		add	sp, sp, #12
 4536              		@ sp needed
 4537              	.LVL351:
 4538              	.LVL352:
 4539 0072 30BD     		pop	{r4, r5, pc}
 4540              		.cfi_endproc
 4541              	.LFE63:
 4543              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4544              		.align	2
 4545              		.code	16
 4546              		.thumb_func
ARM GAS  /tmp/ccu3pZ5o.s 			page 160


 4548              	SPI_DMAReceiveCplt:
 4549              	.LFB64:
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4550              		.loc 1 2731 0
 4551              		.cfi_startproc
 4552              	.LVL353:
 4553 0000 38B5     		push	{r3, r4, r5, lr}
 4554              	.LCFI46:
 4555              		.cfi_def_cfa_offset 16
 4556              		.cfi_offset 3, -16
 4557              		.cfi_offset 4, -12
 4558              		.cfi_offset 5, -8
 4559              		.cfi_offset 14, -4
 4560 0002 051C     		mov	r5, r0
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
 4561              		.loc 1 2732 0
 4562 0004 846A     		ldr	r4, [r0, #40]
 4563              	.LVL354:
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4564              		.loc 1 2736 0
 4565 0006 FFF7FEFF 		bl	HAL_GetTick
 4566              	.LVL355:
 4567 000a 021C     		mov	r2, r0
 4568              	.LVL356:
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4569              		.loc 1 2739 0
 4570 000c 2B68     		ldr	r3, [r5]
 4571 000e 1B68     		ldr	r3, [r3]
 4572 0010 9B06     		lsl	r3, r3, #26
 4573 0012 1DD4     		bmi	.L311
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4574              		.loc 1 2742 0
 4575 0014 2168     		ldr	r1, [r4]
 4576 0016 4B68     		ldr	r3, [r1, #4]
 4577 0018 2020     		mov	r0, #32
 4578              	.LVL357:
 4579 001a 8343     		bic	r3, r0
 4580 001c 4B60     		str	r3, [r1, #4]
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4581              		.loc 1 2760 0
 4582 001e 2168     		ldr	r1, [r4]
 4583 0020 4B68     		ldr	r3, [r1, #4]
 4584 0022 1D38     		sub	r0, r0, #29
 4585 0024 8343     		bic	r3, r0
 4586 0026 4B60     		str	r3, [r1, #4]
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4587              		.loc 1 2763 0
 4588 0028 201C     		mov	r0, r4
 4589 002a 6421     		mov	r1, #100
 4590 002c FFF7FEFF 		bl	SPI_EndRxTransaction
 4591              	.LVL358:
 4592 0030 0028     		cmp	r0, #0
 4593 0032 01D0     		beq	.L312
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4594              		.loc 1 2765 0
 4595 0034 2023     		mov	r3, #32
 4596 0036 6365     		str	r3, [r4, #84]
ARM GAS  /tmp/ccu3pZ5o.s 			page 161


 4597              	.L312:
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4598              		.loc 1 2768 0
 4599 0038 0023     		mov	r3, #0
 4600 003a E387     		strh	r3, [r4, #62]
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4601              		.loc 1 2769 0
 4602 003c 0122     		mov	r2, #1
 4603 003e 5133     		add	r3, r3, #81
 4604 0040 E254     		strb	r2, [r4, r3]
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4605              		.loc 1 2780 0
 4606 0042 636D     		ldr	r3, [r4, #84]
 4607 0044 002B     		cmp	r3, #0
 4608 0046 03D0     		beq	.L311
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4609              		.loc 1 2786 0
 4610 0048 201C     		mov	r0, r4
 4611 004a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4612              	.LVL359:
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4613              		.loc 1 2788 0
 4614 004e 02E0     		b	.L310
 4615              	.L311:
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4616              		.loc 1 2795 0
 4617 0050 201C     		mov	r0, r4
 4618 0052 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4619              	.LVL360:
 4620              	.L310:
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4621              		.loc 1 2797 0
 4622              		@ sp needed
 4623              	.LVL361:
 4624              	.LVL362:
 4625 0056 38BD     		pop	{r3, r4, r5, pc}
 4626              		.cfi_endproc
 4627              	.LFE64:
 4629              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4630              		.align	2
 4631              		.code	16
 4632              		.thumb_func
 4634              	SPI_DMATransmitReceiveCplt:
 4635              	.LFB65:
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4636              		.loc 1 2806 0
 4637              		.cfi_startproc
 4638              	.LVL363:
 4639 0000 38B5     		push	{r3, r4, r5, lr}
 4640              	.LCFI47:
 4641              		.cfi_def_cfa_offset 16
 4642              		.cfi_offset 3, -16
 4643              		.cfi_offset 4, -12
 4644              		.cfi_offset 5, -8
 4645              		.cfi_offset 14, -4
 4646 0002 051C     		mov	r5, r0
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccu3pZ5o.s 			page 162


 4647              		.loc 1 2807 0
 4648 0004 846A     		ldr	r4, [r0, #40]
 4649              	.LVL364:
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4650              		.loc 1 2811 0
 4651 0006 FFF7FEFF 		bl	HAL_GetTick
 4652              	.LVL365:
 4653 000a 021C     		mov	r2, r0
 4654              	.LVL366:
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4655              		.loc 1 2814 0
 4656 000c 2B68     		ldr	r3, [r5]
 4657 000e 1B68     		ldr	r3, [r3]
 4658 0010 9B06     		lsl	r3, r3, #26
 4659 0012 20D4     		bmi	.L315
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4660              		.loc 1 2817 0
 4661 0014 2168     		ldr	r1, [r4]
 4662 0016 4B68     		ldr	r3, [r1, #4]
 4663 0018 2020     		mov	r0, #32
 4664              	.LVL367:
 4665 001a 8343     		bic	r3, r0
 4666 001c 4B60     		str	r3, [r1, #4]
2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4667              		.loc 1 2834 0
 4668 001e 201C     		mov	r0, r4
 4669 0020 6421     		mov	r1, #100
 4670 0022 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4671              	.LVL368:
 4672 0026 0028     		cmp	r0, #0
 4673 0028 03D0     		beq	.L316
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4674              		.loc 1 2836 0
 4675 002a 626D     		ldr	r2, [r4, #84]
 4676 002c 2023     		mov	r3, #32
 4677 002e 1343     		orr	r3, r2
 4678 0030 6365     		str	r3, [r4, #84]
 4679              	.L316:
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4680              		.loc 1 2840 0
 4681 0032 2268     		ldr	r2, [r4]
 4682 0034 5368     		ldr	r3, [r2, #4]
 4683 0036 0321     		mov	r1, #3
 4684 0038 8B43     		bic	r3, r1
 4685 003a 5360     		str	r3, [r2, #4]
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4686              		.loc 1 2842 0
 4687 003c 0023     		mov	r3, #0
 4688 003e E386     		strh	r3, [r4, #54]
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4689              		.loc 1 2843 0
 4690 0040 E387     		strh	r3, [r4, #62]
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4691              		.loc 1 2844 0
 4692 0042 0122     		mov	r2, #1
 4693 0044 5133     		add	r3, r3, #81
 4694 0046 E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/ccu3pZ5o.s 			page 163


2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4695              		.loc 1 2855 0
 4696 0048 636D     		ldr	r3, [r4, #84]
 4697 004a 002B     		cmp	r3, #0
 4698 004c 03D0     		beq	.L315
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4699              		.loc 1 2861 0
 4700 004e 201C     		mov	r0, r4
 4701 0050 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4702              	.LVL369:
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4703              		.loc 1 2863 0
 4704 0054 02E0     		b	.L314
 4705              	.L315:
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4706              		.loc 1 2870 0
 4707 0056 201C     		mov	r0, r4
 4708 0058 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4709              	.LVL370:
 4710              	.L314:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4711              		.loc 1 2872 0
 4712              		@ sp needed
 4713              	.LVL371:
 4714              	.LVL372:
 4715 005c 38BD     		pop	{r3, r4, r5, pc}
 4716              		.cfi_endproc
 4717              	.LFE65:
 4719 005e C046     		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4720              		.align	2
 4721              		.global	HAL_SPI_IRQHandler
 4722              		.code	16
 4723              		.thumb_func
 4725              	HAL_SPI_IRQHandler:
 4726              	.LFB52:
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4727              		.loc 1 2382 0
 4728              		.cfi_startproc
 4729              	.LVL373:
 4730 0000 30B5     		push	{r4, r5, lr}
 4731              	.LCFI48:
 4732              		.cfi_def_cfa_offset 12
 4733              		.cfi_offset 4, -12
 4734              		.cfi_offset 5, -8
 4735              		.cfi_offset 14, -4
 4736 0002 85B0     		sub	sp, sp, #20
 4737              	.LCFI49:
 4738              		.cfi_def_cfa_offset 32
 4739 0004 041C     		mov	r4, r0
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4740              		.loc 1 2383 0
 4741 0006 0168     		ldr	r1, [r0]
 4742 0008 4868     		ldr	r0, [r1, #4]
 4743              	.LVL374:
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4744              		.loc 1 2384 0
 4745 000a 8B68     		ldr	r3, [r1, #8]
ARM GAS  /tmp/ccu3pZ5o.s 			page 164


 4746              	.LVL375:
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4747              		.loc 1 2387 0
 4748 000c 4122     		mov	r2, #65
 4749 000e 1A40     		and	r2, r3
 4750 0010 012A     		cmp	r2, #1
 4751 0012 05D1     		bne	.L319
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4752              		.loc 1 2388 0
 4753 0014 4206     		lsl	r2, r0, #25
 4754 0016 03D5     		bpl	.L319
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
 4755              		.loc 1 2390 0
 4756 0018 236C     		ldr	r3, [r4, #64]
 4757              	.LVL376:
 4758 001a 201C     		mov	r0, r4
 4759              	.LVL377:
 4760 001c 9847     		blx	r3
 4761              	.LVL378:
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4762              		.loc 1 2391 0
 4763 001e 74E0     		b	.L318
 4764              	.LVL379:
 4765              	.L319:
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4766              		.loc 1 2395 0
 4767 0020 9A07     		lsl	r2, r3, #30
 4768 0022 05D5     		bpl	.L321
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4769              		.loc 1 2395 0 is_stmt 0 discriminator 1
 4770 0024 0206     		lsl	r2, r0, #24
 4771 0026 03D5     		bpl	.L321
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
 4772              		.loc 1 2397 0 is_stmt 1
 4773 0028 636C     		ldr	r3, [r4, #68]
 4774              	.LVL380:
 4775 002a 201C     		mov	r0, r4
 4776              	.LVL381:
 4777 002c 9847     		blx	r3
 4778              	.LVL382:
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 4779              		.loc 1 2398 0
 4780 002e 6CE0     		b	.L318
 4781              	.LVL383:
 4782              	.L321:
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4783              		.loc 1 2402 0
 4784 0030 B022     		mov	r2, #176
 4785 0032 5200     		lsl	r2, r2, #1
 4786 0034 1342     		tst	r3, r2
 4787 0036 68D0     		beq	.L318
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 4788              		.loc 1 2402 0 is_stmt 0 discriminator 1
 4789 0038 8206     		lsl	r2, r0, #26
 4790 003a 66D5     		bpl	.L318
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4791              		.loc 1 2405 0 is_stmt 1
ARM GAS  /tmp/ccu3pZ5o.s 			page 165


 4792 003c 5A06     		lsl	r2, r3, #25
 4793 003e 17D5     		bpl	.L322
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 4794              		.loc 1 2407 0
 4795 0040 5122     		mov	r2, #81
 4796 0042 A25C     		ldrb	r2, [r4, r2]
 4797 0044 032A     		cmp	r2, #3
 4798 0046 0BD0     		beq	.L323
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4799              		.loc 1 2409 0
 4800 0048 656D     		ldr	r5, [r4, #84]
 4801 004a 0422     		mov	r2, #4
 4802 004c 2A43     		orr	r2, r5
 4803 004e 6265     		str	r2, [r4, #84]
 4804              	.LBB10:
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 4805              		.loc 1 2410 0
 4806 0050 0022     		mov	r2, #0
 4807 0052 0092     		str	r2, [sp]
 4808 0054 CA68     		ldr	r2, [r1, #12]
 4809 0056 0092     		str	r2, [sp]
 4810 0058 8A68     		ldr	r2, [r1, #8]
 4811 005a 0092     		str	r2, [sp]
 4812 005c 009A     		ldr	r2, [sp]
 4813              	.LBE10:
 4814 005e 07E0     		b	.L322
 4815              	.L323:
 4816              	.LBB11:
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return;
 4817              		.loc 1 2414 0
 4818 0060 0023     		mov	r3, #0
 4819              	.LVL384:
 4820 0062 0193     		str	r3, [sp, #4]
 4821 0064 CB68     		ldr	r3, [r1, #12]
 4822 0066 0193     		str	r3, [sp, #4]
 4823 0068 8B68     		ldr	r3, [r1, #8]
 4824 006a 0193     		str	r3, [sp, #4]
 4825 006c 019B     		ldr	r3, [sp, #4]
 4826              	.LBE11:
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 4827              		.loc 1 2415 0
 4828 006e 4CE0     		b	.L318
 4829              	.LVL385:
 4830              	.L322:
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4831              		.loc 1 2420 0
 4832 0070 9A06     		lsl	r2, r3, #26
 4833 0072 0CD5     		bpl	.L324
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4834              		.loc 1 2422 0
 4835 0074 656D     		ldr	r5, [r4, #84]
 4836 0076 0122     		mov	r2, #1
 4837 0078 2A43     		orr	r2, r5
 4838 007a 6265     		str	r2, [r4, #84]
 4839              	.LBB12:
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4840              		.loc 1 2423 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 166


 4841 007c 0022     		mov	r2, #0
 4842 007e 0292     		str	r2, [sp, #8]
 4843 0080 8A68     		ldr	r2, [r1, #8]
 4844 0082 0292     		str	r2, [sp, #8]
 4845 0084 0A68     		ldr	r2, [r1]
 4846 0086 4025     		mov	r5, #64
 4847 0088 AA43     		bic	r2, r5
 4848 008a 0A60     		str	r2, [r1]
 4849 008c 029A     		ldr	r2, [sp, #8]
 4850              	.L324:
 4851              	.LBE12:
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4852              		.loc 1 2427 0
 4853 008e DB05     		lsl	r3, r3, #23
 4854 0090 09D5     		bpl	.L325
 4855              	.LVL386:
2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 4856              		.loc 1 2429 0
 4857 0092 626D     		ldr	r2, [r4, #84]
 4858 0094 0823     		mov	r3, #8
 4859 0096 1343     		orr	r3, r2
 4860 0098 6365     		str	r3, [r4, #84]
 4861              	.LBB13:
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 4862              		.loc 1 2430 0
 4863 009a 0023     		mov	r3, #0
 4864 009c 0393     		str	r3, [sp, #12]
 4865 009e 2368     		ldr	r3, [r4]
 4866 00a0 9B68     		ldr	r3, [r3, #8]
 4867 00a2 0393     		str	r3, [sp, #12]
 4868 00a4 039B     		ldr	r3, [sp, #12]
 4869              	.L325:
 4870              	.LBE13:
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 4871              		.loc 1 2433 0
 4872 00a6 636D     		ldr	r3, [r4, #84]
 4873 00a8 002B     		cmp	r3, #0
 4874 00aa 2ED0     		beq	.L318
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4875              		.loc 1 2436 0
 4876 00ac 2268     		ldr	r2, [r4]
 4877 00ae 5368     		ldr	r3, [r2, #4]
 4878 00b0 E021     		mov	r1, #224
 4879 00b2 8B43     		bic	r3, r1
 4880 00b4 5360     		str	r3, [r2, #4]
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4881              		.loc 1 2438 0
 4882 00b6 0122     		mov	r2, #1
 4883 00b8 5123     		mov	r3, #81
 4884 00ba E254     		strb	r2, [r4, r3]
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 4885              		.loc 1 2440 0
 4886 00bc 8307     		lsl	r3, r0, #30
 4887 00be 21D0     		beq	.L326
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4888              		.loc 1 2442 0
 4889 00c0 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccu3pZ5o.s 			page 167


 4890 00c2 5368     		ldr	r3, [r2, #4]
 4891 00c4 DD39     		sub	r1, r1, #221
 4892 00c6 8B43     		bic	r3, r1
 4893 00c8 5360     		str	r3, [r2, #4]
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 4894              		.loc 1 2445 0
 4895 00ca E36C     		ldr	r3, [r4, #76]
 4896 00cc 002B     		cmp	r3, #0
 4897 00ce 0AD0     		beq	.L327
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4898              		.loc 1 2449 0
 4899 00d0 0F4A     		ldr	r2, .L328
 4900 00d2 9A63     		str	r2, [r3, #56]
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 4901              		.loc 1 2450 0
 4902 00d4 E06C     		ldr	r0, [r4, #76]
 4903              	.LVL387:
 4904 00d6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4905              	.LVL388:
 4906 00da 0028     		cmp	r0, #0
 4907 00dc 03D0     		beq	.L327
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 4908              		.loc 1 2452 0
 4909 00de 626D     		ldr	r2, [r4, #84]
 4910 00e0 4023     		mov	r3, #64
 4911 00e2 1343     		orr	r3, r2
 4912 00e4 6365     		str	r3, [r4, #84]
 4913              	.L327:
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 4914              		.loc 1 2456 0
 4915 00e6 A36C     		ldr	r3, [r4, #72]
 4916 00e8 002B     		cmp	r3, #0
 4917 00ea 0ED0     		beq	.L318
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4918              		.loc 1 2460 0
 4919 00ec 084A     		ldr	r2, .L328
 4920 00ee 9A63     		str	r2, [r3, #56]
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 4921              		.loc 1 2461 0
 4922 00f0 A06C     		ldr	r0, [r4, #72]
 4923 00f2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4924              	.LVL389:
 4925 00f6 0028     		cmp	r0, #0
 4926 00f8 07D0     		beq	.L318
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 4927              		.loc 1 2463 0
 4928 00fa 626D     		ldr	r2, [r4, #84]
 4929 00fc 4023     		mov	r3, #64
 4930 00fe 1343     		orr	r3, r2
 4931 0100 6365     		str	r3, [r4, #84]
 4932 0102 02E0     		b	.L318
 4933              	.LVL390:
 4934              	.L326:
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4935              		.loc 1 2473 0
 4936 0104 201C     		mov	r0, r4
 4937              	.LVL391:
ARM GAS  /tmp/ccu3pZ5o.s 			page 168


 4938 0106 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4939              	.LVL392:
 4940              	.L318:
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4941              		.loc 1 2479 0
 4942 010a 05B0     		add	sp, sp, #20
 4943              		@ sp needed
 4944              	.LVL393:
 4945 010c 30BD     		pop	{r4, r5, pc}
 4946              	.L329:
 4947 010e C046     		.align	2
 4948              	.L328:
 4949 0110 00000000 		.word	SPI_DMAAbortOnError
 4950              		.cfi_endproc
 4951              	.LFE52:
 4953              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4954              		.align	2
 4955              		.code	16
 4956              		.thumb_func
 4958              	SPI_DMAAbortOnError:
 4959              	.LFB70:
2958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4960              		.loc 1 2958 0
 4961              		.cfi_startproc
 4962              	.LVL394:
 4963 0000 08B5     		push	{r3, lr}
 4964              	.LCFI50:
 4965              		.cfi_def_cfa_offset 8
 4966              		.cfi_offset 3, -8
 4967              		.cfi_offset 14, -4
2959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4968              		.loc 1 2959 0
 4969 0002 806A     		ldr	r0, [r0, #40]
 4970              	.LVL395:
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4971              		.loc 1 2960 0
 4972 0004 0023     		mov	r3, #0
 4973 0006 C387     		strh	r3, [r0, #62]
2961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4974              		.loc 1 2961 0
 4975 0008 C386     		strh	r3, [r0, #54]
2967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4976              		.loc 1 2967 0
 4977 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4978              	.LVL396:
2969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4979              		.loc 1 2969 0
 4980              		@ sp needed
 4981 000e 08BD     		pop	{r3, pc}
 4982              		.cfi_endproc
 4983              	.LFE70:
 4985              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4986              		.align	2
 4987              		.weak	HAL_SPI_AbortCpltCallback
 4988              		.code	16
 4989              		.thumb_func
 4991              	HAL_SPI_AbortCpltCallback:
ARM GAS  /tmp/ccu3pZ5o.s 			page 169


 4992              	.LFB60:
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4993              		.loc 1 2602 0
 4994              		.cfi_startproc
 4995              	.LVL397:
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 4996              		.loc 1 2609 0
 4997              		@ sp needed
 4998 0000 7047     		bx	lr
 4999              		.cfi_endproc
 5000              	.LFE60:
 5002 0002 C046     		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5003              		.align	2
 5004              		.global	HAL_SPI_Abort_IT
 5005              		.code	16
 5006              		.thumb_func
 5008              	HAL_SPI_Abort_IT:
 5009              	.LFB48:
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5010              		.loc 1 2140 0
 5011              		.cfi_startproc
 5012              	.LVL398:
 5013 0000 30B5     		push	{r4, r5, lr}
 5014              	.LCFI51:
 5015              		.cfi_def_cfa_offset 12
 5016              		.cfi_offset 4, -12
 5017              		.cfi_offset 5, -8
 5018              		.cfi_offset 14, -4
 5019 0002 85B0     		sub	sp, sp, #20
 5020              	.LCFI52:
 5021              		.cfi_def_cfa_offset 32
 5022 0004 041C     		mov	r4, r0
 5023              	.LVL399:
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = resetcount;
 5024              		.loc 1 2148 0
 5025 0006 504B     		ldr	r3, .L355
 5026 0008 1868     		ldr	r0, [r3]
 5027              	.LVL400:
 5028 000a 5049     		ldr	r1, .L355+4
 5029 000c FFF7FEFF 		bl	__aeabi_uidiv
 5030              	.LVL401:
 5031 0010 6423     		mov	r3, #100
 5032 0012 5843     		mul	r0, r3
 5033 0014 0290     		str	r0, [sp, #8]
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5034              		.loc 1 2149 0
 5035 0016 029B     		ldr	r3, [sp, #8]
 5036 0018 0393     		str	r3, [sp, #12]
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5037              		.loc 1 2152 0
 5038 001a 2268     		ldr	r2, [r4]
 5039 001c 5368     		ldr	r3, [r2, #4]
 5040 001e 2021     		mov	r1, #32
 5041 0020 8B43     		bic	r3, r1
 5042 0022 5360     		str	r3, [r2, #4]
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5043              		.loc 1 2155 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 170


 5044 0024 2268     		ldr	r2, [r4]
 5045 0026 5368     		ldr	r3, [r2, #4]
 5046 0028 1B06     		lsl	r3, r3, #24
 5047 002a 12D5     		bpl	.L333
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5048              		.loc 1 2157 0
 5049 002c 484B     		ldr	r3, .L355+8
 5050 002e 6364     		str	r3, [r4, #68]
 5051              	.L336:
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 5052              		.loc 1 2161 0
 5053 0030 039B     		ldr	r3, [sp, #12]
 5054 0032 002B     		cmp	r3, #0
 5055 0034 04D1     		bne	.L334
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
 5056              		.loc 1 2163 0
 5057 0036 616D     		ldr	r1, [r4, #84]
 5058 0038 4033     		add	r3, r3, #64
 5059 003a 0B43     		orr	r3, r1
 5060 003c 6365     		str	r3, [r4, #84]
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5061              		.loc 1 2164 0
 5062 003e 06E0     		b	.L335
 5063              	.L334:
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5064              		.loc 1 2166 0
 5065 0040 039B     		ldr	r3, [sp, #12]
 5066 0042 013B     		sub	r3, r3, #1
 5067 0044 0393     		str	r3, [sp, #12]
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
 5068              		.loc 1 2168 0
 5069 0046 5123     		mov	r3, #81
 5070 0048 E35C     		ldrb	r3, [r4, r3]
 5071 004a 072B     		cmp	r3, #7
 5072 004c F0D1     		bne	.L336
 5073              	.L335:
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 5074              		.loc 1 2170 0
 5075 004e 029B     		ldr	r3, [sp, #8]
 5076 0050 0393     		str	r3, [sp, #12]
 5077              	.L333:
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5078              		.loc 1 2173 0
 5079 0052 5368     		ldr	r3, [r2, #4]
 5080 0054 5B06     		lsl	r3, r3, #25
 5081 0056 12D5     		bpl	.L337
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5082              		.loc 1 2175 0
 5083 0058 3E4B     		ldr	r3, .L355+12
 5084 005a 2364     		str	r3, [r4, #64]
 5085              	.L340:
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 5086              		.loc 1 2179 0
 5087 005c 039B     		ldr	r3, [sp, #12]
 5088 005e 002B     		cmp	r3, #0
 5089 0060 04D1     		bne	.L338
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccu3pZ5o.s 			page 171


 5090              		.loc 1 2181 0
 5091 0062 616D     		ldr	r1, [r4, #84]
 5092 0064 4033     		add	r3, r3, #64
 5093 0066 0B43     		orr	r3, r1
 5094 0068 6365     		str	r3, [r4, #84]
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5095              		.loc 1 2182 0
 5096 006a 06E0     		b	.L339
 5097              	.L338:
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5098              		.loc 1 2184 0
 5099 006c 039B     		ldr	r3, [sp, #12]
 5100 006e 013B     		sub	r3, r3, #1
 5101 0070 0393     		str	r3, [sp, #12]
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset Timeout Counter */
 5102              		.loc 1 2186 0
 5103 0072 5123     		mov	r3, #81
 5104 0074 E35C     		ldrb	r3, [r4, r3]
 5105 0076 072B     		cmp	r3, #7
 5106 0078 F0D1     		bne	.L340
 5107              	.L339:
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 5108              		.loc 1 2188 0
 5109 007a 029B     		ldr	r3, [sp, #8]
 5110 007c 0393     		str	r3, [sp, #12]
 5111              	.L337:
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5112              		.loc 1 2194 0
 5113 007e A36C     		ldr	r3, [r4, #72]
 5114 0080 002B     		cmp	r3, #0
 5115 0082 07D0     		beq	.L341
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5116              		.loc 1 2198 0
 5117 0084 5268     		ldr	r2, [r2, #4]
 5118 0086 9207     		lsl	r2, r2, #30
 5119 0088 02D5     		bpl	.L342
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5120              		.loc 1 2200 0
 5121 008a 334A     		ldr	r2, .L355+16
 5122 008c 9A63     		str	r2, [r3, #56]
 5123 008e 01E0     		b	.L341
 5124              	.L342:
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5125              		.loc 1 2204 0
 5126 0090 0022     		mov	r2, #0
 5127 0092 9A63     		str	r2, [r3, #56]
 5128              	.L341:
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5129              		.loc 1 2208 0
 5130 0094 E36C     		ldr	r3, [r4, #76]
 5131 0096 002B     		cmp	r3, #0
 5132 0098 08D0     		beq	.L343
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5133              		.loc 1 2212 0
 5134 009a 2268     		ldr	r2, [r4]
 5135 009c 5268     		ldr	r2, [r2, #4]
 5136 009e D207     		lsl	r2, r2, #31
ARM GAS  /tmp/ccu3pZ5o.s 			page 172


 5137 00a0 02D5     		bpl	.L344
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5138              		.loc 1 2214 0
 5139 00a2 2E4A     		ldr	r2, .L355+20
 5140 00a4 9A63     		str	r2, [r3, #56]
 5141 00a6 01E0     		b	.L343
 5142              	.L344:
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5143              		.loc 1 2218 0
 5144 00a8 0022     		mov	r2, #0
 5145 00aa 9A63     		str	r2, [r3, #56]
 5146              	.L343:
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5147              		.loc 1 2223 0
 5148 00ac 2368     		ldr	r3, [r4]
 5149 00ae 5B68     		ldr	r3, [r3, #4]
 5150 00b0 9B07     		lsl	r3, r3, #30
 5151 00b2 0DD5     		bpl	.L349
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5152              		.loc 1 2226 0
 5153 00b4 A06C     		ldr	r0, [r4, #72]
 5154 00b6 0028     		cmp	r0, #0
 5155 00b8 0CD0     		beq	.L350
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 5156              		.loc 1 2229 0
 5157 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5158              	.LVL402:
 5159 00be 0028     		cmp	r0, #0
 5160 00c0 0AD0     		beq	.L351
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5161              		.loc 1 2231 0
 5162 00c2 A36C     		ldr	r3, [r4, #72]
 5163 00c4 0022     		mov	r2, #0
 5164 00c6 9A63     		str	r2, [r3, #56]
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5165              		.loc 1 2232 0
 5166 00c8 4023     		mov	r3, #64
 5167 00ca 6365     		str	r3, [r4, #84]
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5168              		.loc 1 2147 0
 5169 00cc 0125     		mov	r5, #1
 5170 00ce 04E0     		b	.L345
 5171              	.L349:
 5172 00d0 0125     		mov	r5, #1
 5173 00d2 02E0     		b	.L345
 5174              	.L350:
 5175 00d4 0125     		mov	r5, #1
 5176 00d6 00E0     		b	.L345
 5177              	.L351:
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5178              		.loc 1 2236 0
 5179 00d8 0025     		mov	r5, #0
 5180              	.L345:
 5181              	.LVL403:
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5182              		.loc 1 2241 0
 5183 00da 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccu3pZ5o.s 			page 173


 5184 00dc 5B68     		ldr	r3, [r3, #4]
 5185 00de DB07     		lsl	r3, r3, #31
 5186 00e0 0DD5     		bpl	.L346
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5187              		.loc 1 2244 0
 5188 00e2 E06C     		ldr	r0, [r4, #76]
 5189 00e4 0028     		cmp	r0, #0
 5190 00e6 0AD0     		beq	.L346
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 5191              		.loc 1 2247 0
 5192 00e8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5193              	.LVL404:
 5194 00ec 0028     		cmp	r0, #0
 5195 00ee 05D0     		beq	.L352
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5196              		.loc 1 2249 0
 5197 00f0 E36C     		ldr	r3, [r4, #76]
 5198 00f2 0022     		mov	r2, #0
 5199 00f4 9A63     		str	r2, [r3, #56]
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5200              		.loc 1 2250 0
 5201 00f6 4023     		mov	r3, #64
 5202 00f8 6365     		str	r3, [r4, #84]
 5203 00fa 00E0     		b	.L346
 5204              	.L352:
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 5205              		.loc 1 2254 0
 5206 00fc 0025     		mov	r5, #0
 5207              	.LVL405:
 5208              	.L346:
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5209              		.loc 1 2259 0
 5210 00fe 012D     		cmp	r5, #1
 5211 0100 1DD1     		bne	.L353
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5212              		.loc 1 2262 0
 5213 0102 0023     		mov	r3, #0
 5214 0104 E387     		strh	r3, [r4, #62]
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5215              		.loc 1 2263 0
 5216 0106 E386     		strh	r3, [r4, #54]
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5217              		.loc 1 2266 0
 5218 0108 636D     		ldr	r3, [r4, #84]
 5219 010a 402B     		cmp	r3, #64
 5220 010c 03D0     		beq	.L354
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5221              		.loc 1 2274 0
 5222 010e 0023     		mov	r3, #0
 5223 0110 6365     		str	r3, [r4, #84]
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   abortcplt = 1U;
 5224              		.loc 1 2146 0
 5225 0112 0025     		mov	r5, #0
 5226              	.LVL406:
 5227 0114 00E0     		b	.L348
 5228              	.LVL407:
 5229              	.L354:
ARM GAS  /tmp/ccu3pZ5o.s 			page 174


2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5230              		.loc 1 2269 0
 5231 0116 0125     		mov	r5, #1
 5232              	.LVL408:
 5233              	.L348:
 5234              	.LBB14:
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 5235              		.loc 1 2278 0
 5236 0118 0022     		mov	r2, #0
 5237 011a 0092     		str	r2, [sp]
 5238 011c 2368     		ldr	r3, [r4]
 5239 011e D968     		ldr	r1, [r3, #12]
 5240 0120 0091     		str	r1, [sp]
 5241 0122 9968     		ldr	r1, [r3, #8]
 5242 0124 0091     		str	r1, [sp]
 5243 0126 0099     		ldr	r1, [sp]
 5244              	.LBE14:
 5245              	.LBB15:
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5246              		.loc 1 2279 0
 5247 0128 0192     		str	r2, [sp, #4]
 5248 012a 9B68     		ldr	r3, [r3, #8]
 5249 012c 0193     		str	r3, [sp, #4]
 5250 012e 019B     		ldr	r3, [sp, #4]
 5251              	.LBE15:
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5252              		.loc 1 2282 0
 5253 0130 0132     		add	r2, r2, #1
 5254 0132 5123     		mov	r3, #81
 5255 0134 E254     		strb	r2, [r4, r3]
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5256              		.loc 1 2288 0
 5257 0136 201C     		mov	r0, r4
 5258 0138 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5259              	.LVL409:
 5260 013c 00E0     		b	.L347
 5261              	.LVL410:
 5262              	.L353:
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   abortcplt = 1U;
 5263              		.loc 1 2146 0
 5264 013e 0025     		mov	r5, #0
 5265              	.LVL411:
 5266              	.L347:
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5267              		.loc 1 2293 0
 5268 0140 281C     		mov	r0, r5
 5269 0142 05B0     		add	sp, sp, #20
 5270              		@ sp needed
 5271              	.LVL412:
 5272              	.LVL413:
 5273 0144 30BD     		pop	{r4, r5, pc}
 5274              	.L356:
 5275 0146 C046     		.align	2
 5276              	.L355:
 5277 0148 00000000 		.word	SystemCoreClock
 5278 014c C05D0000 		.word	24000
 5279 0150 00000000 		.word	SPI_AbortTx_ISR
ARM GAS  /tmp/ccu3pZ5o.s 			page 175


 5280 0154 00000000 		.word	SPI_AbortRx_ISR
 5281 0158 00000000 		.word	SPI_DMATxAbortCallback
 5282 015c 00000000 		.word	SPI_DMARxAbortCallback
 5283              		.cfi_endproc
 5284              	.LFE48:
 5286              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5287              		.align	2
 5288              		.code	16
 5289              		.thumb_func
 5291              	SPI_DMARxAbortCallback:
 5292              	.LFB72:
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5293              		.loc 1 3046 0
 5294              		.cfi_startproc
 5295              	.LVL414:
 5296 0000 10B5     		push	{r4, lr}
 5297              	.LCFI53:
 5298              		.cfi_def_cfa_offset 8
 5299              		.cfi_offset 4, -8
 5300              		.cfi_offset 14, -4
 5301 0002 82B0     		sub	sp, sp, #8
 5302              	.LCFI54:
 5303              		.cfi_def_cfa_offset 16
3047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5304              		.loc 1 3047 0
 5305 0004 846A     		ldr	r4, [r0, #40]
 5306              	.LVL415:
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5307              		.loc 1 3050 0
 5308 0006 2268     		ldr	r2, [r4]
 5309 0008 1368     		ldr	r3, [r2]
 5310 000a 4021     		mov	r1, #64
 5311 000c 8B43     		bic	r3, r1
 5312 000e 1360     		str	r3, [r2]
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5313              		.loc 1 3052 0
 5314 0010 E36C     		ldr	r3, [r4, #76]
 5315 0012 0022     		mov	r2, #0
 5316 0014 9A63     		str	r2, [r3, #56]
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5317              		.loc 1 3055 0
 5318 0016 2268     		ldr	r2, [r4]
 5319 0018 5368     		ldr	r3, [r2, #4]
 5320 001a 3F39     		sub	r1, r1, #63
 5321 001c 8B43     		bic	r3, r1
 5322 001e 5360     		str	r3, [r2, #4]
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5323              		.loc 1 3058 0
 5324 0020 FFF7FEFF 		bl	HAL_GetTick
 5325              	.LVL416:
 5326 0024 021C     		mov	r2, r0
 5327 0026 201C     		mov	r0, r4
 5328 0028 6421     		mov	r1, #100
 5329 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5330              	.LVL417:
 5331 002e 0028     		cmp	r0, #0
 5332 0030 03D0     		beq	.L358
ARM GAS  /tmp/ccu3pZ5o.s 			page 176


3060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 5333              		.loc 1 3060 0
 5334 0032 626D     		ldr	r2, [r4, #84]
 5335 0034 4023     		mov	r3, #64
 5336 0036 1343     		orr	r3, r2
 5337 0038 6365     		str	r3, [r4, #84]
 5338              	.L358:
3064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5339              		.loc 1 3064 0
 5340 003a A36C     		ldr	r3, [r4, #72]
 5341 003c 002B     		cmp	r3, #0
 5342 003e 02D0     		beq	.L359
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5343              		.loc 1 3066 0
 5344 0040 9B6B     		ldr	r3, [r3, #56]
 5345 0042 002B     		cmp	r3, #0
 5346 0044 19D1     		bne	.L357
 5347              	.L359:
3073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5348              		.loc 1 3073 0
 5349 0046 0023     		mov	r3, #0
 5350 0048 E387     		strh	r3, [r4, #62]
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5351              		.loc 1 3074 0
 5352 004a E386     		strh	r3, [r4, #54]
3077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5353              		.loc 1 3077 0
 5354 004c 636D     		ldr	r3, [r4, #84]
 5355 004e 402B     		cmp	r3, #64
 5356 0050 01D0     		beq	.L361
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 5357              		.loc 1 3080 0
 5358 0052 0023     		mov	r3, #0
 5359 0054 6365     		str	r3, [r4, #84]
 5360              	.L361:
 5361              	.LBB16:
3084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5362              		.loc 1 3084 0
 5363 0056 0022     		mov	r2, #0
 5364 0058 0092     		str	r2, [sp]
 5365 005a 2368     		ldr	r3, [r4]
 5366 005c D968     		ldr	r1, [r3, #12]
 5367 005e 0091     		str	r1, [sp]
 5368 0060 9968     		ldr	r1, [r3, #8]
 5369 0062 0091     		str	r1, [sp]
 5370 0064 0099     		ldr	r1, [sp]
 5371              	.LBE16:
 5372              	.LBB17:
3085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5373              		.loc 1 3085 0
 5374 0066 0192     		str	r2, [sp, #4]
 5375 0068 9B68     		ldr	r3, [r3, #8]
 5376 006a 0193     		str	r3, [sp, #4]
 5377 006c 019B     		ldr	r3, [sp, #4]
 5378              	.LBE17:
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5379              		.loc 1 3088 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 177


 5380 006e 0132     		add	r2, r2, #1
 5381 0070 5123     		mov	r3, #81
 5382 0072 E254     		strb	r2, [r4, r3]
3094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5383              		.loc 1 3094 0
 5384 0074 201C     		mov	r0, r4
 5385 0076 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5386              	.LVL418:
 5387              	.L357:
3096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5388              		.loc 1 3096 0
 5389 007a 02B0     		add	sp, sp, #8
 5390              		@ sp needed
 5391              	.LVL419:
 5392 007c 10BD     		pop	{r4, pc}
 5393              		.cfi_endproc
 5394              	.LFE72:
 5396 007e C046     		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5397              		.align	2
 5398              		.code	16
 5399              		.thumb_func
 5401              	SPI_DMATxAbortCallback:
 5402              	.LFB71:
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5403              		.loc 1 2980 0
 5404              		.cfi_startproc
 5405              	.LVL420:
 5406 0000 10B5     		push	{r4, lr}
 5407              	.LCFI55:
 5408              		.cfi_def_cfa_offset 8
 5409              		.cfi_offset 4, -8
 5410              		.cfi_offset 14, -4
 5411 0002 84B0     		sub	sp, sp, #16
 5412              	.LCFI56:
 5413              		.cfi_def_cfa_offset 24
2981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint32_t count;
 5414              		.loc 1 2981 0
 5415 0004 846A     		ldr	r4, [r0, #40]
 5416              	.LVL421:
2984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5417              		.loc 1 2984 0
 5418 0006 A36C     		ldr	r3, [r4, #72]
 5419 0008 0022     		mov	r2, #0
 5420 000a 9A63     		str	r2, [r3, #56]
2985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5421              		.loc 1 2985 0
 5422 000c 1E4B     		ldr	r3, .L369
 5423 000e 1868     		ldr	r0, [r3]
 5424              	.LVL422:
 5425 0010 1E49     		ldr	r1, .L369+4
 5426 0012 FFF7FEFF 		bl	__aeabi_uidiv
 5427              	.LVL423:
 5428 0016 6423     		mov	r3, #100
 5429 0018 5843     		mul	r0, r3
 5430 001a 0390     		str	r0, [sp, #12]
2988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5431              		.loc 1 2988 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 178


 5432 001c 2268     		ldr	r2, [r4]
 5433 001e 5368     		ldr	r3, [r2, #4]
 5434 0020 0221     		mov	r1, #2
 5435 0022 8B43     		bic	r3, r1
 5436 0024 5360     		str	r3, [r2, #4]
 5437              	.L365:
2993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5438              		.loc 1 2993 0
 5439 0026 039B     		ldr	r3, [sp, #12]
 5440 0028 002B     		cmp	r3, #0
 5441 002a 04D1     		bne	.L363
2995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       break;
 5442              		.loc 1 2995 0
 5443 002c 626D     		ldr	r2, [r4, #84]
 5444 002e 4033     		add	r3, r3, #64
 5445 0030 1343     		orr	r3, r2
 5446 0032 6365     		str	r3, [r4, #84]
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 5447              		.loc 1 2996 0
 5448 0034 06E0     		b	.L364
 5449              	.L363:
2998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 5450              		.loc 1 2998 0
 5451 0036 039B     		ldr	r3, [sp, #12]
 5452 0038 013B     		sub	r3, r3, #1
 5453 003a 0393     		str	r3, [sp, #12]
3000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5454              		.loc 1 3000 0
 5455 003c 2368     		ldr	r3, [r4]
 5456 003e 9B68     		ldr	r3, [r3, #8]
 5457 0040 9B07     		lsl	r3, r3, #30
 5458 0042 F0D5     		bpl	.L365
 5459              	.L364:
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5460              		.loc 1 3003 0
 5461 0044 E36C     		ldr	r3, [r4, #76]
 5462 0046 002B     		cmp	r3, #0
 5463 0048 02D0     		beq	.L366
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 5464              		.loc 1 3005 0
 5465 004a 9B6B     		ldr	r3, [r3, #56]
 5466 004c 002B     		cmp	r3, #0
 5467 004e 19D1     		bne	.L362
 5468              	.L366:
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5469              		.loc 1 3012 0
 5470 0050 0023     		mov	r3, #0
 5471 0052 E387     		strh	r3, [r4, #62]
3013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5472              		.loc 1 3013 0
 5473 0054 E386     		strh	r3, [r4, #54]
3016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 5474              		.loc 1 3016 0
 5475 0056 636D     		ldr	r3, [r4, #84]
 5476 0058 402B     		cmp	r3, #64
 5477 005a 01D0     		beq	.L368
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccu3pZ5o.s 			page 179


 5478              		.loc 1 3019 0
 5479 005c 0023     		mov	r3, #0
 5480 005e 6365     		str	r3, [r4, #84]
 5481              	.L368:
 5482              	.LBB18:
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5483              		.loc 1 3023 0
 5484 0060 0022     		mov	r2, #0
 5485 0062 0192     		str	r2, [sp, #4]
 5486 0064 2368     		ldr	r3, [r4]
 5487 0066 D968     		ldr	r1, [r3, #12]
 5488 0068 0191     		str	r1, [sp, #4]
 5489 006a 9968     		ldr	r1, [r3, #8]
 5490 006c 0191     		str	r1, [sp, #4]
 5491 006e 0199     		ldr	r1, [sp, #4]
 5492              	.LBE18:
 5493              	.LBB19:
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5494              		.loc 1 3024 0
 5495 0070 0292     		str	r2, [sp, #8]
 5496 0072 9B68     		ldr	r3, [r3, #8]
 5497 0074 0293     		str	r3, [sp, #8]
 5498 0076 029B     		ldr	r3, [sp, #8]
 5499              	.LBE19:
3027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5500              		.loc 1 3027 0
 5501 0078 0132     		add	r2, r2, #1
 5502 007a 5123     		mov	r3, #81
 5503 007c E254     		strb	r2, [r4, r3]
3033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5504              		.loc 1 3033 0
 5505 007e 201C     		mov	r0, r4
 5506 0080 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5507              	.LVL424:
 5508              	.L362:
3035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5509              		.loc 1 3035 0
 5510 0084 04B0     		add	sp, sp, #16
 5511              		@ sp needed
 5512              	.LVL425:
 5513 0086 10BD     		pop	{r4, pc}
 5514              	.L370:
 5515              		.align	2
 5516              	.L369:
 5517 0088 00000000 		.word	SystemCoreClock
 5518 008c C05D0000 		.word	24000
 5519              		.cfi_endproc
 5520              	.LFE71:
 5522              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5523              		.align	2
 5524              		.global	HAL_SPI_GetState
 5525              		.code	16
 5526              		.thumb_func
 5528              	HAL_SPI_GetState:
 5529              	.LFB61:
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Return SPI handle state */
 5530              		.loc 1 2637 0
ARM GAS  /tmp/ccu3pZ5o.s 			page 180


 5531              		.cfi_startproc
 5532              	.LVL426:
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 5533              		.loc 1 2639 0
 5534 0000 5123     		mov	r3, #81
 5535 0002 C05C     		ldrb	r0, [r0, r3]
 5536              	.LVL427:
 5537 0004 C0B2     		uxtb	r0, r0
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5538              		.loc 1 2640 0
 5539              		@ sp needed
 5540 0006 7047     		bx	lr
 5541              		.cfi_endproc
 5542              	.LFE61:
 5544              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5545              		.align	2
 5546              		.global	HAL_SPI_GetError
 5547              		.code	16
 5548              		.thumb_func
 5550              	HAL_SPI_GetError:
 5551              	.LFB62:
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5552              		.loc 1 2649 0
 5553              		.cfi_startproc
 5554              	.LVL428:
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 5555              		.loc 1 2651 0
 5556 0000 406D     		ldr	r0, [r0, #84]
 5557              	.LVL429:
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 5558              		.loc 1 2652 0
 5559              		@ sp needed
 5560 0002 7047     		bx	lr
 5561              		.cfi_endproc
 5562              	.LFE62:
 5564              		.text
 5565              	.Letext0:
 5566              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5567              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5568              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 5569              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 5570              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 5571              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 5572              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 5573              		.file 9 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 5574              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/ccu3pZ5o.s 			page 181


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_spi.c
     /tmp/ccu3pZ5o.s:19     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccu3pZ5o.s:23     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccu3pZ5o.s:98     .text.SPI_AbortRx_ISR:0000000000000058 $d
     /tmp/ccu3pZ5o.s:104    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccu3pZ5o.s:108    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccu3pZ5o.s:136    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccu3pZ5o.s:140    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccu3pZ5o.s:259    .text.SPI_WaitFlagStateUntilTimeout:0000000000000094 $d
     /tmp/ccu3pZ5o.s:264    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccu3pZ5o.s:268    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccu3pZ5o.s:349    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccu3pZ5o.s:353    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccu3pZ5o.s:475    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccu3pZ5o.s:480    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccu3pZ5o.s:492    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccu3pZ5o.s:497    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccu3pZ5o.s:597    .text.HAL_SPI_Init:0000000000000084 $d
     /tmp/ccu3pZ5o.s:602    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccu3pZ5o.s:607    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccu3pZ5o.s:619    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccu3pZ5o.s:624    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccu3pZ5o.s:677    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccu3pZ5o.s:682    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccu3pZ5o.s:1022   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccu3pZ5o.s:1027   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccu3pZ5o.s:1504   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccu3pZ5o.s:1509   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccu3pZ5o.s:1799   .text.HAL_SPI_Receive:0000000000000160 $d
     /tmp/ccu3pZ5o.s:1804   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:1809   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccu3pZ5o.s:1948   .text.HAL_SPI_Transmit_IT:0000000000000098 $d
     /tmp/ccu3pZ5o.s:3822   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccu3pZ5o.s:3778   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccu3pZ5o.s:1954   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:1959   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccu3pZ5o.s:2142   .text.HAL_SPI_TransmitReceive_IT:00000000000000b8 $d
     /tmp/ccu3pZ5o.s:4345   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccu3pZ5o.s:4290   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccu3pZ5o.s:4235   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccu3pZ5o.s:4180   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccu3pZ5o.s:2150   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:2155   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccu3pZ5o.s:2317   .text.HAL_SPI_Receive_IT:00000000000000bc $d
     /tmp/ccu3pZ5o.s:3993   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccu3pZ5o.s:3949   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccu3pZ5o.s:2324   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccu3pZ5o.s:2329   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccu3pZ5o.s:2503   .text.HAL_SPI_Transmit_DMA:00000000000000d0 $d
     /tmp/ccu3pZ5o.s:3522   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccu3pZ5o.s:4442   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccu3pZ5o.s:4400   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccu3pZ5o.s:2510   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccu3pZ5o.s:2515   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccu3pZ5o.s:2795   .text.HAL_SPI_TransmitReceive_DMA:0000000000000140 $d
     /tmp/ccu3pZ5o.s:3566   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
ARM GAS  /tmp/ccu3pZ5o.s 			page 182


     /tmp/ccu3pZ5o.s:4548   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccu3pZ5o.s:3610   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccu3pZ5o.s:4634   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccu3pZ5o.s:2804   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccu3pZ5o.s:2809   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccu3pZ5o.s:3005   .text.HAL_SPI_Receive_DMA:00000000000000f0 $d
     /tmp/ccu3pZ5o.s:3013   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3018   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccu3pZ5o.s:3256   .text.HAL_SPI_Abort:0000000000000130 $d
     /tmp/ccu3pZ5o.s:3264   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3269   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccu3pZ5o.s:3314   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3319   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccu3pZ5o.s:3364   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3369   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccu3pZ5o.s:3450   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3455   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccu3pZ5o.s:3467   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3472   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccu3pZ5o.s:3484   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3489   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccu3pZ5o.s:3501   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3506   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccu3pZ5o.s:3518   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3545   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3550   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccu3pZ5o.s:3562   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3589   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3594   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccu3pZ5o.s:3606   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3633   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3638   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccu3pZ5o.s:3650   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3654   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccu3pZ5o.s:3768   .text.SPI_CloseTx_ISR:000000000000008c $d
     /tmp/ccu3pZ5o.s:3774   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3818   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3862   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3866   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccu3pZ5o.s:3945   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:3989   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4033   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4037   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccu3pZ5o.s:4170   .text.SPI_CloseRxTx_ISR:00000000000000a8 $d
     /tmp/ccu3pZ5o.s:4176   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4231   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4286   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4341   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4396   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4438   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4544   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4630   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4720   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4725   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccu3pZ5o.s:4949   .text.HAL_SPI_IRQHandler:0000000000000110 $d
     /tmp/ccu3pZ5o.s:4958   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccu3pZ5o.s:4954   .text.SPI_DMAAbortOnError:0000000000000000 $t
ARM GAS  /tmp/ccu3pZ5o.s 			page 183


     /tmp/ccu3pZ5o.s:4986   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:4991   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccu3pZ5o.s:5003   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccu3pZ5o.s:5008   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccu3pZ5o.s:5277   .text.HAL_SPI_Abort_IT:0000000000000148 $d
     /tmp/ccu3pZ5o.s:5401   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccu3pZ5o.s:5291   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccu3pZ5o.s:5287   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:5397   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccu3pZ5o.s:5517   .text.SPI_DMATxAbortCallback:0000000000000088 $d
     /tmp/ccu3pZ5o.s:5523   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccu3pZ5o.s:5528   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccu3pZ5o.s:5545   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccu3pZ5o.s:5550   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
