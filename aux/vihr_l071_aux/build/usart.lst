ARM GAS  /tmp/cciL9WTk.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	2
  19              		.global	MX_USART1_UART_Init
  20              		.code	16
  21              		.thumb_func
  23              	MX_USART1_UART_Init:
  24              	.LFB36:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cciL9WTk.s 			page 2


  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart1;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART1 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART1_UART_Init(void)
  54:Src/usart.c   **** {
  26              		.loc 1 54 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart1.Instance = USART1;
  33              		.loc 1 56 0
  34 0002 0C48     		ldr	r0, .L3
  35 0004 0C4B     		ldr	r3, .L3+4
  36 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  37              		.loc 1 57 0
  38 0008 E123     		mov	r3, #225
  39 000a 5B02     		lsl	r3, r3, #9
  40 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  41              		.loc 1 58 0
  42 000e 0023     		mov	r3, #0
  43 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  44              		.loc 1 59 0
  45 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  46              		.loc 1 60 0
  47 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  48              		.loc 1 61 0
  49 0016 0C22     		mov	r2, #12
  50 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  51              		.loc 1 62 0
  52 001a 8361     		str	r3, [r0, #24]
  63:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cciL9WTk.s 			page 3


  53              		.loc 1 63 0
  54 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  55              		.loc 1 64 0
  56 001e 0362     		str	r3, [r0, #32]
  65:Src/usart.c   ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  57              		.loc 1 65 0
  58 0020 4362     		str	r3, [r0, #36]
  66:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  59              		.loc 1 66 0
  60 0022 FFF7FEFF 		bl	HAL_UART_Init
  61              	.LVL0:
  62 0026 0028     		cmp	r0, #0
  63 0028 03D0     		beq	.L1
  67:Src/usart.c   ****   {
  68:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  64              		.loc 1 68 0
  65 002a 0448     		ldr	r0, .L3+8
  66 002c 4421     		mov	r1, #68
  67 002e FFF7FEFF 		bl	_Error_Handler
  68              	.LVL1:
  69              	.L1:
  69:Src/usart.c   ****   }
  70:Src/usart.c   **** 
  71:Src/usart.c   **** }
  70              		.loc 1 71 0
  71              		@ sp needed
  72 0032 08BD     		pop	{r3, pc}
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 0034 00000000 		.word	huart1
  77 0038 00380140 		.word	1073821696
  78 003c 00000000 		.word	.LC1
  79              		.cfi_endproc
  80              	.LFE36:
  82              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  83              		.align	2
  84              		.global	HAL_UART_MspInit
  85              		.code	16
  86              		.thumb_func
  88              	HAL_UART_MspInit:
  89              	.LFB37:
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Src/usart.c   **** {
  90              		.loc 1 74 0
  91              		.cfi_startproc
  92              	.LVL2:
  93 0000 00B5     		push	{lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 14, -4
  97 0002 87B0     		sub	sp, sp, #28
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 32
  75:Src/usart.c   **** 
ARM GAS  /tmp/cciL9WTk.s 			page 4


  76:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  77:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 100              		.loc 1 77 0
 101 0004 0268     		ldr	r2, [r0]
 102 0006 0C4B     		ldr	r3, .L7
 103 0008 9A42     		cmp	r2, r3
 104 000a 12D1     		bne	.L5
  78:Src/usart.c   ****   {
  79:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  82:Src/usart.c   ****     /* USART1 clock enable */
  83:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 105              		.loc 1 83 0
 106 000c 0B4A     		ldr	r2, .L7+4
 107 000e 536B     		ldr	r3, [r2, #52]
 108 0010 8021     		mov	r1, #128
 109 0012 C901     		lsl	r1, r1, #7
 110 0014 0B43     		orr	r3, r1
 111 0016 5363     		str	r3, [r2, #52]
  84:Src/usart.c   ****   
  85:Src/usart.c   ****     /**USART1 GPIO Configuration    
  86:Src/usart.c   ****     PB6     ------> USART1_TX
  87:Src/usart.c   ****     PB7     ------> USART1_RX 
  88:Src/usart.c   ****     */
  89:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 112              		.loc 1 89 0
 113 0018 C023     		mov	r3, #192
 114 001a 0193     		str	r3, [sp, #4]
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 115              		.loc 1 90 0
 116 001c BE3B     		sub	r3, r3, #190
 117 001e 0293     		str	r3, [sp, #8]
  91:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118              		.loc 1 91 0
 119 0020 0023     		mov	r3, #0
 120 0022 0393     		str	r3, [sp, #12]
  92:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 121              		.loc 1 92 0
 122 0024 0322     		mov	r2, #3
 123 0026 0492     		str	r2, [sp, #16]
  93:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 124              		.loc 1 93 0
 125 0028 0593     		str	r3, [sp, #20]
  94:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 126              		.loc 1 94 0
 127 002a 0548     		ldr	r0, .L7+8
 128              	.LVL3:
 129 002c 01A9     		add	r1, sp, #4
 130 002e FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL4:
 132              	.L5:
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
  99:Src/usart.c   ****   }
ARM GAS  /tmp/cciL9WTk.s 			page 5


 100:Src/usart.c   **** }
 133              		.loc 1 100 0
 134 0032 07B0     		add	sp, sp, #28
 135              		@ sp needed
 136 0034 00BD     		pop	{pc}
 137              	.L8:
 138 0036 C046     		.align	2
 139              	.L7:
 140 0038 00380140 		.word	1073821696
 141 003c 00100240 		.word	1073876992
 142 0040 00040050 		.word	1342178304
 143              		.cfi_endproc
 144              	.LFE37:
 146              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 147              		.align	2
 148              		.global	HAL_UART_MspDeInit
 149              		.code	16
 150              		.thumb_func
 152              	HAL_UART_MspDeInit:
 153              	.LFB38:
 101:Src/usart.c   **** 
 102:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 103:Src/usart.c   **** {
 154              		.loc 1 103 0
 155              		.cfi_startproc
 156              	.LVL5:
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 3, -8
 161              		.cfi_offset 14, -4
 104:Src/usart.c   **** 
 105:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 162              		.loc 1 105 0
 163 0002 0268     		ldr	r2, [r0]
 164 0004 064B     		ldr	r3, .L11
 165 0006 9A42     		cmp	r2, r3
 166 0008 08D1     		bne	.L9
 106:Src/usart.c   ****   {
 107:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 108:Src/usart.c   **** 
 109:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 110:Src/usart.c   ****     /* Peripheral clock disable */
 111:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 167              		.loc 1 111 0
 168 000a 064A     		ldr	r2, .L11+4
 169 000c 516B     		ldr	r1, [r2, #52]
 170 000e 064B     		ldr	r3, .L11+8
 171 0010 0B40     		and	r3, r1
 172 0012 5363     		str	r3, [r2, #52]
 112:Src/usart.c   ****   
 113:Src/usart.c   ****     /**USART1 GPIO Configuration    
 114:Src/usart.c   ****     PB6     ------> USART1_TX
 115:Src/usart.c   ****     PB7     ------> USART1_RX 
 116:Src/usart.c   ****     */
 117:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 173              		.loc 1 117 0
ARM GAS  /tmp/cciL9WTk.s 			page 6


 174 0014 0548     		ldr	r0, .L11+12
 175              	.LVL6:
 176 0016 C021     		mov	r1, #192
 177 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 178              	.LVL7:
 179              	.L9:
 118:Src/usart.c   **** 
 119:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 120:Src/usart.c   **** 
 121:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 122:Src/usart.c   ****   }
 123:Src/usart.c   **** } 
 180              		.loc 1 123 0
 181              		@ sp needed
 182 001c 08BD     		pop	{r3, pc}
 183              	.L12:
 184 001e C046     		.align	2
 185              	.L11:
 186 0020 00380140 		.word	1073821696
 187 0024 00100240 		.word	1073876992
 188 0028 FFBFFFFF 		.word	-16385
 189 002c 00040050 		.word	1342178304
 190              		.cfi_endproc
 191              	.LFE38:
 193              		.comm	huart1,112,4
 194              		.section	.rodata.str1.4,"aMS",%progbits,1
 195              		.align	2
 196              	.LC1:
 197 0000 5372632F 		.ascii	"Src/usart.c\000"
 197      75736172 
 197      742E6300 
 198              		.text
 199              	.Letext0:
 200              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 201              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 202              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 203              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 204              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 205              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 206              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 207              		.file 9 "Inc/usart.h"
ARM GAS  /tmp/cciL9WTk.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cciL9WTk.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cciL9WTk.s:23     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cciL9WTk.s:76     .text.MX_USART1_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart1
     /tmp/cciL9WTk.s:83     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cciL9WTk.s:88     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cciL9WTk.s:140    .text.HAL_UART_MspInit:0000000000000038 $d
     /tmp/cciL9WTk.s:147    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cciL9WTk.s:152    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cciL9WTk.s:186    .text.HAL_UART_MspDeInit:0000000000000020 $d
     /tmp/cciL9WTk.s:195    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
