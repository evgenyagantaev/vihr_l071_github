ARM GAS  /tmp/ccjVxjbG.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	UART_EndTxTransfer:
  23              	.LFB79:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @file    stm32l0xx_hal_uart.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   [..]
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/ccjVxjbG.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @endverbatim
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @attention
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *      without specific prior written permission.
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccjVxjbG.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #include "stm32l0xx_hal.h"
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup STM32L0xx_HAL_Driver
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART UART
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief HAL UART module driver
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_LPUART_BRR_MIN           ((uint32_t)0x00000300)  /* LPUART BRR minimum authorized valu
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_LPUART_BRR_MAX           ((uint32_t)0x000FFFFF)  /* LPUART BRR maximum authorized valu
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
ARM GAS  /tmp/ccjVxjbG.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** ===============================================================================
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in asynchronous mode.
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Baud Rate
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Word Length
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Stop Bit
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Hardware flow control
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Over Sampling Method
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) data logical level inversion
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX and TX pins swap
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX overrun detection disabling
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA disabling on RX error
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) MSB first on communication line
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) auto Baud rate detection
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     are available in reference manual).
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit, 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the 
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   following table.
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Table 1. UART frame format.
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
ARM GAS  /tmp/ccjVxjbG.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart == NULL)
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccjVxjbG.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart == NULL)
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART instance */
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
ARM GAS  /tmp/ccjVxjbG.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param BreakDetectLength: specifies the LIN break detection length.
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart == NULL)
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the LIN UART instance */
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjVxjbG.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
ARM GAS  /tmp/ccjVxjbG.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart == NULL)
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the wake up method parameter */
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
ARM GAS  /tmp/ccjVxjbG.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart == NULL)
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DeInit the low level hardware */
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlock */
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
ARM GAS  /tmp/ccjVxjbG.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### IO operation functions #####
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and Half duplex data transfers.
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) There are two mode of transfer:
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            after finishing transfer.
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            using DMA mode.
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Blocking mode API's are :
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive()
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
ARM GAS  /tmp/ccjVxjbG.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort()
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         Errors are handled as follows :
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart = 0;
ARM GAS  /tmp/ccjVxjbG.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize = Size;
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pData += 2U;
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask;
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart = 0;
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* as long as data have to be received */
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount--;
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pData +=2U;
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjVxjbG.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize = Size;
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
ARM GAS  /tmp/ccjVxjbG.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccjVxjbG.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccjVxjbG.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size: amount of data to be received.
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the DMA error callback */
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the DMA abort callback */
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA channel */
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0; 
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0; 
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjVxjbG.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0; 
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Rx transfer counter */
ARM GAS  /tmp/ccjVxjbG.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0; 
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1;
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      before any call to DMA Abort functions */
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
ARM GAS  /tmp/ccjVxjbG.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0;
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1;
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0;
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (abortcplt == 1)
ARM GAS  /tmp/ccjVxjbG.s 			page 27


1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0; 
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0;
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset errorCode */
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
ARM GAS  /tmp/ccjVxjbG.s 			page 28


1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount = 0; 
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0; 
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
ARM GAS  /tmp/ccjVxjbG.s 			page 29


1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount = 0; 
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0; 
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its;
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t errorflags;
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 30


1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If no error occurs */
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == RESET)
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       UART_Receive_IT(huart);
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }  
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If some errors occur */
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(   (errorflags != RESET)
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccjVxjbG.s 			page 31


1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         UART_Receive_IT(huart);
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          consider error as blocking */
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {  
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Abort DMA RX */
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           else
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Call user error callback */
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Call user error callback */
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error is notified to user through user error callback */
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   } /* End if some error occurs */
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
ARM GAS  /tmp/ccjVxjbG.s 			page 32


1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjVxjbG.s 			page 33


1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief UART error callback.
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
ARM GAS  /tmp/ccjVxjbG.s 			page 34


1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief   UART control functions
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccjVxjbG.s 			page 35


1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
ARM GAS  /tmp/ccjVxjbG.s 			page 36


1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status.
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Transmit break characters.
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart: UART handle.
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccjVxjbG.s 			page 37


2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Send break characters */
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides functions allowing to :
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle state.
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle error code
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL state
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp1 = huart->gState;
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval UART Error Code
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccjVxjbG.s 			page 38


2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 39


2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check LPUART instance */
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Retrieve frequency clock */
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmpreg = 0;
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmpreg = HAL_RCC_GetPCLK1Freq();
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmpreg = (uint32_t) (HSI_VALUE >> 2U);
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmpreg = (uint32_t) HSI_VALUE;
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmpreg = HAL_RCC_GetSysClockFreq();
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmpreg = (uint32_t) LSE_VALUE;
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     default:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* if proper clock source reported */
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (tmpreg != 0)
ARM GAS  /tmp/ccjVxjbG.s 			page 40


2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ( (tmpreg < (3 * huart->Init.BaudRate) ) ||
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmpreg = (uint32_t)(UART_DIV_LPUART(tmpreg, huart->Init.BaudRate));
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if ((tmpreg >= UART_LPUART_BRR_MIN) && (tmpreg <= UART_LPUART_BRR_MAX))
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            huart->Instance->BRR = tmpreg;
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ret = HAL_ERROR;
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(frequency, huart->Init.BaudRate));
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate)); 
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     default:
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     brrtemp |= (uint16_t)((uint16_t)(usartdiv & (uint16_t)0x000FU) >> (uint16_t)1U);
ARM GAS  /tmp/ccjVxjbG.s 			page 41


2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.Bau
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.Bau
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRa
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     default:
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return ret;
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart: UART handle.
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
ARM GAS  /tmp/ccjVxjbG.s 			page 42


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure data inversion */
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjVxjbG.s 			page 43


2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart = 0;
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until REACK flag is set */
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART State */
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
ARM GAS  /tmp/ccjVxjbG.s 			page 44


2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check for the Timeout */
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if((Timeout == 0) || ((HAL_GetTick()-Tickstart) > Timeout))
2435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
2446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  25              		.loc 1 2459 0
  26              		.cfi_startproc
  27              	.LVL0:
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  28              		.loc 1 2461 0
  29 0000 0268     		ldr	r2, [r0]
  30 0002 1368     		ldr	r3, [r2]
  31 0004 C021     		mov	r1, #192
  32 0006 8B43     		bic	r3, r1
  33 0008 1360     		str	r3, [r2]
2462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  34              		.loc 1 2464 0
  35 000a 2022     		mov	r2, #32
  36 000c 6923     		mov	r3, #105
  37 000e C254     		strb	r2, [r0, r3]
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  38              		.loc 1 2465 0
  39              		@ sp needed
  40 0010 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE79:
  44 0012 C046     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  45              		.align	2
ARM GAS  /tmp/ccjVxjbG.s 			page 45


  46              		.code	16
  47              		.thumb_func
  49              	UART_EndRxTransfer:
  50              	.LFB80:
2466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  51              		.loc 1 2474 0
  52              		.cfi_startproc
  53              	.LVL1:
2475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  54              		.loc 1 2476 0
  55 0000 0268     		ldr	r2, [r0]
  56 0002 1168     		ldr	r1, [r2]
  57 0004 054B     		ldr	r3, .L3
  58 0006 0B40     		and	r3, r1
  59 0008 1360     		str	r3, [r2]
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  60              		.loc 1 2477 0
  61 000a 0268     		ldr	r2, [r0]
  62 000c 9368     		ldr	r3, [r2, #8]
  63 000e 0121     		mov	r1, #1
  64 0010 8B43     		bic	r3, r1
  65 0012 9360     		str	r3, [r2, #8]
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  66              		.loc 1 2480 0
  67 0014 2022     		mov	r2, #32
  68 0016 6A23     		mov	r3, #106
  69 0018 C254     		strb	r2, [r0, r3]
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  70              		.loc 1 2481 0
  71              		@ sp needed
  72 001a 7047     		bx	lr
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 001c DFFEFFFF 		.word	-289
  77              		.cfi_endproc
  78              	.LFE80:
  80              		.section	.text.UART_Transmit_IT,"ax",%progbits
  81              		.align	2
  82              		.code	16
  83              		.thumb_func
  85              	UART_Transmit_IT:
  86              	.LFB91:
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjVxjbG.s 			page 46


2485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
2487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Circular mode */
2506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
2516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
2528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccjVxjbG.s 			page 47


2542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
2557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
2569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0;
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0;
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/ccjVxjbG.s 			page 48


2599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0;
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
2616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
2630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0;
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
ARM GAS  /tmp/ccjVxjbG.s 			page 49


2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
2672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0;
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0;
2707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/ccjVxjbG.s 			page 50


2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
2721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
2728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  87              		.loc 1 2747 0
  88              		.cfi_startproc
  89              	.LVL2:
2748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  90              		.loc 1 2751 0
  91 0000 6923     		mov	r3, #105
  92 0002 C35C     		ldrb	r3, [r0, r3]
  93 0004 212B     		cmp	r3, #33
  94 0006 2FD1     		bne	.L10
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
  95              		.loc 1 2753 0
  96 0008 3133     		add	r3, r3, #49
  97 000a C35A     		ldrh	r3, [r0, r3]
  98 000c 9BB2     		uxth	r3, r3
  99 000e 002B     		cmp	r3, #0
 100 0010 0BD1     		bne	.L7
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
ARM GAS  /tmp/ccjVxjbG.s 			page 51


2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 101              		.loc 1 2756 0
 102 0012 0268     		ldr	r2, [r0]
 103 0014 1368     		ldr	r3, [r2]
 104 0016 8021     		mov	r1, #128
 105 0018 8B43     		bic	r3, r1
 106 001a 1360     		str	r3, [r2]
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 107              		.loc 1 2759 0
 108 001c 0268     		ldr	r2, [r0]
 109 001e 1168     		ldr	r1, [r2]
 110 0020 4023     		mov	r3, #64
 111 0022 0B43     		orr	r3, r1
 112 0024 1360     		str	r3, [r2]
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_OK;
 113              		.loc 1 2761 0
 114 0026 0020     		mov	r0, #0
 115              	.LVL3:
 116 0028 1FE0     		b	.L6
 117              	.LVL4:
 118              	.L7:
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 119              		.loc 1 2765 0
 120 002a 8023     		mov	r3, #128
 121 002c 5B01     		lsl	r3, r3, #5
 122 002e 8268     		ldr	r2, [r0, #8]
 123 0030 9A42     		cmp	r2, r3
 124 0032 0CD1     		bne	.L8
 125              		.loc 1 2765 0 is_stmt 0 discriminator 1
 126 0034 0369     		ldr	r3, [r0, #16]
 127 0036 002B     		cmp	r3, #0
 128 0038 09D1     		bne	.L8
 129              	.LVL5:
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 130              		.loc 1 2768 0 is_stmt 1
 131 003a 0268     		ldr	r2, [r0]
 132 003c C36C     		ldr	r3, [r0, #76]
 133 003e 1B88     		ldrh	r3, [r3]
 134 0040 DB05     		lsl	r3, r3, #23
 135 0042 DB0D     		lsr	r3, r3, #23
 136 0044 9362     		str	r3, [r2, #40]
 137              	.LVL6:
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 138              		.loc 1 2769 0
 139 0046 C36C     		ldr	r3, [r0, #76]
 140 0048 0233     		add	r3, r3, #2
 141 004a C364     		str	r3, [r0, #76]
 142 004c 05E0     		b	.L9
 143              	.L8:
ARM GAS  /tmp/ccjVxjbG.s 			page 52


2770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 144              		.loc 1 2773 0
 145 004e 0268     		ldr	r2, [r0]
 146 0050 C36C     		ldr	r3, [r0, #76]
 147 0052 591C     		add	r1, r3, #1
 148 0054 C164     		str	r1, [r0, #76]
 149 0056 1B78     		ldrb	r3, [r3]
 150 0058 9362     		str	r3, [r2, #40]
 151              	.L9:
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 152              		.loc 1 2775 0
 153 005a 5222     		mov	r2, #82
 154 005c 835A     		ldrh	r3, [r0, r2]
 155 005e 013B     		sub	r3, r3, #1
 156 0060 9BB2     		uxth	r3, r3
 157 0062 8352     		strh	r3, [r0, r2]
2776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_OK;
 158              		.loc 1 2777 0
 159 0064 0020     		mov	r0, #0
 160              	.LVL7:
 161 0066 00E0     		b	.L6
 162              	.LVL8:
 163              	.L10:
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 164              		.loc 1 2782 0
 165 0068 0220     		mov	r0, #2
 166              	.LVL9:
 167              	.L6:
2783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 168              		.loc 1 2784 0
 169              		@ sp needed
 170 006a 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE91:
 174              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 175              		.align	2
 176              		.weak	HAL_UART_MspInit
 177              		.code	16
 178              		.thumb_func
 180              	HAL_UART_MspInit:
 181              	.LFB41:
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 182              		.loc 1 541 0
 183              		.cfi_startproc
 184              	.LVL10:
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 185              		.loc 1 548 0
ARM GAS  /tmp/ccjVxjbG.s 			page 53


 186              		@ sp needed
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE41:
 191 0002 C046     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 192              		.align	2
 193              		.weak	HAL_UART_MspDeInit
 194              		.code	16
 195              		.thumb_func
 197              	HAL_UART_MspDeInit:
 198              	.LFB42:
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 199              		.loc 1 556 0
 200              		.cfi_startproc
 201              	.LVL11:
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 202              		.loc 1 563 0
 203              		@ sp needed
 204 0000 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE42:
 208 0002 C046     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 209              		.align	2
 210              		.global	HAL_UART_DeInit
 211              		.code	16
 212              		.thumb_func
 214              	HAL_UART_DeInit:
 215              	.LFB40:
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 216              		.loc 1 503 0
 217              		.cfi_startproc
 218              	.LVL12:
 219 0000 70B5     		push	{r4, r5, r6, lr}
 220              	.LCFI0:
 221              		.cfi_def_cfa_offset 16
 222              		.cfi_offset 4, -16
 223              		.cfi_offset 5, -12
 224              		.cfi_offset 6, -8
 225              		.cfi_offset 14, -4
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 226              		.loc 1 505 0
 227 0002 0028     		cmp	r0, #0
 228 0004 19D0     		beq	.L15
 229 0006 041C     		mov	r4, r0
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 230              		.loc 1 513 0
 231 0008 6926     		mov	r6, #105
 232 000a 2423     		mov	r3, #36
 233 000c 8355     		strb	r3, [r0, r6]
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 234              		.loc 1 516 0
 235 000e 0268     		ldr	r2, [r0]
 236 0010 1368     		ldr	r3, [r2]
 237 0012 0121     		mov	r1, #1
 238 0014 8B43     		bic	r3, r1
 239 0016 1360     		str	r3, [r2]
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
ARM GAS  /tmp/ccjVxjbG.s 			page 54


 240              		.loc 1 518 0
 241 0018 0368     		ldr	r3, [r0]
 242 001a 0025     		mov	r5, #0
 243 001c 1D60     		str	r5, [r3]
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 244              		.loc 1 519 0
 245 001e 0368     		ldr	r3, [r0]
 246 0020 5D60     		str	r5, [r3, #4]
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 247              		.loc 1 520 0
 248 0022 0368     		ldr	r3, [r0]
 249 0024 9D60     		str	r5, [r3, #8]
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 250              		.loc 1 523 0
 251 0026 FFF7FEFF 		bl	HAL_UART_MspDeInit
 252              	.LVL13:
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 253              		.loc 1 525 0
 254 002a E566     		str	r5, [r4, #108]
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 255              		.loc 1 526 0
 256 002c A555     		strb	r5, [r4, r6]
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 257              		.loc 1 527 0
 258 002e 6A23     		mov	r3, #106
 259 0030 E554     		strb	r5, [r4, r3]
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 260              		.loc 1 530 0
 261 0032 023B     		sub	r3, r3, #2
 262 0034 E554     		strb	r5, [r4, r3]
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 263              		.loc 1 532 0
 264 0036 0020     		mov	r0, #0
 265 0038 00E0     		b	.L14
 266              	.LVL14:
 267              	.L15:
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 268              		.loc 1 507 0
 269 003a 0120     		mov	r0, #1
 270              	.LVL15:
 271              	.L14:
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 272              		.loc 1 533 0
 273              		@ sp needed
 274 003c 70BD     		pop	{r4, r5, r6, pc}
 275              		.cfi_endproc
 276              	.LFE40:
 278 003e C046     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 279              		.align	2
 280              		.global	HAL_UART_Transmit_IT
 281              		.code	16
 282              		.thumb_func
 284              	HAL_UART_Transmit_IT:
 285              	.LFB45:
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 286              		.loc 1 829 0
 287              		.cfi_startproc
ARM GAS  /tmp/ccjVxjbG.s 			page 55


 288              	.LVL16:
 289 0000 10B5     		push	{r4, lr}
 290              	.LCFI1:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 4, -8
 293              		.cfi_offset 14, -4
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 294              		.loc 1 831 0
 295 0002 6923     		mov	r3, #105
 296 0004 C35C     		ldrb	r3, [r0, r3]
 297 0006 202B     		cmp	r3, #32
 298 0008 24D1     		bne	.L19
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 299              		.loc 1 833 0
 300 000a 0029     		cmp	r1, #0
 301 000c 24D0     		beq	.L20
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 302              		.loc 1 833 0 is_stmt 0 discriminator 1
 303 000e 002A     		cmp	r2, #0
 304 0010 24D0     		beq	.L21
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 305              		.loc 1 841 0 is_stmt 1
 306 0012 8023     		mov	r3, #128
 307 0014 5B01     		lsl	r3, r3, #5
 308 0016 8468     		ldr	r4, [r0, #8]
 309 0018 9C42     		cmp	r4, r3
 310 001a 04D1     		bne	.L18
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 311              		.loc 1 841 0 is_stmt 0 discriminator 1
 312 001c 0369     		ldr	r3, [r0, #16]
 313 001e 002B     		cmp	r3, #0
 314 0020 01D1     		bne	.L18
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 315              		.loc 1 843 0 is_stmt 1
 316 0022 CB07     		lsl	r3, r1, #31
 317 0024 1CD4     		bmi	.L22
 318              	.L18:
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 319              		.loc 1 850 0
 320 0026 6823     		mov	r3, #104
 321 0028 C35C     		ldrb	r3, [r0, r3]
 322 002a 012B     		cmp	r3, #1
 323 002c 1AD0     		beq	.L23
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize = Size;
 324              		.loc 1 852 0 discriminator 2
 325 002e C164     		str	r1, [r0, #76]
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 326              		.loc 1 853 0 discriminator 2
 327 0030 5023     		mov	r3, #80
 328 0032 C252     		strh	r2, [r0, r3]
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 329              		.loc 1 854 0 discriminator 2
 330 0034 0233     		add	r3, r3, #2
 331 0036 C252     		strh	r2, [r0, r3]
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 332              		.loc 1 856 0 discriminator 2
 333 0038 0023     		mov	r3, #0
ARM GAS  /tmp/ccjVxjbG.s 			page 56


 334 003a C366     		str	r3, [r0, #108]
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 335              		.loc 1 857 0 discriminator 2
 336 003c 2121     		mov	r1, #33
 337              	.LVL17:
 338 003e 6922     		mov	r2, #105
 339              	.LVL18:
 340 0040 8154     		strb	r1, [r0, r2]
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 341              		.loc 1 860 0 discriminator 2
 342 0042 013A     		sub	r2, r2, #1
 343 0044 8354     		strb	r3, [r0, r2]
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 344              		.loc 1 863 0 discriminator 2
 345 0046 0268     		ldr	r2, [r0]
 346 0048 1168     		ldr	r1, [r2]
 347 004a 8033     		add	r3, r3, #128
 348 004c 0B43     		orr	r3, r1
 349 004e 1360     		str	r3, [r2]
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 350              		.loc 1 865 0 discriminator 2
 351 0050 0020     		mov	r0, #0
 352              	.LVL19:
 353 0052 08E0     		b	.L17
 354              	.LVL20:
 355              	.L19:
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 356              		.loc 1 869 0
 357 0054 0220     		mov	r0, #2
 358              	.LVL21:
 359 0056 06E0     		b	.L17
 360              	.LVL22:
 361              	.L20:
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 362              		.loc 1 835 0
 363 0058 0120     		mov	r0, #1
 364              	.LVL23:
 365 005a 04E0     		b	.L17
 366              	.LVL24:
 367              	.L21:
 368 005c 0120     		mov	r0, #1
 369              	.LVL25:
 370 005e 02E0     		b	.L17
 371              	.LVL26:
 372              	.L22:
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 373              		.loc 1 845 0
 374 0060 0120     		mov	r0, #1
 375              	.LVL27:
 376 0062 00E0     		b	.L17
 377              	.LVL28:
 378              	.L23:
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 379              		.loc 1 850 0
 380 0064 0220     		mov	r0, #2
 381              	.LVL29:
 382              	.L17:
ARM GAS  /tmp/ccjVxjbG.s 			page 57


 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 383              		.loc 1 871 0
 384              		@ sp needed
 385 0066 10BD     		pop	{r4, pc}
 386              		.cfi_endproc
 387              	.LFE45:
 389              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 390              		.align	2
 391              		.global	HAL_UART_Receive_IT
 392              		.code	16
 393              		.thumb_func
 395              	HAL_UART_Receive_IT:
 396              	.LFB46:
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 397              		.loc 1 885 0
 398              		.cfi_startproc
 399              	.LVL30:
 400 0000 30B5     		push	{r4, r5, lr}
 401              	.LCFI2:
 402              		.cfi_def_cfa_offset 12
 403              		.cfi_offset 4, -12
 404              		.cfi_offset 5, -8
 405              		.cfi_offset 14, -4
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 406              		.loc 1 887 0
 407 0002 6A23     		mov	r3, #106
 408 0004 C35C     		ldrb	r3, [r0, r3]
 409 0006 202B     		cmp	r3, #32
 410 0008 57D1     		bne	.L33
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 411              		.loc 1 889 0
 412 000a 0029     		cmp	r1, #0
 413 000c 57D0     		beq	.L34
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 414              		.loc 1 889 0 is_stmt 0 discriminator 1
 415 000e 002A     		cmp	r2, #0
 416 0010 57D0     		beq	.L35
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 417              		.loc 1 897 0 is_stmt 1
 418 0012 8368     		ldr	r3, [r0, #8]
 419 0014 8024     		mov	r4, #128
 420 0016 6401     		lsl	r4, r4, #5
 421 0018 A342     		cmp	r3, r4
 422 001a 04D1     		bne	.L26
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 423              		.loc 1 897 0 is_stmt 0 discriminator 1
 424 001c 0469     		ldr	r4, [r0, #16]
 425 001e 002C     		cmp	r4, #0
 426 0020 01D1     		bne	.L26
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 427              		.loc 1 899 0 is_stmt 1
 428 0022 CC07     		lsl	r4, r1, #31
 429 0024 4FD4     		bmi	.L36
 430              	.L26:
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 431              		.loc 1 906 0
 432 0026 6824     		mov	r4, #104
ARM GAS  /tmp/ccjVxjbG.s 			page 58


 433 0028 045D     		ldrb	r4, [r0, r4]
 434 002a 012C     		cmp	r4, #1
 435 002c 4DD0     		beq	.L37
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 436              		.loc 1 906 0 is_stmt 0 discriminator 2
 437 002e 0125     		mov	r5, #1
 438 0030 6824     		mov	r4, #104
 439 0032 0555     		strb	r5, [r0, r4]
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 440              		.loc 1 908 0 is_stmt 1 discriminator 2
 441 0034 4165     		str	r1, [r0, #84]
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 442              		.loc 1 909 0 discriminator 2
 443 0036 5821     		mov	r1, #88
 444              	.LVL31:
 445 0038 4252     		strh	r2, [r0, r1]
 446              	.LVL32:
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 447              		.loc 1 910 0 discriminator 2
 448 003a 0231     		add	r1, r1, #2
 449 003c 4252     		strh	r2, [r0, r1]
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 450              		.loc 1 913 0 discriminator 2
 451 003e 8022     		mov	r2, #128
 452              	.LVL33:
 453 0040 5201     		lsl	r2, r2, #5
 454 0042 9342     		cmp	r3, r2
 455 0044 0AD1     		bne	.L27
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 456              		.loc 1 913 0 is_stmt 0 discriminator 1
 457 0046 0369     		ldr	r3, [r0, #16]
 458 0048 002B     		cmp	r3, #0
 459 004a 03D1     		bne	.L28
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 460              		.loc 1 913 0 discriminator 3
 461 004c 204A     		ldr	r2, .L38
 462 004e 5C33     		add	r3, r3, #92
 463 0050 C252     		strh	r2, [r0, r3]
 464              	.LVL34:
 465 0052 1EE0     		b	.L29
 466              	.LVL35:
 467              	.L28:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 468              		.loc 1 913 0 discriminator 4
 469 0054 FF22     		mov	r2, #255
 470 0056 5C23     		mov	r3, #92
 471 0058 C252     		strh	r2, [r0, r3]
 472              	.LVL36:
 473 005a 1AE0     		b	.L29
 474              	.LVL37:
 475              	.L27:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 476              		.loc 1 913 0 discriminator 2
 477 005c 002B     		cmp	r3, #0
 478 005e 0AD1     		bne	.L30
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 479              		.loc 1 913 0 discriminator 5
ARM GAS  /tmp/ccjVxjbG.s 			page 59


 480 0060 0369     		ldr	r3, [r0, #16]
 481 0062 002B     		cmp	r3, #0
 482 0064 03D1     		bne	.L31
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 483              		.loc 1 913 0 discriminator 7
 484 0066 FF22     		mov	r2, #255
 485 0068 5C33     		add	r3, r3, #92
 486 006a C252     		strh	r2, [r0, r3]
 487              	.LVL38:
 488 006c 11E0     		b	.L29
 489              	.LVL39:
 490              	.L31:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 491              		.loc 1 913 0 discriminator 8
 492 006e 7F22     		mov	r2, #127
 493 0070 5C23     		mov	r3, #92
 494 0072 C252     		strh	r2, [r0, r3]
 495              	.LVL40:
 496 0074 0DE0     		b	.L29
 497              	.LVL41:
 498              	.L30:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 499              		.loc 1 913 0 discriminator 6
 500 0076 8022     		mov	r2, #128
 501 0078 5205     		lsl	r2, r2, #21
 502 007a 9342     		cmp	r3, r2
 503 007c 09D1     		bne	.L29
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 504              		.loc 1 913 0 discriminator 9
 505 007e 0369     		ldr	r3, [r0, #16]
 506 0080 002B     		cmp	r3, #0
 507 0082 03D1     		bne	.L32
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 508              		.loc 1 913 0 discriminator 10
 509 0084 7F22     		mov	r2, #127
 510 0086 5C33     		add	r3, r3, #92
 511 0088 C252     		strh	r2, [r0, r3]
 512              	.LVL42:
 513 008a 02E0     		b	.L29
 514              	.LVL43:
 515              	.L32:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 516              		.loc 1 913 0 discriminator 11
 517 008c 3F22     		mov	r2, #63
 518 008e 5C23     		mov	r3, #92
 519 0090 C252     		strh	r2, [r0, r3]
 520              	.LVL44:
 521              	.L29:
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 522              		.loc 1 915 0 is_stmt 1
 523 0092 0023     		mov	r3, #0
 524 0094 C366     		str	r3, [r0, #108]
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 525              		.loc 1 916 0
 526 0096 2221     		mov	r1, #34
 527 0098 6A22     		mov	r2, #106
 528 009a 8154     		strb	r1, [r0, r2]
ARM GAS  /tmp/ccjVxjbG.s 			page 60


 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 529              		.loc 1 919 0
 530 009c 023A     		sub	r2, r2, #2
 531 009e 8354     		strb	r3, [r0, r2]
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 532              		.loc 1 922 0
 533 00a0 0268     		ldr	r2, [r0]
 534 00a2 9168     		ldr	r1, [r2, #8]
 535 00a4 0133     		add	r3, r3, #1
 536 00a6 0B43     		orr	r3, r1
 537 00a8 9360     		str	r3, [r2, #8]
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 538              		.loc 1 925 0
 539 00aa 0268     		ldr	r2, [r0]
 540 00ac 1368     		ldr	r3, [r2]
 541 00ae 9021     		mov	r1, #144
 542 00b0 4900     		lsl	r1, r1, #1
 543 00b2 0B43     		orr	r3, r1
 544 00b4 1360     		str	r3, [r2]
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 545              		.loc 1 927 0
 546 00b6 0020     		mov	r0, #0
 547              	.LVL45:
 548 00b8 08E0     		b	.L25
 549              	.LVL46:
 550              	.L33:
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 551              		.loc 1 931 0
 552 00ba 0220     		mov	r0, #2
 553              	.LVL47:
 554 00bc 06E0     		b	.L25
 555              	.LVL48:
 556              	.L34:
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 557              		.loc 1 891 0
 558 00be 0120     		mov	r0, #1
 559              	.LVL49:
 560 00c0 04E0     		b	.L25
 561              	.LVL50:
 562              	.L35:
 563 00c2 0120     		mov	r0, #1
 564              	.LVL51:
 565 00c4 02E0     		b	.L25
 566              	.LVL52:
 567              	.L36:
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 568              		.loc 1 901 0
 569 00c6 0120     		mov	r0, #1
 570              	.LVL53:
 571 00c8 00E0     		b	.L25
 572              	.LVL54:
 573              	.L37:
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 574              		.loc 1 906 0
 575 00ca 0220     		mov	r0, #2
 576              	.LVL55:
 577              	.L25:
ARM GAS  /tmp/ccjVxjbG.s 			page 61


 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 578              		.loc 1 933 0
 579              		@ sp needed
 580 00cc 30BD     		pop	{r4, r5, pc}
 581              	.L39:
 582 00ce C046     		.align	2
 583              	.L38:
 584 00d0 FF010000 		.word	511
 585              		.cfi_endproc
 586              	.LFE46:
 588              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 589              		.align	2
 590              		.global	HAL_UART_Transmit_DMA
 591              		.code	16
 592              		.thumb_func
 594              	HAL_UART_Transmit_DMA:
 595              	.LFB47:
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 596              		.loc 1 947 0
 597              		.cfi_startproc
 598              	.LVL56:
 599 0000 70B5     		push	{r4, r5, r6, lr}
 600              	.LCFI3:
 601              		.cfi_def_cfa_offset 16
 602              		.cfi_offset 4, -16
 603              		.cfi_offset 5, -12
 604              		.cfi_offset 6, -8
 605              		.cfi_offset 14, -4
 606 0002 041C     		mov	r4, r0
 607 0004 131C     		mov	r3, r2
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 608              		.loc 1 949 0
 609 0006 6922     		mov	r2, #105
 610              	.LVL57:
 611 0008 825C     		ldrb	r2, [r0, r2]
 612 000a 202A     		cmp	r2, #32
 613 000c 3AD1     		bne	.L43
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 614              		.loc 1 951 0
 615 000e 0029     		cmp	r1, #0
 616 0010 3AD0     		beq	.L44
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 617              		.loc 1 951 0 is_stmt 0 discriminator 1
 618 0012 002B     		cmp	r3, #0
 619 0014 3AD0     		beq	.L45
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 620              		.loc 1 959 0 is_stmt 1
 621 0016 8022     		mov	r2, #128
 622 0018 5201     		lsl	r2, r2, #5
 623 001a 8068     		ldr	r0, [r0, #8]
 624              	.LVL58:
 625 001c 9042     		cmp	r0, r2
 626 001e 04D1     		bne	.L42
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 627              		.loc 1 959 0 is_stmt 0 discriminator 1
 628 0020 2269     		ldr	r2, [r4, #16]
 629 0022 002A     		cmp	r2, #0
ARM GAS  /tmp/ccjVxjbG.s 			page 62


 630 0024 01D1     		bne	.L42
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 631              		.loc 1 961 0 is_stmt 1
 632 0026 CA07     		lsl	r2, r1, #31
 633 0028 32D4     		bmi	.L46
 634              	.L42:
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 635              		.loc 1 968 0
 636 002a 6822     		mov	r2, #104
 637 002c A25C     		ldrb	r2, [r4, r2]
 638 002e 012A     		cmp	r2, #1
 639 0030 30D0     		beq	.L47
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 640              		.loc 1 968 0 is_stmt 0 discriminator 2
 641 0032 6826     		mov	r6, #104
 642 0034 0122     		mov	r2, #1
 643 0036 A255     		strb	r2, [r4, r6]
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize = Size;
 644              		.loc 1 970 0 is_stmt 1 discriminator 2
 645 0038 E164     		str	r1, [r4, #76]
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 646              		.loc 1 971 0 discriminator 2
 647 003a 4F32     		add	r2, r2, #79
 648 003c A352     		strh	r3, [r4, r2]
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 649              		.loc 1 972 0 discriminator 2
 650 003e 0232     		add	r2, r2, #2
 651 0040 A352     		strh	r3, [r4, r2]
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 652              		.loc 1 974 0 discriminator 2
 653 0042 0025     		mov	r5, #0
 654 0044 E566     		str	r5, [r4, #108]
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 655              		.loc 1 975 0 discriminator 2
 656 0046 2121     		mov	r1, #33
 657              	.LVL59:
 658 0048 1732     		add	r2, r2, #23
 659 004a A154     		strb	r1, [r4, r2]
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 660              		.loc 1 978 0 discriminator 2
 661 004c 226E     		ldr	r2, [r4, #96]
 662 004e 1249     		ldr	r1, .L48
 663 0050 D162     		str	r1, [r2, #44]
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 664              		.loc 1 981 0 discriminator 2
 665 0052 226E     		ldr	r2, [r4, #96]
 666 0054 1149     		ldr	r1, .L48+4
 667 0056 1163     		str	r1, [r2, #48]
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 668              		.loc 1 984 0 discriminator 2
 669 0058 226E     		ldr	r2, [r4, #96]
 670 005a 1149     		ldr	r1, .L48+8
 671 005c 5163     		str	r1, [r2, #52]
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 672              		.loc 1 987 0 discriminator 2
 673 005e 226E     		ldr	r2, [r4, #96]
 674 0060 9563     		str	r5, [r2, #56]
ARM GAS  /tmp/ccjVxjbG.s 			page 63


 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 675              		.loc 1 990 0 discriminator 2
 676 0062 2268     		ldr	r2, [r4]
 677 0064 2832     		add	r2, r2, #40
 678 0066 206E     		ldr	r0, [r4, #96]
 679 0068 E16C     		ldr	r1, [r4, #76]
 680 006a FFF7FEFF 		bl	HAL_DMA_Start_IT
 681              	.LVL60:
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 682              		.loc 1 993 0 discriminator 2
 683 006e 2368     		ldr	r3, [r4]
 684 0070 4022     		mov	r2, #64
 685 0072 1A62     		str	r2, [r3, #32]
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 686              		.loc 1 996 0 discriminator 2
 687 0074 A555     		strb	r5, [r4, r6]
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 688              		.loc 1 1000 0 discriminator 2
 689 0076 2268     		ldr	r2, [r4]
 690 0078 9168     		ldr	r1, [r2, #8]
 691 007a 8023     		mov	r3, #128
 692 007c 0B43     		orr	r3, r1
 693 007e 9360     		str	r3, [r2, #8]
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 694              		.loc 1 1002 0 discriminator 2
 695 0080 0020     		mov	r0, #0
 696 0082 08E0     		b	.L41
 697              	.LVL61:
 698              	.L43:
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 699              		.loc 1 1006 0
 700 0084 0220     		mov	r0, #2
 701              	.LVL62:
 702 0086 06E0     		b	.L41
 703              	.LVL63:
 704              	.L44:
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 705              		.loc 1 953 0
 706 0088 0120     		mov	r0, #1
 707              	.LVL64:
 708 008a 04E0     		b	.L41
 709              	.LVL65:
 710              	.L45:
 711 008c 0120     		mov	r0, #1
 712              	.LVL66:
 713 008e 02E0     		b	.L41
 714              	.L46:
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 715              		.loc 1 963 0
 716 0090 0120     		mov	r0, #1
 717 0092 00E0     		b	.L41
 718              	.L47:
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 719              		.loc 1 968 0
 720 0094 0220     		mov	r0, #2
 721              	.LVL67:
 722              	.L41:
ARM GAS  /tmp/ccjVxjbG.s 			page 64


1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 723              		.loc 1 1008 0
 724              		@ sp needed
 725              	.LVL68:
 726 0096 70BD     		pop	{r4, r5, r6, pc}
 727              	.L49:
 728              		.align	2
 729              	.L48:
 730 0098 00000000 		.word	UART_DMATransmitCplt
 731 009c 00000000 		.word	UART_DMATxHalfCplt
 732 00a0 00000000 		.word	UART_DMAError
 733              		.cfi_endproc
 734              	.LFE47:
 736              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 737              		.align	2
 738              		.global	HAL_UART_Receive_DMA
 739              		.code	16
 740              		.thumb_func
 742              	HAL_UART_Receive_DMA:
 743              	.LFB48:
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 744              		.loc 1 1023 0
 745              		.cfi_startproc
 746              	.LVL69:
 747 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 748              	.LCFI4:
 749              		.cfi_def_cfa_offset 24
 750              		.cfi_offset 3, -24
 751              		.cfi_offset 4, -20
 752              		.cfi_offset 5, -16
 753              		.cfi_offset 6, -12
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 041C     		mov	r4, r0
 757 0004 131C     		mov	r3, r2
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 758              		.loc 1 1025 0
 759 0006 6A22     		mov	r2, #106
 760              	.LVL70:
 761 0008 825C     		ldrb	r2, [r0, r2]
 762 000a 202A     		cmp	r2, #32
 763 000c 3FD1     		bne	.L53
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 764              		.loc 1 1027 0
 765 000e 0029     		cmp	r1, #0
 766 0010 3FD0     		beq	.L54
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 767              		.loc 1 1027 0 is_stmt 0 discriminator 1
 768 0012 002B     		cmp	r3, #0
 769 0014 3FD0     		beq	.L55
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 770              		.loc 1 1035 0 is_stmt 1
 771 0016 8022     		mov	r2, #128
 772 0018 5201     		lsl	r2, r2, #5
 773 001a 8068     		ldr	r0, [r0, #8]
 774              	.LVL71:
 775 001c 9042     		cmp	r0, r2
ARM GAS  /tmp/ccjVxjbG.s 			page 65


 776 001e 04D1     		bne	.L52
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 777              		.loc 1 1035 0 is_stmt 0 discriminator 1
 778 0020 2269     		ldr	r2, [r4, #16]
 779 0022 002A     		cmp	r2, #0
 780 0024 01D1     		bne	.L52
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 781              		.loc 1 1037 0 is_stmt 1
 782 0026 CA07     		lsl	r2, r1, #31
 783 0028 37D4     		bmi	.L56
 784              	.L52:
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 785              		.loc 1 1044 0
 786 002a 6822     		mov	r2, #104
 787 002c A25C     		ldrb	r2, [r4, r2]
 788 002e 012A     		cmp	r2, #1
 789 0030 35D0     		beq	.L57
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 790              		.loc 1 1044 0 is_stmt 0 discriminator 2
 791 0032 6827     		mov	r7, #104
 792 0034 0125     		mov	r5, #1
 793 0036 E555     		strb	r5, [r4, r7]
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 794              		.loc 1 1046 0 is_stmt 1 discriminator 2
 795 0038 6165     		str	r1, [r4, #84]
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 796              		.loc 1 1047 0 discriminator 2
 797 003a 5822     		mov	r2, #88
 798 003c A352     		strh	r3, [r4, r2]
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 799              		.loc 1 1049 0 discriminator 2
 800 003e 0026     		mov	r6, #0
 801 0040 E666     		str	r6, [r4, #108]
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 802              		.loc 1 1050 0 discriminator 2
 803 0042 2221     		mov	r1, #34
 804              	.LVL72:
 805 0044 1232     		add	r2, r2, #18
 806 0046 A154     		strb	r1, [r4, r2]
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 807              		.loc 1 1053 0 discriminator 2
 808 0048 626E     		ldr	r2, [r4, #100]
 809 004a 1649     		ldr	r1, .L58
 810 004c D162     		str	r1, [r2, #44]
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 811              		.loc 1 1056 0 discriminator 2
 812 004e 626E     		ldr	r2, [r4, #100]
 813 0050 1549     		ldr	r1, .L58+4
 814 0052 1163     		str	r1, [r2, #48]
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 815              		.loc 1 1059 0 discriminator 2
 816 0054 626E     		ldr	r2, [r4, #100]
 817 0056 1549     		ldr	r1, .L58+8
 818 0058 5163     		str	r1, [r2, #52]
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 819              		.loc 1 1062 0 discriminator 2
 820 005a 626E     		ldr	r2, [r4, #100]
ARM GAS  /tmp/ccjVxjbG.s 			page 66


 821 005c 9663     		str	r6, [r2, #56]
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 822              		.loc 1 1065 0 discriminator 2
 823 005e 2168     		ldr	r1, [r4]
 824 0060 2431     		add	r1, r1, #36
 825 0062 606E     		ldr	r0, [r4, #100]
 826 0064 626D     		ldr	r2, [r4, #84]
 827 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 828              	.LVL73:
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 829              		.loc 1 1068 0 discriminator 2
 830 006a E655     		strb	r6, [r4, r7]
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 831              		.loc 1 1071 0 discriminator 2
 832 006c 2268     		ldr	r2, [r4]
 833 006e 1368     		ldr	r3, [r2]
 834 0070 8021     		mov	r1, #128
 835 0072 4900     		lsl	r1, r1, #1
 836 0074 0B43     		orr	r3, r1
 837 0076 1360     		str	r3, [r2]
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 838              		.loc 1 1074 0 discriminator 2
 839 0078 2368     		ldr	r3, [r4]
 840 007a 9A68     		ldr	r2, [r3, #8]
 841 007c 1543     		orr	r5, r2
 842 007e 9D60     		str	r5, [r3, #8]
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 843              		.loc 1 1078 0 discriminator 2
 844 0080 2268     		ldr	r2, [r4]
 845 0082 9168     		ldr	r1, [r2, #8]
 846 0084 4023     		mov	r3, #64
 847 0086 0B43     		orr	r3, r1
 848 0088 9360     		str	r3, [r2, #8]
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 849              		.loc 1 1080 0 discriminator 2
 850 008a 0020     		mov	r0, #0
 851 008c 08E0     		b	.L51
 852              	.LVL74:
 853              	.L53:
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 854              		.loc 1 1084 0
 855 008e 0220     		mov	r0, #2
 856              	.LVL75:
 857 0090 06E0     		b	.L51
 858              	.LVL76:
 859              	.L54:
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 860              		.loc 1 1029 0
 861 0092 0120     		mov	r0, #1
 862              	.LVL77:
 863 0094 04E0     		b	.L51
 864              	.LVL78:
 865              	.L55:
 866 0096 0120     		mov	r0, #1
 867              	.LVL79:
 868 0098 02E0     		b	.L51
 869              	.L56:
ARM GAS  /tmp/ccjVxjbG.s 			page 67


1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 870              		.loc 1 1039 0
 871 009a 0120     		mov	r0, #1
 872 009c 00E0     		b	.L51
 873              	.L57:
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 874              		.loc 1 1044 0
 875 009e 0220     		mov	r0, #2
 876              	.LVL80:
 877              	.L51:
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 878              		.loc 1 1086 0
 879              		@ sp needed
 880              	.LVL81:
 881 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 882              	.L59:
 883 00a2 C046     		.align	2
 884              	.L58:
 885 00a4 00000000 		.word	UART_DMAReceiveCplt
 886 00a8 00000000 		.word	UART_DMARxHalfCplt
 887 00ac 00000000 		.word	UART_DMAError
 888              		.cfi_endproc
 889              	.LFE48:
 891              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 892              		.align	2
 893              		.global	HAL_UART_DMAPause
 894              		.code	16
 895              		.thumb_func
 897              	HAL_UART_DMAPause:
 898              	.LFB49:
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 899              		.loc 1 1094 0
 900              		.cfi_startproc
 901              	.LVL82:
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 902              		.loc 1 1096 0
 903 0000 6823     		mov	r3, #104
 904 0002 C35C     		ldrb	r3, [r0, r3]
 905 0004 012B     		cmp	r3, #1
 906 0006 29D0     		beq	.L64
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 907              		.loc 1 1096 0 is_stmt 0 discriminator 2
 908 0008 0122     		mov	r2, #1
 909 000a 6823     		mov	r3, #104
 910 000c C254     		strb	r2, [r0, r3]
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 911              		.loc 1 1098 0 is_stmt 1 discriminator 2
 912 000e 0133     		add	r3, r3, #1
 913 0010 C35C     		ldrb	r3, [r0, r3]
 914 0012 212B     		cmp	r3, #33
 915 0014 07D1     		bne	.L62
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 916              		.loc 1 1099 0 discriminator 1
 917 0016 0368     		ldr	r3, [r0]
 918 0018 9A68     		ldr	r2, [r3, #8]
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 919              		.loc 1 1098 0 discriminator 1
ARM GAS  /tmp/ccjVxjbG.s 			page 68


 920 001a 1206     		lsl	r2, r2, #24
 921 001c 03D5     		bpl	.L62
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 922              		.loc 1 1102 0
 923 001e 9A68     		ldr	r2, [r3, #8]
 924 0020 8021     		mov	r1, #128
 925 0022 8A43     		bic	r2, r1
 926 0024 9A60     		str	r2, [r3, #8]
 927              	.L62:
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 928              		.loc 1 1104 0
 929 0026 6A23     		mov	r3, #106
 930 0028 C35C     		ldrb	r3, [r0, r3]
 931 002a 222B     		cmp	r3, #34
 932 002c 11D1     		bne	.L63
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 933              		.loc 1 1105 0 discriminator 1
 934 002e 0368     		ldr	r3, [r0]
 935 0030 9A68     		ldr	r2, [r3, #8]
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 936              		.loc 1 1104 0 discriminator 1
 937 0032 5206     		lsl	r2, r2, #25
 938 0034 0DD5     		bpl	.L63
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 939              		.loc 1 1108 0
 940 0036 1968     		ldr	r1, [r3]
 941 0038 094A     		ldr	r2, .L65
 942 003a 0A40     		and	r2, r1
 943 003c 1A60     		str	r2, [r3]
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 944              		.loc 1 1109 0
 945 003e 0268     		ldr	r2, [r0]
 946 0040 9368     		ldr	r3, [r2, #8]
 947 0042 0121     		mov	r1, #1
 948 0044 8B43     		bic	r3, r1
 949 0046 9360     		str	r3, [r2, #8]
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 950              		.loc 1 1112 0
 951 0048 0268     		ldr	r2, [r0]
 952 004a 9368     		ldr	r3, [r2, #8]
 953 004c 3F31     		add	r1, r1, #63
 954 004e 8B43     		bic	r3, r1
 955 0050 9360     		str	r3, [r2, #8]
 956              	.L63:
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 957              		.loc 1 1116 0
 958 0052 0022     		mov	r2, #0
 959 0054 6823     		mov	r3, #104
 960 0056 C254     		strb	r2, [r0, r3]
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 961              		.loc 1 1118 0
 962 0058 0020     		mov	r0, #0
 963              	.LVL83:
 964 005a 00E0     		b	.L61
 965              	.LVL84:
 966              	.L64:
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 69


 967              		.loc 1 1096 0
 968 005c 0220     		mov	r0, #2
 969              	.LVL85:
 970              	.L61:
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 971              		.loc 1 1119 0
 972              		@ sp needed
 973 005e 7047     		bx	lr
 974              	.L66:
 975              		.align	2
 976              	.L65:
 977 0060 FFFEFFFF 		.word	-257
 978              		.cfi_endproc
 979              	.LFE49:
 981              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 982              		.align	2
 983              		.global	HAL_UART_DMAResume
 984              		.code	16
 985              		.thumb_func
 987              	HAL_UART_DMAResume:
 988              	.LFB50:
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 989              		.loc 1 1127 0
 990              		.cfi_startproc
 991              	.LVL86:
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 992              		.loc 1 1129 0
 993 0000 6823     		mov	r3, #104
 994 0002 C35C     		ldrb	r3, [r0, r3]
 995 0004 012B     		cmp	r3, #1
 996 0006 27D0     		beq	.L71
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 997              		.loc 1 1129 0 is_stmt 0 discriminator 2
 998 0008 0122     		mov	r2, #1
 999 000a 6823     		mov	r3, #104
 1000 000c C254     		strb	r2, [r0, r3]
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1001              		.loc 1 1131 0 is_stmt 1 discriminator 2
 1002 000e 0133     		add	r3, r3, #1
 1003 0010 C35C     		ldrb	r3, [r0, r3]
 1004 0012 212B     		cmp	r3, #33
 1005 0014 04D1     		bne	.L69
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1006              		.loc 1 1134 0
 1007 0016 0268     		ldr	r2, [r0]
 1008 0018 9168     		ldr	r1, [r2, #8]
 1009 001a 5F33     		add	r3, r3, #95
 1010 001c 0B43     		orr	r3, r1
 1011 001e 9360     		str	r3, [r2, #8]
 1012              	.L69:
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1013              		.loc 1 1136 0
 1014 0020 6A23     		mov	r3, #106
 1015 0022 C35C     		ldrb	r3, [r0, r3]
 1016 0024 222B     		cmp	r3, #34
 1017 0026 12D1     		bne	.L70
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 70


 1018              		.loc 1 1139 0
 1019 0028 0368     		ldr	r3, [r0]
 1020 002a 0822     		mov	r2, #8
 1021 002c 1A62     		str	r2, [r3, #32]
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1022              		.loc 1 1142 0
 1023 002e 0268     		ldr	r2, [r0]
 1024 0030 1368     		ldr	r3, [r2]
 1025 0032 8021     		mov	r1, #128
 1026 0034 4900     		lsl	r1, r1, #1
 1027 0036 0B43     		orr	r3, r1
 1028 0038 1360     		str	r3, [r2]
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1029              		.loc 1 1143 0
 1030 003a 0268     		ldr	r2, [r0]
 1031 003c 9168     		ldr	r1, [r2, #8]
 1032 003e 0123     		mov	r3, #1
 1033 0040 0B43     		orr	r3, r1
 1034 0042 9360     		str	r3, [r2, #8]
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1035              		.loc 1 1146 0
 1036 0044 0268     		ldr	r2, [r0]
 1037 0046 9168     		ldr	r1, [r2, #8]
 1038 0048 4023     		mov	r3, #64
 1039 004a 0B43     		orr	r3, r1
 1040 004c 9360     		str	r3, [r2, #8]
 1041              	.L70:
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1042              		.loc 1 1150 0
 1043 004e 0022     		mov	r2, #0
 1044 0050 6823     		mov	r3, #104
 1045 0052 C254     		strb	r2, [r0, r3]
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1046              		.loc 1 1152 0
 1047 0054 0020     		mov	r0, #0
 1048              	.LVL87:
 1049 0056 00E0     		b	.L68
 1050              	.LVL88:
 1051              	.L71:
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1052              		.loc 1 1129 0
 1053 0058 0220     		mov	r0, #2
 1054              	.LVL89:
 1055              	.L68:
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1056              		.loc 1 1153 0
 1057              		@ sp needed
 1058 005a 7047     		bx	lr
 1059              		.cfi_endproc
 1060              	.LFE50:
 1062              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1063              		.align	2
 1064              		.global	HAL_UART_DMAStop
 1065              		.code	16
 1066              		.thumb_func
 1068              	HAL_UART_DMAStop:
 1069              	.LFB51:
ARM GAS  /tmp/ccjVxjbG.s 			page 71


1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1070              		.loc 1 1161 0
 1071              		.cfi_startproc
 1072              	.LVL90:
 1073 0000 10B5     		push	{r4, lr}
 1074              	.LCFI5:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 4, -8
 1077              		.cfi_offset 14, -4
 1078 0002 041C     		mov	r4, r0
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1079              		.loc 1 1170 0
 1080 0004 6923     		mov	r3, #105
 1081 0006 C35C     		ldrb	r3, [r0, r3]
 1082 0008 212B     		cmp	r3, #33
 1083 000a 0FD1     		bne	.L73
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1084              		.loc 1 1171 0 discriminator 1
 1085 000c 0368     		ldr	r3, [r0]
 1086 000e 9A68     		ldr	r2, [r3, #8]
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1087              		.loc 1 1170 0 discriminator 1
 1088 0010 1206     		lsl	r2, r2, #24
 1089 0012 0BD5     		bpl	.L73
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1090              		.loc 1 1173 0
 1091 0014 9A68     		ldr	r2, [r3, #8]
 1092 0016 8021     		mov	r1, #128
 1093 0018 8A43     		bic	r2, r1
 1094 001a 9A60     		str	r2, [r3, #8]
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1095              		.loc 1 1176 0
 1096 001c 006E     		ldr	r0, [r0, #96]
 1097              	.LVL91:
 1098 001e 0028     		cmp	r0, #0
 1099 0020 01D0     		beq	.L74
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1100              		.loc 1 1178 0
 1101 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 1102              	.LVL92:
 1103              	.L74:
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1104              		.loc 1 1181 0
 1105 0026 201C     		mov	r0, r4
 1106 0028 FFF7FEFF 		bl	UART_EndTxTransfer
 1107              	.LVL93:
 1108              	.L73:
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1109              		.loc 1 1185 0
 1110 002c 6A23     		mov	r3, #106
 1111 002e E35C     		ldrb	r3, [r4, r3]
 1112 0030 222B     		cmp	r3, #34
 1113 0032 0FD1     		bne	.L75
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1114              		.loc 1 1186 0 discriminator 1
 1115 0034 2368     		ldr	r3, [r4]
 1116 0036 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccjVxjbG.s 			page 72


1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1117              		.loc 1 1185 0 discriminator 1
 1118 0038 5206     		lsl	r2, r2, #25
 1119 003a 0BD5     		bpl	.L75
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1120              		.loc 1 1188 0
 1121 003c 9A68     		ldr	r2, [r3, #8]
 1122 003e 4021     		mov	r1, #64
 1123 0040 8A43     		bic	r2, r1
 1124 0042 9A60     		str	r2, [r3, #8]
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1125              		.loc 1 1191 0
 1126 0044 606E     		ldr	r0, [r4, #100]
 1127 0046 0028     		cmp	r0, #0
 1128 0048 01D0     		beq	.L76
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1129              		.loc 1 1193 0
 1130 004a FFF7FEFF 		bl	HAL_DMA_Abort
 1131              	.LVL94:
 1132              	.L76:
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1133              		.loc 1 1196 0
 1134 004e 201C     		mov	r0, r4
 1135 0050 FFF7FEFF 		bl	UART_EndRxTransfer
 1136              	.LVL95:
 1137              	.L75:
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1138              		.loc 1 1200 0
 1139 0054 0020     		mov	r0, #0
 1140              		@ sp needed
 1141              	.LVL96:
 1142 0056 10BD     		pop	{r4, pc}
 1143              		.cfi_endproc
 1144              	.LFE51:
 1146              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1147              		.align	2
 1148              		.global	HAL_UART_Abort
 1149              		.code	16
 1150              		.thumb_func
 1152              	HAL_UART_Abort:
 1153              	.LFB52:
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1154              		.loc 1 1215 0
 1155              		.cfi_startproc
 1156              	.LVL97:
 1157 0000 10B5     		push	{r4, lr}
 1158              	.LCFI6:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
 1162 0002 041C     		mov	r4, r0
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1163              		.loc 1 1217 0
 1164 0004 0268     		ldr	r2, [r0]
 1165 0006 1168     		ldr	r1, [r2]
 1166 0008 1B4B     		ldr	r3, .L80
 1167 000a 0B40     		and	r3, r1
ARM GAS  /tmp/ccjVxjbG.s 			page 73


 1168 000c 1360     		str	r3, [r2]
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1169              		.loc 1 1218 0
 1170 000e 0268     		ldr	r2, [r0]
 1171 0010 9368     		ldr	r3, [r2, #8]
 1172 0012 0121     		mov	r1, #1
 1173 0014 8B43     		bic	r3, r1
 1174 0016 9360     		str	r3, [r2, #8]
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1175              		.loc 1 1221 0
 1176 0018 0368     		ldr	r3, [r0]
 1177 001a 9A68     		ldr	r2, [r3, #8]
 1178 001c 1206     		lsl	r2, r2, #24
 1179 001e 0BD5     		bpl	.L78
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1180              		.loc 1 1223 0
 1181 0020 9A68     		ldr	r2, [r3, #8]
 1182 0022 7F31     		add	r1, r1, #127
 1183 0024 8A43     		bic	r2, r1
 1184 0026 9A60     		str	r2, [r3, #8]
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1185              		.loc 1 1226 0
 1186 0028 036E     		ldr	r3, [r0, #96]
 1187 002a 002B     		cmp	r3, #0
 1188 002c 04D0     		beq	.L78
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1189              		.loc 1 1230 0
 1190 002e 0022     		mov	r2, #0
 1191 0030 9A63     		str	r2, [r3, #56]
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1192              		.loc 1 1232 0
 1193 0032 006E     		ldr	r0, [r0, #96]
 1194              	.LVL98:
 1195 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1196              	.LVL99:
 1197              	.L78:
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1198              		.loc 1 1237 0
 1199 0038 2368     		ldr	r3, [r4]
 1200 003a 9A68     		ldr	r2, [r3, #8]
 1201 003c 5206     		lsl	r2, r2, #25
 1202 003e 0BD5     		bpl	.L79
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1203              		.loc 1 1239 0
 1204 0040 9A68     		ldr	r2, [r3, #8]
 1205 0042 4021     		mov	r1, #64
 1206 0044 8A43     		bic	r2, r1
 1207 0046 9A60     		str	r2, [r3, #8]
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1208              		.loc 1 1242 0
 1209 0048 636E     		ldr	r3, [r4, #100]
 1210 004a 002B     		cmp	r3, #0
 1211 004c 04D0     		beq	.L79
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1212              		.loc 1 1246 0
 1213 004e 0022     		mov	r2, #0
 1214 0050 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccjVxjbG.s 			page 74


1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1215              		.loc 1 1248 0
 1216 0052 606E     		ldr	r0, [r4, #100]
 1217 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1218              	.LVL100:
 1219              	.L79:
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0; 
 1220              		.loc 1 1253 0
 1221 0058 0023     		mov	r3, #0
 1222 005a 5222     		mov	r2, #82
 1223 005c A352     		strh	r3, [r4, r2]
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1224              		.loc 1 1254 0
 1225 005e 0832     		add	r2, r2, #8
 1226 0060 A352     		strh	r3, [r4, r2]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1227              		.loc 1 1257 0
 1228 0062 2268     		ldr	r2, [r4]
 1229 0064 0F21     		mov	r1, #15
 1230 0066 1162     		str	r1, [r2, #32]
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1231              		.loc 1 1260 0
 1232 0068 2022     		mov	r2, #32
 1233 006a 5A31     		add	r1, r1, #90
 1234 006c 6254     		strb	r2, [r4, r1]
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1235              		.loc 1 1261 0
 1236 006e 0131     		add	r1, r1, #1
 1237 0070 6254     		strb	r2, [r4, r1]
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1238              		.loc 1 1264 0
 1239 0072 E366     		str	r3, [r4, #108]
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1240              		.loc 1 1267 0
 1241 0074 0020     		mov	r0, #0
 1242              		@ sp needed
 1243              	.LVL101:
 1244 0076 10BD     		pop	{r4, pc}
 1245              	.L81:
 1246              		.align	2
 1247              	.L80:
 1248 0078 1FFEFFFF 		.word	-481
 1249              		.cfi_endproc
 1250              	.LFE52:
 1252              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1253              		.align	2
 1254              		.global	HAL_UART_AbortTransmit
 1255              		.code	16
 1256              		.thumb_func
 1258              	HAL_UART_AbortTransmit:
 1259              	.LFB53:
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1260              		.loc 1 1282 0
 1261              		.cfi_startproc
 1262              	.LVL102:
 1263 0000 10B5     		push	{r4, lr}
 1264              	.LCFI7:
ARM GAS  /tmp/ccjVxjbG.s 			page 75


 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 4, -8
 1267              		.cfi_offset 14, -4
 1268 0002 041C     		mov	r4, r0
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1269              		.loc 1 1284 0
 1270 0004 0268     		ldr	r2, [r0]
 1271 0006 1368     		ldr	r3, [r2]
 1272 0008 C021     		mov	r1, #192
 1273 000a 8B43     		bic	r3, r1
 1274 000c 1360     		str	r3, [r2]
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1275              		.loc 1 1287 0
 1276 000e 0368     		ldr	r3, [r0]
 1277 0010 9A68     		ldr	r2, [r3, #8]
 1278 0012 1206     		lsl	r2, r2, #24
 1279 0014 0BD5     		bpl	.L83
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1280              		.loc 1 1289 0
 1281 0016 9A68     		ldr	r2, [r3, #8]
 1282 0018 4039     		sub	r1, r1, #64
 1283 001a 8A43     		bic	r2, r1
 1284 001c 9A60     		str	r2, [r3, #8]
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1285              		.loc 1 1292 0
 1286 001e 036E     		ldr	r3, [r0, #96]
 1287 0020 002B     		cmp	r3, #0
 1288 0022 04D0     		beq	.L83
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1289              		.loc 1 1296 0
 1290 0024 0022     		mov	r2, #0
 1291 0026 9A63     		str	r2, [r3, #56]
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1292              		.loc 1 1298 0
 1293 0028 006E     		ldr	r0, [r0, #96]
 1294              	.LVL103:
 1295 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1296              	.LVL104:
 1297              	.L83:
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1298              		.loc 1 1303 0
 1299 002e 0022     		mov	r2, #0
 1300 0030 5223     		mov	r3, #82
 1301 0032 E252     		strh	r2, [r4, r3]
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1302              		.loc 1 1306 0
 1303 0034 2032     		add	r2, r2, #32
 1304 0036 1733     		add	r3, r3, #23
 1305 0038 E254     		strb	r2, [r4, r3]
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1306              		.loc 1 1309 0
 1307 003a 0020     		mov	r0, #0
 1308              		@ sp needed
 1309              	.LVL105:
 1310 003c 10BD     		pop	{r4, pc}
 1311              		.cfi_endproc
 1312              	.LFE53:
ARM GAS  /tmp/ccjVxjbG.s 			page 76


 1314 003e C046     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1315              		.align	2
 1316              		.global	HAL_UART_AbortReceive
 1317              		.code	16
 1318              		.thumb_func
 1320              	HAL_UART_AbortReceive:
 1321              	.LFB54:
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1322              		.loc 1 1324 0
 1323              		.cfi_startproc
 1324              	.LVL106:
 1325 0000 10B5     		push	{r4, lr}
 1326              	.LCFI8:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 4, -8
 1329              		.cfi_offset 14, -4
 1330 0002 041C     		mov	r4, r0
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1331              		.loc 1 1326 0
 1332 0004 0268     		ldr	r2, [r0]
 1333 0006 1168     		ldr	r1, [r2]
 1334 0008 114B     		ldr	r3, .L86
 1335 000a 0B40     		and	r3, r1
 1336 000c 1360     		str	r3, [r2]
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1337              		.loc 1 1327 0
 1338 000e 0268     		ldr	r2, [r0]
 1339 0010 9368     		ldr	r3, [r2, #8]
 1340 0012 0121     		mov	r1, #1
 1341 0014 8B43     		bic	r3, r1
 1342 0016 9360     		str	r3, [r2, #8]
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1343              		.loc 1 1330 0
 1344 0018 0368     		ldr	r3, [r0]
 1345 001a 9A68     		ldr	r2, [r3, #8]
 1346 001c 5206     		lsl	r2, r2, #25
 1347 001e 0BD5     		bpl	.L85
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1348              		.loc 1 1332 0
 1349 0020 9A68     		ldr	r2, [r3, #8]
 1350 0022 3F31     		add	r1, r1, #63
 1351 0024 8A43     		bic	r2, r1
 1352 0026 9A60     		str	r2, [r3, #8]
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1353              		.loc 1 1335 0
 1354 0028 436E     		ldr	r3, [r0, #100]
 1355 002a 002B     		cmp	r3, #0
 1356 002c 04D0     		beq	.L85
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1357              		.loc 1 1339 0
 1358 002e 0022     		mov	r2, #0
 1359 0030 9A63     		str	r2, [r3, #56]
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1360              		.loc 1 1341 0
 1361 0032 406E     		ldr	r0, [r0, #100]
 1362              	.LVL107:
 1363 0034 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccjVxjbG.s 			page 77


 1364              	.LVL108:
 1365              	.L85:
1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1366              		.loc 1 1346 0
 1367 0038 0022     		mov	r2, #0
 1368 003a 5A23     		mov	r3, #90
 1369 003c E252     		strh	r2, [r4, r3]
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1370              		.loc 1 1349 0
 1371 003e 2368     		ldr	r3, [r4]
 1372 0040 0F32     		add	r2, r2, #15
 1373 0042 1A62     		str	r2, [r3, #32]
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1374              		.loc 1 1352 0
 1375 0044 1132     		add	r2, r2, #17
 1376 0046 6A23     		mov	r3, #106
 1377 0048 E254     		strb	r2, [r4, r3]
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1378              		.loc 1 1355 0
 1379 004a 0020     		mov	r0, #0
 1380              		@ sp needed
 1381              	.LVL109:
 1382 004c 10BD     		pop	{r4, pc}
 1383              	.L87:
 1384 004e C046     		.align	2
 1385              	.L86:
 1386 0050 DFFEFFFF 		.word	-289
 1387              		.cfi_endproc
 1388              	.LFE54:
 1390              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1391              		.align	2
 1392              		.weak	HAL_UART_TxCpltCallback
 1393              		.code	16
 1394              		.thumb_func
 1396              	HAL_UART_TxCpltCallback:
 1397              	.LFB59:
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1398              		.loc 1 1777 0
 1399              		.cfi_startproc
 1400              	.LVL110:
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1401              		.loc 1 1784 0
 1402              		@ sp needed
 1403 0000 7047     		bx	lr
 1404              		.cfi_endproc
 1405              	.LFE59:
 1407 0002 C046     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1408              		.align	2
 1409              		.code	16
 1410              		.thumb_func
 1412              	UART_DMATransmitCplt:
 1413              	.LFB81:
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1414              		.loc 1 2490 0
 1415              		.cfi_startproc
 1416              	.LVL111:
 1417 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccjVxjbG.s 			page 78


 1418              	.LCFI9:
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 3, -8
 1421              		.cfi_offset 14, -4
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
 1422              		.loc 1 2491 0
 1423 0002 836A     		ldr	r3, [r0, #40]
 1424              	.LVL112:
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1425              		.loc 1 2494 0
 1426 0004 0268     		ldr	r2, [r0]
 1427 0006 1268     		ldr	r2, [r2]
 1428 0008 9206     		lsl	r2, r2, #26
 1429 000a 0DD4     		bmi	.L90
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1430              		.loc 1 2496 0
 1431 000c 0021     		mov	r1, #0
 1432 000e 5222     		mov	r2, #82
 1433 0010 9952     		strh	r1, [r3, r2]
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1434              		.loc 1 2500 0
 1435 0012 1968     		ldr	r1, [r3]
 1436 0014 8A68     		ldr	r2, [r1, #8]
 1437 0016 8020     		mov	r0, #128
 1438              	.LVL113:
 1439 0018 8243     		bic	r2, r0
 1440 001a 8A60     		str	r2, [r1, #8]
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1441              		.loc 1 2503 0
 1442 001c 1A68     		ldr	r2, [r3]
 1443 001e 1168     		ldr	r1, [r2]
 1444 0020 4023     		mov	r3, #64
 1445              	.LVL114:
 1446 0022 0B43     		orr	r3, r1
 1447 0024 1360     		str	r3, [r2]
 1448 0026 02E0     		b	.L89
 1449              	.LVL115:
 1450              	.L90:
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1451              		.loc 1 2508 0
 1452 0028 181C     		mov	r0, r3
 1453              	.LVL116:
 1454 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1455              	.LVL117:
 1456              	.L89:
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1457              		.loc 1 2511 0
 1458              		@ sp needed
 1459 002e 08BD     		pop	{r3, pc}
 1460              		.cfi_endproc
 1461              	.LFE81:
 1463              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1464              		.align	2
 1465              		.code	16
 1466              		.thumb_func
 1468              	UART_EndTransmit_IT:
 1469              	.LFB92:
ARM GAS  /tmp/ccjVxjbG.s 			page 79


2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1470              		.loc 1 2793 0
 1471              		.cfi_startproc
 1472              	.LVL118:
 1473 0000 08B5     		push	{r3, lr}
 1474              	.LCFI10:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 3, -8
 1477              		.cfi_offset 14, -4
2794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1478              		.loc 1 2795 0
 1479 0002 0268     		ldr	r2, [r0]
 1480 0004 1368     		ldr	r3, [r2]
 1481 0006 4021     		mov	r1, #64
 1482 0008 8B43     		bic	r3, r1
 1483 000a 1360     		str	r3, [r2]
2796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1484              		.loc 1 2798 0
 1485 000c 2022     		mov	r2, #32
 1486 000e 6923     		mov	r3, #105
 1487 0010 C254     		strb	r2, [r0, r3]
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1488              		.loc 1 2800 0
 1489 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1490              	.LVL119:
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1491              		.loc 1 2803 0
 1492 0016 0020     		mov	r0, #0
 1493              		@ sp needed
 1494 0018 08BD     		pop	{r3, pc}
 1495              		.cfi_endproc
 1496              	.LFE92:
 1498 001a C046     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1499              		.align	2
 1500              		.weak	HAL_UART_TxHalfCpltCallback
 1501              		.code	16
 1502              		.thumb_func
 1504              	HAL_UART_TxHalfCpltCallback:
 1505              	.LFB60:
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1506              		.loc 1 1792 0
 1507              		.cfi_startproc
 1508              	.LVL120:
ARM GAS  /tmp/ccjVxjbG.s 			page 80


1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1509              		.loc 1 1799 0
 1510              		@ sp needed
 1511 0000 7047     		bx	lr
 1512              		.cfi_endproc
 1513              	.LFE60:
 1515 0002 C046     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1516              		.align	2
 1517              		.code	16
 1518              		.thumb_func
 1520              	UART_DMATxHalfCplt:
 1521              	.LFB82:
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1522              		.loc 1 2519 0
 1523              		.cfi_startproc
 1524              	.LVL121:
 1525 0000 08B5     		push	{r3, lr}
 1526              	.LCFI11:
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 3, -8
 1529              		.cfi_offset 14, -4
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1530              		.loc 1 2520 0
 1531 0002 806A     		ldr	r0, [r0, #40]
 1532              	.LVL122:
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1533              		.loc 1 2522 0
 1534 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1535              	.LVL123:
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1536              		.loc 1 2523 0
 1537              		@ sp needed
 1538 0008 08BD     		pop	{r3, pc}
 1539              		.cfi_endproc
 1540              	.LFE82:
 1542 000a C046     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1543              		.align	2
 1544              		.weak	HAL_UART_RxCpltCallback
 1545              		.code	16
 1546              		.thumb_func
 1548              	HAL_UART_RxCpltCallback:
 1549              	.LFB61:
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1550              		.loc 1 1807 0
 1551              		.cfi_startproc
 1552              	.LVL124:
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1553              		.loc 1 1814 0
 1554              		@ sp needed
 1555 0000 7047     		bx	lr
 1556              		.cfi_endproc
 1557              	.LFE61:
 1559 0002 C046     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1560              		.align	2
 1561              		.code	16
 1562              		.thumb_func
 1564              	UART_DMAReceiveCplt:
ARM GAS  /tmp/ccjVxjbG.s 			page 81


 1565              	.LFB83:
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1566              		.loc 1 2531 0
 1567              		.cfi_startproc
 1568              	.LVL125:
 1569 0000 08B5     		push	{r3, lr}
 1570              	.LCFI12:
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 3, -8
 1573              		.cfi_offset 14, -4
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1574              		.loc 1 2532 0
 1575 0002 836A     		ldr	r3, [r0, #40]
 1576              	.LVL126:
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1577              		.loc 1 2535 0
 1578 0004 0268     		ldr	r2, [r0]
 1579 0006 1268     		ldr	r2, [r2]
 1580 0008 9206     		lsl	r2, r2, #26
 1581 000a 14D4     		bmi	.L97
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1582              		.loc 1 2537 0
 1583 000c 0021     		mov	r1, #0
 1584 000e 5A22     		mov	r2, #90
 1585 0010 9952     		strh	r1, [r3, r2]
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1586              		.loc 1 2540 0
 1587 0012 1968     		ldr	r1, [r3]
 1588 0014 0868     		ldr	r0, [r1]
 1589              	.LVL127:
 1590 0016 0A4A     		ldr	r2, .L98
 1591 0018 0240     		and	r2, r0
 1592 001a 0A60     		str	r2, [r1]
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1593              		.loc 1 2541 0
 1594 001c 1968     		ldr	r1, [r3]
 1595 001e 8A68     		ldr	r2, [r1, #8]
 1596 0020 0120     		mov	r0, #1
 1597 0022 8243     		bic	r2, r0
 1598 0024 8A60     		str	r2, [r1, #8]
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1599              		.loc 1 2545 0
 1600 0026 1968     		ldr	r1, [r3]
 1601 0028 8A68     		ldr	r2, [r1, #8]
 1602 002a 3F30     		add	r0, r0, #63
 1603 002c 8243     		bic	r2, r0
 1604 002e 8A60     		str	r2, [r1, #8]
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1605              		.loc 1 2548 0
 1606 0030 2021     		mov	r1, #32
 1607 0032 6A22     		mov	r2, #106
 1608 0034 9954     		strb	r1, [r3, r2]
 1609              	.L97:
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1610              		.loc 1 2551 0
 1611 0036 181C     		mov	r0, r3
 1612 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccjVxjbG.s 			page 82


 1613              	.LVL128:
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1614              		.loc 1 2552 0
 1615              		@ sp needed
 1616 003c 08BD     		pop	{r3, pc}
 1617              	.L99:
 1618 003e C046     		.align	2
 1619              	.L98:
 1620 0040 FFFEFFFF 		.word	-257
 1621              		.cfi_endproc
 1622              	.LFE83:
 1624              		.section	.text.UART_Receive_IT,"ax",%progbits
 1625              		.align	2
 1626              		.code	16
 1627              		.thumb_func
 1629              	UART_Receive_IT:
 1630              	.LFB93:
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1631              		.loc 1 2813 0
 1632              		.cfi_startproc
 1633              	.LVL129:
 1634 0000 38B5     		push	{r3, r4, r5, lr}
 1635              	.LCFI13:
 1636              		.cfi_def_cfa_offset 16
 1637              		.cfi_offset 3, -16
 1638              		.cfi_offset 4, -12
 1639              		.cfi_offset 5, -8
 1640              		.cfi_offset 14, -4
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 1641              		.loc 1 2815 0
 1642 0002 5C23     		mov	r3, #92
 1643 0004 C25A     		ldrh	r2, [r0, r3]
 1644              	.LVL130:
2816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhdata;
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1645              		.loc 1 2819 0
 1646 0006 0E33     		add	r3, r3, #14
 1647 0008 C35C     		ldrb	r3, [r0, r3]
 1648 000a 222B     		cmp	r3, #34
 1649 000c 2ED1     		bne	.L101
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1650              		.loc 1 2821 0
 1651 000e 0368     		ldr	r3, [r0]
 1652 0010 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccjVxjbG.s 			page 83


 1653 0012 9CB2     		uxth	r4, r3
 1654              	.LVL131:
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1655              		.loc 1 2822 0
 1656 0014 8021     		mov	r1, #128
 1657 0016 4901     		lsl	r1, r1, #5
 1658 0018 8568     		ldr	r5, [r0, #8]
 1659 001a 8D42     		cmp	r5, r1
 1660 001c 09D1     		bne	.L102
 1661              		.loc 1 2822 0 is_stmt 0 discriminator 1
 1662 001e 0169     		ldr	r1, [r0, #16]
 1663 0020 0029     		cmp	r1, #0
 1664 0022 06D1     		bne	.L102
 1665              	.LVL132:
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 1666              		.loc 1 2825 0 is_stmt 1
 1667 0024 2240     		and	r2, r4
 1668              	.LVL133:
 1669 0026 436D     		ldr	r3, [r0, #84]
 1670 0028 1A80     		strh	r2, [r3]
 1671              	.LVL134:
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 1672              		.loc 1 2826 0
 1673 002a 436D     		ldr	r3, [r0, #84]
 1674              	.LVL135:
 1675 002c 0233     		add	r3, r3, #2
 1676 002e 4365     		str	r3, [r0, #84]
 1677 0030 04E0     		b	.L103
 1678              	.LVL136:
 1679              	.L102:
2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1680              		.loc 1 2830 0
 1681 0032 416D     		ldr	r1, [r0, #84]
 1682 0034 4C1C     		add	r4, r1, #1
 1683              	.LVL137:
 1684 0036 4465     		str	r4, [r0, #84]
 1685 0038 1A40     		and	r2, r3
 1686              	.LVL138:
 1687 003a 0A70     		strb	r2, [r1]
 1688              	.LVL139:
 1689              	.L103:
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 1690              		.loc 1 2833 0
 1691 003c 5A22     		mov	r2, #90
 1692 003e 835A     		ldrh	r3, [r0, r2]
 1693 0040 013B     		sub	r3, r3, #1
 1694 0042 9BB2     		uxth	r3, r3
 1695 0044 8352     		strh	r3, [r0, r2]
 1696 0046 002B     		cmp	r3, #0
 1697 0048 17D1     		bne	.L105
ARM GAS  /tmp/ccjVxjbG.s 			page 84


2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1698              		.loc 1 2836 0
 1699 004a 0268     		ldr	r2, [r0]
 1700 004c 1168     		ldr	r1, [r2]
 1701 004e 0C4B     		ldr	r3, .L106
 1702 0050 0B40     		and	r3, r1
 1703 0052 1360     		str	r3, [r2]
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1704              		.loc 1 2839 0
 1705 0054 0268     		ldr	r2, [r0]
 1706 0056 9368     		ldr	r3, [r2, #8]
 1707 0058 0121     		mov	r1, #1
 1708 005a 8B43     		bic	r3, r1
 1709 005c 9360     		str	r3, [r2, #8]
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1710              		.loc 1 2842 0
 1711 005e 2022     		mov	r2, #32
 1712 0060 6A23     		mov	r3, #106
 1713 0062 C254     		strb	r2, [r0, r3]
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1714              		.loc 1 2844 0
 1715 0064 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1716              	.LVL140:
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_OK;
 1717              		.loc 1 2846 0
 1718 0068 0020     		mov	r0, #0
 1719 006a 07E0     		b	.L104
 1720              	.LVL141:
 1721              	.L101:
2847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
2850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1722              		.loc 1 2854 0
 1723 006c 0268     		ldr	r2, [r0]
 1724              	.LVL142:
 1725 006e 9169     		ldr	r1, [r2, #24]
 1726 0070 0823     		mov	r3, #8
 1727 0072 0B43     		orr	r3, r1
 1728 0074 9361     		str	r3, [r2, #24]
 1729              	.LVL143:
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
 1730              		.loc 1 2856 0
 1731 0076 0220     		mov	r0, #2
ARM GAS  /tmp/ccjVxjbG.s 			page 85


 1732              	.LVL144:
 1733 0078 00E0     		b	.L104
 1734              	.LVL145:
 1735              	.L105:
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1736              		.loc 1 2849 0
 1737 007a 0020     		mov	r0, #0
 1738              	.LVL146:
 1739              	.L104:
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1740              		.loc 1 2858 0
 1741              		@ sp needed
 1742 007c 38BD     		pop	{r3, r4, r5, pc}
 1743              	.L107:
 1744 007e C046     		.align	2
 1745              	.L106:
 1746 0080 DFFEFFFF 		.word	-289
 1747              		.cfi_endproc
 1748              	.LFE93:
 1750              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1751              		.align	2
 1752              		.weak	HAL_UART_RxHalfCpltCallback
 1753              		.code	16
 1754              		.thumb_func
 1756              	HAL_UART_RxHalfCpltCallback:
 1757              	.LFB62:
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1758              		.loc 1 1822 0
 1759              		.cfi_startproc
 1760              	.LVL147:
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1761              		.loc 1 1829 0
 1762              		@ sp needed
 1763 0000 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE62:
 1767 0002 C046     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1768              		.align	2
 1769              		.code	16
 1770              		.thumb_func
 1772              	UART_DMARxHalfCplt:
 1773              	.LFB84:
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1774              		.loc 1 2560 0
 1775              		.cfi_startproc
 1776              	.LVL148:
 1777 0000 08B5     		push	{r3, lr}
 1778              	.LCFI14:
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 3, -8
 1781              		.cfi_offset 14, -4
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1782              		.loc 1 2561 0
 1783 0002 806A     		ldr	r0, [r0, #40]
 1784              	.LVL149:
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
ARM GAS  /tmp/ccjVxjbG.s 			page 86


 1785              		.loc 1 2563 0
 1786 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1787              	.LVL150:
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1788              		.loc 1 2564 0
 1789              		@ sp needed
 1790 0008 08BD     		pop	{r3, pc}
 1791              		.cfi_endproc
 1792              	.LFE84:
 1794 000a C046     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1795              		.align	2
 1796              		.weak	HAL_UART_ErrorCallback
 1797              		.code	16
 1798              		.thumb_func
 1800              	HAL_UART_ErrorCallback:
 1801              	.LFB63:
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1802              		.loc 1 1837 0
 1803              		.cfi_startproc
 1804              	.LVL151:
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1805              		.loc 1 1844 0
 1806              		@ sp needed
 1807 0000 7047     		bx	lr
 1808              		.cfi_endproc
 1809              	.LFE63:
 1811 0002 C046     		.section	.text.UART_DMAError,"ax",%progbits
 1812              		.align	2
 1813              		.code	16
 1814              		.thumb_func
 1816              	UART_DMAError:
 1817              	.LFB85:
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1818              		.loc 1 2572 0
 1819              		.cfi_startproc
 1820              	.LVL152:
 1821 0000 10B5     		push	{r4, lr}
 1822              	.LCFI15:
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 4, -8
 1825              		.cfi_offset 14, -4
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1826              		.loc 1 2573 0
 1827 0002 846A     		ldr	r4, [r0, #40]
 1828              	.LVL153:
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1829              		.loc 1 2576 0
 1830 0004 6923     		mov	r3, #105
 1831 0006 E35C     		ldrb	r3, [r4, r3]
 1832 0008 212B     		cmp	r3, #33
 1833 000a 09D1     		bne	.L112
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1834              		.loc 1 2577 0
 1835 000c 2368     		ldr	r3, [r4]
 1836 000e 9B68     		ldr	r3, [r3, #8]
 1837 0010 1B06     		lsl	r3, r3, #24
 1838 0012 05D5     		bpl	.L112
ARM GAS  /tmp/ccjVxjbG.s 			page 87


2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1839              		.loc 1 2579 0
 1840 0014 0022     		mov	r2, #0
 1841 0016 5223     		mov	r3, #82
 1842 0018 E252     		strh	r2, [r4, r3]
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1843              		.loc 1 2580 0
 1844 001a 201C     		mov	r0, r4
 1845              	.LVL154:
 1846 001c FFF7FEFF 		bl	UART_EndTxTransfer
 1847              	.LVL155:
 1848              	.L112:
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1849              		.loc 1 2584 0
 1850 0020 6A23     		mov	r3, #106
 1851 0022 E35C     		ldrb	r3, [r4, r3]
 1852 0024 222B     		cmp	r3, #34
 1853 0026 09D1     		bne	.L113
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1854              		.loc 1 2585 0
 1855 0028 2368     		ldr	r3, [r4]
 1856 002a 9B68     		ldr	r3, [r3, #8]
 1857 002c 5B06     		lsl	r3, r3, #25
 1858 002e 05D5     		bpl	.L113
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1859              		.loc 1 2587 0
 1860 0030 0022     		mov	r2, #0
 1861 0032 5A23     		mov	r3, #90
 1862 0034 E252     		strh	r2, [r4, r3]
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1863              		.loc 1 2588 0
 1864 0036 201C     		mov	r0, r4
 1865 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 1866              	.LVL156:
 1867              	.L113:
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1868              		.loc 1 2591 0
 1869 003c E26E     		ldr	r2, [r4, #108]
 1870 003e 1023     		mov	r3, #16
 1871 0040 1343     		orr	r3, r2
 1872 0042 E366     		str	r3, [r4, #108]
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1873              		.loc 1 2592 0
 1874 0044 201C     		mov	r0, r4
 1875 0046 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1876              	.LVL157:
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1877              		.loc 1 2593 0
 1878              		@ sp needed
 1879              	.LVL158:
 1880 004a 10BD     		pop	{r4, pc}
 1881              		.cfi_endproc
 1882              	.LFE85:
 1884              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1885              		.align	2
 1886              		.global	HAL_UART_IRQHandler
 1887              		.code	16
ARM GAS  /tmp/ccjVxjbG.s 			page 88


 1888              		.thumb_func
 1890              	HAL_UART_IRQHandler:
 1891              	.LFB58:
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1892              		.loc 1 1625 0
 1893              		.cfi_startproc
 1894              	.LVL159:
 1895 0000 70B5     		push	{r4, r5, r6, lr}
 1896              	.LCFI16:
 1897              		.cfi_def_cfa_offset 16
 1898              		.cfi_offset 4, -16
 1899              		.cfi_offset 5, -12
 1900              		.cfi_offset 6, -8
 1901              		.cfi_offset 14, -4
 1902 0002 041C     		mov	r4, r0
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1903              		.loc 1 1626 0
 1904 0004 0168     		ldr	r1, [r0]
 1905 0006 CB69     		ldr	r3, [r1, #28]
 1906              	.LVL160:
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its;
 1907              		.loc 1 1627 0
 1908 0008 0868     		ldr	r0, [r1]
 1909              	.LVL161:
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == RESET)
 1910              		.loc 1 1632 0
 1911 000a 0F22     		mov	r2, #15
 1912 000c 1A40     		and	r2, r3
 1913              	.LVL162:
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1914              		.loc 1 1633 0
 1915 000e 07D1     		bne	.L115
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1916              		.loc 1 1636 0
 1917 0010 9D06     		lsl	r5, r3, #26
 1918 0012 05D5     		bpl	.L115
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1919              		.loc 1 1636 0 is_stmt 0 discriminator 1
 1920 0014 8506     		lsl	r5, r0, #26
 1921 0016 03D5     		bpl	.L115
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
 1922              		.loc 1 1638 0 is_stmt 1
 1923 0018 201C     		mov	r0, r4
 1924              	.LVL163:
 1925 001a FFF7FEFF 		bl	UART_Receive_IT
 1926              	.LVL164:
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1927              		.loc 1 1639 0
 1928 001e 8BE0     		b	.L114
 1929              	.LVL165:
 1930              	.L115:
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if(   (errorflags != RESET)
 1931              		.loc 1 1644 0
 1932 0020 8D68     		ldr	r5, [r1, #8]
 1933              	.LVL166:
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 1934              		.loc 1 1645 0
ARM GAS  /tmp/ccjVxjbG.s 			page 89


 1935 0022 002A     		cmp	r2, #0
 1936 0024 69D0     		beq	.L117
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 1937              		.loc 1 1646 0
 1938 0026 0122     		mov	r2, #1
 1939              	.LVL167:
 1940 0028 2A40     		and	r2, r5
 1941 002a 03D1     		bne	.L118
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1942              		.loc 1 1647 0
 1943 002c 9026     		mov	r6, #144
 1944 002e 7600     		lsl	r6, r6, #1
 1945 0030 3042     		tst	r0, r6
 1946 0032 62D0     		beq	.L117
 1947              	.L118:
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1948              		.loc 1 1650 0
 1949 0034 DD07     		lsl	r5, r3, #31
 1950 0036 06D5     		bpl	.L119
 1951              	.LVL168:
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1952              		.loc 1 1650 0 is_stmt 0 discriminator 1
 1953 0038 C505     		lsl	r5, r0, #23
 1954 003a 04D5     		bpl	.L119
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1955              		.loc 1 1652 0 is_stmt 1
 1956 003c 0125     		mov	r5, #1
 1957 003e 0D62     		str	r5, [r1, #32]
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1958              		.loc 1 1654 0
 1959 0040 E16E     		ldr	r1, [r4, #108]
 1960 0042 0D43     		orr	r5, r1
 1961 0044 E566     		str	r5, [r4, #108]
 1962              	.L119:
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1963              		.loc 1 1658 0
 1964 0046 9907     		lsl	r1, r3, #30
 1965 0048 08D5     		bpl	.L120
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1966              		.loc 1 1658 0 is_stmt 0 discriminator 1
 1967 004a 002A     		cmp	r2, #0
 1968 004c 06D0     		beq	.L120
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1969              		.loc 1 1660 0 is_stmt 1
 1970 004e 2168     		ldr	r1, [r4]
 1971 0050 0225     		mov	r5, #2
 1972 0052 0D62     		str	r5, [r1, #32]
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1973              		.loc 1 1662 0
 1974 0054 E56E     		ldr	r5, [r4, #108]
 1975 0056 0421     		mov	r1, #4
 1976 0058 2943     		orr	r1, r5
 1977 005a E166     		str	r1, [r4, #108]
 1978              	.L120:
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1979              		.loc 1 1666 0
 1980 005c 5907     		lsl	r1, r3, #29
ARM GAS  /tmp/ccjVxjbG.s 			page 90


 1981 005e 08D5     		bpl	.L121
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1982              		.loc 1 1666 0 is_stmt 0 discriminator 1
 1983 0060 002A     		cmp	r2, #0
 1984 0062 06D0     		beq	.L121
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1985              		.loc 1 1668 0 is_stmt 1
 1986 0064 2168     		ldr	r1, [r4]
 1987 0066 0425     		mov	r5, #4
 1988 0068 0D62     		str	r5, [r1, #32]
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1989              		.loc 1 1670 0
 1990 006a E56E     		ldr	r5, [r4, #108]
 1991 006c 0221     		mov	r1, #2
 1992 006e 2943     		orr	r1, r5
 1993 0070 E166     		str	r1, [r4, #108]
 1994              	.L121:
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 1995              		.loc 1 1674 0
 1996 0072 1907     		lsl	r1, r3, #28
 1997 0074 09D5     		bpl	.L122
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 1998              		.loc 1 1674 0 is_stmt 0 discriminator 1
 1999 0076 8106     		lsl	r1, r0, #26
 2000 0078 01D4     		bmi	.L123
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2001              		.loc 1 1675 0 is_stmt 1
 2002 007a 002A     		cmp	r2, #0
 2003 007c 05D0     		beq	.L122
 2004              	.L123:
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2005              		.loc 1 1677 0
 2006 007e 2168     		ldr	r1, [r4]
 2007 0080 0822     		mov	r2, #8
 2008 0082 0A62     		str	r2, [r1, #32]
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2009              		.loc 1 1679 0
 2010 0084 E16E     		ldr	r1, [r4, #108]
 2011 0086 0A43     		orr	r2, r1
 2012 0088 E266     		str	r2, [r4, #108]
 2013              	.L122:
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2014              		.loc 1 1683 0
 2015 008a E26E     		ldr	r2, [r4, #108]
 2016 008c 002A     		cmp	r2, #0
 2017 008e 53D0     		beq	.L114
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2018              		.loc 1 1686 0
 2019 0090 9B06     		lsl	r3, r3, #26
 2020 0092 04D5     		bpl	.L124
 2021              	.LVL169:
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2022              		.loc 1 1686 0 is_stmt 0 discriminator 1
 2023 0094 8306     		lsl	r3, r0, #26
 2024 0096 02D5     		bpl	.L124
1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2025              		.loc 1 1688 0 is_stmt 1
ARM GAS  /tmp/ccjVxjbG.s 			page 91


 2026 0098 201C     		mov	r0, r4
 2027              	.LVL170:
 2028 009a FFF7FEFF 		bl	UART_Receive_IT
 2029              	.LVL171:
 2030              	.L124:
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2031              		.loc 1 1693 0
 2032 009e E36E     		ldr	r3, [r4, #108]
 2033 00a0 1B07     		lsl	r3, r3, #28
 2034 00a2 03D4     		bmi	.L125
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {  
 2035              		.loc 1 1694 0 discriminator 1
 2036 00a4 2368     		ldr	r3, [r4]
 2037 00a6 9B68     		ldr	r3, [r3, #8]
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2038              		.loc 1 1693 0 discriminator 1
 2039 00a8 5B06     		lsl	r3, r3, #25
 2040 00aa 20D5     		bpl	.L126
 2041              	.L125:
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2042              		.loc 1 1699 0
 2043 00ac 201C     		mov	r0, r4
 2044 00ae FFF7FEFF 		bl	UART_EndRxTransfer
 2045              	.LVL172:
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 2046              		.loc 1 1702 0
 2047 00b2 2368     		ldr	r3, [r4]
 2048 00b4 9A68     		ldr	r2, [r3, #8]
 2049 00b6 5206     		lsl	r2, r2, #25
 2050 00b8 15D5     		bpl	.L127
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2051              		.loc 1 1704 0
 2052 00ba 9A68     		ldr	r2, [r3, #8]
 2053 00bc 4021     		mov	r1, #64
 2054 00be 8A43     		bic	r2, r1
 2055 00c0 9A60     		str	r2, [r3, #8]
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
 2056              		.loc 1 1707 0
 2057 00c2 636E     		ldr	r3, [r4, #100]
 2058 00c4 002B     		cmp	r3, #0
 2059 00c6 0AD0     		beq	.L128
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2060              		.loc 1 1711 0
 2061 00c8 1C4A     		ldr	r2, .L131
 2062 00ca 9A63     		str	r2, [r3, #56]
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
 2063              		.loc 1 1714 0
 2064 00cc 606E     		ldr	r0, [r4, #100]
 2065 00ce FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2066              	.LVL173:
 2067 00d2 0028     		cmp	r0, #0
 2068 00d4 30D0     		beq	.L114
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
 2069              		.loc 1 1717 0
 2070 00d6 606E     		ldr	r0, [r4, #100]
 2071 00d8 836B     		ldr	r3, [r0, #56]
 2072 00da 9847     		blx	r3
ARM GAS  /tmp/ccjVxjbG.s 			page 92


 2073              	.LVL174:
 2074 00dc 2CE0     		b	.L114
 2075              	.L128:
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
 2076              		.loc 1 1723 0
 2077 00de 201C     		mov	r0, r4
 2078 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2079              	.LVL175:
 2080 00e4 28E0     		b	.L114
 2081              	.L127:
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 2082              		.loc 1 1729 0
 2083 00e6 201C     		mov	r0, r4
 2084 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2085              	.LVL176:
 2086 00ec 24E0     		b	.L114
 2087              	.L126:
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2088              		.loc 1 1736 0
 2089 00ee 201C     		mov	r0, r4
 2090 00f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2091              	.LVL177:
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2092              		.loc 1 1737 0
 2093 00f4 0023     		mov	r3, #0
 2094 00f6 E366     		str	r3, [r4, #108]
 2095 00f8 1EE0     		b	.L114
 2096              	.LVL178:
 2097              	.L117:
1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2098              		.loc 1 1745 0
 2099 00fa DA02     		lsl	r2, r3, #11
 2100 00fc 0DD5     		bpl	.L129
1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2101              		.loc 1 1745 0 is_stmt 0 discriminator 1
 2102 00fe 6A02     		lsl	r2, r5, #9
 2103 0100 0BD5     		bpl	.L129
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 2104              		.loc 1 1747 0 is_stmt 1
 2105 0102 8023     		mov	r3, #128
 2106              	.LVL179:
 2107 0104 5B03     		lsl	r3, r3, #13
 2108 0106 0B62     		str	r3, [r1, #32]
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2109              		.loc 1 1749 0
 2110 0108 2023     		mov	r3, #32
 2111 010a 6922     		mov	r2, #105
 2112 010c A354     		strb	r3, [r4, r2]
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 2113              		.loc 1 1750 0
 2114 010e 0132     		add	r2, r2, #1
 2115 0110 A354     		strb	r3, [r4, r2]
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
 2116              		.loc 1 1751 0
 2117 0112 201C     		mov	r0, r4
 2118              	.LVL180:
 2119 0114 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
ARM GAS  /tmp/ccjVxjbG.s 			page 93


 2120              	.LVL181:
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2121              		.loc 1 1752 0
 2122 0118 0EE0     		b	.L114
 2123              	.LVL182:
 2124              	.L129:
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2125              		.loc 1 1756 0
 2126 011a 1A06     		lsl	r2, r3, #24
 2127 011c 05D5     		bpl	.L130
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2128              		.loc 1 1756 0 is_stmt 0 discriminator 1
 2129 011e 0206     		lsl	r2, r0, #24
 2130 0120 03D5     		bpl	.L130
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
 2131              		.loc 1 1758 0 is_stmt 1
 2132 0122 201C     		mov	r0, r4
 2133              	.LVL183:
 2134 0124 FFF7FEFF 		bl	UART_Transmit_IT
 2135              	.LVL184:
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2136              		.loc 1 1759 0
 2137 0128 06E0     		b	.L114
 2138              	.LVL185:
 2139              	.L130:
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2140              		.loc 1 1763 0
 2141 012a 5B06     		lsl	r3, r3, #25
 2142 012c 04D5     		bpl	.L114
 2143              	.LVL186:
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2144              		.loc 1 1763 0 is_stmt 0 discriminator 1
 2145 012e 4306     		lsl	r3, r0, #25
 2146 0130 02D5     		bpl	.L114
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
 2147              		.loc 1 1765 0 is_stmt 1
 2148 0132 201C     		mov	r0, r4
 2149              	.LVL187:
 2150 0134 FFF7FEFF 		bl	UART_EndTransmit_IT
 2151              	.LVL188:
 2152              	.L114:
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2153              		.loc 1 1769 0
 2154              		@ sp needed
 2155              	.LVL189:
 2156 0138 70BD     		pop	{r4, r5, r6, pc}
 2157              	.L132:
 2158 013a C046     		.align	2
 2159              	.L131:
 2160 013c 00000000 		.word	UART_DMAAbortOnError
 2161              		.cfi_endproc
 2162              	.LFE58:
 2164              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2165              		.align	2
 2166              		.code	16
 2167              		.thumb_func
 2169              	UART_DMAAbortOnError:
ARM GAS  /tmp/ccjVxjbG.s 			page 94


 2170              	.LFB86:
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2171              		.loc 1 2602 0
 2172              		.cfi_startproc
 2173              	.LVL190:
 2174 0000 08B5     		push	{r3, lr}
 2175              	.LCFI17:
 2176              		.cfi_def_cfa_offset 8
 2177              		.cfi_offset 3, -8
 2178              		.cfi_offset 14, -4
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
 2179              		.loc 1 2603 0
 2180 0002 806A     		ldr	r0, [r0, #40]
 2181              	.LVL191:
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0;
 2182              		.loc 1 2604 0
 2183 0004 0023     		mov	r3, #0
 2184 0006 5A22     		mov	r2, #90
 2185 0008 8352     		strh	r3, [r0, r2]
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2186              		.loc 1 2605 0
 2187 000a 083A     		sub	r2, r2, #8
 2188 000c 8352     		strh	r3, [r0, r2]
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2189              		.loc 1 2607 0
 2190 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2191              	.LVL192:
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2192              		.loc 1 2608 0
 2193              		@ sp needed
 2194 0012 08BD     		pop	{r3, pc}
 2195              		.cfi_endproc
 2196              	.LFE86:
 2198              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2199              		.align	2
 2200              		.weak	HAL_UART_AbortCpltCallback
 2201              		.code	16
 2202              		.thumb_func
 2204              	HAL_UART_AbortCpltCallback:
 2205              	.LFB64:
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2206              		.loc 1 1852 0
 2207              		.cfi_startproc
 2208              	.LVL193:
1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2209              		.loc 1 1859 0
 2210              		@ sp needed
 2211 0000 7047     		bx	lr
 2212              		.cfi_endproc
 2213              	.LFE64:
 2215 0002 C046     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2216              		.align	2
 2217              		.global	HAL_UART_Abort_IT
 2218              		.code	16
 2219              		.thumb_func
 2221              	HAL_UART_Abort_IT:
 2222              	.LFB55:
ARM GAS  /tmp/ccjVxjbG.s 			page 95


1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1;
 2223              		.loc 1 1372 0
 2224              		.cfi_startproc
 2225              	.LVL194:
 2226 0000 10B5     		push	{r4, lr}
 2227              	.LCFI18:
 2228              		.cfi_def_cfa_offset 8
 2229              		.cfi_offset 4, -8
 2230              		.cfi_offset 14, -4
 2231 0002 041C     		mov	r4, r0
 2232              	.LVL195:
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2233              		.loc 1 1376 0
 2234 0004 0268     		ldr	r2, [r0]
 2235 0006 1168     		ldr	r1, [r2]
 2236 0008 314B     		ldr	r3, .L147
 2237 000a 0B40     		and	r3, r1
 2238 000c 1360     		str	r3, [r2]
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2239              		.loc 1 1377 0
 2240 000e 0268     		ldr	r2, [r0]
 2241 0010 9368     		ldr	r3, [r2, #8]
 2242 0012 0121     		mov	r1, #1
 2243 0014 8B43     		bic	r3, r1
 2244 0016 9360     		str	r3, [r2, #8]
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2245              		.loc 1 1382 0
 2246 0018 036E     		ldr	r3, [r0, #96]
 2247 001a 002B     		cmp	r3, #0
 2248 001c 08D0     		beq	.L136
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2249              		.loc 1 1386 0
 2250 001e 0268     		ldr	r2, [r0]
 2251 0020 9268     		ldr	r2, [r2, #8]
 2252 0022 1206     		lsl	r2, r2, #24
 2253 0024 02D5     		bpl	.L137
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2254              		.loc 1 1388 0
 2255 0026 2B4A     		ldr	r2, .L147+4
 2256 0028 9A63     		str	r2, [r3, #56]
 2257 002a 01E0     		b	.L136
 2258              	.L137:
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2259              		.loc 1 1392 0
 2260 002c 0022     		mov	r2, #0
 2261 002e 9A63     		str	r2, [r3, #56]
 2262              	.L136:
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2263              		.loc 1 1396 0
 2264 0030 636E     		ldr	r3, [r4, #100]
 2265 0032 002B     		cmp	r3, #0
 2266 0034 08D0     		beq	.L138
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2267              		.loc 1 1400 0
 2268 0036 2268     		ldr	r2, [r4]
 2269 0038 9268     		ldr	r2, [r2, #8]
 2270 003a 5206     		lsl	r2, r2, #25
ARM GAS  /tmp/ccjVxjbG.s 			page 96


 2271 003c 02D5     		bpl	.L139
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2272              		.loc 1 1402 0
 2273 003e 264A     		ldr	r2, .L147+8
 2274 0040 9A63     		str	r2, [r3, #56]
 2275 0042 01E0     		b	.L138
 2276              	.L139:
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2277              		.loc 1 1406 0
 2278 0044 0022     		mov	r2, #0
 2279 0046 9A63     		str	r2, [r3, #56]
 2280              	.L138:
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2281              		.loc 1 1411 0
 2282 0048 2368     		ldr	r3, [r4]
 2283 004a 9A68     		ldr	r2, [r3, #8]
 2284 004c 1206     		lsl	r2, r2, #24
 2285 004e 0FD5     		bpl	.L143
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2286              		.loc 1 1414 0
 2287 0050 9A68     		ldr	r2, [r3, #8]
 2288 0052 8021     		mov	r1, #128
 2289 0054 8A43     		bic	r2, r1
 2290 0056 9A60     		str	r2, [r3, #8]
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2291              		.loc 1 1417 0
 2292 0058 206E     		ldr	r0, [r4, #96]
 2293              	.LVL196:
 2294 005a 0028     		cmp	r0, #0
 2295 005c 0AD0     		beq	.L144
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2296              		.loc 1 1423 0
 2297 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2298              	.LVL197:
 2299 0062 0028     		cmp	r0, #0
 2300 0064 08D0     		beq	.L145
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2301              		.loc 1 1425 0
 2302 0066 236E     		ldr	r3, [r4, #96]
 2303 0068 0022     		mov	r2, #0
 2304 006a 9A63     		str	r2, [r3, #56]
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
 2305              		.loc 1 1373 0
 2306 006c 0132     		add	r2, r2, #1
 2307 006e 04E0     		b	.L140
 2308              	.LVL198:
 2309              	.L143:
 2310 0070 0122     		mov	r2, #1
 2311 0072 02E0     		b	.L140
 2312              	.LVL199:
 2313              	.L144:
 2314 0074 0122     		mov	r2, #1
 2315 0076 00E0     		b	.L140
 2316              	.L145:
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2317              		.loc 1 1429 0
 2318 0078 0022     		mov	r2, #0
ARM GAS  /tmp/ccjVxjbG.s 			page 97


 2319              	.L140:
 2320              	.LVL200:
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2321              		.loc 1 1435 0
 2322 007a 2368     		ldr	r3, [r4]
 2323 007c 9968     		ldr	r1, [r3, #8]
 2324 007e 4906     		lsl	r1, r1, #25
 2325 0080 10D5     		bpl	.L141
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2326              		.loc 1 1437 0
 2327 0082 9968     		ldr	r1, [r3, #8]
 2328 0084 4020     		mov	r0, #64
 2329 0086 8143     		bic	r1, r0
 2330 0088 9960     		str	r1, [r3, #8]
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2331              		.loc 1 1440 0
 2332 008a 606E     		ldr	r0, [r4, #100]
 2333 008c 0028     		cmp	r0, #0
 2334 008e 09D0     		beq	.L141
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2335              		.loc 1 1446 0
 2336 0090 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2337              	.LVL201:
 2338 0094 0028     		cmp	r0, #0
 2339 0096 04D0     		beq	.L146
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1;
 2340              		.loc 1 1448 0
 2341 0098 636E     		ldr	r3, [r4, #100]
 2342 009a 0022     		mov	r2, #0
 2343 009c 9A63     		str	r2, [r3, #56]
 2344              	.LVL202:
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2345              		.loc 1 1449 0
 2346 009e 0132     		add	r2, r2, #1
 2347 00a0 00E0     		b	.L141
 2348              	.LVL203:
 2349              	.L146:
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2350              		.loc 1 1453 0
 2351 00a2 0022     		mov	r2, #0
 2352              	.L141:
 2353              	.LVL204:
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2354              		.loc 1 1459 0
 2355 00a4 012A     		cmp	r2, #1
 2356 00a6 10D1     		bne	.L142
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0;
 2357              		.loc 1 1462 0
 2358 00a8 0023     		mov	r3, #0
 2359 00aa 5132     		add	r2, r2, #81
 2360              	.LVL205:
 2361 00ac A352     		strh	r3, [r4, r2]
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2362              		.loc 1 1463 0
 2363 00ae 0832     		add	r2, r2, #8
 2364              	.LVL206:
 2365 00b0 A352     		strh	r3, [r4, r2]
ARM GAS  /tmp/ccjVxjbG.s 			page 98


1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2366              		.loc 1 1466 0
 2367 00b2 E366     		str	r3, [r4, #108]
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2368              		.loc 1 1469 0
 2369 00b4 2368     		ldr	r3, [r4]
 2370 00b6 4B3A     		sub	r2, r2, #75
 2371              	.LVL207:
 2372 00b8 1A62     		str	r2, [r3, #32]
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2373              		.loc 1 1472 0
 2374 00ba 2023     		mov	r3, #32
 2375 00bc 5A32     		add	r2, r2, #90
 2376              	.LVL208:
 2377 00be A354     		strb	r3, [r4, r2]
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2378              		.loc 1 1473 0
 2379 00c0 0132     		add	r2, r2, #1
 2380              	.LVL209:
 2381 00c2 A354     		strb	r3, [r4, r2]
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2382              		.loc 1 1476 0
 2383 00c4 201C     		mov	r0, r4
 2384 00c6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2385              	.LVL210:
 2386              	.L142:
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2387              		.loc 1 1480 0
 2388 00ca 0020     		mov	r0, #0
 2389              		@ sp needed
 2390              	.LVL211:
 2391 00cc 10BD     		pop	{r4, pc}
 2392              	.L148:
 2393 00ce C046     		.align	2
 2394              	.L147:
 2395 00d0 1FFEFFFF 		.word	-481
 2396 00d4 00000000 		.word	UART_DMATxAbortCallback
 2397 00d8 00000000 		.word	UART_DMARxAbortCallback
 2398              		.cfi_endproc
 2399              	.LFE55:
 2401              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2402              		.align	2
 2403              		.code	16
 2404              		.thumb_func
 2406              	UART_DMARxAbortCallback:
 2407              	.LFB88:
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2408              		.loc 1 2661 0
 2409              		.cfi_startproc
 2410              	.LVL212:
 2411 0000 08B5     		push	{r3, lr}
 2412              	.LCFI19:
 2413              		.cfi_def_cfa_offset 8
 2414              		.cfi_offset 3, -8
 2415              		.cfi_offset 14, -4
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
 2416              		.loc 1 2662 0
ARM GAS  /tmp/ccjVxjbG.s 			page 99


 2417 0002 806A     		ldr	r0, [r0, #40]
 2418              	.LVL213:
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2419              		.loc 1 2664 0
 2420 0004 436E     		ldr	r3, [r0, #100]
 2421 0006 0022     		mov	r2, #0
 2422 0008 9A63     		str	r2, [r3, #56]
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2423              		.loc 1 2667 0
 2424 000a 036E     		ldr	r3, [r0, #96]
 2425 000c 002B     		cmp	r3, #0
 2426 000e 02D0     		beq	.L150
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2427              		.loc 1 2669 0
 2428 0010 9B6B     		ldr	r3, [r3, #56]
 2429 0012 002B     		cmp	r3, #0
 2430 0014 0FD1     		bne	.L149
 2431              	.L150:
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
 2432              		.loc 1 2676 0
 2433 0016 0023     		mov	r3, #0
 2434 0018 5222     		mov	r2, #82
 2435 001a 8352     		strh	r3, [r0, r2]
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2436              		.loc 1 2677 0
 2437 001c 0832     		add	r2, r2, #8
 2438 001e 8352     		strh	r3, [r0, r2]
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2439              		.loc 1 2680 0
 2440 0020 C366     		str	r3, [r0, #108]
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2441              		.loc 1 2683 0
 2442 0022 0368     		ldr	r3, [r0]
 2443 0024 4B3A     		sub	r2, r2, #75
 2444 0026 1A62     		str	r2, [r3, #32]
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2445              		.loc 1 2686 0
 2446 0028 2023     		mov	r3, #32
 2447 002a 5A32     		add	r2, r2, #90
 2448 002c 8354     		strb	r3, [r0, r2]
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2449              		.loc 1 2687 0
 2450 002e 0132     		add	r2, r2, #1
 2451 0030 8354     		strb	r3, [r0, r2]
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2452              		.loc 1 2690 0
 2453 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2454              	.LVL214:
 2455              	.L149:
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2456              		.loc 1 2691 0
 2457              		@ sp needed
 2458 0036 08BD     		pop	{r3, pc}
 2459              		.cfi_endproc
 2460              	.LFE88:
 2462              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2463              		.align	2
ARM GAS  /tmp/ccjVxjbG.s 			page 100


 2464              		.code	16
 2465              		.thumb_func
 2467              	UART_DMATxAbortCallback:
 2468              	.LFB87:
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2469              		.loc 1 2619 0
 2470              		.cfi_startproc
 2471              	.LVL215:
 2472 0000 08B5     		push	{r3, lr}
 2473              	.LCFI20:
 2474              		.cfi_def_cfa_offset 8
 2475              		.cfi_offset 3, -8
 2476              		.cfi_offset 14, -4
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   
 2477              		.loc 1 2620 0
 2478 0002 806A     		ldr	r0, [r0, #40]
 2479              	.LVL216:
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2480              		.loc 1 2622 0
 2481 0004 036E     		ldr	r3, [r0, #96]
 2482 0006 0022     		mov	r2, #0
 2483 0008 9A63     		str	r2, [r3, #56]
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2484              		.loc 1 2625 0
 2485 000a 436E     		ldr	r3, [r0, #100]
 2486 000c 002B     		cmp	r3, #0
 2487 000e 02D0     		beq	.L153
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2488              		.loc 1 2627 0
 2489 0010 9B6B     		ldr	r3, [r3, #56]
 2490 0012 002B     		cmp	r3, #0
 2491 0014 0FD1     		bne	.L152
 2492              	.L153:
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0;
 2493              		.loc 1 2634 0
 2494 0016 0023     		mov	r3, #0
 2495 0018 5222     		mov	r2, #82
 2496 001a 8352     		strh	r3, [r0, r2]
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2497              		.loc 1 2635 0
 2498 001c 0832     		add	r2, r2, #8
 2499 001e 8352     		strh	r3, [r0, r2]
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2500              		.loc 1 2638 0
 2501 0020 C366     		str	r3, [r0, #108]
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2502              		.loc 1 2641 0
 2503 0022 0368     		ldr	r3, [r0]
 2504 0024 4B3A     		sub	r2, r2, #75
 2505 0026 1A62     		str	r2, [r3, #32]
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2506              		.loc 1 2644 0
 2507 0028 2023     		mov	r3, #32
 2508 002a 5A32     		add	r2, r2, #90
 2509 002c 8354     		strb	r3, [r0, r2]
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2510              		.loc 1 2645 0
ARM GAS  /tmp/ccjVxjbG.s 			page 101


 2511 002e 0132     		add	r2, r2, #1
 2512 0030 8354     		strb	r3, [r0, r2]
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2513              		.loc 1 2648 0
 2514 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2515              	.LVL217:
 2516              	.L152:
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2517              		.loc 1 2649 0
 2518              		@ sp needed
 2519 0036 08BD     		pop	{r3, pc}
 2520              		.cfi_endproc
 2521              	.LFE87:
 2523              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2524              		.align	2
 2525              		.weak	HAL_UART_AbortTransmitCpltCallback
 2526              		.code	16
 2527              		.thumb_func
 2529              	HAL_UART_AbortTransmitCpltCallback:
 2530              	.LFB65:
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2531              		.loc 1 1867 0
 2532              		.cfi_startproc
 2533              	.LVL218:
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2534              		.loc 1 1874 0
 2535              		@ sp needed
 2536 0000 7047     		bx	lr
 2537              		.cfi_endproc
 2538              	.LFE65:
 2540 0002 C046     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2541              		.align	2
 2542              		.global	HAL_UART_AbortTransmit_IT
 2543              		.code	16
 2544              		.thumb_func
 2546              	HAL_UART_AbortTransmit_IT:
 2547              	.LFB56:
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2548              		.loc 1 1497 0
 2549              		.cfi_startproc
 2550              	.LVL219:
 2551 0000 10B5     		push	{r4, lr}
 2552              	.LCFI21:
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 4, -8
 2555              		.cfi_offset 14, -4
 2556 0002 041C     		mov	r4, r0
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2557              		.loc 1 1499 0
 2558 0004 0268     		ldr	r2, [r0]
 2559 0006 1368     		ldr	r3, [r2]
 2560 0008 C021     		mov	r1, #192
 2561 000a 8B43     		bic	r3, r1
 2562 000c 1360     		str	r3, [r2]
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2563              		.loc 1 1502 0
 2564 000e 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccjVxjbG.s 			page 102


 2565 0010 9A68     		ldr	r2, [r3, #8]
 2566 0012 1206     		lsl	r2, r2, #24
 2567 0014 1AD5     		bpl	.L157
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2568              		.loc 1 1504 0
 2569 0016 9A68     		ldr	r2, [r3, #8]
 2570 0018 4039     		sub	r1, r1, #64
 2571 001a 8A43     		bic	r2, r1
 2572 001c 9A60     		str	r2, [r3, #8]
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2573              		.loc 1 1507 0
 2574 001e 036E     		ldr	r3, [r0, #96]
 2575 0020 002B     		cmp	r3, #0
 2576 0022 0AD0     		beq	.L158
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2577              		.loc 1 1511 0
 2578 0024 0E4A     		ldr	r2, .L160
 2579 0026 9A63     		str	r2, [r3, #56]
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2580              		.loc 1 1514 0
 2581 0028 006E     		ldr	r0, [r0, #96]
 2582              	.LVL220:
 2583 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2584              	.LVL221:
 2585 002e 0028     		cmp	r0, #0
 2586 0030 14D0     		beq	.L159
1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2587              		.loc 1 1517 0
 2588 0032 206E     		ldr	r0, [r4, #96]
 2589 0034 836B     		ldr	r3, [r0, #56]
 2590 0036 9847     		blx	r3
 2591              	.LVL222:
 2592 0038 10E0     		b	.L159
 2593              	.LVL223:
 2594              	.L158:
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2595              		.loc 1 1523 0
 2596 003a 0022     		mov	r2, #0
 2597 003c 5223     		mov	r3, #82
 2598 003e C252     		strh	r2, [r0, r3]
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2599              		.loc 1 1526 0
 2600 0040 2032     		add	r2, r2, #32
 2601 0042 1733     		add	r3, r3, #23
 2602 0044 C254     		strb	r2, [r0, r3]
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2603              		.loc 1 1529 0
 2604 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2605              	.LVL224:
 2606 004a 07E0     		b	.L159
 2607              	.LVL225:
 2608              	.L157:
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2609              		.loc 1 1535 0
 2610 004c 0022     		mov	r2, #0
 2611 004e 5223     		mov	r3, #82
 2612 0050 C252     		strh	r2, [r0, r3]
ARM GAS  /tmp/ccjVxjbG.s 			page 103


1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2613              		.loc 1 1538 0
 2614 0052 2032     		add	r2, r2, #32
 2615 0054 1733     		add	r3, r3, #23
 2616 0056 C254     		strb	r2, [r0, r3]
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2617              		.loc 1 1541 0
 2618 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2619              	.LVL226:
 2620              	.L159:
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2621              		.loc 1 1545 0
 2622 005c 0020     		mov	r0, #0
 2623              		@ sp needed
 2624              	.LVL227:
 2625 005e 10BD     		pop	{r4, pc}
 2626              	.L161:
 2627              		.align	2
 2628              	.L160:
 2629 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2630              		.cfi_endproc
 2631              	.LFE56:
 2633              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2634              		.align	2
 2635              		.code	16
 2636              		.thumb_func
 2638              	UART_DMATxOnlyAbortCallback:
 2639              	.LFB89:
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2640              		.loc 1 2703 0
 2641              		.cfi_startproc
 2642              	.LVL228:
 2643 0000 08B5     		push	{r3, lr}
 2644              	.LCFI22:
 2645              		.cfi_def_cfa_offset 8
 2646              		.cfi_offset 3, -8
 2647              		.cfi_offset 14, -4
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2648              		.loc 1 2704 0
 2649 0002 806A     		ldr	r0, [r0, #40]
 2650              	.LVL229:
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2651              		.loc 1 2706 0
 2652 0004 0022     		mov	r2, #0
 2653 0006 5223     		mov	r3, #82
 2654 0008 C252     		strh	r2, [r0, r3]
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2655              		.loc 1 2709 0
 2656 000a 2032     		add	r2, r2, #32
 2657 000c 1733     		add	r3, r3, #23
 2658 000e C254     		strb	r2, [r0, r3]
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2659              		.loc 1 2712 0
 2660 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2661              	.LVL230:
2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2662              		.loc 1 2713 0
ARM GAS  /tmp/ccjVxjbG.s 			page 104


 2663              		@ sp needed
 2664 0014 08BD     		pop	{r3, pc}
 2665              		.cfi_endproc
 2666              	.LFE89:
 2668 0016 C046     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2669              		.align	2
 2670              		.weak	HAL_UART_AbortReceiveCpltCallback
 2671              		.code	16
 2672              		.thumb_func
 2674              	HAL_UART_AbortReceiveCpltCallback:
 2675              	.LFB66:
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2676              		.loc 1 1882 0
 2677              		.cfi_startproc
 2678              	.LVL231:
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2679              		.loc 1 1889 0
 2680              		@ sp needed
 2681 0000 7047     		bx	lr
 2682              		.cfi_endproc
 2683              	.LFE66:
 2685 0002 C046     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2686              		.align	2
 2687              		.global	HAL_UART_AbortReceive_IT
 2688              		.code	16
 2689              		.thumb_func
 2691              	HAL_UART_AbortReceive_IT:
 2692              	.LFB57:
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2693              		.loc 1 1562 0
 2694              		.cfi_startproc
 2695              	.LVL232:
 2696 0000 10B5     		push	{r4, lr}
 2697              	.LCFI23:
 2698              		.cfi_def_cfa_offset 8
 2699              		.cfi_offset 4, -8
 2700              		.cfi_offset 14, -4
 2701 0002 041C     		mov	r4, r0
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2702              		.loc 1 1564 0
 2703 0004 0268     		ldr	r2, [r0]
 2704 0006 1168     		ldr	r1, [r2]
 2705 0008 1A4B     		ldr	r3, .L168
 2706 000a 0B40     		and	r3, r1
 2707 000c 1360     		str	r3, [r2]
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2708              		.loc 1 1565 0
 2709 000e 0268     		ldr	r2, [r0]
 2710 0010 9368     		ldr	r3, [r2, #8]
 2711 0012 0121     		mov	r1, #1
 2712 0014 8B43     		bic	r3, r1
 2713 0016 9360     		str	r3, [r2, #8]
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2714              		.loc 1 1568 0
 2715 0018 0368     		ldr	r3, [r0]
 2716 001a 9A68     		ldr	r2, [r3, #8]
 2717 001c 5206     		lsl	r2, r2, #25
ARM GAS  /tmp/ccjVxjbG.s 			page 105


 2718 001e 1DD5     		bpl	.L165
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2719              		.loc 1 1570 0
 2720 0020 9A68     		ldr	r2, [r3, #8]
 2721 0022 3F31     		add	r1, r1, #63
 2722 0024 8A43     		bic	r2, r1
 2723 0026 9A60     		str	r2, [r3, #8]
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2724              		.loc 1 1573 0
 2725 0028 436E     		ldr	r3, [r0, #100]
 2726 002a 002B     		cmp	r3, #0
 2727 002c 0AD0     		beq	.L166
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2728              		.loc 1 1577 0
 2729 002e 124A     		ldr	r2, .L168+4
 2730 0030 9A63     		str	r2, [r3, #56]
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2731              		.loc 1 1580 0
 2732 0032 406E     		ldr	r0, [r0, #100]
 2733              	.LVL233:
 2734 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2735              	.LVL234:
 2736 0038 0028     		cmp	r0, #0
 2737 003a 19D0     		beq	.L167
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2738              		.loc 1 1583 0
 2739 003c 606E     		ldr	r0, [r4, #100]
 2740 003e 836B     		ldr	r3, [r0, #56]
 2741 0040 9847     		blx	r3
 2742              	.LVL235:
 2743 0042 15E0     		b	.L167
 2744              	.LVL236:
 2745              	.L166:
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2746              		.loc 1 1589 0
 2747 0044 0022     		mov	r2, #0
 2748 0046 5A23     		mov	r3, #90
 2749 0048 C252     		strh	r2, [r0, r3]
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2750              		.loc 1 1592 0
 2751 004a 0368     		ldr	r3, [r0]
 2752 004c 0F32     		add	r2, r2, #15
 2753 004e 1A62     		str	r2, [r3, #32]
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2754              		.loc 1 1595 0
 2755 0050 1132     		add	r2, r2, #17
 2756 0052 6A23     		mov	r3, #106
 2757 0054 C254     		strb	r2, [r0, r3]
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2758              		.loc 1 1598 0
 2759 0056 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2760              	.LVL237:
 2761 005a 09E0     		b	.L167
 2762              	.LVL238:
 2763              	.L165:
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2764              		.loc 1 1604 0
ARM GAS  /tmp/ccjVxjbG.s 			page 106


 2765 005c 0021     		mov	r1, #0
 2766 005e 5A22     		mov	r2, #90
 2767 0060 8152     		strh	r1, [r0, r2]
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2768              		.loc 1 1607 0
 2769 0062 4B3A     		sub	r2, r2, #75
 2770 0064 1A62     		str	r2, [r3, #32]
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2771              		.loc 1 1610 0
 2772 0066 1132     		add	r2, r2, #17
 2773 0068 6A23     		mov	r3, #106
 2774 006a C254     		strb	r2, [r0, r3]
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2775              		.loc 1 1613 0
 2776 006c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2777              	.LVL239:
 2778              	.L167:
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2779              		.loc 1 1617 0
 2780 0070 0020     		mov	r0, #0
 2781              		@ sp needed
 2782              	.LVL240:
 2783 0072 10BD     		pop	{r4, pc}
 2784              	.L169:
 2785              		.align	2
 2786              	.L168:
 2787 0074 DFFEFFFF 		.word	-289
 2788 0078 00000000 		.word	UART_DMARxOnlyAbortCallback
 2789              		.cfi_endproc
 2790              	.LFE57:
 2792              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2793              		.align	2
 2794              		.code	16
 2795              		.thumb_func
 2797              	UART_DMARxOnlyAbortCallback:
 2798              	.LFB90:
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2799              		.loc 1 2724 0
 2800              		.cfi_startproc
 2801              	.LVL241:
 2802 0000 08B5     		push	{r3, lr}
 2803              	.LCFI24:
 2804              		.cfi_def_cfa_offset 8
 2805              		.cfi_offset 3, -8
 2806              		.cfi_offset 14, -4
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2807              		.loc 1 2725 0
 2808 0002 806A     		ldr	r0, [r0, #40]
 2809              	.LVL242:
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2810              		.loc 1 2727 0
 2811 0004 0022     		mov	r2, #0
 2812 0006 5A23     		mov	r3, #90
 2813 0008 C252     		strh	r2, [r0, r3]
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2814              		.loc 1 2730 0
 2815 000a 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccjVxjbG.s 			page 107


 2816 000c 0F32     		add	r2, r2, #15
 2817 000e 1A62     		str	r2, [r3, #32]
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2818              		.loc 1 2733 0
 2819 0010 1132     		add	r2, r2, #17
 2820 0012 6A23     		mov	r3, #106
 2821 0014 C254     		strb	r2, [r0, r3]
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2822              		.loc 1 2736 0
 2823 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2824              	.LVL243:
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2825              		.loc 1 2737 0
 2826              		@ sp needed
 2827 001a 08BD     		pop	{r3, pc}
 2828              		.cfi_endproc
 2829              	.LFE90:
 2831              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2832              		.align	2
 2833              		.global	HAL_MultiProcessor_EnterMuteMode
 2834              		.code	16
 2835              		.thumb_func
 2837              	HAL_MultiProcessor_EnterMuteMode:
 2838              	.LFB69:
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2839              		.loc 1 1966 0
 2840              		.cfi_startproc
 2841              	.LVL244:
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2842              		.loc 1 1967 0
 2843 0000 0268     		ldr	r2, [r0]
 2844 0002 9169     		ldr	r1, [r2, #24]
 2845 0004 0423     		mov	r3, #4
 2846 0006 0B43     		orr	r3, r1
 2847 0008 9361     		str	r3, [r2, #24]
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2848              		.loc 1 1968 0
 2849              		@ sp needed
 2850 000a 7047     		bx	lr
 2851              		.cfi_endproc
 2852              	.LFE69:
 2854              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2855              		.align	2
 2856              		.global	HAL_HalfDuplex_EnableTransmitter
 2857              		.code	16
 2858              		.thumb_func
 2860              	HAL_HalfDuplex_EnableTransmitter:
 2861              	.LFB70:
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 2862              		.loc 1 1976 0
 2863              		.cfi_startproc
 2864              	.LVL245:
 2865 0000 30B5     		push	{r4, r5, lr}
 2866              	.LCFI25:
 2867              		.cfi_def_cfa_offset 12
 2868              		.cfi_offset 4, -12
 2869              		.cfi_offset 5, -8
ARM GAS  /tmp/ccjVxjbG.s 			page 108


 2870              		.cfi_offset 14, -4
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2871              		.loc 1 1978 0
 2872 0002 6823     		mov	r3, #104
 2873 0004 C35C     		ldrb	r3, [r0, r3]
 2874 0006 012B     		cmp	r3, #1
 2875 0008 15D0     		beq	.L174
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2876              		.loc 1 1978 0 is_stmt 0 discriminator 2
 2877 000a 6822     		mov	r2, #104
 2878 000c 0123     		mov	r3, #1
 2879 000e 8354     		strb	r3, [r0, r2]
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2880              		.loc 1 1979 0 is_stmt 1 discriminator 2
 2881 0010 6921     		mov	r1, #105
 2882 0012 2333     		add	r3, r3, #35
 2883 0014 4354     		strb	r3, [r0, r1]
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2884              		.loc 1 1982 0 discriminator 2
 2885 0016 0468     		ldr	r4, [r0]
 2886 0018 2368     		ldr	r3, [r4]
 2887 001a 0C25     		mov	r5, #12
 2888 001c AB43     		bic	r3, r5
 2889 001e 2360     		str	r3, [r4]
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2890              		.loc 1 1984 0 discriminator 2
 2891 0020 0468     		ldr	r4, [r0]
 2892 0022 2568     		ldr	r5, [r4]
 2893 0024 0823     		mov	r3, #8
 2894 0026 2B43     		orr	r3, r5
 2895 0028 2360     		str	r3, [r4]
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2896              		.loc 1 1986 0 discriminator 2
 2897 002a 2023     		mov	r3, #32
 2898 002c 4354     		strb	r3, [r0, r1]
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2899              		.loc 1 1989 0 discriminator 2
 2900 002e 0023     		mov	r3, #0
 2901 0030 8354     		strb	r3, [r0, r2]
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2902              		.loc 1 1991 0 discriminator 2
 2903 0032 0020     		mov	r0, #0
 2904              	.LVL246:
 2905 0034 00E0     		b	.L173
 2906              	.LVL247:
 2907              	.L174:
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2908              		.loc 1 1978 0
 2909 0036 0220     		mov	r0, #2
 2910              	.LVL248:
 2911              	.L173:
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2912              		.loc 1 1992 0
 2913              		@ sp needed
 2914 0038 30BD     		pop	{r4, r5, pc}
 2915              		.cfi_endproc
 2916              	.LFE70:
ARM GAS  /tmp/ccjVxjbG.s 			page 109


 2918 003a C046     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2919              		.align	2
 2920              		.global	HAL_HalfDuplex_EnableReceiver
 2921              		.code	16
 2922              		.thumb_func
 2924              	HAL_HalfDuplex_EnableReceiver:
 2925              	.LFB71:
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 2926              		.loc 1 2000 0
 2927              		.cfi_startproc
 2928              	.LVL249:
 2929 0000 30B5     		push	{r4, r5, lr}
 2930              	.LCFI26:
 2931              		.cfi_def_cfa_offset 12
 2932              		.cfi_offset 4, -12
 2933              		.cfi_offset 5, -8
 2934              		.cfi_offset 14, -4
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2935              		.loc 1 2002 0
 2936 0002 6823     		mov	r3, #104
 2937 0004 C35C     		ldrb	r3, [r0, r3]
 2938 0006 012B     		cmp	r3, #1
 2939 0008 15D0     		beq	.L177
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2940              		.loc 1 2002 0 is_stmt 0 discriminator 2
 2941 000a 6822     		mov	r2, #104
 2942 000c 0123     		mov	r3, #1
 2943 000e 8354     		strb	r3, [r0, r2]
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2944              		.loc 1 2003 0 is_stmt 1 discriminator 2
 2945 0010 6921     		mov	r1, #105
 2946 0012 2333     		add	r3, r3, #35
 2947 0014 4354     		strb	r3, [r0, r1]
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2948              		.loc 1 2006 0 discriminator 2
 2949 0016 0468     		ldr	r4, [r0]
 2950 0018 2368     		ldr	r3, [r4]
 2951 001a 0C25     		mov	r5, #12
 2952 001c AB43     		bic	r3, r5
 2953 001e 2360     		str	r3, [r4]
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2954              		.loc 1 2008 0 discriminator 2
 2955 0020 0468     		ldr	r4, [r0]
 2956 0022 2568     		ldr	r5, [r4]
 2957 0024 0423     		mov	r3, #4
 2958 0026 2B43     		orr	r3, r5
 2959 0028 2360     		str	r3, [r4]
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
 2960              		.loc 1 2010 0 discriminator 2
 2961 002a 2023     		mov	r3, #32
 2962 002c 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2963              		.loc 1 2012 0 discriminator 2
 2964 002e 0023     		mov	r3, #0
 2965 0030 8354     		strb	r3, [r0, r2]
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2966              		.loc 1 2014 0 discriminator 2
ARM GAS  /tmp/ccjVxjbG.s 			page 110


 2967 0032 0020     		mov	r0, #0
 2968              	.LVL250:
 2969 0034 00E0     		b	.L176
 2970              	.LVL251:
 2971              	.L177:
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2972              		.loc 1 2002 0
 2973 0036 0220     		mov	r0, #2
 2974              	.LVL252:
 2975              	.L176:
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2976              		.loc 1 2015 0
 2977              		@ sp needed
 2978 0038 30BD     		pop	{r4, r5, pc}
 2979              		.cfi_endproc
 2980              	.LFE71:
 2982 003a C046     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2983              		.align	2
 2984              		.global	HAL_LIN_SendBreak
 2985              		.code	16
 2986              		.thumb_func
 2988              	HAL_LIN_SendBreak:
 2989              	.LFB72:
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 2990              		.loc 1 2024 0
 2991              		.cfi_startproc
 2992              	.LVL253:
 2993 0000 30B5     		push	{r4, r5, lr}
 2994              	.LCFI27:
 2995              		.cfi_def_cfa_offset 12
 2996              		.cfi_offset 4, -12
 2997              		.cfi_offset 5, -8
 2998              		.cfi_offset 14, -4
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2999              		.loc 1 2029 0
 3000 0002 6823     		mov	r3, #104
 3001 0004 C35C     		ldrb	r3, [r0, r3]
 3002 0006 012B     		cmp	r3, #1
 3003 0008 10D0     		beq	.L180
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3004              		.loc 1 2029 0 is_stmt 0 discriminator 2
 3005 000a 6822     		mov	r2, #104
 3006 000c 0123     		mov	r3, #1
 3007 000e 8354     		strb	r3, [r0, r2]
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3008              		.loc 1 2031 0 is_stmt 1 discriminator 2
 3009 0010 6921     		mov	r1, #105
 3010 0012 2333     		add	r3, r3, #35
 3011 0014 4354     		strb	r3, [r0, r1]
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3012              		.loc 1 2034 0 discriminator 2
 3013 0016 0468     		ldr	r4, [r0]
 3014 0018 A569     		ldr	r5, [r4, #24]
 3015 001a 223B     		sub	r3, r3, #34
 3016 001c 2B43     		orr	r3, r5
 3017 001e A361     		str	r3, [r4, #24]
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 111


 3018              		.loc 1 2036 0 discriminator 2
 3019 0020 2023     		mov	r3, #32
 3020 0022 4354     		strb	r3, [r0, r1]
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3021              		.loc 1 2039 0 discriminator 2
 3022 0024 0023     		mov	r3, #0
 3023 0026 8354     		strb	r3, [r0, r2]
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3024              		.loc 1 2041 0 discriminator 2
 3025 0028 0020     		mov	r0, #0
 3026              	.LVL254:
 3027 002a 00E0     		b	.L179
 3028              	.LVL255:
 3029              	.L180:
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3030              		.loc 1 2029 0
 3031 002c 0220     		mov	r0, #2
 3032              	.LVL256:
 3033              	.L179:
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3034              		.loc 1 2042 0
 3035              		@ sp needed
 3036 002e 30BD     		pop	{r4, r5, pc}
 3037              		.cfi_endproc
 3038              	.LFE72:
 3040              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3041              		.align	2
 3042              		.global	HAL_UART_GetState
 3043              		.code	16
 3044              		.thumb_func
 3046              	HAL_UART_GetState:
 3047              	.LFB73:
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3048              		.loc 1 2072 0
 3049              		.cfi_startproc
 3050              	.LVL257:
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
 3051              		.loc 1 2074 0
 3052 0000 6923     		mov	r3, #105
 3053 0002 C35C     		ldrb	r3, [r0, r3]
 3054              	.LVL258:
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3055              		.loc 1 2075 0
 3056 0004 6A22     		mov	r2, #106
 3057 0006 805C     		ldrb	r0, [r0, r2]
 3058              	.LVL259:
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3059              		.loc 1 2077 0
 3060 0008 1843     		orr	r0, r3
 3061              	.LVL260:
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3062              		.loc 1 2078 0
 3063              		@ sp needed
 3064 000a 7047     		bx	lr
 3065              		.cfi_endproc
 3066              	.LFE73:
 3068              		.section	.text.HAL_UART_GetError,"ax",%progbits
ARM GAS  /tmp/ccjVxjbG.s 			page 112


 3069              		.align	2
 3070              		.global	HAL_UART_GetError
 3071              		.code	16
 3072              		.thumb_func
 3074              	HAL_UART_GetError:
 3075              	.LFB74:
2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
 3076              		.loc 1 2087 0
 3077              		.cfi_startproc
 3078              	.LVL261:
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3079              		.loc 1 2088 0
 3080 0000 C06E     		ldr	r0, [r0, #108]
 3081              	.LVL262:
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 3082              		.loc 1 2089 0
 3083              		@ sp needed
 3084 0002 7047     		bx	lr
 3085              		.cfi_endproc
 3086              	.LFE74:
 3088              		.global	__aeabi_uldivmod
 3089              		.global	__aeabi_uidiv
 3090              		.section	.text.UART_SetConfig,"ax",%progbits
 3091              		.align	2
 3092              		.global	UART_SetConfig
 3093              		.code	16
 3094              		.thumb_func
 3096              	UART_SetConfig:
 3097              	.LFB75:
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3098              		.loc 1 2108 0
 3099              		.cfi_startproc
 3100              	.LVL263:
 3101 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3102              	.LCFI28:
 3103              		.cfi_def_cfa_offset 24
 3104              		.cfi_offset 3, -24
 3105              		.cfi_offset 4, -20
 3106              		.cfi_offset 5, -16
 3107              		.cfi_offset 6, -12
 3108              		.cfi_offset 7, -8
 3109              		.cfi_offset 14, -4
 3110 0002 051C     		mov	r5, r0
 3111              	.LVL264:
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3112              		.loc 1 2141 0
 3113 0004 8368     		ldr	r3, [r0, #8]
 3114 0006 0269     		ldr	r2, [r0, #16]
 3115 0008 1343     		orr	r3, r2
 3116 000a 4269     		ldr	r2, [r0, #20]
 3117 000c 1343     		orr	r3, r2
 3118 000e C269     		ldr	r2, [r0, #28]
 3119 0010 1A43     		orr	r2, r3
 3120              	.LVL265:
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3121              		.loc 1 2142 0
 3122 0012 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccjVxjbG.s 			page 113


 3123 0014 0868     		ldr	r0, [r1]
 3124              	.LVL266:
 3125 0016 BD4B     		ldr	r3, .L240
 3126 0018 0340     		and	r3, r0
 3127 001a 1343     		orr	r3, r2
 3128 001c 0B60     		str	r3, [r1]
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3129              		.loc 1 2147 0
 3130 001e 2A68     		ldr	r2, [r5]
 3131              	.LVL267:
 3132 0020 5168     		ldr	r1, [r2, #4]
 3133 0022 BB4B     		ldr	r3, .L240+4
 3134 0024 0B40     		and	r3, r1
 3135 0026 E968     		ldr	r1, [r5, #12]
 3136 0028 0B43     		orr	r3, r1
 3137 002a 5360     		str	r3, [r2, #4]
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 3138              		.loc 1 2155 0
 3139 002c AB69     		ldr	r3, [r5, #24]
 3140              	.LVL268:
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3141              		.loc 1 2156 0
 3142 002e 2A68     		ldr	r2, [r5]
 3143 0030 B849     		ldr	r1, .L240+8
 3144 0032 8A42     		cmp	r2, r1
 3145 0034 01D0     		beq	.L184
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3146              		.loc 1 2158 0
 3147 0036 296A     		ldr	r1, [r5, #32]
 3148 0038 0B43     		orr	r3, r1
 3149              	.LVL269:
 3150              	.L184:
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3151              		.loc 1 2160 0
 3152 003a 9068     		ldr	r0, [r2, #8]
 3153 003c B649     		ldr	r1, .L240+12
 3154 003e 0140     		and	r1, r0
 3155 0040 0B43     		orr	r3, r1
 3156              	.LVL270:
 3157 0042 9360     		str	r3, [r2, #8]
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3158              		.loc 1 2163 0
 3159 0044 2B68     		ldr	r3, [r5]
 3160 0046 B54A     		ldr	r2, .L240+16
 3161 0048 9342     		cmp	r3, r2
 3162 004a 14D1     		bne	.L185
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3163              		.loc 1 2163 0 is_stmt 0 discriminator 1
 3164 004c B44B     		ldr	r3, .L240+20
 3165 004e DB6C     		ldr	r3, [r3, #76]
 3166 0050 0322     		mov	r2, #3
 3167 0052 1340     		and	r3, r2
 3168 0054 012B     		cmp	r3, #1
 3169 0056 08D0     		beq	.L187
 3170 0058 002B     		cmp	r3, #0
 3171 005a 04D0     		beq	.L188
 3172 005c 022B     		cmp	r3, #2
ARM GAS  /tmp/ccjVxjbG.s 			page 114


 3173 005e 4BD0     		beq	.L226
 3174 0060 032B     		cmp	r3, #3
 3175 0062 04D0     		beq	.L190
 3176 0064 05E0     		b	.L239
 3177              	.L188:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3178              		.loc 1 2163 0
 3179 0066 0124     		mov	r4, #1
 3180 0068 51E0     		b	.L189
 3181              	.L187:
 3182              	.LVL271:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3183              		.loc 1 2163 0 discriminator 5
 3184 006a 0424     		mov	r4, #4
 3185 006c 4FE0     		b	.L189
 3186              	.LVL272:
 3187              	.L190:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3188              		.loc 1 2163 0 discriminator 7
 3189 006e 0824     		mov	r4, #8
 3190 0070 4DE0     		b	.L189
 3191              	.LVL273:
 3192              	.L239:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3193              		.loc 1 2163 0 discriminator 3
 3194 0072 1024     		mov	r4, #16
 3195 0074 4BE0     		b	.L189
 3196              	.L185:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3197              		.loc 1 2163 0 discriminator 2
 3198 0076 AB4A     		ldr	r2, .L240+24
 3199 0078 9342     		cmp	r3, r2
 3200 007a 16D1     		bne	.L191
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3201              		.loc 1 2163 0 discriminator 8
 3202 007c A84B     		ldr	r3, .L240+20
 3203 007e DB6C     		ldr	r3, [r3, #76]
 3204 0080 0C22     		mov	r2, #12
 3205 0082 1340     		and	r3, r2
 3206 0084 042B     		cmp	r3, #4
 3207 0086 0AD0     		beq	.L193
 3208 0088 02D8     		bhi	.L194
 3209 008a 002B     		cmp	r3, #0
 3210 008c 05D0     		beq	.L195
 3211 008e 0AE0     		b	.L192
 3212              	.L194:
 3213 0090 082B     		cmp	r3, #8
 3214 0092 33D0     		beq	.L227
 3215 0094 0C2B     		cmp	r3, #12
 3216 0096 04D0     		beq	.L196
 3217 0098 05E0     		b	.L192
 3218              	.L195:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3219              		.loc 1 2163 0
 3220 009a 0024     		mov	r4, #0
 3221 009c 37E0     		b	.L189
 3222              	.L193:
ARM GAS  /tmp/ccjVxjbG.s 			page 115


 3223              	.LVL274:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3224              		.loc 1 2163 0 discriminator 12
 3225 009e 0424     		mov	r4, #4
 3226 00a0 35E0     		b	.L189
 3227              	.LVL275:
 3228              	.L196:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3229              		.loc 1 2163 0 discriminator 14
 3230 00a2 0824     		mov	r4, #8
 3231 00a4 33E0     		b	.L189
 3232              	.LVL276:
 3233              	.L192:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3234              		.loc 1 2163 0 discriminator 10
 3235 00a6 1024     		mov	r4, #16
 3236 00a8 31E0     		b	.L189
 3237              	.L191:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3238              		.loc 1 2163 0 discriminator 9
 3239 00aa 9F4A     		ldr	r2, .L240+28
 3240 00ac 9342     		cmp	r3, r2
 3241 00ae 27D0     		beq	.L228
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3242              		.loc 1 2163 0 discriminator 16
 3243 00b0 9E4A     		ldr	r2, .L240+32
 3244 00b2 9342     		cmp	r3, r2
 3245 00b4 26D0     		beq	.L229
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3246              		.loc 1 2163 0 discriminator 18
 3247 00b6 974A     		ldr	r2, .L240+8
 3248 00b8 9342     		cmp	r3, r2
 3249 00ba 25D1     		bne	.L230
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3250              		.loc 1 2163 0 discriminator 19
 3251 00bc 984B     		ldr	r3, .L240+20
 3252 00be DA6C     		ldr	r2, [r3, #76]
 3253 00c0 C023     		mov	r3, #192
 3254 00c2 1B01     		lsl	r3, r3, #4
 3255 00c4 1340     		and	r3, r2
 3256 00c6 8022     		mov	r2, #128
 3257 00c8 D200     		lsl	r2, r2, #3
 3258 00ca 9342     		cmp	r3, r2
 3259 00cc 0ED0     		beq	.L198
 3260 00ce 02D8     		bhi	.L199
 3261 00d0 002B     		cmp	r3, #0
 3262 00d2 09D0     		beq	.L200
 3263 00d4 0EE0     		b	.L197
 3264              	.L199:
 3265 00d6 8022     		mov	r2, #128
 3266 00d8 1201     		lsl	r2, r2, #4
 3267 00da 9342     		cmp	r3, r2
 3268 00dc 16D0     		beq	.L231
 3269 00de C022     		mov	r2, #192
 3270 00e0 1201     		lsl	r2, r2, #4
 3271 00e2 9342     		cmp	r3, r2
 3272 00e4 04D0     		beq	.L201
ARM GAS  /tmp/ccjVxjbG.s 			page 116


 3273 00e6 05E0     		b	.L197
 3274              	.L200:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3275              		.loc 1 2163 0
 3276 00e8 0024     		mov	r4, #0
 3277 00ea 10E0     		b	.L189
 3278              	.L198:
 3279              	.LVL277:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3280              		.loc 1 2163 0 discriminator 22
 3281 00ec 0424     		mov	r4, #4
 3282 00ee 0EE0     		b	.L189
 3283              	.LVL278:
 3284              	.L201:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3285              		.loc 1 2163 0 discriminator 24
 3286 00f0 0824     		mov	r4, #8
 3287 00f2 0CE0     		b	.L189
 3288              	.LVL279:
 3289              	.L197:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3290              		.loc 1 2163 0 discriminator 20
 3291 00f4 1024     		mov	r4, #16
 3292 00f6 0AE0     		b	.L189
 3293              	.L226:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3294              		.loc 1 2163 0
 3295 00f8 0224     		mov	r4, #2
 3296 00fa 08E0     		b	.L189
 3297              	.L227:
 3298 00fc 0224     		mov	r4, #2
 3299 00fe 06E0     		b	.L189
 3300              	.L228:
 3301 0100 0024     		mov	r4, #0
 3302 0102 04E0     		b	.L189
 3303              	.L229:
 3304 0104 0024     		mov	r4, #0
 3305 0106 02E0     		b	.L189
 3306              	.L230:
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3307              		.loc 1 2110 0 is_stmt 1
 3308 0108 1024     		mov	r4, #16
 3309 010a 00E0     		b	.L189
 3310              	.L231:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t frequency = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_USART2);
 3311              		.loc 1 2163 0
 3312 010c 0224     		mov	r4, #2
 3313              	.LVL280:
 3314              	.L189:
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3315              		.loc 1 2164 0
 3316 010e 0220     		mov	r0, #2
 3317 0110 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 3318              	.LVL281:
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3319              		.loc 1 2167 0
 3320 0114 2E68     		ldr	r6, [r5]
ARM GAS  /tmp/ccjVxjbG.s 			page 117


 3321 0116 7F4B     		ldr	r3, .L240+8
 3322 0118 9E42     		cmp	r6, r3
 3323 011a 40D1     		bne	.L202
 3324              	.LVL282:
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3325              		.loc 1 2172 0
 3326 011c 022C     		cmp	r4, #2
 3327 011e 0FD0     		beq	.L204
 3328 0120 02D8     		bhi	.L205
 3329 0122 002C     		cmp	r4, #0
 3330 0124 08D0     		beq	.L206
 3331 0126 16E0     		b	.L232
 3332              	.L205:
 3333 0128 042C     		cmp	r4, #4
 3334 012a 10D0     		beq	.L207
 3335 012c 082C     		cmp	r4, #8
 3336 012e 12D1     		bne	.L232
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3337              		.loc 1 2113 0
 3338 0130 0024     		mov	r4, #0
 3339              	.LVL283:
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3340              		.loc 1 2191 0
 3341 0132 8020     		mov	r0, #128
 3342              	.LVL284:
 3343 0134 0002     		lsl	r0, r0, #8
 3344 0136 13E0     		b	.L203
 3345              	.LVL285:
 3346              	.L206:
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3347              		.loc 1 2175 0
 3348 0138 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3349              	.LVL286:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3350              		.loc 1 2113 0
 3351 013c 0024     		mov	r4, #0
 3352              	.LVL287:
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3353              		.loc 1 2176 0
 3354 013e 0FE0     		b	.L203
 3355              	.LVL288:
 3356              	.L204:
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3357              		.loc 1 2178 0
 3358 0140 774B     		ldr	r3, .L240+20
 3359 0142 1B68     		ldr	r3, [r3]
 3360 0144 DB06     		lsl	r3, r3, #27
 3361 0146 09D5     		bpl	.L233
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3362              		.loc 1 2113 0
 3363 0148 0024     		mov	r4, #0
 3364              	.LVL289:
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3365              		.loc 1 2180 0
 3366 014a 7948     		ldr	r0, .L240+36
 3367              	.LVL290:
 3368 014c 08E0     		b	.L203
ARM GAS  /tmp/ccjVxjbG.s 			page 118


 3369              	.LVL291:
 3370              	.L207:
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3371              		.loc 1 2188 0
 3372 014e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3373              	.LVL292:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3374              		.loc 1 2113 0
 3375 0152 0024     		mov	r4, #0
 3376              	.LVL293:
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 3377              		.loc 1 2189 0
 3378 0154 04E0     		b	.L203
 3379              	.LVL294:
 3380              	.L232:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3381              		.loc 1 2195 0
 3382 0156 0124     		mov	r4, #1
 3383              	.LVL295:
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3384              		.loc 1 2170 0
 3385 0158 0020     		mov	r0, #0
 3386              	.LVL296:
 3387 015a 01E0     		b	.L203
 3388              	.LVL297:
 3389              	.L233:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3390              		.loc 1 2113 0
 3391 015c 0024     		mov	r4, #0
 3392              	.LVL298:
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3393              		.loc 1 2184 0
 3394 015e 7548     		ldr	r0, .L240+40
 3395              	.LVL299:
 3396              	.L203:
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3397              		.loc 1 2200 0
 3398 0160 0028     		cmp	r0, #0
 3399 0162 00D1     		bne	.LCB3176
 3400 0164 F5E0     		b	.L209	@long jump
 3401              	.LCB3176:
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 3402              		.loc 1 2203 0
 3403 0166 6A68     		ldr	r2, [r5, #4]
 3404 0168 5300     		lsl	r3, r2, #1
 3405 016a 9B18     		add	r3, r3, r2
 3406 016c 8342     		cmp	r3, r0
 3407 016e 00D9     		bls	.LCB3181
 3408 0170 C6E0     		b	.L234	@long jump
 3409              	.LCB3181:
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3410              		.loc 1 2204 0 discriminator 1
 3411 0172 1303     		lsl	r3, r2, #12
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 3412              		.loc 1 2203 0 discriminator 1
 3413 0174 8342     		cmp	r3, r0
 3414 0176 00D2     		bcs	.LCB3184
ARM GAS  /tmp/ccjVxjbG.s 			page 119


 3415 0178 C4E0     		b	.L235	@long jump
 3416              	.LCB3184:
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    
 3417              		.loc 1 2210 0
 3418 017a 070E     		lsr	r7, r0, #24
 3419 017c 0602     		lsl	r6, r0, #8
 3420 017e 5008     		lsr	r0, r2, #1
 3421              	.LVL300:
 3422 0180 0021     		mov	r1, #0
 3423 0182 8019     		add	r0, r0, r6
 3424 0184 7941     		adc	r1, r1, r7
 3425 0186 0023     		mov	r3, #0
 3426 0188 FFF7FEFF 		bl	__aeabi_uldivmod
 3427              	.LVL301:
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3428              		.loc 1 2212 0
 3429 018c 6A4B     		ldr	r3, .L240+44
 3430 018e C218     		add	r2, r0, r3
 3431 0190 6A4B     		ldr	r3, .L240+48
 3432 0192 9A42     		cmp	r2, r3
 3433 0194 00D9     		bls	.LCB3202
 3434 0196 B7E0     		b	.L236	@long jump
 3435              	.LCB3202:
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3436              		.loc 1 2214 0
 3437 0198 2B68     		ldr	r3, [r5]
 3438 019a D860     		str	r0, [r3, #12]
 3439 019c D9E0     		b	.L209
 3440              	.LVL302:
 3441              	.L202:
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3442              		.loc 1 2224 0
 3443 019e 8023     		mov	r3, #128
 3444 01a0 1B02     		lsl	r3, r3, #8
 3445 01a2 EA69     		ldr	r2, [r5, #28]
 3446 01a4 9A42     		cmp	r2, r3
 3447 01a6 58D1     		bne	.L210
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3448              		.loc 1 2226 0
 3449 01a8 082C     		cmp	r4, #8
 3450 01aa 4BD8     		bhi	.L237
 3451 01ac A400     		lsl	r4, r4, #2
 3452              	.LVL303:
 3453 01ae 644B     		ldr	r3, .L240+52
 3454 01b0 1B59     		ldr	r3, [r3, r4]
 3455 01b2 9F46     		mov	pc, r3
 3456              		.section	.rodata.UART_SetConfig,"a",%progbits
 3457              		.align	2
 3458              	.L213:
 3459 0000 B4010000 		.word	.L212
 3460 0004 C8010000 		.word	.L214
 3461 0008 E0010000 		.word	.L215
 3462 000c 44020000 		.word	.L237
 3463 0010 14020000 		.word	.L216
 3464 0014 44020000 		.word	.L237
 3465 0018 44020000 		.word	.L237
 3466 001c 44020000 		.word	.L237
ARM GAS  /tmp/ccjVxjbG.s 			page 120


 3467 0020 2C020000 		.word	.L217
 3468              		.section	.text.UART_SetConfig
 3469              	.L212:
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3470              		.loc 1 2229 0
 3471 01b4 4000     		lsl	r0, r0, #1
 3472              	.LVL304:
 3473 01b6 6B68     		ldr	r3, [r5, #4]
 3474 01b8 5B08     		lsr	r3, r3, #1
 3475 01ba C018     		add	r0, r0, r3
 3476 01bc 6968     		ldr	r1, [r5, #4]
 3477 01be FFF7FEFF 		bl	__aeabi_uidiv
 3478              	.LVL305:
 3479 01c2 80B2     		uxth	r0, r0
 3480              	.LVL306:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3481              		.loc 1 2113 0
 3482 01c4 0024     		mov	r4, #0
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 3483              		.loc 1 2230 0
 3484 01c6 3FE0     		b	.L211
 3485              	.LVL307:
 3486              	.L214:
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3487              		.loc 1 2232 0
 3488 01c8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3489              	.LVL308:
 3490 01cc 4000     		lsl	r0, r0, #1
 3491 01ce 6B68     		ldr	r3, [r5, #4]
 3492 01d0 5B08     		lsr	r3, r3, #1
 3493 01d2 C018     		add	r0, r0, r3
 3494 01d4 6968     		ldr	r1, [r5, #4]
 3495 01d6 FFF7FEFF 		bl	__aeabi_uidiv
 3496              	.LVL309:
 3497 01da 80B2     		uxth	r0, r0
 3498              	.LVL310:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3499              		.loc 1 2113 0
 3500 01dc 0024     		mov	r4, #0
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3501              		.loc 1 2233 0
 3502 01de 33E0     		b	.L211
 3503              	.LVL311:
 3504              	.L215:
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3505              		.loc 1 2235 0
 3506 01e0 4F4B     		ldr	r3, .L240+20
 3507 01e2 1B68     		ldr	r3, [r3]
 3508 01e4 DB06     		lsl	r3, r3, #27
 3509 01e6 0AD5     		bpl	.L218
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3510              		.loc 1 2237 0
 3511 01e8 6B68     		ldr	r3, [r5, #4]
 3512 01ea 5808     		lsr	r0, r3, #1
 3513              	.LVL312:
 3514 01ec 554B     		ldr	r3, .L240+56
 3515 01ee 9C46     		mov	ip, r3
ARM GAS  /tmp/ccjVxjbG.s 			page 121


 3516 01f0 6044     		add	r0, r0, ip
 3517 01f2 6968     		ldr	r1, [r5, #4]
 3518 01f4 FFF7FEFF 		bl	__aeabi_uidiv
 3519              	.LVL313:
 3520 01f8 80B2     		uxth	r0, r0
 3521              	.LVL314:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3522              		.loc 1 2113 0
 3523 01fa 0024     		mov	r4, #0
 3524 01fc 24E0     		b	.L211
 3525              	.LVL315:
 3526              	.L218:
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3527              		.loc 1 2241 0
 3528 01fe 6B68     		ldr	r3, [r5, #4]
 3529 0200 5808     		lsr	r0, r3, #1
 3530              	.LVL316:
 3531 0202 514B     		ldr	r3, .L240+60
 3532 0204 9C46     		mov	ip, r3
 3533 0206 6044     		add	r0, r0, ip
 3534 0208 6968     		ldr	r1, [r5, #4]
 3535 020a FFF7FEFF 		bl	__aeabi_uidiv
 3536              	.LVL317:
 3537 020e 80B2     		uxth	r0, r0
 3538              	.LVL318:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3539              		.loc 1 2113 0
 3540 0210 0024     		mov	r4, #0
 3541 0212 19E0     		b	.L211
 3542              	.LVL319:
 3543              	.L216:
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3544              		.loc 1 2245 0
 3545 0214 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3546              	.LVL320:
 3547 0218 4000     		lsl	r0, r0, #1
 3548 021a 6B68     		ldr	r3, [r5, #4]
 3549 021c 5B08     		lsr	r3, r3, #1
 3550 021e C018     		add	r0, r0, r3
 3551 0220 6968     		ldr	r1, [r5, #4]
 3552 0222 FFF7FEFF 		bl	__aeabi_uidiv
 3553              	.LVL321:
 3554 0226 80B2     		uxth	r0, r0
 3555              	.LVL322:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3556              		.loc 1 2113 0
 3557 0228 0024     		mov	r4, #0
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 3558              		.loc 1 2246 0
 3559 022a 0DE0     		b	.L211
 3560              	.LVL323:
 3561              	.L217:
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3562              		.loc 1 2248 0
 3563 022c 6B68     		ldr	r3, [r5, #4]
 3564 022e 5808     		lsr	r0, r3, #1
 3565              	.LVL324:
ARM GAS  /tmp/ccjVxjbG.s 			page 122


 3566 0230 8023     		mov	r3, #128
 3567 0232 5B02     		lsl	r3, r3, #9
 3568 0234 9C46     		mov	ip, r3
 3569 0236 6044     		add	r0, r0, ip
 3570 0238 6968     		ldr	r1, [r5, #4]
 3571 023a FFF7FEFF 		bl	__aeabi_uidiv
 3572              	.LVL325:
 3573 023e 80B2     		uxth	r0, r0
 3574              	.LVL326:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3575              		.loc 1 2113 0
 3576 0240 0024     		mov	r4, #0
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 3577              		.loc 1 2249 0
 3578 0242 01E0     		b	.L211
 3579              	.LVL327:
 3580              	.L237:
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3581              		.loc 1 2252 0
 3582 0244 0124     		mov	r4, #1
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3583              		.loc 1 2112 0
 3584 0246 0020     		mov	r0, #0
 3585              	.LVL328:
 3586              	.L211:
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     brrtemp |= (uint16_t)((uint16_t)(usartdiv & (uint16_t)0x000FU) >> (uint16_t)1U);
 3587              		.loc 1 2256 0
 3588 0248 0F23     		mov	r3, #15
 3589 024a 021C     		mov	r2, r0
 3590 024c 9A43     		bic	r2, r3
 3591              	.LVL329:
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 3592              		.loc 1 2257 0
 3593 024e 0007     		lsl	r0, r0, #28
 3594              	.LVL330:
 3595 0250 400F     		lsr	r0, r0, #29
 3596 0252 1043     		orr	r0, r2
 3597              	.LVL331:
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3598              		.loc 1 2258 0
 3599 0254 2B68     		ldr	r3, [r5]
 3600 0256 D860     		str	r0, [r3, #12]
 3601 0258 7BE0     		b	.L209
 3602              	.LVL332:
 3603              	.L210:
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3604              		.loc 1 2262 0
 3605 025a 082C     		cmp	r4, #8
 3606 025c 78D8     		bhi	.L238
 3607 025e A400     		lsl	r4, r4, #2
 3608              	.LVL333:
 3609 0260 3A4B     		ldr	r3, .L240+64
 3610 0262 1B59     		ldr	r3, [r3, r4]
 3611 0264 9F46     		mov	pc, r3
 3612              		.section	.rodata.UART_SetConfig
 3613              		.align	2
 3614              	.L220:
ARM GAS  /tmp/ccjVxjbG.s 			page 123


 3615 0024 66020000 		.word	.L219
 3616 0028 7E020000 		.word	.L221
 3617 002c 96020000 		.word	.L222
 3618 0030 50030000 		.word	.L238
 3619 0034 CE020000 		.word	.L223
 3620 0038 50030000 		.word	.L238
 3621 003c 50030000 		.word	.L238
 3622 0040 50030000 		.word	.L238
 3623 0044 E6020000 		.word	.L224
 3624              		.section	.text.UART_SetConfig
 3625              	.L219:
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3626              		.loc 1 2265 0
 3627 0266 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3628              	.LVL334:
 3629 026a 6968     		ldr	r1, [r5, #4]
 3630 026c 4B08     		lsr	r3, r1, #1
 3631 026e C018     		add	r0, r0, r3
 3632 0270 FFF7FEFF 		bl	__aeabi_uidiv
 3633              	.LVL335:
 3634 0274 0004     		lsl	r0, r0, #16
 3635 0276 000C     		lsr	r0, r0, #16
 3636 0278 F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3637              		.loc 1 2113 0
 3638 027a 0024     		mov	r4, #0
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
 3639              		.loc 1 2266 0
 3640 027c 69E0     		b	.L209
 3641              	.LVL336:
 3642              	.L221:
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3643              		.loc 1 2268 0
 3644 027e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3645              	.LVL337:
 3646 0282 6968     		ldr	r1, [r5, #4]
 3647 0284 4B08     		lsr	r3, r1, #1
 3648 0286 C018     		add	r0, r0, r3
 3649 0288 FFF7FEFF 		bl	__aeabi_uidiv
 3650              	.LVL338:
 3651 028c 0004     		lsl	r0, r0, #16
 3652 028e 000C     		lsr	r0, r0, #16
 3653 0290 F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3654              		.loc 1 2113 0
 3655 0292 0024     		mov	r4, #0
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3656              		.loc 1 2269 0
 3657 0294 5DE0     		b	.L209
 3658              	.LVL339:
 3659              	.L222:
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3660              		.loc 1 2271 0
 3661 0296 224B     		ldr	r3, .L240+20
 3662 0298 1B68     		ldr	r3, [r3]
 3663 029a DB06     		lsl	r3, r3, #27
 3664 029c 0BD5     		bpl	.L225
ARM GAS  /tmp/ccjVxjbG.s 			page 124


2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3665              		.loc 1 2273 0
 3666 029e 6968     		ldr	r1, [r5, #4]
 3667 02a0 4808     		lsr	r0, r1, #1
 3668              	.LVL340:
 3669 02a2 234B     		ldr	r3, .L240+36
 3670 02a4 9C46     		mov	ip, r3
 3671 02a6 6044     		add	r0, r0, ip
 3672 02a8 FFF7FEFF 		bl	__aeabi_uidiv
 3673              	.LVL341:
 3674 02ac 0004     		lsl	r0, r0, #16
 3675 02ae 000C     		lsr	r0, r0, #16
 3676 02b0 F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3677              		.loc 1 2113 0
 3678 02b2 0024     		mov	r4, #0
 3679 02b4 4DE0     		b	.L209
 3680              	.LVL342:
 3681              	.L225:
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3682              		.loc 1 2277 0
 3683 02b6 6968     		ldr	r1, [r5, #4]
 3684 02b8 4808     		lsr	r0, r1, #1
 3685              	.LVL343:
 3686 02ba 1E4B     		ldr	r3, .L240+40
 3687 02bc 9C46     		mov	ip, r3
 3688 02be 6044     		add	r0, r0, ip
 3689 02c0 FFF7FEFF 		bl	__aeabi_uidiv
 3690              	.LVL344:
 3691 02c4 0004     		lsl	r0, r0, #16
 3692 02c6 000C     		lsr	r0, r0, #16
 3693 02c8 F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3694              		.loc 1 2113 0
 3695 02ca 0024     		mov	r4, #0
 3696 02cc 41E0     		b	.L209
 3697              	.LVL345:
 3698              	.L223:
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3699              		.loc 1 2281 0
 3700 02ce FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3701              	.LVL346:
 3702 02d2 6968     		ldr	r1, [r5, #4]
 3703 02d4 4B08     		lsr	r3, r1, #1
 3704 02d6 C018     		add	r0, r0, r3
 3705 02d8 FFF7FEFF 		bl	__aeabi_uidiv
 3706              	.LVL347:
 3707 02dc 0004     		lsl	r0, r0, #16
 3708 02de 000C     		lsr	r0, r0, #16
 3709 02e0 F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3710              		.loc 1 2113 0
 3711 02e2 0024     		mov	r4, #0
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 3712              		.loc 1 2282 0
 3713 02e4 35E0     		b	.L209
 3714              	.LVL348:
ARM GAS  /tmp/ccjVxjbG.s 			page 125


 3715              	.L224:
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3716              		.loc 1 2284 0
 3717 02e6 6968     		ldr	r1, [r5, #4]
 3718 02e8 4808     		lsr	r0, r1, #1
 3719              	.LVL349:
 3720 02ea 8023     		mov	r3, #128
 3721 02ec 1B02     		lsl	r3, r3, #8
 3722 02ee 9C46     		mov	ip, r3
 3723 02f0 6044     		add	r0, r0, ip
 3724 02f2 FFF7FEFF 		bl	__aeabi_uidiv
 3725              	.LVL350:
 3726 02f6 0004     		lsl	r0, r0, #16
 3727 02f8 000C     		lsr	r0, r0, #16
 3728 02fa F060     		str	r0, [r6, #12]
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3729              		.loc 1 2113 0
 3730 02fc 0024     		mov	r4, #0
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 3731              		.loc 1 2285 0
 3732 02fe 28E0     		b	.L209
 3733              	.LVL351:
 3734              	.L234:
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3735              		.loc 1 2206 0
 3736 0300 0124     		mov	r4, #1
 3737              	.LVL352:
 3738 0302 26E0     		b	.L209
 3739              	.LVL353:
 3740              	.L235:
 3741 0304 0124     		mov	r4, #1
 3742              	.LVL354:
 3743 0306 24E0     		b	.L209
 3744              	.LVL355:
 3745              	.L236:
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3746              		.loc 1 2218 0
 3747 0308 0124     		mov	r4, #1
 3748              	.LVL356:
 3749 030a 22E0     		b	.L209
 3750              	.L241:
 3751              		.align	2
 3752              	.L240:
 3753 030c F369FFEF 		.word	-268473869
 3754 0310 FFCFFFFF 		.word	-12289
 3755 0314 00480040 		.word	1073760256
 3756 0318 FFF4FFFF 		.word	-2817
 3757 031c 00380140 		.word	1073821696
 3758 0320 00100240 		.word	1073876992
 3759 0324 00440040 		.word	1073759232
 3760 0328 004C0040 		.word	1073761280
 3761 032c 00500040 		.word	1073762304
 3762 0330 00093D00 		.word	4000000
 3763 0334 0024F400 		.word	16000000
 3764 0338 00FDFFFF 		.word	-768
 3765 033c FFFC0F00 		.word	1047807
 3766 0340 00000000 		.word	.L213
ARM GAS  /tmp/ccjVxjbG.s 			page 126


 3767 0344 00127A00 		.word	8000000
 3768 0348 0048E801 		.word	32000000
 3769 034c 24000000 		.word	.L220
 3770              	.LVL357:
 3771              	.L238:
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       break;
 3772              		.loc 1 2288 0
 3773 0350 0124     		mov	r4, #1
 3774              	.LVL358:
 3775              	.L209:
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3776              		.loc 1 2295 0
 3777 0352 201C     		mov	r0, r4
 3778              		@ sp needed
 3779              	.LVL359:
 3780              	.LVL360:
 3781 0354 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3782              		.cfi_endproc
 3783              	.LFE75:
 3785 0356 C046     		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3786              		.align	2
 3787              		.global	UART_AdvFeatureConfig
 3788              		.code	16
 3789              		.thumb_func
 3791              	UART_AdvFeatureConfig:
 3792              	.LFB76:
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3793              		.loc 1 2303 0
 3794              		.cfi_startproc
 3795              	.LVL361:
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3796              		.loc 1 2308 0
 3797 0000 436A     		ldr	r3, [r0, #36]
 3798 0002 DB07     		lsl	r3, r3, #31
 3799 0004 06D5     		bpl	.L243
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3800              		.loc 1 2311 0
 3801 0006 0268     		ldr	r2, [r0]
 3802 0008 5168     		ldr	r1, [r2, #4]
 3803 000a 2C4B     		ldr	r3, .L251
 3804 000c 0B40     		and	r3, r1
 3805 000e 816A     		ldr	r1, [r0, #40]
 3806 0010 0B43     		orr	r3, r1
 3807 0012 5360     		str	r3, [r2, #4]
 3808              	.L243:
2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3809              		.loc 1 2315 0
 3810 0014 436A     		ldr	r3, [r0, #36]
 3811 0016 9B07     		lsl	r3, r3, #30
 3812 0018 06D5     		bpl	.L244
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3813              		.loc 1 2318 0
 3814 001a 0268     		ldr	r2, [r0]
 3815 001c 5168     		ldr	r1, [r2, #4]
 3816 001e 284B     		ldr	r3, .L251+4
 3817 0020 0B40     		and	r3, r1
 3818 0022 C16A     		ldr	r1, [r0, #44]
ARM GAS  /tmp/ccjVxjbG.s 			page 127


 3819 0024 0B43     		orr	r3, r1
 3820 0026 5360     		str	r3, [r2, #4]
 3821              	.L244:
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3822              		.loc 1 2322 0
 3823 0028 436A     		ldr	r3, [r0, #36]
 3824 002a 5B07     		lsl	r3, r3, #29
 3825 002c 06D5     		bpl	.L245
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3826              		.loc 1 2325 0
 3827 002e 0268     		ldr	r2, [r0]
 3828 0030 5168     		ldr	r1, [r2, #4]
 3829 0032 244B     		ldr	r3, .L251+8
 3830 0034 0B40     		and	r3, r1
 3831 0036 016B     		ldr	r1, [r0, #48]
 3832 0038 0B43     		orr	r3, r1
 3833 003a 5360     		str	r3, [r2, #4]
 3834              	.L245:
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3835              		.loc 1 2329 0
 3836 003c 436A     		ldr	r3, [r0, #36]
 3837 003e 1B07     		lsl	r3, r3, #28
 3838 0040 06D5     		bpl	.L246
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3839              		.loc 1 2332 0
 3840 0042 0268     		ldr	r2, [r0]
 3841 0044 5168     		ldr	r1, [r2, #4]
 3842 0046 204B     		ldr	r3, .L251+12
 3843 0048 0B40     		and	r3, r1
 3844 004a 416B     		ldr	r1, [r0, #52]
 3845 004c 0B43     		orr	r3, r1
 3846 004e 5360     		str	r3, [r2, #4]
 3847              	.L246:
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3848              		.loc 1 2336 0
 3849 0050 436A     		ldr	r3, [r0, #36]
 3850 0052 DB06     		lsl	r3, r3, #27
 3851 0054 06D5     		bpl	.L247
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3852              		.loc 1 2339 0
 3853 0056 0268     		ldr	r2, [r0]
 3854 0058 9168     		ldr	r1, [r2, #8]
 3855 005a 1C4B     		ldr	r3, .L251+16
 3856 005c 0B40     		and	r3, r1
 3857 005e 816B     		ldr	r1, [r0, #56]
 3858 0060 0B43     		orr	r3, r1
 3859 0062 9360     		str	r3, [r2, #8]
 3860              	.L247:
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3861              		.loc 1 2343 0
 3862 0064 436A     		ldr	r3, [r0, #36]
 3863 0066 9B06     		lsl	r3, r3, #26
 3864 0068 06D5     		bpl	.L248
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3865              		.loc 1 2346 0
 3866 006a 0268     		ldr	r2, [r0]
 3867 006c 9168     		ldr	r1, [r2, #8]
ARM GAS  /tmp/ccjVxjbG.s 			page 128


 3868 006e 184B     		ldr	r3, .L251+20
 3869 0070 0B40     		and	r3, r1
 3870 0072 C16B     		ldr	r1, [r0, #60]
 3871 0074 0B43     		orr	r3, r1
 3872 0076 9360     		str	r3, [r2, #8]
 3873              	.L248:
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3874              		.loc 1 2350 0
 3875 0078 436A     		ldr	r3, [r0, #36]
 3876 007a 5B06     		lsl	r3, r3, #25
 3877 007c 12D5     		bpl	.L249
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3878              		.loc 1 2354 0
 3879 007e 0268     		ldr	r2, [r0]
 3880 0080 5168     		ldr	r1, [r2, #4]
 3881 0082 144B     		ldr	r3, .L251+24
 3882 0084 0B40     		and	r3, r1
 3883 0086 016C     		ldr	r1, [r0, #64]
 3884 0088 0B43     		orr	r3, r1
 3885 008a 5360     		str	r3, [r2, #4]
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3886              		.loc 1 2356 0
 3887 008c 8023     		mov	r3, #128
 3888 008e 5B03     		lsl	r3, r3, #13
 3889 0090 026C     		ldr	r2, [r0, #64]
 3890 0092 9A42     		cmp	r2, r3
 3891 0094 06D1     		bne	.L249
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 3892              		.loc 1 2359 0
 3893 0096 0268     		ldr	r2, [r0]
 3894 0098 5168     		ldr	r1, [r2, #4]
 3895 009a 0F4B     		ldr	r3, .L251+28
 3896 009c 0B40     		and	r3, r1
 3897 009e 416C     		ldr	r1, [r0, #68]
 3898 00a0 0B43     		orr	r3, r1
 3899 00a2 5360     		str	r3, [r2, #4]
 3900              	.L249:
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3901              		.loc 1 2364 0
 3902 00a4 436A     		ldr	r3, [r0, #36]
 3903 00a6 1B06     		lsl	r3, r3, #24
 3904 00a8 06D5     		bpl	.L242
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3905              		.loc 1 2367 0
 3906 00aa 0168     		ldr	r1, [r0]
 3907 00ac 4A68     		ldr	r2, [r1, #4]
 3908 00ae 0B4B     		ldr	r3, .L251+32
 3909 00b0 1340     		and	r3, r2
 3910 00b2 826C     		ldr	r2, [r0, #72]
 3911 00b4 1343     		orr	r3, r2
 3912 00b6 4B60     		str	r3, [r1, #4]
 3913              	.L242:
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3914              		.loc 1 2369 0
 3915              		@ sp needed
 3916 00b8 7047     		bx	lr
 3917              	.L252:
ARM GAS  /tmp/ccjVxjbG.s 			page 129


 3918 00ba C046     		.align	2
 3919              	.L251:
 3920 00bc FFFFFDFF 		.word	-131073
 3921 00c0 FFFFFEFF 		.word	-65537
 3922 00c4 FFFFFBFF 		.word	-262145
 3923 00c8 FF7FFFFF 		.word	-32769
 3924 00cc FFEFFFFF 		.word	-4097
 3925 00d0 FFDFFFFF 		.word	-8193
 3926 00d4 FFFFEFFF 		.word	-1048577
 3927 00d8 FFFF9FFF 		.word	-6291457
 3928 00dc FFFFF7FF 		.word	-524289
 3929              		.cfi_endproc
 3930              	.LFE76:
 3932              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3933              		.align	2
 3934              		.global	UART_WaitOnFlagUntilTimeout
 3935              		.code	16
 3936              		.thumb_func
 3938              	UART_WaitOnFlagUntilTimeout:
 3939              	.LFB78:
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
 3940              		.loc 1 2427 0
 3941              		.cfi_startproc
 3942              	.LVL362:
 3943 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3944              	.LCFI29:
 3945              		.cfi_def_cfa_offset 20
 3946              		.cfi_offset 4, -20
 3947              		.cfi_offset 5, -16
 3948              		.cfi_offset 6, -12
 3949              		.cfi_offset 7, -8
 3950              		.cfi_offset 14, -4
 3951 0002 4746     		mov	r7, r8
 3952 0004 80B4     		push	{r7}
 3953              	.LCFI30:
 3954              		.cfi_def_cfa_offset 24
 3955              		.cfi_offset 8, -24
 3956 0006 061C     		mov	r6, r0
 3957 0008 0C1C     		mov	r4, r1
 3958 000a 171C     		mov	r7, r2
 3959 000c 9846     		mov	r8, r3
 3960 000e 069D     		ldr	r5, [sp, #24]
2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3961              		.loc 1 2429 0
 3962 0010 1DE0     		b	.L255
 3963              	.LVL363:
 3964              	.L258:
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3965              		.loc 1 2432 0
 3966 0012 6B1C     		add	r3, r5, #1
 3967 0014 1BD0     		beq	.L255
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3968              		.loc 1 2434 0
 3969 0016 002D     		cmp	r5, #0
 3970 0018 05D0     		beq	.L256
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3971              		.loc 1 2434 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccjVxjbG.s 			page 130


 3972 001a FFF7FEFF 		bl	HAL_GetTick
 3973              	.LVL364:
 3974 001e 4346     		mov	r3, r8
 3975 0020 C01A     		sub	r0, r0, r3
 3976 0022 A842     		cmp	r0, r5
 3977 0024 13D9     		bls	.L255
 3978              	.L256:
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3979              		.loc 1 2437 0 is_stmt 1
 3980 0026 3268     		ldr	r2, [r6]
 3981 0028 1168     		ldr	r1, [r2]
 3982 002a 0F4B     		ldr	r3, .L259
 3983 002c 0B40     		and	r3, r1
 3984 002e 1360     		str	r3, [r2]
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3985              		.loc 1 2438 0
 3986 0030 3268     		ldr	r2, [r6]
 3987 0032 9368     		ldr	r3, [r2, #8]
 3988 0034 0121     		mov	r1, #1
 3989 0036 8B43     		bic	r3, r1
 3990 0038 9360     		str	r3, [r2, #8]
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3991              		.loc 1 2440 0
 3992 003a 2023     		mov	r3, #32
 3993 003c 6922     		mov	r2, #105
 3994 003e B354     		strb	r3, [r6, r2]
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3995              		.loc 1 2441 0
 3996 0040 0132     		add	r2, r2, #1
 3997 0042 B354     		strb	r3, [r6, r2]
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3998              		.loc 1 2444 0
 3999 0044 0022     		mov	r2, #0
 4000 0046 4833     		add	r3, r3, #72
 4001 0048 F254     		strb	r2, [r6, r3]
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4002              		.loc 1 2445 0
 4003 004a 0320     		mov	r0, #3
 4004 004c 08E0     		b	.L257
 4005              	.L255:
2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4006              		.loc 1 2429 0
 4007 004e 3368     		ldr	r3, [r6]
 4008 0050 DB69     		ldr	r3, [r3, #28]
 4009 0052 2340     		and	r3, r4
 4010 0054 1B1B     		sub	r3, r3, r4
 4011 0056 5A42     		neg	r2, r3
 4012 0058 5341     		adc	r3, r3, r2
 4013 005a BB42     		cmp	r3, r7
 4014 005c D9D0     		beq	.L258
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4015              		.loc 1 2449 0
 4016 005e 0020     		mov	r0, #0
 4017              	.L257:
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4018              		.loc 1 2450 0
 4019              		@ sp needed
ARM GAS  /tmp/ccjVxjbG.s 			page 131


 4020              	.LVL365:
 4021              	.LVL366:
 4022              	.LVL367:
 4023 0060 04BC     		pop	{r2}
 4024 0062 9046     		mov	r8, r2
 4025 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 4026              	.L260:
 4027 0066 C046     		.align	2
 4028              	.L259:
 4029 0068 5FFEFFFF 		.word	-417
 4030              		.cfi_endproc
 4031              	.LFE78:
 4033              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4034              		.align	2
 4035              		.global	HAL_UART_Transmit
 4036              		.code	16
 4037              		.thumb_func
 4039              	HAL_UART_Transmit:
 4040              	.LFB43:
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
 4041              		.loc 1 659 0
 4042              		.cfi_startproc
 4043              	.LVL368:
 4044 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4045              	.LCFI31:
 4046              		.cfi_def_cfa_offset 20
 4047              		.cfi_offset 4, -20
 4048              		.cfi_offset 5, -16
 4049              		.cfi_offset 6, -12
 4050              		.cfi_offset 7, -8
 4051              		.cfi_offset 14, -4
 4052 0002 85B0     		sub	sp, sp, #20
 4053              	.LCFI32:
 4054              		.cfi_def_cfa_offset 40
 4055 0004 041C     		mov	r4, r0
 4056 0006 0F1C     		mov	r7, r1
 4057 0008 161C     		mov	r6, r2
 4058 000a 1D1C     		mov	r5, r3
 4059              	.LVL369:
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4060              		.loc 1 664 0
 4061 000c 6923     		mov	r3, #105
 4062              	.LVL370:
 4063 000e C35C     		ldrb	r3, [r0, r3]
 4064 0010 202B     		cmp	r3, #32
 4065 0012 57D1     		bne	.L268
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4066              		.loc 1 666 0
 4067 0014 0029     		cmp	r1, #0
 4068 0016 57D0     		beq	.L269
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4069              		.loc 1 666 0 is_stmt 0 discriminator 1
 4070 0018 002A     		cmp	r2, #0
 4071 001a 57D0     		beq	.L270
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4072              		.loc 1 674 0 is_stmt 1
 4073 001c 8023     		mov	r3, #128
ARM GAS  /tmp/ccjVxjbG.s 			page 132


 4074 001e 5B01     		lsl	r3, r3, #5
 4075 0020 8268     		ldr	r2, [r0, #8]
 4076              	.LVL371:
 4077 0022 9A42     		cmp	r2, r3
 4078 0024 04D1     		bne	.L263
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4079              		.loc 1 674 0 is_stmt 0 discriminator 1
 4080 0026 0369     		ldr	r3, [r0, #16]
 4081 0028 002B     		cmp	r3, #0
 4082 002a 01D1     		bne	.L263
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4083              		.loc 1 676 0 is_stmt 1
 4084 002c CB07     		lsl	r3, r1, #31
 4085 002e 4FD4     		bmi	.L271
 4086              	.L263:
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4087              		.loc 1 683 0
 4088 0030 6823     		mov	r3, #104
 4089 0032 E35C     		ldrb	r3, [r4, r3]
 4090 0034 012B     		cmp	r3, #1
 4091 0036 4DD0     		beq	.L272
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4092              		.loc 1 683 0 is_stmt 0 discriminator 2
 4093 0038 0122     		mov	r2, #1
 4094 003a 6823     		mov	r3, #104
 4095 003c E254     		strb	r2, [r4, r3]
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4096              		.loc 1 685 0 is_stmt 1 discriminator 2
 4097 003e 0023     		mov	r3, #0
 4098 0040 E366     		str	r3, [r4, #108]
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4099              		.loc 1 686 0 discriminator 2
 4100 0042 2032     		add	r2, r2, #32
 4101 0044 6933     		add	r3, r3, #105
 4102 0046 E254     		strb	r2, [r4, r3]
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4103              		.loc 1 689 0 discriminator 2
 4104 0048 FFF7FEFF 		bl	HAL_GetTick
 4105              	.LVL372:
 4106 004c 0390     		str	r0, [sp, #12]
 4107              	.LVL373:
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 4108              		.loc 1 691 0 discriminator 2
 4109 004e 5023     		mov	r3, #80
 4110 0050 E652     		strh	r6, [r4, r3]
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 4111              		.loc 1 692 0 discriminator 2
 4112 0052 0233     		add	r3, r3, #2
 4113 0054 E652     		strh	r6, [r4, r3]
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4114              		.loc 1 693 0 discriminator 2
 4115 0056 20E0     		b	.L264
 4116              	.LVL374:
 4117              	.L267:
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4118              		.loc 1 695 0
 4119 0058 5222     		mov	r2, #82
ARM GAS  /tmp/ccjVxjbG.s 			page 133


 4120 005a A35A     		ldrh	r3, [r4, r2]
 4121 005c 013B     		sub	r3, r3, #1
 4122 005e 9BB2     		uxth	r3, r3
 4123 0060 A352     		strh	r3, [r4, r2]
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4124              		.loc 1 696 0
 4125 0062 0095     		str	r5, [sp]
 4126 0064 201C     		mov	r0, r4
 4127 0066 8021     		mov	r1, #128
 4128 0068 0022     		mov	r2, #0
 4129 006a 039B     		ldr	r3, [sp, #12]
 4130 006c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4131              	.LVL375:
 4132 0070 0028     		cmp	r0, #0
 4133 0072 31D1     		bne	.L273
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4134              		.loc 1 700 0
 4135 0074 8023     		mov	r3, #128
 4136 0076 5B01     		lsl	r3, r3, #5
 4137 0078 A268     		ldr	r2, [r4, #8]
 4138 007a 9A42     		cmp	r2, r3
 4139 007c 09D1     		bne	.L265
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4140              		.loc 1 700 0 is_stmt 0 discriminator 1
 4141 007e 2369     		ldr	r3, [r4, #16]
 4142 0080 002B     		cmp	r3, #0
 4143 0082 06D1     		bne	.L265
 4144              	.LVL376:
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pData += 2U;
 4145              		.loc 1 703 0 is_stmt 1
 4146 0084 2268     		ldr	r2, [r4]
 4147 0086 3B88     		ldrh	r3, [r7]
 4148 0088 DB05     		lsl	r3, r3, #23
 4149 008a DB0D     		lsr	r3, r3, #23
 4150 008c 9362     		str	r3, [r2, #40]
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4151              		.loc 1 704 0
 4152 008e 0237     		add	r7, r7, #2
 4153              	.LVL377:
 4154 0090 03E0     		b	.L264
 4155              	.LVL378:
 4156              	.L265:
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4157              		.loc 1 708 0
 4158 0092 2368     		ldr	r3, [r4]
 4159              	.LVL379:
 4160 0094 3A78     		ldrb	r2, [r7]
 4161 0096 9A62     		str	r2, [r3, #40]
 4162 0098 0137     		add	r7, r7, #1
 4163              	.LVL380:
 4164              	.L264:
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4165              		.loc 1 693 0
 4166 009a 5223     		mov	r3, #82
 4167 009c E35A     		ldrh	r3, [r4, r3]
 4168 009e 9BB2     		uxth	r3, r3
 4169 00a0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjVxjbG.s 			page 134


 4170 00a2 D9D1     		bne	.L267
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4171              		.loc 1 711 0
 4172 00a4 0095     		str	r5, [sp]
 4173 00a6 201C     		mov	r0, r4
 4174 00a8 4021     		mov	r1, #64
 4175 00aa 0022     		mov	r2, #0
 4176 00ac 039B     		ldr	r3, [sp, #12]
 4177 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4178              	.LVL381:
 4179 00b2 0028     		cmp	r0, #0
 4180 00b4 12D1     		bne	.L274
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4181              		.loc 1 717 0
 4182 00b6 2022     		mov	r2, #32
 4183 00b8 6923     		mov	r3, #105
 4184 00ba E254     		strb	r2, [r4, r3]
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4185              		.loc 1 720 0
 4186 00bc 0022     		mov	r2, #0
 4187 00be 013B     		sub	r3, r3, #1
 4188 00c0 E254     		strb	r2, [r4, r3]
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4189              		.loc 1 722 0
 4190 00c2 0CE0     		b	.L262
 4191              	.LVL382:
 4192              	.L268:
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4193              		.loc 1 726 0
 4194 00c4 0220     		mov	r0, #2
 4195              	.LVL383:
 4196 00c6 0AE0     		b	.L262
 4197              	.LVL384:
 4198              	.L269:
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4199              		.loc 1 668 0
 4200 00c8 0120     		mov	r0, #1
 4201              	.LVL385:
 4202 00ca 08E0     		b	.L262
 4203              	.LVL386:
 4204              	.L270:
 4205 00cc 0120     		mov	r0, #1
 4206              	.LVL387:
 4207 00ce 06E0     		b	.L262
 4208              	.LVL388:
 4209              	.L271:
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4210              		.loc 1 678 0
 4211 00d0 0120     		mov	r0, #1
 4212              	.LVL389:
 4213 00d2 04E0     		b	.L262
 4214              	.LVL390:
 4215              	.L272:
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4216              		.loc 1 683 0
 4217 00d4 0220     		mov	r0, #2
 4218              	.LVL391:
ARM GAS  /tmp/ccjVxjbG.s 			page 135


 4219 00d6 02E0     		b	.L262
 4220              	.LVL392:
 4221              	.L273:
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4222              		.loc 1 698 0
 4223 00d8 0320     		mov	r0, #3
 4224 00da 00E0     		b	.L262
 4225              	.L274:
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4226              		.loc 1 713 0
 4227 00dc 0320     		mov	r0, #3
 4228              	.LVL393:
 4229              	.L262:
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4230              		.loc 1 728 0
 4231 00de 05B0     		add	sp, sp, #20
 4232              		@ sp needed
 4233              	.LVL394:
 4234              	.LVL395:
 4235              	.LVL396:
 4236 00e0 F0BD     		pop	{r4, r5, r6, r7, pc}
 4237              		.cfi_endproc
 4238              	.LFE43:
 4240 00e2 C046     		.section	.text.HAL_UART_Receive,"ax",%progbits
 4241              		.align	2
 4242              		.global	HAL_UART_Receive
 4243              		.code	16
 4244              		.thumb_func
 4246              	HAL_UART_Receive:
 4247              	.LFB44:
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t* tmp;
 4248              		.loc 1 743 0
 4249              		.cfi_startproc
 4250              	.LVL397:
 4251 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4252              	.LCFI33:
 4253              		.cfi_def_cfa_offset 20
 4254              		.cfi_offset 4, -20
 4255              		.cfi_offset 5, -16
 4256              		.cfi_offset 6, -12
 4257              		.cfi_offset 7, -8
 4258              		.cfi_offset 14, -4
 4259 0002 85B0     		sub	sp, sp, #20
 4260              	.LCFI34:
 4261              		.cfi_def_cfa_offset 40
 4262 0004 041C     		mov	r4, r0
 4263 0006 0F1C     		mov	r7, r1
 4264 0008 161C     		mov	r6, r2
 4265 000a 1D1C     		mov	r5, r3
 4266              	.LVL398:
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4267              		.loc 1 749 0
 4268 000c 6A23     		mov	r3, #106
 4269              	.LVL399:
 4270 000e C35C     		ldrb	r3, [r0, r3]
 4271 0010 202B     		cmp	r3, #32
 4272 0012 7CD1     		bne	.L288
ARM GAS  /tmp/ccjVxjbG.s 			page 136


 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4273              		.loc 1 751 0
 4274 0014 0029     		cmp	r1, #0
 4275 0016 7CD0     		beq	.L289
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4276              		.loc 1 751 0 is_stmt 0 discriminator 1
 4277 0018 002A     		cmp	r2, #0
 4278 001a 7CD0     		beq	.L290
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4279              		.loc 1 759 0 is_stmt 1
 4280 001c 8023     		mov	r3, #128
 4281 001e 5B01     		lsl	r3, r3, #5
 4282 0020 8268     		ldr	r2, [r0, #8]
 4283              	.LVL400:
 4284 0022 9A42     		cmp	r2, r3
 4285 0024 04D1     		bne	.L277
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4286              		.loc 1 759 0 is_stmt 0 discriminator 1
 4287 0026 0369     		ldr	r3, [r0, #16]
 4288 0028 002B     		cmp	r3, #0
 4289 002a 01D1     		bne	.L277
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4290              		.loc 1 761 0 is_stmt 1
 4291 002c CB07     		lsl	r3, r1, #31
 4292 002e 74D4     		bmi	.L291
 4293              	.L277:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4294              		.loc 1 768 0
 4295 0030 6823     		mov	r3, #104
 4296 0032 E35C     		ldrb	r3, [r4, r3]
 4297 0034 012B     		cmp	r3, #1
 4298 0036 72D0     		beq	.L292
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4299              		.loc 1 768 0 is_stmt 0 discriminator 2
 4300 0038 0122     		mov	r2, #1
 4301 003a 6823     		mov	r3, #104
 4302 003c E254     		strb	r2, [r4, r3]
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4303              		.loc 1 770 0 is_stmt 1 discriminator 2
 4304 003e 0023     		mov	r3, #0
 4305 0040 E366     		str	r3, [r4, #108]
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4306              		.loc 1 771 0 discriminator 2
 4307 0042 2132     		add	r2, r2, #33
 4308 0044 6A33     		add	r3, r3, #106
 4309 0046 E254     		strb	r2, [r4, r3]
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4310              		.loc 1 774 0 discriminator 2
 4311 0048 FFF7FEFF 		bl	HAL_GetTick
 4312              	.LVL401:
 4313 004c 0390     		str	r0, [sp, #12]
 4314              	.LVL402:
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 4315              		.loc 1 776 0 discriminator 2
 4316 004e 5823     		mov	r3, #88
 4317 0050 E652     		strh	r6, [r4, r3]
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 137


 4318              		.loc 1 777 0 discriminator 2
 4319 0052 0233     		add	r3, r3, #2
 4320 0054 E652     		strh	r6, [r4, r3]
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4321              		.loc 1 780 0 discriminator 2
 4322 0056 A368     		ldr	r3, [r4, #8]
 4323 0058 8022     		mov	r2, #128
 4324 005a 5201     		lsl	r2, r2, #5
 4325 005c 9342     		cmp	r3, r2
 4326 005e 0AD1     		bne	.L278
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4327              		.loc 1 780 0 is_stmt 0 discriminator 1
 4328 0060 2369     		ldr	r3, [r4, #16]
 4329 0062 002B     		cmp	r3, #0
 4330 0064 03D1     		bne	.L279
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4331              		.loc 1 780 0 discriminator 3
 4332 0066 304A     		ldr	r2, .L294
 4333 0068 5C33     		add	r3, r3, #92
 4334 006a E252     		strh	r2, [r4, r3]
 4335 006c 1EE0     		b	.L280
 4336              	.L279:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4337              		.loc 1 780 0 discriminator 4
 4338 006e FF22     		mov	r2, #255
 4339 0070 5C23     		mov	r3, #92
 4340 0072 E252     		strh	r2, [r4, r3]
 4341 0074 1AE0     		b	.L280
 4342              	.L278:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4343              		.loc 1 780 0 discriminator 2
 4344 0076 002B     		cmp	r3, #0
 4345 0078 0AD1     		bne	.L281
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4346              		.loc 1 780 0 discriminator 5
 4347 007a 2369     		ldr	r3, [r4, #16]
 4348 007c 002B     		cmp	r3, #0
 4349 007e 03D1     		bne	.L282
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4350              		.loc 1 780 0 discriminator 7
 4351 0080 FF22     		mov	r2, #255
 4352 0082 5C33     		add	r3, r3, #92
 4353 0084 E252     		strh	r2, [r4, r3]
 4354 0086 11E0     		b	.L280
 4355              	.L282:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4356              		.loc 1 780 0 discriminator 8
 4357 0088 7F22     		mov	r2, #127
 4358 008a 5C23     		mov	r3, #92
 4359 008c E252     		strh	r2, [r4, r3]
 4360 008e 0DE0     		b	.L280
 4361              	.L281:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4362              		.loc 1 780 0 discriminator 6
 4363 0090 8022     		mov	r2, #128
 4364 0092 5205     		lsl	r2, r2, #21
 4365 0094 9342     		cmp	r3, r2
ARM GAS  /tmp/ccjVxjbG.s 			page 138


 4366 0096 09D1     		bne	.L280
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4367              		.loc 1 780 0 discriminator 9
 4368 0098 2369     		ldr	r3, [r4, #16]
 4369 009a 002B     		cmp	r3, #0
 4370 009c 03D1     		bne	.L283
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4371              		.loc 1 780 0 discriminator 10
 4372 009e 7F22     		mov	r2, #127
 4373 00a0 5C33     		add	r3, r3, #92
 4374 00a2 E252     		strh	r2, [r4, r3]
 4375 00a4 02E0     		b	.L280
 4376              	.L283:
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4377              		.loc 1 780 0 discriminator 11
 4378 00a6 3F22     		mov	r2, #63
 4379 00a8 5C23     		mov	r3, #92
 4380 00aa E252     		strh	r2, [r4, r3]
 4381              	.L280:
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4382              		.loc 1 781 0 is_stmt 1
 4383 00ac 5C23     		mov	r3, #92
 4384 00ae E65A     		ldrh	r6, [r4, r3]
 4385              	.LVL403:
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4386              		.loc 1 784 0
 4387 00b0 20E0     		b	.L284
 4388              	.LVL404:
 4389              	.L287:
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4390              		.loc 1 786 0
 4391 00b2 5A22     		mov	r2, #90
 4392 00b4 A35A     		ldrh	r3, [r4, r2]
 4393 00b6 013B     		sub	r3, r3, #1
 4394 00b8 9BB2     		uxth	r3, r3
 4395 00ba A352     		strh	r3, [r4, r2]
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4396              		.loc 1 787 0
 4397 00bc 0095     		str	r5, [sp]
 4398 00be 201C     		mov	r0, r4
 4399 00c0 2021     		mov	r1, #32
 4400 00c2 0022     		mov	r2, #0
 4401 00c4 039B     		ldr	r3, [sp, #12]
 4402 00c6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4403              	.LVL405:
 4404 00ca 0028     		cmp	r0, #0
 4405 00cc 29D1     		bne	.L293
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4406              		.loc 1 791 0
 4407 00ce 8023     		mov	r3, #128
 4408 00d0 5B01     		lsl	r3, r3, #5
 4409 00d2 A268     		ldr	r2, [r4, #8]
 4410 00d4 9A42     		cmp	r2, r3
 4411 00d6 08D1     		bne	.L285
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4412              		.loc 1 791 0 is_stmt 0 discriminator 1
 4413 00d8 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccjVxjbG.s 			page 139


 4414 00da 002B     		cmp	r3, #0
 4415 00dc 05D1     		bne	.L285
 4416              	.LVL406:
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pData +=2U;
 4417              		.loc 1 794 0 is_stmt 1
 4418 00de 2368     		ldr	r3, [r4]
 4419 00e0 5B6A     		ldr	r3, [r3, #36]
 4420 00e2 3340     		and	r3, r6
 4421 00e4 3B80     		strh	r3, [r7]
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4422              		.loc 1 795 0
 4423 00e6 0237     		add	r7, r7, #2
 4424              	.LVL407:
 4425 00e8 04E0     		b	.L284
 4426              	.LVL408:
 4427              	.L285:
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4428              		.loc 1 799 0
 4429 00ea 2368     		ldr	r3, [r4]
 4430 00ec 5B6A     		ldr	r3, [r3, #36]
 4431 00ee 3340     		and	r3, r6
 4432 00f0 3B70     		strb	r3, [r7]
 4433 00f2 0137     		add	r7, r7, #1
 4434              	.LVL409:
 4435              	.L284:
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4436              		.loc 1 784 0
 4437 00f4 5A23     		mov	r3, #90
 4438 00f6 E35A     		ldrh	r3, [r4, r3]
 4439 00f8 9BB2     		uxth	r3, r3
 4440 00fa 002B     		cmp	r3, #0
 4441 00fc D9D1     		bne	.L287
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4442              		.loc 1 804 0
 4443 00fe 2022     		mov	r2, #32
 4444 0100 6A33     		add	r3, r3, #106
 4445 0102 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4446              		.loc 1 807 0
 4447 0104 0022     		mov	r2, #0
 4448 0106 023B     		sub	r3, r3, #2
 4449 0108 E254     		strb	r2, [r4, r3]
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4450              		.loc 1 809 0
 4451 010a 0020     		mov	r0, #0
 4452 010c 0AE0     		b	.L276
 4453              	.LVL410:
 4454              	.L288:
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4455              		.loc 1 813 0
 4456 010e 0220     		mov	r0, #2
 4457              	.LVL411:
 4458 0110 08E0     		b	.L276
 4459              	.LVL412:
 4460              	.L289:
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4461              		.loc 1 753 0
ARM GAS  /tmp/ccjVxjbG.s 			page 140


 4462 0112 0120     		mov	r0, #1
 4463              	.LVL413:
 4464 0114 06E0     		b	.L276
 4465              	.LVL414:
 4466              	.L290:
 4467 0116 0120     		mov	r0, #1
 4468              	.LVL415:
 4469 0118 04E0     		b	.L276
 4470              	.LVL416:
 4471              	.L291:
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4472              		.loc 1 763 0
 4473 011a 0120     		mov	r0, #1
 4474              	.LVL417:
 4475 011c 02E0     		b	.L276
 4476              	.LVL418:
 4477              	.L292:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4478              		.loc 1 768 0
 4479 011e 0220     		mov	r0, #2
 4480              	.LVL419:
 4481 0120 00E0     		b	.L276
 4482              	.LVL420:
 4483              	.L293:
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4484              		.loc 1 789 0
 4485 0122 0320     		mov	r0, #3
 4486              	.LVL421:
 4487              	.L276:
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4488              		.loc 1 815 0
 4489 0124 05B0     		add	sp, sp, #20
 4490              		@ sp needed
 4491              	.LVL422:
 4492              	.LVL423:
 4493              	.LVL424:
 4494 0126 F0BD     		pop	{r4, r5, r6, r7, pc}
 4495              	.L295:
 4496              		.align	2
 4497              	.L294:
 4498 0128 FF010000 		.word	511
 4499              		.cfi_endproc
 4500              	.LFE44:
 4502              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4503              		.align	2
 4504              		.global	UART_CheckIdleState
 4505              		.code	16
 4506              		.thumb_func
 4508              	UART_CheckIdleState:
 4509              	.LFB77:
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart = 0;
 4510              		.loc 1 2377 0
 4511              		.cfi_startproc
 4512              	.LVL425:
 4513 0000 30B5     		push	{r4, r5, lr}
 4514              	.LCFI35:
 4515              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccjVxjbG.s 			page 141


 4516              		.cfi_offset 4, -12
 4517              		.cfi_offset 5, -8
 4518              		.cfi_offset 14, -4
 4519 0002 83B0     		sub	sp, sp, #12
 4520              	.LCFI36:
 4521              		.cfi_def_cfa_offset 24
 4522 0004 041C     		mov	r4, r0
 4523              	.LVL426:
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4524              		.loc 1 2381 0
 4525 0006 0023     		mov	r3, #0
 4526 0008 C366     		str	r3, [r0, #108]
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4527              		.loc 1 2384 0
 4528 000a FFF7FEFF 		bl	HAL_GetTick
 4529              	.LVL427:
 4530 000e 051C     		mov	r5, r0
 4531              	.LVL428:
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4532              		.loc 1 2387 0
 4533 0010 2368     		ldr	r3, [r4]
 4534 0012 1B68     		ldr	r3, [r3]
 4535 0014 1B07     		lsl	r3, r3, #28
 4536 0016 0AD5     		bpl	.L297
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4537              		.loc 1 2390 0
 4538 0018 144B     		ldr	r3, .L302
 4539 001a 0093     		str	r3, [sp]
 4540 001c 201C     		mov	r0, r4
 4541              	.LVL429:
 4542 001e 8021     		mov	r1, #128
 4543 0020 8903     		lsl	r1, r1, #14
 4544 0022 0022     		mov	r2, #0
 4545 0024 2B1C     		mov	r3, r5
 4546 0026 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4547              	.LVL430:
 4548 002a 0028     		cmp	r0, #0
 4549 002c 18D1     		bne	.L300
 4550              	.L297:
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4551              		.loc 1 2397 0
 4552 002e 2368     		ldr	r3, [r4]
 4553 0030 1B68     		ldr	r3, [r3]
 4554 0032 5B07     		lsl	r3, r3, #29
 4555 0034 0AD5     		bpl	.L299
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4556              		.loc 1 2400 0
 4557 0036 0D4B     		ldr	r3, .L302
 4558 0038 0093     		str	r3, [sp]
 4559 003a 201C     		mov	r0, r4
 4560 003c 8021     		mov	r1, #128
 4561 003e C903     		lsl	r1, r1, #15
 4562 0040 0022     		mov	r2, #0
 4563 0042 2B1C     		mov	r3, r5
 4564 0044 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4565              	.LVL431:
 4566 0048 0028     		cmp	r0, #0
ARM GAS  /tmp/ccjVxjbG.s 			page 142


 4567 004a 0BD1     		bne	.L301
 4568              	.L299:
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4569              		.loc 1 2408 0
 4570 004c 2023     		mov	r3, #32
 4571 004e 6922     		mov	r2, #105
 4572 0050 A354     		strb	r3, [r4, r2]
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4573              		.loc 1 2409 0
 4574 0052 0132     		add	r2, r2, #1
 4575 0054 A354     		strb	r3, [r4, r2]
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4576              		.loc 1 2412 0
 4577 0056 0022     		mov	r2, #0
 4578 0058 4833     		add	r3, r3, #72
 4579 005a E254     		strb	r2, [r4, r3]
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4580              		.loc 1 2414 0
 4581 005c 0020     		mov	r0, #0
 4582 005e 02E0     		b	.L298
 4583              	.L300:
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4584              		.loc 1 2393 0
 4585 0060 0320     		mov	r0, #3
 4586 0062 00E0     		b	.L298
 4587              	.L301:
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4588              		.loc 1 2403 0
 4589 0064 0320     		mov	r0, #3
 4590              	.L298:
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4591              		.loc 1 2415 0
 4592 0066 03B0     		add	sp, sp, #12
 4593              		@ sp needed
 4594              	.LVL432:
 4595              	.LVL433:
 4596 0068 30BD     		pop	{r4, r5, pc}
 4597              	.L303:
 4598 006a C046     		.align	2
 4599              	.L302:
 4600 006c FFFFFF01 		.word	33554431
 4601              		.cfi_endproc
 4602              	.LFE77:
 4604              		.section	.text.HAL_UART_Init,"ax",%progbits
 4605              		.align	2
 4606              		.global	HAL_UART_Init
 4607              		.code	16
 4608              		.thumb_func
 4610              	HAL_UART_Init:
 4611              	.LFB36:
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4612              		.loc 1 226 0
 4613              		.cfi_startproc
 4614              	.LVL434:
 4615 0000 10B5     		push	{r4, lr}
 4616              	.LCFI37:
 4617              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccjVxjbG.s 			page 143


 4618              		.cfi_offset 4, -8
 4619              		.cfi_offset 14, -4
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4620              		.loc 1 228 0
 4621 0002 0028     		cmp	r0, #0
 4622 0004 2FD0     		beq	.L308
 4623 0006 041C     		mov	r4, r0
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4624              		.loc 1 244 0
 4625 0008 6923     		mov	r3, #105
 4626 000a C35C     		ldrb	r3, [r0, r3]
 4627 000c 002B     		cmp	r3, #0
 4628 000e 04D1     		bne	.L306
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4629              		.loc 1 247 0
 4630 0010 0022     		mov	r2, #0
 4631 0012 6833     		add	r3, r3, #104
 4632 0014 C254     		strb	r2, [r0, r3]
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4633              		.loc 1 250 0
 4634 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 4635              	.LVL435:
 4636              	.L306:
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4637              		.loc 1 253 0
 4638 001a 2422     		mov	r2, #36
 4639 001c 6923     		mov	r3, #105
 4640 001e E254     		strb	r2, [r4, r3]
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4641              		.loc 1 256 0
 4642 0020 2268     		ldr	r2, [r4]
 4643 0022 1368     		ldr	r3, [r2]
 4644 0024 0121     		mov	r1, #1
 4645 0026 8B43     		bic	r3, r1
 4646 0028 1360     		str	r3, [r2]
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4647              		.loc 1 259 0
 4648 002a 636A     		ldr	r3, [r4, #36]
 4649 002c 002B     		cmp	r3, #0
 4650 002e 02D0     		beq	.L307
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4651              		.loc 1 261 0
 4652 0030 201C     		mov	r0, r4
 4653 0032 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4654              	.LVL436:
 4655              	.L307:
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4656              		.loc 1 264 0
 4657 0036 201C     		mov	r0, r4
 4658 0038 FFF7FEFF 		bl	UART_SetConfig
 4659              	.LVL437:
 4660 003c 0128     		cmp	r0, #1
 4661 003e 13D0     		beq	.L305
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4662              		.loc 1 272 0
 4663 0040 2268     		ldr	r2, [r4]
 4664 0042 5168     		ldr	r1, [r2, #4]
ARM GAS  /tmp/ccjVxjbG.s 			page 144


 4665 0044 094B     		ldr	r3, .L309
 4666 0046 0B40     		and	r3, r1
 4667 0048 5360     		str	r3, [r2, #4]
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4668              		.loc 1 273 0
 4669 004a 2268     		ldr	r2, [r4]
 4670 004c 9368     		ldr	r3, [r2, #8]
 4671 004e 2A21     		mov	r1, #42
 4672 0050 8B43     		bic	r3, r1
 4673 0052 9360     		str	r3, [r2, #8]
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4674              		.loc 1 276 0
 4675 0054 2268     		ldr	r2, [r4]
 4676 0056 1168     		ldr	r1, [r2]
 4677 0058 0123     		mov	r3, #1
 4678 005a 0B43     		orr	r3, r1
 4679 005c 1360     		str	r3, [r2]
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4680              		.loc 1 279 0
 4681 005e 201C     		mov	r0, r4
 4682 0060 FFF7FEFF 		bl	UART_CheckIdleState
 4683              	.LVL438:
 4684 0064 00E0     		b	.L305
 4685              	.LVL439:
 4686              	.L308:
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4687              		.loc 1 230 0
 4688 0066 0120     		mov	r0, #1
 4689              	.LVL440:
 4690              	.L305:
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4691              		.loc 1 280 0
 4692              		@ sp needed
 4693 0068 10BD     		pop	{r4, pc}
 4694              	.L310:
 4695 006a C046     		.align	2
 4696              	.L309:
 4697 006c FFB7FFFF 		.word	-18433
 4698              		.cfi_endproc
 4699              	.LFE36:
 4701              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4702              		.align	2
 4703              		.global	HAL_HalfDuplex_Init
 4704              		.code	16
 4705              		.thumb_func
 4707              	HAL_HalfDuplex_Init:
 4708              	.LFB37:
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4709              		.loc 1 289 0
 4710              		.cfi_startproc
 4711              	.LVL441:
 4712 0000 10B5     		push	{r4, lr}
 4713              	.LCFI38:
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 4, -8
 4716              		.cfi_offset 14, -4
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjVxjbG.s 			page 145


 4717              		.loc 1 291 0
 4718 0002 0028     		cmp	r0, #0
 4719 0004 34D0     		beq	.L315
 4720 0006 041C     		mov	r4, r0
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4721              		.loc 1 299 0
 4722 0008 6923     		mov	r3, #105
 4723 000a C35C     		ldrb	r3, [r0, r3]
 4724 000c 002B     		cmp	r3, #0
 4725 000e 04D1     		bne	.L313
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4726              		.loc 1 302 0
 4727 0010 0022     		mov	r2, #0
 4728 0012 6833     		add	r3, r3, #104
 4729 0014 C254     		strb	r2, [r0, r3]
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4730              		.loc 1 305 0
 4731 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 4732              	.LVL442:
 4733              	.L313:
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4734              		.loc 1 308 0
 4735 001a 2422     		mov	r2, #36
 4736 001c 6923     		mov	r3, #105
 4737 001e E254     		strb	r2, [r4, r3]
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4738              		.loc 1 311 0
 4739 0020 2268     		ldr	r2, [r4]
 4740 0022 1368     		ldr	r3, [r2]
 4741 0024 0121     		mov	r1, #1
 4742 0026 8B43     		bic	r3, r1
 4743 0028 1360     		str	r3, [r2]
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4744              		.loc 1 314 0
 4745 002a 636A     		ldr	r3, [r4, #36]
 4746 002c 002B     		cmp	r3, #0
 4747 002e 02D0     		beq	.L314
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4748              		.loc 1 316 0
 4749 0030 201C     		mov	r0, r4
 4750 0032 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4751              	.LVL443:
 4752              	.L314:
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4753              		.loc 1 319 0
 4754 0036 201C     		mov	r0, r4
 4755 0038 FFF7FEFF 		bl	UART_SetConfig
 4756              	.LVL444:
 4757 003c 0128     		cmp	r0, #1
 4758 003e 18D0     		beq	.L312
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4759              		.loc 1 327 0
 4760 0040 2268     		ldr	r2, [r4]
 4761 0042 5168     		ldr	r1, [r2, #4]
 4762 0044 0B4B     		ldr	r3, .L316
 4763 0046 0B40     		and	r3, r1
 4764 0048 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccjVxjbG.s 			page 146


 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4765              		.loc 1 328 0
 4766 004a 2268     		ldr	r2, [r4]
 4767 004c 9368     		ldr	r3, [r2, #8]
 4768 004e 2221     		mov	r1, #34
 4769 0050 8B43     		bic	r3, r1
 4770 0052 9360     		str	r3, [r2, #8]
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4771              		.loc 1 331 0
 4772 0054 2268     		ldr	r2, [r4]
 4773 0056 9168     		ldr	r1, [r2, #8]
 4774 0058 0823     		mov	r3, #8
 4775 005a 0B43     		orr	r3, r1
 4776 005c 9360     		str	r3, [r2, #8]
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4777              		.loc 1 334 0
 4778 005e 2268     		ldr	r2, [r4]
 4779 0060 1168     		ldr	r1, [r2]
 4780 0062 0123     		mov	r3, #1
 4781 0064 0B43     		orr	r3, r1
 4782 0066 1360     		str	r3, [r2]
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4783              		.loc 1 337 0
 4784 0068 201C     		mov	r0, r4
 4785 006a FFF7FEFF 		bl	UART_CheckIdleState
 4786              	.LVL445:
 4787 006e 00E0     		b	.L312
 4788              	.LVL446:
 4789              	.L315:
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4790              		.loc 1 293 0
 4791 0070 0120     		mov	r0, #1
 4792              	.LVL447:
 4793              	.L312:
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4794              		.loc 1 338 0
 4795              		@ sp needed
 4796 0072 10BD     		pop	{r4, pc}
 4797              	.L317:
 4798              		.align	2
 4799              	.L316:
 4800 0074 FFB7FFFF 		.word	-18433
 4801              		.cfi_endproc
 4802              	.LFE37:
 4804              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4805              		.align	2
 4806              		.global	HAL_LIN_Init
 4807              		.code	16
 4808              		.thumb_func
 4810              	HAL_LIN_Init:
 4811              	.LFB38:
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4812              		.loc 1 352 0
 4813              		.cfi_startproc
 4814              	.LVL448:
 4815 0000 38B5     		push	{r3, r4, r5, lr}
 4816              	.LCFI39:
ARM GAS  /tmp/ccjVxjbG.s 			page 147


 4817              		.cfi_def_cfa_offset 16
 4818              		.cfi_offset 3, -16
 4819              		.cfi_offset 4, -12
 4820              		.cfi_offset 5, -8
 4821              		.cfi_offset 14, -4
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4822              		.loc 1 354 0
 4823 0002 0028     		cmp	r0, #0
 4824 0004 44D0     		beq	.L322
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4825              		.loc 1 365 0
 4826 0006 8023     		mov	r3, #128
 4827 0008 1B02     		lsl	r3, r3, #8
 4828 000a C269     		ldr	r2, [r0, #28]
 4829 000c 9A42     		cmp	r2, r3
 4830 000e 41D0     		beq	.L323
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4831              		.loc 1 370 0
 4832 0010 8368     		ldr	r3, [r0, #8]
 4833 0012 002B     		cmp	r3, #0
 4834 0014 40D1     		bne	.L324
 4835 0016 0D1C     		mov	r5, r1
 4836 0018 041C     		mov	r4, r0
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4837              		.loc 1 375 0
 4838 001a 6933     		add	r3, r3, #105
 4839 001c C35C     		ldrb	r3, [r0, r3]
 4840 001e 002B     		cmp	r3, #0
 4841 0020 04D1     		bne	.L320
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4842              		.loc 1 378 0
 4843 0022 0022     		mov	r2, #0
 4844 0024 6833     		add	r3, r3, #104
 4845 0026 C254     		strb	r2, [r0, r3]
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4846              		.loc 1 381 0
 4847 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 4848              	.LVL449:
 4849              	.L320:
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4850              		.loc 1 384 0
 4851 002c 2422     		mov	r2, #36
 4852 002e 6923     		mov	r3, #105
 4853 0030 E254     		strb	r2, [r4, r3]
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4854              		.loc 1 387 0
 4855 0032 2268     		ldr	r2, [r4]
 4856 0034 1368     		ldr	r3, [r2]
 4857 0036 0121     		mov	r1, #1
 4858 0038 8B43     		bic	r3, r1
 4859 003a 1360     		str	r3, [r2]
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4860              		.loc 1 390 0
 4861 003c 636A     		ldr	r3, [r4, #36]
 4862 003e 002B     		cmp	r3, #0
 4863 0040 02D0     		beq	.L321
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccjVxjbG.s 			page 148


 4864              		.loc 1 392 0
 4865 0042 201C     		mov	r0, r4
 4866 0044 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4867              	.LVL450:
 4868              	.L321:
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4869              		.loc 1 395 0
 4870 0048 201C     		mov	r0, r4
 4871 004a FFF7FEFF 		bl	UART_SetConfig
 4872              	.LVL451:
 4873 004e 0128     		cmp	r0, #1
 4874 0050 23D0     		beq	.L319
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4875              		.loc 1 403 0
 4876 0052 2268     		ldr	r2, [r4]
 4877 0054 5168     		ldr	r1, [r2, #4]
 4878 0056 114B     		ldr	r3, .L325
 4879 0058 0B40     		and	r3, r1
 4880 005a 5360     		str	r3, [r2, #4]
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4881              		.loc 1 404 0
 4882 005c 2268     		ldr	r2, [r4]
 4883 005e 9368     		ldr	r3, [r2, #8]
 4884 0060 2A21     		mov	r1, #42
 4885 0062 8B43     		bic	r3, r1
 4886 0064 9360     		str	r3, [r2, #8]
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4887              		.loc 1 407 0
 4888 0066 2268     		ldr	r2, [r4]
 4889 0068 5368     		ldr	r3, [r2, #4]
 4890 006a 8021     		mov	r1, #128
 4891 006c C901     		lsl	r1, r1, #7
 4892 006e 0B43     		orr	r3, r1
 4893 0070 5360     		str	r3, [r2, #4]
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4894              		.loc 1 410 0
 4895 0072 2368     		ldr	r3, [r4]
 4896 0074 5968     		ldr	r1, [r3, #4]
 4897 0076 2022     		mov	r2, #32
 4898 0078 9143     		bic	r1, r2
 4899 007a 0D43     		orr	r5, r1
 4900              	.LVL452:
 4901 007c 5D60     		str	r5, [r3, #4]
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4902              		.loc 1 413 0
 4903 007e 2268     		ldr	r2, [r4]
 4904 0080 1168     		ldr	r1, [r2]
 4905 0082 0123     		mov	r3, #1
 4906 0084 0B43     		orr	r3, r1
 4907 0086 1360     		str	r3, [r2]
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4908              		.loc 1 416 0
 4909 0088 201C     		mov	r0, r4
 4910 008a FFF7FEFF 		bl	UART_CheckIdleState
 4911              	.LVL453:
 4912 008e 04E0     		b	.L319
 4913              	.LVL454:
ARM GAS  /tmp/ccjVxjbG.s 			page 149


 4914              	.L322:
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4915              		.loc 1 356 0
 4916 0090 0120     		mov	r0, #1
 4917              	.LVL455:
 4918 0092 02E0     		b	.L319
 4919              	.LVL456:
 4920              	.L323:
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4921              		.loc 1 367 0
 4922 0094 0120     		mov	r0, #1
 4923              	.LVL457:
 4924 0096 00E0     		b	.L319
 4925              	.LVL458:
 4926              	.L324:
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4927              		.loc 1 372 0
 4928 0098 0120     		mov	r0, #1
 4929              	.LVL459:
 4930              	.L319:
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4931              		.loc 1 417 0
 4932              		@ sp needed
 4933 009a 38BD     		pop	{r3, r4, r5, pc}
 4934              	.L326:
 4935              		.align	2
 4936              	.L325:
 4937 009c FFF7FFFF 		.word	-2049
 4938              		.cfi_endproc
 4939              	.LFE38:
 4941              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4942              		.align	2
 4943              		.global	HAL_MultiProcessor_Init
 4944              		.code	16
 4945              		.thumb_func
 4947              	HAL_MultiProcessor_Init:
 4948              	.LFB39:
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4949              		.loc 1 439 0
 4950              		.cfi_startproc
 4951              	.LVL460:
 4952 0000 70B5     		push	{r4, r5, r6, lr}
 4953              	.LCFI40:
 4954              		.cfi_def_cfa_offset 16
 4955              		.cfi_offset 4, -16
 4956              		.cfi_offset 5, -12
 4957              		.cfi_offset 6, -8
 4958              		.cfi_offset 14, -4
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4959              		.loc 1 441 0
 4960 0002 0028     		cmp	r0, #0
 4961 0004 42D0     		beq	.L332
 4962 0006 161C     		mov	r6, r2
 4963 0008 0D1C     		mov	r5, r1
 4964 000a 041C     		mov	r4, r0
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4965              		.loc 1 449 0
ARM GAS  /tmp/ccjVxjbG.s 			page 150


 4966 000c 6923     		mov	r3, #105
 4967 000e C35C     		ldrb	r3, [r0, r3]
 4968 0010 002B     		cmp	r3, #0
 4969 0012 04D1     		bne	.L329
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4970              		.loc 1 452 0
 4971 0014 0022     		mov	r2, #0
 4972              	.LVL461:
 4973 0016 6833     		add	r3, r3, #104
 4974 0018 C254     		strb	r2, [r0, r3]
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4975              		.loc 1 455 0
 4976 001a FFF7FEFF 		bl	HAL_UART_MspInit
 4977              	.LVL462:
 4978              	.L329:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4979              		.loc 1 458 0
 4980 001e 2422     		mov	r2, #36
 4981 0020 6923     		mov	r3, #105
 4982 0022 E254     		strb	r2, [r4, r3]
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4983              		.loc 1 461 0
 4984 0024 2268     		ldr	r2, [r4]
 4985 0026 1368     		ldr	r3, [r2]
 4986 0028 0121     		mov	r1, #1
 4987 002a 8B43     		bic	r3, r1
 4988 002c 1360     		str	r3, [r2]
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4989              		.loc 1 464 0
 4990 002e 636A     		ldr	r3, [r4, #36]
 4991 0030 002B     		cmp	r3, #0
 4992 0032 02D0     		beq	.L330
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4993              		.loc 1 466 0
 4994 0034 201C     		mov	r0, r4
 4995 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4996              	.LVL463:
 4997              	.L330:
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4998              		.loc 1 469 0
 4999 003a 201C     		mov	r0, r4
 5000 003c FFF7FEFF 		bl	UART_SetConfig
 5001              	.LVL464:
 5002 0040 0128     		cmp	r0, #1
 5003 0042 24D0     		beq	.L328
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5004              		.loc 1 477 0
 5005 0044 2268     		ldr	r2, [r4]
 5006 0046 5168     		ldr	r1, [r2, #4]
 5007 0048 114B     		ldr	r3, .L333
 5008 004a 0B40     		and	r3, r1
 5009 004c 5360     		str	r3, [r2, #4]
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5010              		.loc 1 478 0
 5011 004e 2268     		ldr	r2, [r4]
 5012 0050 9368     		ldr	r3, [r2, #8]
 5013 0052 2A21     		mov	r1, #42
ARM GAS  /tmp/ccjVxjbG.s 			page 151


 5014 0054 8B43     		bic	r3, r1
 5015 0056 9360     		str	r3, [r2, #8]
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5016              		.loc 1 480 0
 5017 0058 8023     		mov	r3, #128
 5018 005a 1B01     		lsl	r3, r3, #4
 5019 005c 9E42     		cmp	r6, r3
 5020 005e 06D1     		bne	.L331
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5021              		.loc 1 483 0
 5022 0060 2368     		ldr	r3, [r4]
 5023 0062 5968     		ldr	r1, [r3, #4]
 5024 0064 0902     		lsl	r1, r1, #8
 5025 0066 090A     		lsr	r1, r1, #8
 5026 0068 2D06     		lsl	r5, r5, #24
 5027 006a 0D43     		orr	r5, r1
 5028 006c 5D60     		str	r5, [r3, #4]
 5029              	.L331:
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5030              		.loc 1 487 0
 5031 006e 2168     		ldr	r1, [r4]
 5032 0070 0A68     		ldr	r2, [r1]
 5033 0072 084B     		ldr	r3, .L333+4
 5034 0074 1A40     		and	r2, r3
 5035 0076 1643     		orr	r6, r2
 5036              	.LVL465:
 5037 0078 0E60     		str	r6, [r1]
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5038              		.loc 1 490 0
 5039 007a 2268     		ldr	r2, [r4]
 5040 007c 1168     		ldr	r1, [r2]
 5041 007e 0123     		mov	r3, #1
 5042 0080 0B43     		orr	r3, r1
 5043 0082 1360     		str	r3, [r2]
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5044              		.loc 1 493 0
 5045 0084 201C     		mov	r0, r4
 5046 0086 FFF7FEFF 		bl	UART_CheckIdleState
 5047              	.LVL466:
 5048 008a 00E0     		b	.L328
 5049              	.LVL467:
 5050              	.L332:
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5051              		.loc 1 443 0
 5052 008c 0120     		mov	r0, #1
 5053              	.LVL468:
 5054              	.L328:
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5055              		.loc 1 494 0
 5056              		@ sp needed
 5057 008e 70BD     		pop	{r4, r5, r6, pc}
 5058              	.L334:
 5059              		.align	2
 5060              	.L333:
 5061 0090 FFB7FFFF 		.word	-18433
 5062 0094 FFF7FFFF 		.word	-2049
 5063              		.cfi_endproc
ARM GAS  /tmp/ccjVxjbG.s 			page 152


 5064              	.LFE39:
 5066              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5067              		.align	2
 5068              		.global	HAL_MultiProcessor_EnableMuteMode
 5069              		.code	16
 5070              		.thumb_func
 5072              	HAL_MultiProcessor_EnableMuteMode:
 5073              	.LFB67:
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5074              		.loc 1 1924 0
 5075              		.cfi_startproc
 5076              	.LVL469:
 5077 0000 10B5     		push	{r4, lr}
 5078              	.LCFI41:
 5079              		.cfi_def_cfa_offset 8
 5080              		.cfi_offset 4, -8
 5081              		.cfi_offset 14, -4
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5082              		.loc 1 1926 0
 5083 0002 6823     		mov	r3, #104
 5084 0004 C35C     		ldrb	r3, [r0, r3]
 5085 0006 012B     		cmp	r3, #1
 5086 0008 10D0     		beq	.L337
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5087              		.loc 1 1926 0 is_stmt 0 discriminator 2
 5088 000a 0122     		mov	r2, #1
 5089 000c 6823     		mov	r3, #104
 5090 000e C254     		strb	r2, [r0, r3]
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5091              		.loc 1 1928 0 is_stmt 1 discriminator 2
 5092 0010 6832     		add	r2, r2, #104
 5093 0012 443B     		sub	r3, r3, #68
 5094 0014 8354     		strb	r3, [r0, r2]
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5095              		.loc 1 1931 0 discriminator 2
 5096 0016 0168     		ldr	r1, [r0]
 5097 0018 0B68     		ldr	r3, [r1]
 5098 001a 8024     		mov	r4, #128
 5099 001c A401     		lsl	r4, r4, #6
 5100 001e 2343     		orr	r3, r4
 5101 0020 0B60     		str	r3, [r1]
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5102              		.loc 1 1933 0 discriminator 2
 5103 0022 2023     		mov	r3, #32
 5104 0024 8354     		strb	r3, [r0, r2]
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5105              		.loc 1 1935 0 discriminator 2
 5106 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5107              	.LVL470:
 5108 002a 00E0     		b	.L336
 5109              	.LVL471:
 5110              	.L337:
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5111              		.loc 1 1926 0
 5112 002c 0220     		mov	r0, #2
 5113              	.LVL472:
 5114              	.L336:
ARM GAS  /tmp/ccjVxjbG.s 			page 153


1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5115              		.loc 1 1936 0
 5116              		@ sp needed
 5117 002e 10BD     		pop	{r4, pc}
 5118              		.cfi_endproc
 5119              	.LFE67:
 5121              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5122              		.align	2
 5123              		.global	HAL_MultiProcessor_DisableMuteMode
 5124              		.code	16
 5125              		.thumb_func
 5127              	HAL_MultiProcessor_DisableMuteMode:
 5128              	.LFB68:
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5129              		.loc 1 1945 0
 5130              		.cfi_startproc
 5131              	.LVL473:
 5132 0000 10B5     		push	{r4, lr}
 5133              	.LCFI42:
 5134              		.cfi_def_cfa_offset 8
 5135              		.cfi_offset 4, -8
 5136              		.cfi_offset 14, -4
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5137              		.loc 1 1947 0
 5138 0002 6823     		mov	r3, #104
 5139 0004 C35C     		ldrb	r3, [r0, r3]
 5140 0006 012B     		cmp	r3, #1
 5141 0008 0FD0     		beq	.L340
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5142              		.loc 1 1947 0 is_stmt 0 discriminator 2
 5143 000a 0122     		mov	r2, #1
 5144 000c 6823     		mov	r3, #104
 5145 000e C254     		strb	r2, [r0, r3]
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5146              		.loc 1 1949 0 is_stmt 1 discriminator 2
 5147 0010 6832     		add	r2, r2, #104
 5148 0012 443B     		sub	r3, r3, #68
 5149 0014 8354     		strb	r3, [r0, r2]
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5150              		.loc 1 1952 0 discriminator 2
 5151 0016 0168     		ldr	r1, [r0]
 5152 0018 0C68     		ldr	r4, [r1]
 5153 001a 054B     		ldr	r3, .L341
 5154 001c 2340     		and	r3, r4
 5155 001e 0B60     		str	r3, [r1]
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5156              		.loc 1 1954 0 discriminator 2
 5157 0020 2023     		mov	r3, #32
 5158 0022 8354     		strb	r3, [r0, r2]
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5159              		.loc 1 1956 0 discriminator 2
 5160 0024 FFF7FEFF 		bl	UART_CheckIdleState
 5161              	.LVL474:
 5162 0028 00E0     		b	.L339
 5163              	.LVL475:
 5164              	.L340:
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjVxjbG.s 			page 154


 5165              		.loc 1 1947 0
 5166 002a 0220     		mov	r0, #2
 5167              	.LVL476:
 5168              	.L339:
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5169              		.loc 1 1957 0
 5170              		@ sp needed
 5171 002c 10BD     		pop	{r4, pc}
 5172              	.L342:
 5173 002e C046     		.align	2
 5174              	.L341:
 5175 0030 FFDFFFFF 		.word	-8193
 5176              		.cfi_endproc
 5177              	.LFE68:
 5179              		.text
 5180              	.Letext0:
 5181              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5182              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5183              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 5184              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 5185              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 5186              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 5187              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 5188              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 5189              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 5190              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 5191              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccjVxjbG.s 			page 155


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_uart.c
     /tmp/ccjVxjbG.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccjVxjbG.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccjVxjbG.s:45     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccjVxjbG.s:49     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccjVxjbG.s:76     .text.UART_EndRxTransfer:000000000000001c $d
     /tmp/ccjVxjbG.s:81     .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:85     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccjVxjbG.s:175    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccjVxjbG.s:180    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccjVxjbG.s:192    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccjVxjbG.s:197    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccjVxjbG.s:209    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccjVxjbG.s:214    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccjVxjbG.s:279    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:284    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccjVxjbG.s:390    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:395    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccjVxjbG.s:584    .text.HAL_UART_Receive_IT:00000000000000d0 $d
     /tmp/ccjVxjbG.s:589    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccjVxjbG.s:594    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccjVxjbG.s:730    .text.HAL_UART_Transmit_DMA:0000000000000098 $d
     /tmp/ccjVxjbG.s:1412   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccjVxjbG.s:1520   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccjVxjbG.s:1816   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccjVxjbG.s:737    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccjVxjbG.s:742    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccjVxjbG.s:885    .text.HAL_UART_Receive_DMA:00000000000000a4 $d
     /tmp/ccjVxjbG.s:1564   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccjVxjbG.s:1772   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccjVxjbG.s:892    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccjVxjbG.s:897    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccjVxjbG.s:977    .text.HAL_UART_DMAPause:0000000000000060 $d
     /tmp/ccjVxjbG.s:982    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccjVxjbG.s:987    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccjVxjbG.s:1063   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccjVxjbG.s:1068   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccjVxjbG.s:1147   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccjVxjbG.s:1152   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccjVxjbG.s:1248   .text.HAL_UART_Abort:0000000000000078 $d
     /tmp/ccjVxjbG.s:1253   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccjVxjbG.s:1258   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccjVxjbG.s:1315   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccjVxjbG.s:1320   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccjVxjbG.s:1386   .text.HAL_UART_AbortReceive:0000000000000050 $d
     /tmp/ccjVxjbG.s:1391   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:1396   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccjVxjbG.s:1408   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccjVxjbG.s:1464   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:1468   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccjVxjbG.s:1499   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:1504   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccjVxjbG.s:1516   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccjVxjbG.s:1543   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:1548   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccjVxjbG.s:1560   .text.UART_DMAReceiveCplt:0000000000000000 $t
ARM GAS  /tmp/ccjVxjbG.s 			page 156


     /tmp/ccjVxjbG.s:1620   .text.UART_DMAReceiveCplt:0000000000000040 $d
     /tmp/ccjVxjbG.s:1625   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:1629   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccjVxjbG.s:1746   .text.UART_Receive_IT:0000000000000080 $d
     /tmp/ccjVxjbG.s:1751   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:1756   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccjVxjbG.s:1768   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccjVxjbG.s:1795   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:1800   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccjVxjbG.s:1812   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccjVxjbG.s:1885   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccjVxjbG.s:1890   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccjVxjbG.s:2160   .text.HAL_UART_IRQHandler:000000000000013c $d
     /tmp/ccjVxjbG.s:2169   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccjVxjbG.s:2165   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccjVxjbG.s:2199   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2204   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccjVxjbG.s:2216   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:2221   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccjVxjbG.s:2395   .text.HAL_UART_Abort_IT:00000000000000d0 $d
     /tmp/ccjVxjbG.s:2467   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccjVxjbG.s:2406   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccjVxjbG.s:2402   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2463   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2524   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2529   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccjVxjbG.s:2541   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:2546   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccjVxjbG.s:2629   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccjVxjbG.s:2638   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccjVxjbG.s:2634   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2669   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2674   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccjVxjbG.s:2686   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccjVxjbG.s:2691   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccjVxjbG.s:2787   .text.HAL_UART_AbortReceive_IT:0000000000000074 $d
     /tmp/ccjVxjbG.s:2797   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccjVxjbG.s:2793   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccjVxjbG.s:2832   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccjVxjbG.s:2837   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccjVxjbG.s:2855   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccjVxjbG.s:2860   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccjVxjbG.s:2919   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccjVxjbG.s:2924   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccjVxjbG.s:2983   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccjVxjbG.s:2988   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccjVxjbG.s:3041   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccjVxjbG.s:3046   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccjVxjbG.s:3069   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccjVxjbG.s:3074   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccjVxjbG.s:3091   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccjVxjbG.s:3096   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccjVxjbG.s:3457   .rodata.UART_SetConfig:0000000000000000 $d
     /tmp/ccjVxjbG.s:3753   .text.UART_SetConfig:000000000000030c $d
     /tmp/ccjVxjbG.s:3773   .text.UART_SetConfig:0000000000000350 $t
     /tmp/ccjVxjbG.s:3786   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccjVxjbG.s:3791   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
ARM GAS  /tmp/ccjVxjbG.s 			page 157


     /tmp/ccjVxjbG.s:3920   .text.UART_AdvFeatureConfig:00000000000000bc $d
     /tmp/ccjVxjbG.s:3933   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccjVxjbG.s:3938   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccjVxjbG.s:4029   .text.UART_WaitOnFlagUntilTimeout:0000000000000068 $d
     /tmp/ccjVxjbG.s:4034   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccjVxjbG.s:4039   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccjVxjbG.s:4241   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccjVxjbG.s:4246   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccjVxjbG.s:4498   .text.HAL_UART_Receive:0000000000000128 $d
     /tmp/ccjVxjbG.s:4503   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccjVxjbG.s:4508   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccjVxjbG.s:4600   .text.UART_CheckIdleState:000000000000006c $d
     /tmp/ccjVxjbG.s:4605   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccjVxjbG.s:4610   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccjVxjbG.s:4697   .text.HAL_UART_Init:000000000000006c $d
     /tmp/ccjVxjbG.s:4702   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccjVxjbG.s:4707   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccjVxjbG.s:4800   .text.HAL_HalfDuplex_Init:0000000000000074 $d
     /tmp/ccjVxjbG.s:4805   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccjVxjbG.s:4810   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccjVxjbG.s:4937   .text.HAL_LIN_Init:000000000000009c $d
     /tmp/ccjVxjbG.s:4942   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccjVxjbG.s:4947   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccjVxjbG.s:5061   .text.HAL_MultiProcessor_Init:0000000000000090 $d
     /tmp/ccjVxjbG.s:5067   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccjVxjbG.s:5072   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccjVxjbG.s:5122   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccjVxjbG.s:5127   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccjVxjbG.s:5175   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
__aeabi_uidiv
HAL_RCCEx_GetPeriphCLKFreq
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
