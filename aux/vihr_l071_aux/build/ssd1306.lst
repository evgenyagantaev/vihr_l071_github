ARM GAS  /tmp/ccE47EHe.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ssd1306.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	ssd1306_WriteCommand:
  23              	.LFB37:
  24              		.file 1 "Src/ssd1306.c"
   1:Src/ssd1306.c **** #include"ssd1306.h"
   2:Src/ssd1306.c **** 
   3:Src/ssd1306.c **** 
   4:Src/ssd1306.c **** #define SIZEOF_BUFFER (SSD1306_WIDTH * SSD1306_HEIGHT / 8)
   5:Src/ssd1306.c **** 
   6:Src/ssd1306.c **** 
   7:Src/ssd1306.c **** // Screenbuffer
   8:Src/ssd1306.c **** static uint8_t *SSD1306_Buffer;
   9:Src/ssd1306.c **** static uint8_t SSD1306_Buffer1[SSD1306_WIDTH * SSD1306_HEIGHT / 8];
  10:Src/ssd1306.c **** static uint8_t SSD1306_Buffer2[SSD1306_WIDTH * SSD1306_HEIGHT / 8];
  11:Src/ssd1306.c **** 
  12:Src/ssd1306.c **** // Screen object
  13:Src/ssd1306.c **** static SSD1306_t SSD1306;
  14:Src/ssd1306.c **** 
  15:Src/ssd1306.c **** void ssd1306_set_i2c_port(I2C_HandleTypeDef *port, int display_number)
  16:Src/ssd1306.c **** {
  17:Src/ssd1306.c **** 	SSD1306_I2C_PORT = port;
  18:Src/ssd1306.c **** 
  19:Src/ssd1306.c **** 	if(display_number == 1)
  20:Src/ssd1306.c **** 		SSD1306_Buffer = SSD1306_Buffer1;
  21:Src/ssd1306.c **** 	else
  22:Src/ssd1306.c **** 		SSD1306_Buffer = SSD1306_Buffer2;
  23:Src/ssd1306.c **** }
  24:Src/ssd1306.c **** 
  25:Src/ssd1306.c **** 
  26:Src/ssd1306.c **** //
  27:Src/ssd1306.c **** //  Send a byte to the command register
  28:Src/ssd1306.c **** //
  29:Src/ssd1306.c **** static void ssd1306_WriteCommand(uint8_t command)
  30:Src/ssd1306.c **** {
  25              		.loc 1 30 0
  26              		.cfi_startproc
  27              	.LVL0:
  28 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccE47EHe.s 			page 2


  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 4
  31              		.cfi_offset 14, -4
  32 0002 87B0     		sub	sp, sp, #28
  33              	.LCFI1:
  34              		.cfi_def_cfa_offset 32
  35 0004 1723     		mov	r3, #23
  36 0006 6B44     		add	r3, r3, sp
  37 0008 1870     		strb	r0, [r3]
  31:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x00,1,&command,1,10);
  38              		.loc 1 31 0
  39 000a 074A     		ldr	r2, .L2
  40 000c 1068     		ldr	r0, [r2]
  41              	.LVL1:
  42 000e 0093     		str	r3, [sp]
  43              	.LVL2:
  44 0010 0123     		mov	r3, #1
  45 0012 0193     		str	r3, [sp, #4]
  46 0014 0933     		add	r3, r3, #9
  47 0016 0293     		str	r3, [sp, #8]
  48 0018 7821     		mov	r1, #120
  49 001a 0022     		mov	r2, #0
  50 001c 093B     		sub	r3, r3, #9
  51 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
  52              	.LVL3:
  32:Src/ssd1306.c **** }
  53              		.loc 1 32 0
  54 0022 07B0     		add	sp, sp, #28
  55              		@ sp needed
  56 0024 00BD     		pop	{pc}
  57              	.L3:
  58 0026 C046     		.align	2
  59              	.L2:
  60 0028 00000000 		.word	SSD1306_I2C_PORT
  61              		.cfi_endproc
  62              	.LFE37:
  64              		.section	.text.ssd1306_set_i2c_port,"ax",%progbits
  65              		.align	2
  66              		.global	ssd1306_set_i2c_port
  67              		.code	16
  68              		.thumb_func
  70              	ssd1306_set_i2c_port:
  71              	.LFB36:
  16:Src/ssd1306.c **** 	SSD1306_I2C_PORT = port;
  72              		.loc 1 16 0
  73              		.cfi_startproc
  74              	.LVL4:
  17:Src/ssd1306.c **** 
  75              		.loc 1 17 0
  76 0000 054B     		ldr	r3, .L7
  77 0002 1860     		str	r0, [r3]
  19:Src/ssd1306.c **** 		SSD1306_Buffer = SSD1306_Buffer1;
  78              		.loc 1 19 0
  79 0004 0129     		cmp	r1, #1
  80 0006 03D1     		bne	.L5
  20:Src/ssd1306.c **** 	else
  81              		.loc 1 20 0
ARM GAS  /tmp/ccE47EHe.s 			page 3


  82 0008 044A     		ldr	r2, .L7+4
  83 000a 054B     		ldr	r3, .L7+8
  84 000c 1A60     		str	r2, [r3]
  85 000e 02E0     		b	.L4
  86              	.L5:
  22:Src/ssd1306.c **** }
  87              		.loc 1 22 0
  88 0010 044A     		ldr	r2, .L7+12
  89 0012 034B     		ldr	r3, .L7+8
  90 0014 1A60     		str	r2, [r3]
  91              	.L4:
  23:Src/ssd1306.c **** 
  92              		.loc 1 23 0
  93              		@ sp needed
  94 0016 7047     		bx	lr
  95              	.L8:
  96              		.align	2
  97              	.L7:
  98 0018 00000000 		.word	SSD1306_I2C_PORT
  99 001c 00000000 		.word	.LANCHOR1
 100 0020 00000000 		.word	.LANCHOR0
 101 0024 00000000 		.word	.LANCHOR2
 102              		.cfi_endproc
 103              	.LFE36:
 105              		.section	.text.ssd1306_Fill,"ax",%progbits
 106              		.align	2
 107              		.global	ssd1306_Fill
 108              		.code	16
 109              		.thumb_func
 111              	ssd1306_Fill:
 112              	.LFB39:
  33:Src/ssd1306.c **** 
  34:Src/ssd1306.c **** 
  35:Src/ssd1306.c **** //
  36:Src/ssd1306.c **** //	Initialize the oled screen
  37:Src/ssd1306.c **** //
  38:Src/ssd1306.c **** uint8_t ssd1306_Init(void)
  39:Src/ssd1306.c **** {	
  40:Src/ssd1306.c **** 	// Wait for the screen to boot
  41:Src/ssd1306.c **** 	HAL_Delay(100);
  42:Src/ssd1306.c **** 	
  43:Src/ssd1306.c **** 	/* Init LCD */
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAE); //display off
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
  57:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
  58:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
ARM GAS  /tmp/ccE47EHe.s 			page 4


  59:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
  60:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
  61:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
  62:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
  63:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
  64:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
  65:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
  66:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
  67:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
  68:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
  69:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
  70:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
  71:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
  72:Src/ssd1306.c **** 	
  73:Src/ssd1306.c **** 	// Clear screen
  74:Src/ssd1306.c **** 	ssd1306_Fill(Black);
  75:Src/ssd1306.c **** 	
  76:Src/ssd1306.c **** 	// Flush buffer to screen
  77:Src/ssd1306.c **** 	ssd1306_UpdateScreen();
  78:Src/ssd1306.c **** 	
  79:Src/ssd1306.c **** 	// Set default values for screen object
  80:Src/ssd1306.c **** 	SSD1306.CurrentX = 0;
  81:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
  82:Src/ssd1306.c **** 	
  83:Src/ssd1306.c **** 	SSD1306.Initialized = 1;
  84:Src/ssd1306.c **** 	
  85:Src/ssd1306.c **** 	return 1;
  86:Src/ssd1306.c **** }
  87:Src/ssd1306.c **** 
  88:Src/ssd1306.c **** //
  89:Src/ssd1306.c **** //  Fill the whole screen with the given color
  90:Src/ssd1306.c **** //
  91:Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) 
  92:Src/ssd1306.c **** {
 113              		.loc 1 92 0
 114              		.cfi_startproc
 115              	.LVL5:
  93:Src/ssd1306.c **** 	/* Set memory */
  94:Src/ssd1306.c **** 	uint32_t i;
  95:Src/ssd1306.c **** 
  96:Src/ssd1306.c **** 	//for(i = 0; i < sizeof(SSD1306_Buffer); i++)
  97:Src/ssd1306.c **** 	for(i = 0; i < SIZEOF_BUFFER; i++)
 116              		.loc 1 97 0
 117 0000 0023     		mov	r3, #0
 118 0002 09E0     		b	.L10
 119              	.LVL6:
 120              	.L12:
  98:Src/ssd1306.c **** 	{
  99:Src/ssd1306.c **** 		SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 121              		.loc 1 99 0
 122 0004 064A     		ldr	r2, .L14
 123 0006 1268     		ldr	r2, [r2]
 124 0008 D218     		add	r2, r2, r3
 125 000a 0028     		cmp	r0, #0
 126 000c 01D1     		bne	.L13
 127 000e 0021     		mov	r1, #0
 128 0010 00E0     		b	.L11
ARM GAS  /tmp/ccE47EHe.s 			page 5


 129              	.L13:
 130 0012 FF21     		mov	r1, #255
 131              	.L11:
 132              		.loc 1 99 0 is_stmt 0 discriminator 4
 133 0014 1170     		strb	r1, [r2]
  97:Src/ssd1306.c **** 	{
 134              		.loc 1 97 0 is_stmt 1 discriminator 4
 135 0016 0133     		add	r3, r3, #1
 136              	.LVL7:
 137              	.L10:
  97:Src/ssd1306.c **** 	{
 138              		.loc 1 97 0 is_stmt 0 discriminator 2
 139 0018 024A     		ldr	r2, .L14+4
 140 001a 9342     		cmp	r3, r2
 141 001c F2D9     		bls	.L12
 100:Src/ssd1306.c **** 	}
 101:Src/ssd1306.c **** }
 142              		.loc 1 101 0 is_stmt 1
 143              		@ sp needed
 144 001e 7047     		bx	lr
 145              	.L15:
 146              		.align	2
 147              	.L14:
 148 0020 00000000 		.word	.LANCHOR0
 149 0024 FF030000 		.word	1023
 150              		.cfi_endproc
 151              	.LFE39:
 153              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 154              		.align	2
 155              		.global	ssd1306_UpdateScreen
 156              		.code	16
 157              		.thumb_func
 159              	ssd1306_UpdateScreen:
 160              	.LFB40:
 102:Src/ssd1306.c **** 
 103:Src/ssd1306.c **** //
 104:Src/ssd1306.c **** //  Write the screenbuffer with changed to the screen
 105:Src/ssd1306.c **** //
 106:Src/ssd1306.c **** void ssd1306_UpdateScreen(void) 
 107:Src/ssd1306.c **** {
 161              		.loc 1 107 0
 162              		.cfi_startproc
 163 0000 10B5     		push	{r4, lr}
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168 0002 84B0     		sub	sp, sp, #16
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 24
 171              	.LVL8:
 108:Src/ssd1306.c **** 	uint8_t i;
 109:Src/ssd1306.c **** 	
 110:Src/ssd1306.c **** 	for (i = 0; i < 8; i++) {
 172              		.loc 1 110 0
 173 0004 0024     		mov	r4, #0
 174 0006 1CE0     		b	.L17
ARM GAS  /tmp/ccE47EHe.s 			page 6


 175              	.LVL9:
 176              	.L18:
 111:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 177              		.loc 1 111 0 discriminator 3
 178 0008 201C     		mov	r0, r4
 179 000a 5038     		sub	r0, r0, #80
 180 000c C0B2     		uxtb	r0, r0
 181 000e FFF7FEFF 		bl	ssd1306_WriteCommand
 182              	.LVL10:
 112:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x00);
 183              		.loc 1 112 0 discriminator 3
 184 0012 0020     		mov	r0, #0
 185 0014 FFF7FEFF 		bl	ssd1306_WriteCommand
 186              	.LVL11:
 113:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x10);
 187              		.loc 1 113 0 discriminator 3
 188 0018 1020     		mov	r0, #16
 189 001a FFF7FEFF 		bl	ssd1306_WriteCommand
 190              	.LVL12:
 114:Src/ssd1306.c **** 
 115:Src/ssd1306.c **** 		HAL_I2C_Mem_Write(SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x40,1,&SSD1306_Buffer[SSD1306_WIDTH * i],SSD
 191              		.loc 1 115 0 discriminator 3
 192 001e E301     		lsl	r3, r4, #7
 193 0020 0A4A     		ldr	r2, .L19
 194 0022 1068     		ldr	r0, [r2]
 195 0024 0A4A     		ldr	r2, .L19+4
 196 0026 1268     		ldr	r2, [r2]
 197 0028 D318     		add	r3, r2, r3
 198 002a 0093     		str	r3, [sp]
 199 002c 8023     		mov	r3, #128
 200 002e 0193     		str	r3, [sp, #4]
 201 0030 1C3B     		sub	r3, r3, #28
 202 0032 0293     		str	r3, [sp, #8]
 203 0034 7821     		mov	r1, #120
 204 0036 4022     		mov	r2, #64
 205 0038 633B     		sub	r3, r3, #99
 206 003a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 207              	.LVL13:
 110:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 208              		.loc 1 110 0 discriminator 3
 209 003e 0134     		add	r4, r4, #1
 210              	.LVL14:
 211 0040 E4B2     		uxtb	r4, r4
 212              	.LVL15:
 213              	.L17:
 110:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 214              		.loc 1 110 0 is_stmt 0 discriminator 1
 215 0042 072C     		cmp	r4, #7
 216 0044 E0D9     		bls	.L18
 116:Src/ssd1306.c **** 	}
 117:Src/ssd1306.c **** }
 217              		.loc 1 117 0 is_stmt 1
 218 0046 04B0     		add	sp, sp, #16
 219              		@ sp needed
 220              	.LVL16:
 221 0048 10BD     		pop	{r4, pc}
 222              	.L20:
ARM GAS  /tmp/ccE47EHe.s 			page 7


 223 004a C046     		.align	2
 224              	.L19:
 225 004c 00000000 		.word	SSD1306_I2C_PORT
 226 0050 00000000 		.word	.LANCHOR0
 227              		.cfi_endproc
 228              	.LFE40:
 230              		.section	.text.ssd1306_Init,"ax",%progbits
 231              		.align	2
 232              		.global	ssd1306_Init
 233              		.code	16
 234              		.thumb_func
 236              	ssd1306_Init:
 237              	.LFB38:
  39:Src/ssd1306.c **** 	// Wait for the screen to boot
 238              		.loc 1 39 0
 239              		.cfi_startproc
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
  41:Src/ssd1306.c **** 	
 245              		.loc 1 41 0
 246 0002 6420     		mov	r0, #100
 247 0004 FFF7FEFF 		bl	HAL_Delay
 248              	.LVL17:
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
 249              		.loc 1 44 0
 250 0008 AE20     		mov	r0, #174
 251 000a FFF7FEFF 		bl	ssd1306_WriteCommand
 252              	.LVL18:
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
 253              		.loc 1 45 0
 254 000e 2020     		mov	r0, #32
 255 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 256              	.LVL19:
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 257              		.loc 1 46 0
 258 0014 1020     		mov	r0, #16
 259 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 260              	.LVL20:
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 261              		.loc 1 47 0
 262 001a B020     		mov	r0, #176
 263 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 264              	.LVL21:
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
 265              		.loc 1 48 0
 266 0020 C820     		mov	r0, #200
 267 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 268              	.LVL22:
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
 269              		.loc 1 49 0
 270 0026 0020     		mov	r0, #0
 271 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 272              	.LVL23:
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
ARM GAS  /tmp/ccE47EHe.s 			page 8


 273              		.loc 1 50 0
 274 002c 1020     		mov	r0, #16
 275 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 276              	.LVL24:
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
 277              		.loc 1 51 0
 278 0032 4020     		mov	r0, #64
 279 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 280              	.LVL25:
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
 281              		.loc 1 52 0
 282 0038 8120     		mov	r0, #129
 283 003a FFF7FEFF 		bl	ssd1306_WriteCommand
 284              	.LVL26:
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
 285              		.loc 1 53 0
 286 003e FF20     		mov	r0, #255
 287 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 288              	.LVL27:
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
 289              		.loc 1 54 0
 290 0044 A120     		mov	r0, #161
 291 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 292              	.LVL28:
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
 293              		.loc 1 55 0
 294 004a A620     		mov	r0, #166
 295 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 296              	.LVL29:
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
 297              		.loc 1 56 0
 298 0050 A820     		mov	r0, #168
 299 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 300              	.LVL30:
  57:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 301              		.loc 1 57 0
 302 0056 3F20     		mov	r0, #63
 303 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 304              	.LVL31:
  58:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
 305              		.loc 1 58 0
 306 005c A420     		mov	r0, #164
 307 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 308              	.LVL32:
  59:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
 309              		.loc 1 59 0
 310 0062 D320     		mov	r0, #211
 311 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 312              	.LVL33:
  60:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 313              		.loc 1 60 0
 314 0068 0020     		mov	r0, #0
 315 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 316              	.LVL34:
  61:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
 317              		.loc 1 61 0
 318 006e D520     		mov	r0, #213
ARM GAS  /tmp/ccE47EHe.s 			page 9


 319 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 320              	.LVL35:
  62:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
 321              		.loc 1 62 0
 322 0074 F020     		mov	r0, #240
 323 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 324              	.LVL36:
  63:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
 325              		.loc 1 63 0
 326 007a D920     		mov	r0, #217
 327 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 328              	.LVL37:
  64:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
 329              		.loc 1 64 0
 330 0080 2220     		mov	r0, #34
 331 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 332              	.LVL38:
  65:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
 333              		.loc 1 65 0
 334 0086 DA20     		mov	r0, #218
 335 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 336              	.LVL39:
  66:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
 337              		.loc 1 66 0
 338 008c 1220     		mov	r0, #18
 339 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 340              	.LVL40:
  67:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 341              		.loc 1 67 0
 342 0092 DB20     		mov	r0, #219
 343 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 344              	.LVL41:
  68:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 345              		.loc 1 68 0
 346 0098 2020     		mov	r0, #32
 347 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 348              	.LVL42:
  69:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
 349              		.loc 1 69 0
 350 009e 8D20     		mov	r0, #141
 351 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 352              	.LVL43:
  70:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 353              		.loc 1 70 0
 354 00a4 1420     		mov	r0, #20
 355 00a6 FFF7FEFF 		bl	ssd1306_WriteCommand
 356              	.LVL44:
  71:Src/ssd1306.c **** 	
 357              		.loc 1 71 0
 358 00aa AF20     		mov	r0, #175
 359 00ac FFF7FEFF 		bl	ssd1306_WriteCommand
 360              	.LVL45:
  74:Src/ssd1306.c **** 	
 361              		.loc 1 74 0
 362 00b0 0020     		mov	r0, #0
 363 00b2 FFF7FEFF 		bl	ssd1306_Fill
 364              	.LVL46:
ARM GAS  /tmp/ccE47EHe.s 			page 10


  77:Src/ssd1306.c **** 	
 365              		.loc 1 77 0
 366 00b6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 367              	.LVL47:
  80:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
 368              		.loc 1 80 0
 369 00ba 044B     		ldr	r3, .L22
 370 00bc 0022     		mov	r2, #0
 371 00be 1A80     		strh	r2, [r3]
  81:Src/ssd1306.c **** 	
 372              		.loc 1 81 0
 373 00c0 5A80     		strh	r2, [r3, #2]
  83:Src/ssd1306.c **** 	
 374              		.loc 1 83 0
 375 00c2 0132     		add	r2, r2, #1
 376 00c4 5A71     		strb	r2, [r3, #5]
  86:Src/ssd1306.c **** 
 377              		.loc 1 86 0
 378 00c6 0120     		mov	r0, #1
 379              		@ sp needed
 380 00c8 08BD     		pop	{r3, pc}
 381              	.L23:
 382 00ca C046     		.align	2
 383              	.L22:
 384 00cc 00000000 		.word	.LANCHOR3
 385              		.cfi_endproc
 386              	.LFE38:
 388              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 389              		.align	2
 390              		.global	ssd1306_DrawPixel
 391              		.code	16
 392              		.thumb_func
 394              	ssd1306_DrawPixel:
 395              	.LFB41:
 118:Src/ssd1306.c **** 
 119:Src/ssd1306.c **** //
 120:Src/ssd1306.c **** //	Draw one pixel in the screenbuffer
 121:Src/ssd1306.c **** //	X => X Coordinate
 122:Src/ssd1306.c **** //	Y => Y Coordinate
 123:Src/ssd1306.c **** //	color => Pixel color
 124:Src/ssd1306.c **** //
 125:Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color)
 126:Src/ssd1306.c **** {
 396              		.loc 1 126 0
 397              		.cfi_startproc
 398              	.LVL48:
 127:Src/ssd1306.c **** 	if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) 
 399              		.loc 1 127 0
 400 0000 43B2     		sxtb	r3, r0
 401 0002 002B     		cmp	r3, #0
 402 0004 27DB     		blt	.L24
 403              		.loc 1 127 0 is_stmt 0 discriminator 1
 404 0006 3F29     		cmp	r1, #63
 405 0008 25D8     		bhi	.L24
 128:Src/ssd1306.c **** 	{
 129:Src/ssd1306.c **** 		// Don't write outside the buffer
 130:Src/ssd1306.c **** 		return;
ARM GAS  /tmp/ccE47EHe.s 			page 11


 131:Src/ssd1306.c **** 	}
 132:Src/ssd1306.c **** 	
 133:Src/ssd1306.c **** 	// Check if pixel should be inverted
 134:Src/ssd1306.c **** 	if (SSD1306.Inverted) 
 406              		.loc 1 134 0 is_stmt 1
 407 000a 134B     		ldr	r3, .L28
 408 000c 1B79     		ldrb	r3, [r3, #4]
 409 000e 002B     		cmp	r3, #0
 410 0010 02D0     		beq	.L26
 135:Src/ssd1306.c **** 	{
 136:Src/ssd1306.c **** 		color = (SSD1306_COLOR)!color;
 411              		.loc 1 136 0
 412 0012 5342     		neg	r3, r2
 413 0014 5A41     		adc	r2, r2, r3
 414              	.LVL49:
 415 0016 D2B2     		uxtb	r2, r2
 416              	.LVL50:
 417              	.L26:
 137:Src/ssd1306.c **** 	}
 138:Src/ssd1306.c **** 	
 139:Src/ssd1306.c **** 	// Draw in the right color
 140:Src/ssd1306.c **** 	if (color == White)
 418              		.loc 1 140 0
 419 0018 012A     		cmp	r2, #1
 420 001a 0ED1     		bne	.L27
 141:Src/ssd1306.c **** 	{
 142:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 421              		.loc 1 142 0
 422 001c CB08     		lsr	r3, r1, #3
 423 001e DB01     		lsl	r3, r3, #7
 424 0020 C018     		add	r0, r0, r3
 425              	.LVL51:
 426 0022 0E4B     		ldr	r3, .L28+4
 427 0024 1B68     		ldr	r3, [r3]
 428 0026 1818     		add	r0, r3, r0
 429 0028 0723     		mov	r3, #7
 430 002a 1940     		and	r1, r3
 431              	.LVL52:
 432 002c 063B     		sub	r3, r3, #6
 433 002e 8B40     		lsl	r3, r3, r1
 434 0030 191C     		mov	r1, r3
 435 0032 0378     		ldrb	r3, [r0]
 436 0034 1943     		orr	r1, r3
 437 0036 0170     		strb	r1, [r0]
 438 0038 0DE0     		b	.L24
 439              	.LVL53:
 440              	.L27:
 143:Src/ssd1306.c **** 	} 
 144:Src/ssd1306.c **** 	else 
 145:Src/ssd1306.c **** 	{
 146:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 441              		.loc 1 146 0
 442 003a CB08     		lsr	r3, r1, #3
 443 003c DB01     		lsl	r3, r3, #7
 444 003e C018     		add	r0, r0, r3
 445              	.LVL54:
 446 0040 064B     		ldr	r3, .L28+4
ARM GAS  /tmp/ccE47EHe.s 			page 12


 447 0042 1B68     		ldr	r3, [r3]
 448 0044 1818     		add	r0, r3, r0
 449 0046 0723     		mov	r3, #7
 450 0048 1940     		and	r1, r3
 451              	.LVL55:
 452 004a 063B     		sub	r3, r3, #6
 453 004c 8B40     		lsl	r3, r3, r1
 454 004e 191C     		mov	r1, r3
 455 0050 0378     		ldrb	r3, [r0]
 456 0052 8B43     		bic	r3, r1
 457 0054 0370     		strb	r3, [r0]
 458              	.L24:
 147:Src/ssd1306.c **** 	}
 148:Src/ssd1306.c **** }
 459              		.loc 1 148 0
 460              		@ sp needed
 461 0056 7047     		bx	lr
 462              	.L29:
 463              		.align	2
 464              	.L28:
 465 0058 00000000 		.word	.LANCHOR3
 466 005c 00000000 		.word	.LANCHOR0
 467              		.cfi_endproc
 468              	.LFE41:
 470              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 471              		.align	2
 472              		.global	ssd1306_WriteChar
 473              		.code	16
 474              		.thumb_func
 476              	ssd1306_WriteChar:
 477              	.LFB42:
 149:Src/ssd1306.c **** 
 150:Src/ssd1306.c **** //
 151:Src/ssd1306.c **** //  Draw 1 char to the screen buffer
 152:Src/ssd1306.c **** //	ch 		=> char om weg te schrijven
 153:Src/ssd1306.c **** //	Font 	=> Font waarmee we gaan schrijven
 154:Src/ssd1306.c **** //	color 	=> Black or White
 155:Src/ssd1306.c **** //
 156:Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color)
 157:Src/ssd1306.c **** {
 478              		.loc 1 157 0
 479              		.cfi_startproc
 480              	.LVL56:
 481 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 482              	.LCFI5:
 483              		.cfi_def_cfa_offset 20
 484              		.cfi_offset 4, -20
 485              		.cfi_offset 5, -16
 486              		.cfi_offset 6, -12
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 5F46     		mov	r7, fp
 490 0004 5646     		mov	r6, r10
 491 0006 4D46     		mov	r5, r9
 492 0008 4446     		mov	r4, r8
 493 000a F0B4     		push	{r4, r5, r6, r7}
 494              	.LCFI6:
ARM GAS  /tmp/ccE47EHe.s 			page 13


 495              		.cfi_def_cfa_offset 36
 496              		.cfi_offset 8, -36
 497              		.cfi_offset 9, -32
 498              		.cfi_offset 10, -28
 499              		.cfi_offset 11, -24
 500 000c 83B0     		sub	sp, sp, #12
 501              	.LCFI7:
 502              		.cfi_def_cfa_offset 48
 503 000e 0091     		str	r1, [sp]
 504 0010 0192     		str	r2, [sp, #4]
 158:Src/ssd1306.c **** 	uint32_t i, b, j;
 159:Src/ssd1306.c **** 	
 160:Src/ssd1306.c **** 	// Check remaining space on current line
 161:Src/ssd1306.c **** 	if (SSD1306_WIDTH <= (SSD1306.CurrentX + Font.FontWidth) ||
 505              		.loc 1 161 0
 506 0012 274A     		ldr	r2, .L40
 507 0014 1288     		ldrh	r2, [r2]
 508 0016 CEB2     		uxtb	r6, r1
 509 0018 9219     		add	r2, r2, r6
 510 001a 7F2A     		cmp	r2, #127
 511 001c 3EDC     		bgt	.L38
 162:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 512              		.loc 1 162 0 discriminator 1
 513 001e 244A     		ldr	r2, .L40
 514 0020 5288     		ldrh	r2, [r2, #2]
 515 0022 6946     		mov	r1, sp
 516 0024 4978     		ldrb	r1, [r1, #1]
 517 0026 8A46     		mov	r10, r1
 518 0028 8B46     		mov	fp, r1
 519 002a 5244     		add	r2, r2, r10
 161:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 520              		.loc 1 161 0 discriminator 1
 521 002c 3F2A     		cmp	r2, #63
 522 002e 37DC     		bgt	.L39
 523 0030 9846     		mov	r8, r3
 524 0032 8146     		mov	r9, r0
 525 0034 0025     		mov	r5, #0
 526 0036 29E0     		b	.L32
 527              	.LVL57:
 528              	.L37:
 163:Src/ssd1306.c **** 	{
 164:Src/ssd1306.c **** 		// Not enough space on current line
 165:Src/ssd1306.c **** 		return 0;
 166:Src/ssd1306.c **** 	}
 167:Src/ssd1306.c **** 	
 168:Src/ssd1306.c **** 	// Use the font to write
 169:Src/ssd1306.c **** 	for (i = 0; i < Font.FontHeight; i++)
 170:Src/ssd1306.c **** 	{
 171:Src/ssd1306.c **** 		b = Font.data[(ch - 32) * Font.FontHeight + i];
 529              		.loc 1 171 0
 530 0038 4B46     		mov	r3, r9
 531 003a 203B     		sub	r3, r3, #32
 532 003c 5A46     		mov	r2, fp
 533 003e 5343     		mul	r3, r2
 534 0040 5B19     		add	r3, r3, r5
 535 0042 5B00     		lsl	r3, r3, #1
 536 0044 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccE47EHe.s 			page 14


 537 0046 9F5A     		ldrh	r7, [r3, r2]
 538              	.LVL58:
 172:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 539              		.loc 1 172 0
 540 0048 0024     		mov	r4, #0
 541 004a 1CE0     		b	.L33
 542              	.LVL59:
 543              	.L36:
 173:Src/ssd1306.c **** 		{
 174:Src/ssd1306.c **** 			if ((b << j) & 0x8000) 
 544              		.loc 1 174 0
 545 004c 3B1C     		mov	r3, r7
 546 004e A340     		lsl	r3, r3, r4
 547 0050 1B04     		lsl	r3, r3, #16
 548 0052 0AD5     		bpl	.L34
 175:Src/ssd1306.c **** 			{
 176:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 549              		.loc 1 176 0
 550 0054 164B     		ldr	r3, .L40
 551 0056 1888     		ldrh	r0, [r3]
 552 0058 5988     		ldrh	r1, [r3, #2]
 553 005a 0019     		add	r0, r0, r4
 554 005c C0B2     		uxtb	r0, r0
 555 005e 4919     		add	r1, r1, r5
 556 0060 C9B2     		uxtb	r1, r1
 557 0062 4246     		mov	r2, r8
 558 0064 FFF7FEFF 		bl	ssd1306_DrawPixel
 559              	.LVL60:
 560 0068 0CE0     		b	.L35
 561              	.L34:
 177:Src/ssd1306.c **** 			} 
 178:Src/ssd1306.c **** 			else 
 179:Src/ssd1306.c **** 			{
 180:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 562              		.loc 1 180 0
 563 006a 114B     		ldr	r3, .L40
 564 006c 1888     		ldrh	r0, [r3]
 565 006e 5988     		ldrh	r1, [r3, #2]
 566 0070 0019     		add	r0, r0, r4
 567 0072 C0B2     		uxtb	r0, r0
 568 0074 4919     		add	r1, r1, r5
 569 0076 C9B2     		uxtb	r1, r1
 570 0078 4246     		mov	r2, r8
 571 007a 5342     		neg	r3, r2
 572 007c 5A41     		adc	r2, r2, r3
 573 007e D2B2     		uxtb	r2, r2
 574 0080 FFF7FEFF 		bl	ssd1306_DrawPixel
 575              	.LVL61:
 576              	.L35:
 172:Src/ssd1306.c **** 		{
 577              		.loc 1 172 0 discriminator 2
 578 0084 0134     		add	r4, r4, #1
 579              	.LVL62:
 580              	.L33:
 172:Src/ssd1306.c **** 		{
 581              		.loc 1 172 0 is_stmt 0 discriminator 1
 582 0086 A642     		cmp	r6, r4
ARM GAS  /tmp/ccE47EHe.s 			page 15


 583 0088 E0D8     		bhi	.L36
 169:Src/ssd1306.c **** 	{
 584              		.loc 1 169 0 is_stmt 1 discriminator 2
 585 008a 0135     		add	r5, r5, #1
 586              	.LVL63:
 587              	.L32:
 169:Src/ssd1306.c **** 	{
 588              		.loc 1 169 0 is_stmt 0 discriminator 1
 589 008c AA45     		cmp	r10, r5
 590 008e D3D8     		bhi	.L37
 181:Src/ssd1306.c **** 			}
 182:Src/ssd1306.c **** 		}
 183:Src/ssd1306.c **** 	}
 184:Src/ssd1306.c **** 	
 185:Src/ssd1306.c **** 	// The current space is now taken
 186:Src/ssd1306.c **** 	SSD1306.CurrentX += Font.FontWidth;
 591              		.loc 1 186 0 is_stmt 1
 592 0090 074B     		ldr	r3, .L40
 593 0092 1A88     		ldrh	r2, [r3]
 594 0094 9619     		add	r6, r2, r6
 595 0096 1E80     		strh	r6, [r3]
 187:Src/ssd1306.c **** 	
 188:Src/ssd1306.c **** 	// Return written char for validation
 189:Src/ssd1306.c **** 	return ch;
 596              		.loc 1 189 0
 597 0098 4846     		mov	r0, r9
 598 009a 02E0     		b	.L31
 599              	.LVL64:
 600              	.L38:
 165:Src/ssd1306.c **** 	}
 601              		.loc 1 165 0
 602 009c 0020     		mov	r0, #0
 603              	.LVL65:
 604 009e 00E0     		b	.L31
 605              	.LVL66:
 606              	.L39:
 607 00a0 0020     		mov	r0, #0
 608              	.LVL67:
 609              	.L31:
 190:Src/ssd1306.c **** }
 610              		.loc 1 190 0
 611 00a2 03B0     		add	sp, sp, #12
 612              		@ sp needed
 613 00a4 3CBC     		pop	{r2, r3, r4, r5}
 614 00a6 9046     		mov	r8, r2
 615 00a8 9946     		mov	r9, r3
 616 00aa A246     		mov	r10, r4
 617 00ac AB46     		mov	fp, r5
 618 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 619              	.L41:
 620              		.align	2
 621              	.L40:
 622 00b0 00000000 		.word	.LANCHOR3
 623              		.cfi_endproc
 624              	.LFE42:
 626              		.section	.text.ssd1306_WriteString,"ax",%progbits
 627              		.align	2
ARM GAS  /tmp/ccE47EHe.s 			page 16


 628              		.global	ssd1306_WriteString
 629              		.code	16
 630              		.thumb_func
 632              	ssd1306_WriteString:
 633              	.LFB43:
 191:Src/ssd1306.c **** 
 192:Src/ssd1306.c **** //
 193:Src/ssd1306.c **** //  Write full string to screenbuffer
 194:Src/ssd1306.c **** //
 195:Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color)
 196:Src/ssd1306.c **** {
 634              		.loc 1 196 0
 635              		.cfi_startproc
 636              	.LVL68:
 637 0000 30B5     		push	{r4, r5, lr}
 638              	.LCFI8:
 639              		.cfi_def_cfa_offset 12
 640              		.cfi_offset 4, -12
 641              		.cfi_offset 5, -8
 642              		.cfi_offset 14, -4
 643 0002 83B0     		sub	sp, sp, #12
 644              	.LCFI9:
 645              		.cfi_def_cfa_offset 24
 646 0004 041C     		mov	r4, r0
 647 0006 0091     		str	r1, [sp]
 648 0008 0192     		str	r2, [sp, #4]
 649 000a 1D1C     		mov	r5, r3
 197:Src/ssd1306.c **** 	// Write until null-byte
 198:Src/ssd1306.c **** 	while (*str) 
 650              		.loc 1 198 0
 651 000c 09E0     		b	.L43
 652              	.LVL69:
 653              	.L46:
 199:Src/ssd1306.c **** 	{
 200:Src/ssd1306.c **** 		if (ssd1306_WriteChar(*str, Font, color) != *str)
 654              		.loc 1 200 0
 655 000e 0099     		ldr	r1, [sp]
 656 0010 019A     		ldr	r2, [sp, #4]
 657 0012 2B1C     		mov	r3, r5
 658 0014 FFF7FEFF 		bl	ssd1306_WriteChar
 659              	.LVL70:
 660 0018 031C     		mov	r3, r0
 661 001a 2078     		ldrb	r0, [r4]
 662 001c 8342     		cmp	r3, r0
 663 001e 03D1     		bne	.L45
 201:Src/ssd1306.c **** 		{
 202:Src/ssd1306.c **** 			// Char could not be written
 203:Src/ssd1306.c **** 			return *str;
 204:Src/ssd1306.c **** 		}
 205:Src/ssd1306.c **** 		
 206:Src/ssd1306.c **** 		// Next char
 207:Src/ssd1306.c **** 		str++;
 664              		.loc 1 207 0
 665 0020 0134     		add	r4, r4, #1
 666              	.LVL71:
 667              	.L43:
 198:Src/ssd1306.c **** 	{
ARM GAS  /tmp/ccE47EHe.s 			page 17


 668              		.loc 1 198 0
 669 0022 2078     		ldrb	r0, [r4]
 670 0024 0028     		cmp	r0, #0
 671 0026 F2D1     		bne	.L46
 672              	.L45:
 208:Src/ssd1306.c **** 	}
 209:Src/ssd1306.c **** 	
 210:Src/ssd1306.c **** 	// Everything ok
 211:Src/ssd1306.c **** 	return *str;
 212:Src/ssd1306.c **** }
 673              		.loc 1 212 0
 674 0028 03B0     		add	sp, sp, #12
 675              		@ sp needed
 676              	.LVL72:
 677 002a 30BD     		pop	{r4, r5, pc}
 678              		.cfi_endproc
 679              	.LFE43:
 681              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 682              		.align	2
 683              		.global	ssd1306_SetCursor
 684              		.code	16
 685              		.thumb_func
 687              	ssd1306_SetCursor:
 688              	.LFB44:
 213:Src/ssd1306.c **** 
 214:Src/ssd1306.c **** //
 215:Src/ssd1306.c **** //	Position the cursor
 216:Src/ssd1306.c **** //
 217:Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) 
 218:Src/ssd1306.c **** {
 689              		.loc 1 218 0
 690              		.cfi_startproc
 691              	.LVL73:
 219:Src/ssd1306.c **** 	SSD1306.CurrentX = x;
 692              		.loc 1 219 0
 693 0000 014B     		ldr	r3, .L48
 694 0002 1880     		strh	r0, [r3]
 220:Src/ssd1306.c **** 	SSD1306.CurrentY = y;
 695              		.loc 1 220 0
 696 0004 5980     		strh	r1, [r3, #2]
 221:Src/ssd1306.c **** }
 697              		.loc 1 221 0
 698              		@ sp needed
 699 0006 7047     		bx	lr
 700              	.L49:
 701              		.align	2
 702              	.L48:
 703 0008 00000000 		.word	.LANCHOR3
 704              		.cfi_endproc
 705              	.LFE44:
 707              		.comm	SSD1306_I2C_PORT,4,4
 708              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 709              		.align	2
 710              		.set	.LANCHOR0,. + 0
 713              	SSD1306_Buffer:
 714 0000 00000000 		.space	4
 715              		.section	.bss.SSD1306,"aw",%nobits
ARM GAS  /tmp/ccE47EHe.s 			page 18


 716              		.align	2
 717              		.set	.LANCHOR3,. + 0
 720              	SSD1306:
 721 0000 00000000 		.space	6
 721      0000
 722              		.section	.bss.SSD1306_Buffer1,"aw",%nobits
 723              		.align	2
 724              		.set	.LANCHOR1,. + 0
 727              	SSD1306_Buffer1:
 728 0000 00000000 		.space	1024
 728      00000000 
 728      00000000 
 728      00000000 
 728      00000000 
 729              		.section	.bss.SSD1306_Buffer2,"aw",%nobits
 730              		.align	2
 731              		.set	.LANCHOR2,. + 0
 734              	SSD1306_Buffer2:
 735 0000 00000000 		.space	1024
 735      00000000 
 735      00000000 
 735      00000000 
 735      00000000 
 736              		.text
 737              	.Letext0:
 738              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 739              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 740              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 741              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 742              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 743              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 744              		.file 8 "Inc/fonts.h"
 745              		.file 9 "Inc/ssd1306.h"
 746              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/ccE47EHe.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
     /tmp/ccE47EHe.s:18     .text.ssd1306_WriteCommand:0000000000000000 $t
     /tmp/ccE47EHe.s:22     .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
     /tmp/ccE47EHe.s:60     .text.ssd1306_WriteCommand:0000000000000028 $d
                            *COM*:0000000000000004 SSD1306_I2C_PORT
     /tmp/ccE47EHe.s:65     .text.ssd1306_set_i2c_port:0000000000000000 $t
     /tmp/ccE47EHe.s:70     .text.ssd1306_set_i2c_port:0000000000000000 ssd1306_set_i2c_port
     /tmp/ccE47EHe.s:98     .text.ssd1306_set_i2c_port:0000000000000018 $d
     /tmp/ccE47EHe.s:106    .text.ssd1306_Fill:0000000000000000 $t
     /tmp/ccE47EHe.s:111    .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
     /tmp/ccE47EHe.s:148    .text.ssd1306_Fill:0000000000000020 $d
     /tmp/ccE47EHe.s:154    .text.ssd1306_UpdateScreen:0000000000000000 $t
     /tmp/ccE47EHe.s:159    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
     /tmp/ccE47EHe.s:225    .text.ssd1306_UpdateScreen:000000000000004c $d
     /tmp/ccE47EHe.s:231    .text.ssd1306_Init:0000000000000000 $t
     /tmp/ccE47EHe.s:236    .text.ssd1306_Init:0000000000000000 ssd1306_Init
     /tmp/ccE47EHe.s:384    .text.ssd1306_Init:00000000000000cc $d
     /tmp/ccE47EHe.s:389    .text.ssd1306_DrawPixel:0000000000000000 $t
     /tmp/ccE47EHe.s:394    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
     /tmp/ccE47EHe.s:465    .text.ssd1306_DrawPixel:0000000000000058 $d
     /tmp/ccE47EHe.s:471    .text.ssd1306_WriteChar:0000000000000000 $t
     /tmp/ccE47EHe.s:476    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
     /tmp/ccE47EHe.s:622    .text.ssd1306_WriteChar:00000000000000b0 $d
     /tmp/ccE47EHe.s:627    .text.ssd1306_WriteString:0000000000000000 $t
     /tmp/ccE47EHe.s:632    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
     /tmp/ccE47EHe.s:682    .text.ssd1306_SetCursor:0000000000000000 $t
     /tmp/ccE47EHe.s:687    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
     /tmp/ccE47EHe.s:703    .text.ssd1306_SetCursor:0000000000000008 $d
     /tmp/ccE47EHe.s:709    .bss.SSD1306_Buffer:0000000000000000 $d
     /tmp/ccE47EHe.s:713    .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer
     /tmp/ccE47EHe.s:716    .bss.SSD1306:0000000000000000 $d
     /tmp/ccE47EHe.s:720    .bss.SSD1306:0000000000000000 SSD1306
     /tmp/ccE47EHe.s:723    .bss.SSD1306_Buffer1:0000000000000000 $d
     /tmp/ccE47EHe.s:727    .bss.SSD1306_Buffer1:0000000000000000 SSD1306_Buffer1
     /tmp/ccE47EHe.s:730    .bss.SSD1306_Buffer2:0000000000000000 $d
     /tmp/ccE47EHe.s:734    .bss.SSD1306_Buffer2:0000000000000000 SSD1306_Buffer2
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
HAL_Delay
