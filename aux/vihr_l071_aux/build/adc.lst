ARM GAS  /tmp/ccz12sYd.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	MX_ADC_Init
  20              		.code	16
  21              		.thumb_func
  23              	MX_ADC_Init:
  24              	.LFB36:
  25              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccz12sYd.s 			page 2


  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** 
  45:Src/adc.c     **** /* USER CODE BEGIN 0 */
  46:Src/adc.c     **** 
  47:Src/adc.c     **** /* USER CODE END 0 */
  48:Src/adc.c     **** 
  49:Src/adc.c     **** ADC_HandleTypeDef hadc;
  50:Src/adc.c     **** 
  51:Src/adc.c     **** /* ADC init function */
  52:Src/adc.c     **** void MX_ADC_Init(void)
  53:Src/adc.c     **** {
  26              		.loc 1 53 0
  27              		.cfi_startproc
  28 0000 00B5     		push	{lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 4
  31              		.cfi_offset 14, -4
  32 0002 83B0     		sub	sp, sp, #12
  33              	.LCFI1:
  34              		.cfi_def_cfa_offset 16
  54:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  55:Src/adc.c     **** 
  56:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  57:Src/adc.c     ****     */
  58:Src/adc.c     ****   hadc.Instance = ADC1;
  35              		.loc 1 58 0
  36 0004 1948     		ldr	r0, .L4
  37 0006 1A4B     		ldr	r3, .L4+4
  38 0008 0360     		str	r3, [r0]
  59:Src/adc.c     ****   hadc.Init.OversamplingMode = DISABLE;
  39              		.loc 1 59 0
  40 000a 0023     		mov	r3, #0
  41 000c 0364     		str	r3, [r0, #64]
  60:Src/adc.c     ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
  42              		.loc 1 60 0
  43 000e C022     		mov	r2, #192
  44 0010 1206     		lsl	r2, r2, #24
  45 0012 4260     		str	r2, [r0, #4]
  61:Src/adc.c     ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 61 0
  47 0014 8360     		str	r3, [r0, #8]
  62:Src/adc.c     ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
  48              		.loc 1 62 0
  49 0016 C363     		str	r3, [r0, #60]
  63:Src/adc.c     ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  50              		.loc 1 63 0
  51 0018 0122     		mov	r2, #1
  52 001a 0261     		str	r2, [r0, #16]
ARM GAS  /tmp/ccz12sYd.s 			page 3


  64:Src/adc.c     ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  53              		.loc 1 64 0
  54 001c C360     		str	r3, [r0, #12]
  65:Src/adc.c     ****   hadc.Init.ContinuousConvMode = DISABLE;
  55              		.loc 1 65 0
  56 001e 0362     		str	r3, [r0, #32]
  66:Src/adc.c     ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  57              		.loc 1 66 0
  58 0020 4362     		str	r3, [r0, #36]
  67:Src/adc.c     ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  59              		.loc 1 67 0
  60 0022 C362     		str	r3, [r0, #44]
  68:Src/adc.c     ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  61              		.loc 1 68 0
  62 0024 C222     		mov	r2, #194
  63 0026 FF32     		add	r2, r2, #255
  64 0028 8262     		str	r2, [r0, #40]
  69:Src/adc.c     ****   hadc.Init.DMAContinuousRequests = DISABLE;
  65              		.loc 1 69 0
  66 002a 0363     		str	r3, [r0, #48]
  70:Src/adc.c     ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  67              		.loc 1 70 0
  68 002c BE3A     		sub	r2, r2, #190
  69 002e FF3A     		sub	r2, r2, #255
  70 0030 4261     		str	r2, [r0, #20]
  71:Src/adc.c     ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  71              		.loc 1 71 0
  72 0032 4363     		str	r3, [r0, #52]
  72:Src/adc.c     ****   hadc.Init.LowPowerAutoWait = DISABLE;
  73              		.loc 1 72 0
  74 0034 8361     		str	r3, [r0, #24]
  73:Src/adc.c     ****   hadc.Init.LowPowerFrequencyMode = DISABLE;
  75              		.loc 1 73 0
  76 0036 8363     		str	r3, [r0, #56]
  74:Src/adc.c     ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  77              		.loc 1 74 0
  78 0038 C361     		str	r3, [r0, #28]
  75:Src/adc.c     ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  79              		.loc 1 75 0
  80 003a FFF7FEFF 		bl	HAL_ADC_Init
  81              	.LVL0:
  82 003e 0028     		cmp	r0, #0
  83 0040 03D0     		beq	.L2
  76:Src/adc.c     ****   {
  77:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  84              		.loc 1 77 0
  85 0042 0C48     		ldr	r0, .L4+8
  86 0044 4D21     		mov	r1, #77
  87 0046 FFF7FEFF 		bl	_Error_Handler
  88              	.LVL1:
  89              	.L2:
  78:Src/adc.c     ****   }
  79:Src/adc.c     **** 
  80:Src/adc.c     ****     /**Configure for the selected ADC regular channel to be converted. 
  81:Src/adc.c     ****     */
  82:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_0;
  90              		.loc 1 82 0
ARM GAS  /tmp/ccz12sYd.s 			page 4


  91 004a 0123     		mov	r3, #1
  92 004c 0093     		str	r3, [sp]
  83:Src/adc.c     ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
  93              		.loc 1 83 0
  94 004e 8023     		mov	r3, #128
  95 0050 5B01     		lsl	r3, r3, #5
  96 0052 0193     		str	r3, [sp, #4]
  84:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
  97              		.loc 1 84 0
  98 0054 0548     		ldr	r0, .L4
  99 0056 6946     		mov	r1, sp
 100 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 101              	.LVL2:
 102 005c 0028     		cmp	r0, #0
 103 005e 03D0     		beq	.L1
  85:Src/adc.c     ****   {
  86:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 104              		.loc 1 86 0
 105 0060 0448     		ldr	r0, .L4+8
 106 0062 5621     		mov	r1, #86
 107 0064 FFF7FEFF 		bl	_Error_Handler
 108              	.LVL3:
 109              	.L1:
  87:Src/adc.c     ****   }
  88:Src/adc.c     **** 
  89:Src/adc.c     **** }
 110              		.loc 1 89 0
 111 0068 03B0     		add	sp, sp, #12
 112              		@ sp needed
 113 006a 00BD     		pop	{pc}
 114              	.L5:
 115              		.align	2
 116              	.L4:
 117 006c 00000000 		.word	hadc
 118 0070 00240140 		.word	1073816576
 119 0074 00000000 		.word	.LC1
 120              		.cfi_endproc
 121              	.LFE36:
 123              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 124              		.align	2
 125              		.global	HAL_ADC_MspInit
 126              		.code	16
 127              		.thumb_func
 129              	HAL_ADC_MspInit:
 130              	.LFB37:
  90:Src/adc.c     **** 
  91:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  92:Src/adc.c     **** {
 131              		.loc 1 92 0
 132              		.cfi_startproc
 133              	.LVL4:
 134 0000 00B5     		push	{lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 14, -4
 138 0002 87B0     		sub	sp, sp, #28
 139              	.LCFI3:
ARM GAS  /tmp/ccz12sYd.s 			page 5


 140              		.cfi_def_cfa_offset 32
  93:Src/adc.c     **** 
  94:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  95:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 141              		.loc 1 95 0
 142 0004 0268     		ldr	r2, [r0]
 143 0006 0B4B     		ldr	r3, .L8
 144 0008 9A42     		cmp	r2, r3
 145 000a 10D1     		bne	.L6
  96:Src/adc.c     ****   {
  97:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  98:Src/adc.c     **** 
  99:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 100:Src/adc.c     ****     /* ADC1 clock enable */
 101:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 146              		.loc 1 101 0
 147 000c 0A4A     		ldr	r2, .L8+4
 148 000e 536B     		ldr	r3, [r2, #52]
 149 0010 8021     		mov	r1, #128
 150 0012 8900     		lsl	r1, r1, #2
 151 0014 0B43     		orr	r3, r1
 152 0016 5363     		str	r3, [r2, #52]
 102:Src/adc.c     ****   
 103:Src/adc.c     ****     /**ADC GPIO Configuration    
 104:Src/adc.c     ****     PA0     ------> ADC_IN0 
 105:Src/adc.c     ****     */
 106:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 153              		.loc 1 106 0
 154 0018 0123     		mov	r3, #1
 155 001a 0193     		str	r3, [sp, #4]
 107:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 156              		.loc 1 107 0
 157 001c 0233     		add	r3, r3, #2
 158 001e 0293     		str	r3, [sp, #8]
 108:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 159              		.loc 1 108 0
 160 0020 0023     		mov	r3, #0
 161 0022 0393     		str	r3, [sp, #12]
 109:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 162              		.loc 1 109 0
 163 0024 A020     		mov	r0, #160
 164              	.LVL5:
 165 0026 C005     		lsl	r0, r0, #23
 166 0028 01A9     		add	r1, sp, #4
 167 002a FFF7FEFF 		bl	HAL_GPIO_Init
 168              	.LVL6:
 169              	.L6:
 110:Src/adc.c     **** 
 111:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 112:Src/adc.c     **** 
 113:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 114:Src/adc.c     ****   }
 115:Src/adc.c     **** }
 170              		.loc 1 115 0
 171 002e 07B0     		add	sp, sp, #28
 172              		@ sp needed
 173 0030 00BD     		pop	{pc}
ARM GAS  /tmp/ccz12sYd.s 			page 6


 174              	.L9:
 175 0032 C046     		.align	2
 176              	.L8:
 177 0034 00240140 		.word	1073816576
 178 0038 00100240 		.word	1073876992
 179              		.cfi_endproc
 180              	.LFE37:
 182              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 183              		.align	2
 184              		.global	HAL_ADC_MspDeInit
 185              		.code	16
 186              		.thumb_func
 188              	HAL_ADC_MspDeInit:
 189              	.LFB38:
 116:Src/adc.c     **** 
 117:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 118:Src/adc.c     **** {
 190              		.loc 1 118 0
 191              		.cfi_startproc
 192              	.LVL7:
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 119:Src/adc.c     **** 
 120:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 198              		.loc 1 120 0
 199 0002 0268     		ldr	r2, [r0]
 200 0004 064B     		ldr	r3, .L12
 201 0006 9A42     		cmp	r2, r3
 202 0008 09D1     		bne	.L10
 121:Src/adc.c     ****   {
 122:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 123:Src/adc.c     **** 
 124:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 125:Src/adc.c     ****     /* Peripheral clock disable */
 126:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 203              		.loc 1 126 0
 204 000a 064A     		ldr	r2, .L12+4
 205 000c 516B     		ldr	r1, [r2, #52]
 206 000e 064B     		ldr	r3, .L12+8
 207 0010 0B40     		and	r3, r1
 208 0012 5363     		str	r3, [r2, #52]
 127:Src/adc.c     ****   
 128:Src/adc.c     ****     /**ADC GPIO Configuration    
 129:Src/adc.c     ****     PA0     ------> ADC_IN0 
 130:Src/adc.c     ****     */
 131:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 209              		.loc 1 131 0
 210 0014 A020     		mov	r0, #160
 211              	.LVL8:
 212 0016 C005     		lsl	r0, r0, #23
 213 0018 0121     		mov	r1, #1
 214 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 215              	.LVL9:
 216              	.L10:
ARM GAS  /tmp/ccz12sYd.s 			page 7


 132:Src/adc.c     **** 
 133:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 134:Src/adc.c     **** 
 135:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 136:Src/adc.c     ****   }
 137:Src/adc.c     **** } 
 217              		.loc 1 137 0
 218              		@ sp needed
 219 001e 08BD     		pop	{r3, pc}
 220              	.L13:
 221              		.align	2
 222              	.L12:
 223 0020 00240140 		.word	1073816576
 224 0024 00100240 		.word	1073876992
 225 0028 FFFDFFFF 		.word	-513
 226              		.cfi_endproc
 227              	.LFE38:
 229              		.comm	hadc,96,4
 230              		.section	.rodata.str1.4,"aMS",%progbits,1
 231              		.align	2
 232              	.LC1:
 233 0000 5372632F 		.ascii	"Src/adc.c\000"
 233      6164632E 
 233      6300
 234              		.text
 235              	.Letext0:
 236              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 237              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 238              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l071xx.h"
 239              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 240              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 241              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 242              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 243              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 244              		.file 10 "Inc/adc.h"
ARM GAS  /tmp/ccz12sYd.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccz12sYd.s:18     .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccz12sYd.s:23     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccz12sYd.s:117    .text.MX_ADC_Init:000000000000006c $d
                            *COM*:0000000000000060 hadc
     /tmp/ccz12sYd.s:124    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccz12sYd.s:129    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccz12sYd.s:177    .text.HAL_ADC_MspInit:0000000000000034 $d
     /tmp/ccz12sYd.s:183    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccz12sYd.s:188    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccz12sYd.s:223    .text.HAL_ADC_MspDeInit:0000000000000020 $d
     /tmp/ccz12sYd.s:231    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
_Error_Handler
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_GPIO_DeInit
